{"number": "37", "title": "Is AND OpenGL AND better AND than AND Direct3D AND in AND terms AND of AND portability AND to AND different AND platforms", "description": "A beginning games developer is still discovering features of the two APIs OpenGL and Direct3D, which are \"competing\" APIs used to render computer graphics. The developer is now interested which of them better supports cross-platform development in the sense of developing across different operating systems or the effort needed to port code to other potential platforms.", "narrative": "Highly relevant documents discuss the portability of OpenGL and Direct3D across different operating systems and help the user to compare which of the two allows a better cross-platform development (but also other features might be discussed). Relevant documents may provide information on either API and help to understand whether they support a single-platform or many-platform development (e.g., cross-platform success stories of developers with OpenGL or with Direct3D but not necessarily as a comparison of both). Historical information, ads or tutorials on OpenGL and D3D, which do not share insight on the cross-platform abilities are not relevant.", "results": 870, "documents": [[{"score": 1369.2112, "uuid": "63893bcc-e536-513a-8892-15c9bb4740c7", "index": "cw12", "trec_id": "clueweb12-0604wb-40-13247", "target_hostname": "www.tomshardware.com", "target_uri": "http://www.tomshardware.com/reviews/opengl-directx,2019.html", "page_rank": 1.2252697e-09, "spam_rank": 76, "title": "<em>OpenGL</em> 3 &amp; DirectX 11: The War <em>Is</em> Over : Introduction", "snippet": "The process was a bit <em>different</em> but overall faster <em>than</em> under Windows. dx 10 may not appear major but for devs its actually <em>is</em>.. no more checking cap bits.. that <em>is</em> a big improvment. dx10 <em>is</em> alot more strict <em>in</em> <em>terms</em> <em>of</em> what the drivers should do and thats good. doing away with fixed functions <em>is</em> also", "explanation": null, "document": "10. Conclusion\nGiven the prevalence of DirectX nowadays, we tend to forget that 10 years ago an all-out war was being waged between Microsoft and Silicon Graphics in the field of 3D APIs. The two companies were both trying to win over developers, with Microsoft using its financial muscle and SGI relying on its experience and its reputation in the field of real-time 3D. In this modern David-versus-Goliath battle, the \u201clittle guy\u201d won a precious ally in one of the most famous game developers\u2013-Mr. John Carmack. In part due to the success of the Quake engine, solid support for OpenGL became important enough to motivate makers of 3D cards to provide complete drivers. In fact, it gave 3dfx one of its early advantages and knocked ATI to the back of the pack as it struggled with its OpenGL support.\nMeanwhile, Microsoft was starting from scratch, and the learning curve was steep. So, for several years, Direct3D\u2019s capabilities were beyond the curve, with an interface that many programmers found a lot more confusing than OpenGL\u2019s. But nobody can accuse Microsoft of being easily discouraged. With each new version of Direct3D, it gradually began to catch up with OpenGL. The engineers in Redmond worked very hard to bring performance up to its rival API\u2019s level.\nA turning point was reached with DirectX 8, released in 2001. For the first time, Microsoft\u2019s API did more than just copy from SGI. It actually introduced innovations of its own like support for vertex and pixel shaders. SGI, whose main source of revenue was the sale of expensive 3D workstations, was in a bad position, having failed to foresee that the explosion of 3D cards for gamers would prompt ATI and Nvidia to move into the professional market with prices so low (due to economies of scale) that SGI couldn\u2019t keep up. OpenGL\u2019s development was also handicapped by bitter disputes among its proponents. Since the ARB\u2014the group in charge of ratifying the API\u2019s development\u2014included many different, competing companies, it was hard to reach agreement on the features to be added to the API. Instead, each company promoted its own agenda. Conversely, Microsoft was working solely with ATI and Nvidia, using its weight to cast a deciding vote if there was disagreement.\nWith DirectX 9, Microsoft managed to strike a decisive victory, imposing its API on developers. Only John Carmack and those who insisted on portability remained faithful to OpenGL. But their ranks dwindled. And yet a reversal of fortunes was still possible. It had happened with Web browsers, after all. Even when a company has maneuvered itself into a near monopoly, if it rests on its laurels, it\u2019s not all that rare for a competitor to rise from his ashes. So when the Khronos group took over OpenGL two years ago, many hopes were rekindled with all eyes on the upcoming SIGGRAPH conference that year.\nLast month, Khronos was to have announced OpenGL 3, a major revision of the API that\u2019s supposed to catch up with Microsoft, which was also scheduled to launch its next-gen DirectX 11 API. But things didn\u2019t really go as planned.\n"}, {"score": 1187.9042, "uuid": "b517babe-f6fe-5e44-8047-7caef95d90a3", "index": "cw12", "trec_id": "clueweb12-0110wb-73-23384", "target_hostname": "www.cg.tuwien.ac.at", "target_uri": "http://www.cg.tuwien.ac.at/~wimmer/apis/opengl++_summary.html", "page_rank": 1.2009919e-09, "spam_rank": 89, "title": "<em>OpenGL</em>++-relevant ARB Meeting Notes", "snippet": "Kevin R: <em>In</em> comparing java3d vs ogl++, the following distinctions are noteworthy: * ogl++ layered on top <em>of</em> <em>OpenGL</em>; Java3d <em>is</em> not tied <em>to</em> a single API (support for <em>OpenGL</em> and <em>Direct3D</em> are planned) * More <em>of</em> abstraction \u0097 no way <em>to</em> jump <em>in</em> the middle Mark went over goals.", "explanation": null, "document": "Recap from Feb. and update from members\nHow do we support multiple APIs?\nProcess discussion\nBrain dump from David/Mark about design status\nSpec walk-through with comments\nRecap February ARB meeting and update from members\nJohn: Decision was to go forward in off-line e-mail vote. Now, we have to figure out how.\nIs it possible to depart from another point than current spec?\nIs 1 day ARB meeting enough?\nMark: Not workable. Need to find a way to move forward.\nMark: Since last time, we've been investigating things not yet\u00a0 reflected in the spec such as MP issues,actions, routes \u0097 should they intrinsically be built in?\u00a0 Also fixed spelling of propagate.\nKevin R.: Since last time, Java3d spec now available to Java licensees. Spec on the web-site. Also definitely plan on creating C++ bindings.\n(Promoted by questions from Drew, Bimal, and Mark, Kevin R. coughed up the following...)\nKevin R: In comparing java3d vs ogl++, the following distinctions are noteworthy:\nogl++ layered on top of OpenGL; Java3d is not tied to a single API (support for OpenGL and Direct3D are planned)\nMore of abstraction \u0097 no way to jump in the middle\nogl++ has direct support for fields and routes\nogl++ allows methods to extend traversal\nMark went over goals. These aren't recapped here since they are available in the notes from the Feb 17-19 discussion at http://www.sgi.com/Technology/openGL/arb-feb.html .\nJon K.: Aren't important goals:\nmake is easier to build 3d applications?\nallow hardware vendors to move up the stack?\nMultiple API Discussion\nDiscussion began a bit around reviewing topics from last time, such as:\nLegitimacy of ARB to cover scene graph area at all (raised by Drew, Kevin. Answered by Jon K., John S.)\nProblems related to the \"wrong\" attendees being here (some companies have scene graph experts quite distinct from hardware/rendering crowd at the OpenGL ARB).\nand then: what about multiple API support?\nMark: Clearly interested in supporting multiple APIs. Difficult question is how.\nDavid B.: Fundamental solution space involves:\nLowest common denominator specification (aka \"neutral\")\nRenderer specific \"spec\"\nSpecification vagueness can raise performance costs for converting to renderer format.\u00a0 Renderer specific approach either disallows extensibility or throws its difficulties at the application developer\nMark: A variant approach is to specify tightly -- but there will be performance costs in converting to the format of the underlying library.\nJim: It's highly undesirable to throw the problem back at the application. So let's explore neutral approach.\nFred: This is a solvable problem -- if one gives up on flexibility.\nPaula: Why not just use D3D retained mode?\n[This was followed by a short detour into the issues of concerning D3D's driver coverage and developer acceptance. Active participants were John S., Phil H., and Paula.]\nDavid: One of the highest values of extensibility is for folks to use the latest extensions without a new release of the library. The monolithic Performer approach requires a new release of both libraries. Also, extensibility allows us to give customer's the go-ahead to use mechanisms that \"good taste\" prevents us from allowing into the library.\nJohn: There's been a lot of discussion here. We need to break and then vote so we can move on. The underlying requirement was to \"not be exclusionary.\" The basic choices are:\nfocus on OpenGL\nseparate nodes for each renderer\nextensible only if using OpenGL driver\nBimal: Will anyone step forward to help the specification process for other APIs?\nMark: This does make the specification process more difficult. Willing to do it -- if this is what folks want.\u00a0 [Silence followed]\nStraw pool was taken with the results (pls check w/ Paula):\nIn favor: 19\nOpposed: 3 (MS, Accelgraphics, Elsa)\nAbstain: 7 (intel, sun, hp, & 4 others)\nProcess Discussion\n[ The process discussion took place at several points during\u00a0 the day. I've rolled them together for the purpose of this write-up.]\nTim: Unlike OpenGL, areas of competition/differentiation aren't as clear for a given implementation. Extensions probably have the value, not the API itself.\nKurt: Areas of possible differentation are in platform\u00a0 tuning and MP support. With Performer, lots of effort in making it work well for a given platform.\nKurt: In order to keep this moving, we need to call a meeting and have an immersive session. And we need to have on-going interaction. My sense is that we need to see a bound in the number of people involved and figure out how to kick off specification effort. The efforts/results of this group need to be visible to this body -- but to be effective the design group needs to be small as well for their working sessions.\nJohn: Can I just ask where people stand in participating in the working group?\nPhil: 3d labs is in the middle.\nElsa, HP, Sun, MS: Keep us informed, but...\nPTC: interested, but no resources.\nDigital: Likely to contribute\nIntel: Can contribute. Likely to contribute.\nMitsubishi, Real3d, IBM: Will participate\nIntergraph: Think we'll participate.\nJohn: Let Mark know if you can give a\u00a0 presentation of your scene graph efforts and your evaluation of its effectiveness. (Scene graph doesn't have to be implemented or shipping.)\nMark/David's Overview of Current Specification\n[ Notetaker's injection: I'll pretty much avoid repeating what was said because: (A) lots of things presented, and (B) I didn't understand many of them. I've included bits I found both interesting and grokable.]\nDavid: Inventor went overboard in the object area. Need support for notification (not in spec yet) and set/get.\nValuable to force all geometry and appearance into leaves. OpenInventor programs ended up with lots of separators to wall off state -- which is difficult to optimize around. Performer, on the other hand, was very conscious of how to package state together. They sorted on graphics state to effectively utilize the pipeline.\nAfter David presented the \"shape\" approach, Jim C. chimed in that the one appearance for multiple geometry approach \"works for ProDesigner\"\nDavid: Want to allow multi-pass geometry -- or specific ordering or rendering.\nDavid: Traversal model comes from Inventor. Extension mechanism depends on two big things:\nnew node types\nnew traversals\nAlso want to preserver binary compatibility. Need to stay away from new release for new extensions.\nDinner Discussions: IBM rep (Suzy?) proposed and met little opposition with Coyote Cafe as place for the\nnight's meal.\nSpec walk-through with comments\nFeng/Kevin R.: Raised issues around traversal mechanism and hierarchy structure. David responded that they are trying hard to avoid doing things behind the back of the application.\u00a0 Reiterated opposition to a purely static model of the data.\nKurt: Need goal/non-goal for modelling support.\nJan: Leaning away from behavior culling?\n[Feng rattled off a series of issues. In general, seemed like Mark agreed that the issues needed further discussion.]\nCurrent route support creates burden -- even when field not referenced in routes\nWhat about run-time support for sprites?\nWhat about extending sphere bound to general notion?\nProblem w/ abstraction of norma sets/datasets\nProblem w/ matrix node and transform node. (Mark: should remove these in turn into an \"engine\")\nWhy can't we add fields to appearance nodes?\nTim: What about feedback loop? Present in Performer.\nJim C: Doc feedback: couldn't make heads or tails out of spline engine.\nJim C: How does one do highlight traversals? (David suggested inserting callbacks that change between traversals.)\nFeng: Indexed triangle strip set docs incorrect. Cut/paste error.\nDavid: Perfomer had limited support for indexing. But people really valued separate color indexing.\nPhil: Can we turn some of these objects into display lists?\nDavid: Possibly. But OpenInventor had a bad experience with this approach. System design center will by dynamic data over static data.\nFeng: No notification mechanism in specification.\nEnd of Day 1\nhttp://www.opengl.org/ARB/Notes/meeting_notes_09-10-97.html\nOpenGL++\nMark Segal provided an update on the status of OpenGL++.\u00a0 He was not able to have a new version of the spec ready in time for this meeting, but he will be releasing a\nnew version of the spec within a month.\u00a0 Some simple demos and simple tests are running. A more final draft specification that could be presented to the ARB should be\nready by the end of the year.\u00a0 Companies that are participating in the effort are SGI, IBM, Intel, Digital. Mark expects that an alpha-quality implementation will be ready\nby the end of the year.\u00a0 A Beta release would be ready next summer. The group met Monday and spent the day talking about procedural and technical issues.\u00a0 A fair\namount of time was spent on multithreading issus. The plan is to use Pthreads, which should provide a good implementation across UNIX systems.\u00a0 Mark promised to\nsend out the minutes from Monday's meeting.\u00a0 Mark answered several questions about how OpenGL++ compared to DirectModel and Java3D, and which OpenGL\nextensions would be needed (answer: none, just OpenGL 1.1).\nDecember 8-9, 1997\nhttp://www.opengl.org/ARB/Notes/meeting_note_09-12-97.html\nOpenGL++\nDavid Blythe reported on OpenGL++. There's been lots of work, but relatively little communication. A new version of the spec was distributed last week, with big changes including consistent syntax, naming conventions, and terminology for the object concepts. Future spec revisions should come in a more timely fashion.\nImplementation work includes:\nTwo implementations of concepts for a multithread/multibuffer pipeline model like Performer's APP-CULL-DRAW. They are working on Irix and being ported to NT.\nFile loading for VRML and Optimizer, and a generic object framework for loading images, geometry, audio, and video.\nA test suite co-developed with the source code, and documentation auto-generated from the source.\nSupport for intersection testing and picking.\nBenchmarks - OpenGL++ generally comes out slightly faster than Optimizer and slightly slower than Performer.\nCurrently working on state sorting and caching, tesselation, flattening transformations, invalidating state caches, and an event notification structure for invalidation and other purposes.\nAn alpha version of the spec is expected in mid-January. It will probably be sent to the entire ARB.\nDavid will try to organize an OpenGL++ subcommittee meeting either this evening, or in early January.\nLicensing terms are not yet decided.\nSome interesting emails:\nTo: Multiple recipients of list OPENGL-GAMEDEV-L <OPENGL-GAMEDEV-L@fatcity.com>\nSubject: Re: SGI Optimizer\nDate: Wed, 29 Oct 1997 13:56:30 -0800\nopengl-gamedev,\n> I've just downloaded a copy of SGI optimizer/cosmo3D libs. I had a look\n> and it looks really like one of the best APIs around for 3D : full OpenGL\n> support, portability and it's Free !\n> Why is SGI doing this?\nTo promote high-end graphics intensive CAD and 3D modeling\napplications.\u00a0 SGI's experience (particularly based on SGI's experience\nwith the visual simulation market and IRIS Performer) shows that\ncustomers and software developers greatly benefit from higher-level\nAPIs to that make optimal use of hardware features.\nIn the CAD market, this means a higher-level API that handles\nmultiprocessing, view frustum culling, occlusion culling, fast picking,\nexcellent surface trimming, use of OpenGL evalauators, etc.\n> To counter D3D?\nNo.\u00a0 Direct3D is completely useless for quality CAD and 3D modeling.\nDirect3D offers neither the performance or quality to do CAD or 3D\nmodeling well.\n> OpenInventor costs over a $1000 but\n> then comes Optimizer \"totally\" free ... well in the current implementation\n> that is, the developper one should cost less than $600. The Docs and\n> sample code doesn't look that bad and I don't know if you really need the\n> dev. kit. Isn't SGI killing off it's OpenInventor/Performer line of\n> products with Optimizer ?\nNo.\u00a0 Open Inventor and IRIS Performer are mature, stable toolkits that\nserve particular market needs.\u00a0 Visual simulation for IRIS Performer;\nrapid 3D prototyping and effective user interation for Open Inventor.\nOpenGL Optimizer is addressing a whole new high-level 3D domain.\n> Considering I want to program a 3D game under Windows I think Optimizer is\n> the simplest/cheapest API available ... Am I right ?\nGame developers may find OpenGL Optimizer interesting for quickly\nbuilding game 3D modeling and layout tools, but OpenGL Optimizer is\nprobably not something anyone is going to use as the basis for a game\nengine.\u00a0 Still, building good 3D games involves building good 3D tools,\nand OpenGL Optimzier can help in this area.\n> I've heard of OpenGL++ which is suppose to be like Optimzer. Does anyone\n> have any other information on this ?\nThe future plan for OpenGL Optimizer is to fit into a standard scene\ngraph framework called OpenGL++.\u00a0 In the future, OpenGL Optimizer, Open\nInventor-like manipulators, and IRIS Performer-style visual simulation\nwill all be able to exist within a single program and all sharing a\nsingle effective, portable multiprocessing and graphics model.\nOpenGL++ is an OpenGL Architectural Review Board sponsored standard\nthat SGI is working to design in coordination with other ARB members.\nMuch the same way that OpenGL developed from SGI's experience\nimplementing its predecssor IRIS GL in conjunction with other OpenGL\nARB partners, OpenGL++ is about designing a standard high-level 3D\nframework based on SGI's 3D toolkit design experience and working with\nother interested industry leaders.\u00a0 Check the quarterly ARB minutes\npublished on the web to track OpenGL++'s development.\nFor more info on OpenGL Optimzier, check out:\nhttp://www.sgi.com/Technology/OpenGL/optimizer/\n"}, {"score": 862.34296, "uuid": "12628000-2d2a-5487-b455-ba8011330ef2", "index": "cw12", "trec_id": "clueweb12-1400wb-78-13606", "target_hostname": "www.fysh.org", "target_uri": "http://www.fysh.org/~katie/manuals/openglgamesfaq.txt", "page_rank": 1.1898367e-09, "spam_rank": 80, "title": "<em>OpenGL</em> Game Development Mailing List: Frequently Asked Questions Maintainer", "snippet": "How do I draw a custom mouse pointer using <em>OpenGL</em>? Since the Voodoo1&#x2F;Voodoo2 <em>is</em> 3D only, you do not have access <em>to</em> the 2D GDI functions <em>to</em> allow Windows <em>to</em> draw your pointer. Or, you may want <em>to</em> use <em>OpenGL</em> for <em>portability</em> <em>to</em> other <em>platforms</em>.", "explanation": null, "document": "OpenGL Game Development Mailing List: Frequently Asked Questions Maintainer: Tom Hubina (tomh@3dgamedev.com - ICQ# 1708822) ---------------------------------------------------------------------- Version: .94.1 Last Updated: 7-28-99 This is a sneaky update. I messed some things up with version .94 (section 9.13 was missing, and a few items I was supposed to add got droped). ---------------------------------------------------------------------- Changed items this posting (|): 1.02 Added archive info 1.05 Added algorithm mailing list info 3.05 Added link to the OpenGL-Java FAQ 5.02 Changed wording slightly to be more accurate 5.03 Added info 6.01 Added info 7.01 Added info 7.02 Added info 8.01 Changed code for getting info about screen width / height 9.07 Added more info about multi-texture techniques. Added link. A.01 Added links to OpenGL books online. A.03 Updated link to Dave Eberly's site A.04 Updated ISBN/Edition info for Procedural Elements book New items this posting (+): 1.06 Where can I get examples for OpenGL? 5.05 Why doesn't rendering to multiple windows under Win32 (or MFC) work. 9.13 How do I use Extensions? 9.14: How do I draw a mouse cursor on a 3dfx Voodoo1/Voodoo2 card? How do I draw a custom mouse pointer using OpenGL? 9.15: How did those guys at ID software make it so you could pick your OpenGL driver? ---------------------------------------------------------------------- This document can be freely distributed, but links back to the main page (as referenced in Subject 1.04) are preferred. All source code examples contained herein are to be considered in the Public Domain. ---------------------------------------------------------------------- Table of Contents ---------------------------------------------------------------------- 1. General Information 1.01: The OpenGL Game Development Mailing List | 1.02: Are the postings to the mailing list archived? 1.03: The purpose of this FAQ? 1.04: How can I get this FAQ? | 1.05: Where can I find useful info on graphics algorithms? + 1.06: Where can I get examples for OpenGL? 2. OpenGL Implementations 2.01: Microsoft OpenGL 2.02: SGI OpenGL 2.03: Vendor Specific OpenGL Ports and Miniports 2.04: 3DFXGL 2.05: What is MESA? 2.06: What is GLUT? 2.07: What is GameGLUT? 2.08: What is Fahrenheit? 3. Programming Environments and OpenGL 3.01: Visual C++ 3.02: Borland C++ 3.03: Delphi 3.04: Visual Basic | 3.05: Java 4. OpenGL as a rasterization only API 4.01: Why use OpenGL as a rasterization-only API? 4.02: Is there a performance hit for doing this? 4.03: How do I set up OpenGL matrix stack for rastrization-only? 4.04: What about clipping? 4.05: What about the perspective divide? 4.06: Fog 4.07: Is there some sample code to do this? 5. Rendering Problems 5.01: Why is my fog/lighting/textures not working correctly? | 5.02: My objects appear to be \"fighting\" in the z-buffer. | 5.03: Why doesn't my texture appear? 5.04: After calling glRotate() a few times I end up rotating around the wrong axis. Why? + 5.05: Rendering to multiple windows under Win32 (or MFC) doesn't work. 6. Hardware Acceleration | 6.01: How do I determine if I'm getting hardware acceleration under Windows NT/95/98? 6.02: Why am I not getting hardware acceleration? 7. Picking/Selection | 7.01: How do I use OpenGL's Selection Buffer? | 7.02: What are some other methods for picking/selection? 8. Full Screen Rendering | 8.01: How do I open a full screen window? 8.02: How do I change resolution under Windows NT/95/98? 9. Miscellaneous 9.01: What is the best way to draw text? 9.02: What is the best way to draw 2D overlays? 9.03: Should I use OpenGL's matrix routines for all my matrix math? 9.04: How do matrixes work? 9.05: What are Quaternions? 9.06: What are BSP Trees? | 9.07: What are light maps and how do I use them in OpenGL? 9.08: How do I load a .BMP file into a texture map? 9.09: Can I mix OpenGL and DirectX? 9.10: How do I access the frame/depth/texture memory directly? 9.11: How do I use OpenGL for Collision Detection? 9.12: What is the best card for running OpenGL under Windows NT/95/98? 9.13: How do I use extensions? + 9.14: How do I draw a mouse cursor on a 3dfx Voodoo1/Voodoo2 card? How do I draw a custom mouse pointer using OpenGL? + 9.15: How did those guys at ID software make it so you could pick your OpenGL driver? Appendices A. General References | A.01: OpenGL Online Links A.02: OpenGL Specific Books | A.03: General Computer Graphics Online Links | A.04: General Computer Graphics Books A.05: Game Development Online Links A.06: Game Development Books B. Contributors B.01: How can you contribute to this FAQ? B.02: Contributors. Who made this all possible. Search e.g. for \"Section 2\" to find that section. Search e.g. for \"Subject 2.04\" to find that item. ---------------------------------------------------------------------- Section 1. General Information ---------------------------------------------------------------------- Subject 1.01: The OpenGL Game Development Mailing List \"This list is being provided as a service to the 3D game development community to help promote OpenGL as a viable and exciting way to program 3D entertainment titles. Discussion of game programming techniques and issues using OpenGL is the primary goal of this list! Since so much of the installed base consists of Intel PCs running Win32 platforms, the emphasis will probably be on that environment and C/C++. However, there are many other interesting platforms out there, and any discussion relating to OpenGL programming on those platforms is welcome! For instance, OpenGL programming in Java may well become a hot topic soon. Another thing to keep an eye on is OpenGL support in Apple's forthcoming Rhapsody OS. While the emphasis of this list is on game programming, general OpenGL programming information and examples are welcome as well. This is intended as a resource for all levels of OpenGL programmers, from beginner to expert. Other topics that are appropriate to the list include OpenGL device and driver quality, OpenGL benchmarking, and other real-world issues involved in doing OpenGL development. General topics relating to programming 3D games are also welcome. There are a few things that aren't desired on the list. The ongoing religious war between OpenGL and Direct3D is best left somewhere else (rec.games.programmer is a likely candidate ;-). Actively promoting other APIs besides OpenGL on this list is discouraged. General programming questions (i.e. \"which is better a pointer or an array?\") are also best taken elsewhere. Some of these topics will inevitably creep onto the list, but let's try to keep the discussion civil and technical.\" - OpenGL Game Development List Charter To subscribe, enter: sub OPENGL-GAMEDEV-L\nWhere\nis your real name, not your E-mail address. In the MESSAGE BODY (NOT Subject), mail the message to: listserv@fatcity.com <-- Note EXACT spelling of 'listserv' To unsubscribe, use the same address above, but use the command: unsub OPENGL-GAMEDEV-L If you need further assistance, send a message to: OPENGL-GAMEDEV-REQUEST@fatcity.com ---------------------------------------------------------------------- Subject 1.02: Are the postings to the mailing list archived? An archive of this mailing list can be found at: http://www.findmail.com/listsaver/opengl-gamedev-l/ But it appears to have gone out of date. There are also archives available through the mail server itself (check the help for the mail server for details). ---------------------------------------------------------------------- Subject 1.03: The purpose of this FAQ? The main purpose of this FAQ is to either answer the most common questions posted to the mailing list or to point readers in the right direction. Questions on topics such as collision detection are too large to answer here. ---------------------------------------------------------------------- Subject 1.04: How can I get this FAQ? The home for this FAQ is located at: http://www.3dgamedev.com/resources/openglfaq.txt ---------------------------------------------------------------------- Subject 1.05: Where can I find useful info on graphics algorithms? The best source for general graphics algorithm information is the comp.graphics.algorithms FAQ, posted bimonthly on the newsgroup of that name. This FAQ introduces many useful techniques as well as listing the most important books and links that no one should be without. This FAQ is also available from: http://www.exaflop.org/docs/cgafaq ftp://rtfm.mit.edu/pub/faqs/graphics/algorithms-faq There is also a mailing list for algorithms. Info can be found at: http://www.3dgamedev.com/lists/algo_list.htm ---------------------------------------------------------------------- Subject 1.06: Where can I get examples for OpenGL? The vast majority of example code for OpenGL on the net can be found through the Developers and Coding Examples sections on: http://www.opengl.org ---------------------------------------------------------------------- Section 2. OpenGL Implementations ---------------------------------------------------------------------- Subject 2.01: Microsoft OpenGL Microsoft provide OpenGL drivers as standard with Windows NT4.0 and Windows 95 Release 2, and will continue to do so with Windows 98 and future Windows releases. An upgrade can be found on the Microsoft website for owners of Windows 95 Release 1. I am not aware of the distribution rules for their OpenGL libraries. Unlike the SGI libraries, the Microsoft ones will directly make use of any available hardware. Software rendering with the MS libraries is very slow compared to custom software rendering engines. ---------------------------------------------------------------------- Subject 2.02: SGI OpenGL for Windows Quoting from the SGI OpenGL for Windows SDK: \"Silicon Graphics' OpenGL library for Windows is a high-performance, fully compliant implementation that runs on Intel PCs. It allows a PC with no dedicated 3D graphics hardware to execute OpenGL applications at exceptional levels of performance and complements accelerated OpenGL products available from numerous 3D graphics hardware vendors. This version of Silicon Graphics' OpenGL library for Windows relies on Microsoft's OpenGL library for hardware acceleration. If an OpenGL driver is available on the system then the library will automatically call Microsoft's library so that the driver will be invoked during rendering. The next version of Silicon Graphics' library will be able to load OpenGL drivers directly.\" SGI libraries are called opengl.dll and glu.dll while the Microsoft libraries are called opengl32.dll and glu32.dll. Due to the agreement made between Microsoft and Silicon Graphics in Early 1998, this product is no longer being developed as such and is no longer officially available. However, the software rendering is far in advance of the Microsoft implementation (for political reasons) and some IHVs are basing their OpenGL libraries around this version, 3dfx for example. There are a few unsupported functions, but overall this is the choice for OpenGL development on unaccelerated machines. In the future, a joint venture between Microsoft and SGI will probably provide a successor to both Direct3D and OpenGL, called Fahrenheit. For further information please see the SDK. You can find a copy at: http://www.berkelium.com/OpenGL/ IMPORTANT NOTE ~~~~~~~~~~~~~~ First time users often have the same problem with the SGI implementation, please read the following if you cannot get your version to link correctly: Quoting from the SGI OpenGL for Windows SDK FAQ Section 4: \"To use SGI's OpenGL for Windows you must link with OPENGL.LIB and GLU.LIB instead of OPENGL32.LIB and GLU32.LIB respectively. Also make sure that OPENGL.LIB and GLU.LIB precede GDI32.lib in the library list. Since SGI's OpenGL for Windows library overloads the ChoosePixelFormat() function in GDI you need to make sure that you link the libraries in the right order so you don't pick up the wrong version of ChoosePixelFormat(). You should also set your include path so that SGI's header files have precedence over Microsoft's. This is required if you wish to use any of the extensions provided in SGI's OpenGL library for Windows.\" ---------------------------------------------------------------------- Subject 2.03: Vendor Specific OpenGL Ports and Miniports As well as the main Microsoft and SGI implementations hardware vendors may ship their own OpenGL ports based on either of the aforementioned drivers. Whilst a full port is meant to strictly adhere to the standards laid down by the OpenGL 1.1 specification it is often the case that bugs and minor incompatibilities remain. Vendors also often provide their own extensions; check their documentation for more information, use glGetString to verify their existence, and use the appropriate function to call the extension (via wglGetProcAddress under Windows). NB: You must have an existing GL context or your call to glGetString will not be valid, though your target window may to some extent be defined by the hardware available to the user. One way around this is to temporarily open a dummy window when your application starts up, then open a further window set up according to the hardware available. OpenGL Miniports are there to support games such as Quake, and they will usually only support a small subset of OpenGL commands. There are some notes on miniports made available by independent users on the internet, but generally hardware manufacturers seem to be reluctant to release many details. Since most IHVs expect to provide full OpenGL 1.1 compliance miniports are not expected to be so useful in the future. ---------------------------------------------------------------------- Subject 2.04: 3DFXGL Like most vendors, 3DFX is working on a full implementation of OpenGL 1.1. For more information see http://www.3dfx.com For release notes see the 3dfx website and newsgroups, the beta version still has a few features missing. 2nd Monitor Debugging ~~~~~~~~~~~~~~~~~~~~~ One nice thing about 3dfx cards is that you can plug a 2nd VGA monitor into the output of the 3dfx card while keeping your main monitor attached to your primary video card. This allows you near full use of Windows functions for debugging, though there can be problems with the 3dfx not knowing it's screen/window is visible (another dreaded black screen problem). Usually bringing your 3dfx window into the foreground will solve the problem, but if anyone has good solutions for many of SGI's example programs perhaps they could send them in. Rendering into a window ~~~~~~~~~~~~~~~~~~~~~~~ The Voodoo series from 3Dfx cannot render into a GDI window by itself, however you can use WinGlide (http://www.nullsoft.com/winglide.html) to automatically copy the 3Dfx framebuffer to your 2D framebuffer so it will render to a window. This is slower than full-screen rendering, but essential when trying to debug on a single monitor setup. Removing the 3DFX Logo ~~~~~~~~~~~~~~~~~~~~~~ If you don't wish the 3dfx logo to be shown on user's machines, then according to Sam McGrath the following method is best: In runapp.bat: set T = %FX_GLIDE_NO_SPLASH% set FX_GLIDE_NO_SPLASH=1 runapp.exe set FX_GLIDE_NO_SPLASH = %T% The user's previous settings are therefore kept in place. ---------------------------------------------------------------------- Subject 2.05: What is MESA? Quoting the Author of Mesa (Brian Paul) from his Mesa homepage (http://www.mesa3d.org): \"Mesa is a 3-D graphics library which uses the OpenGL API (Application Programming Interface). Mesa cannot be called an implementation of OpenGL since I did not obtain an OpenGL license from SGI. Furthermore, Mesa cannot claim OpenGL conformance since the conformance tests are only available to OpenGL licensees. Despite these technical/legal terms, you may find Mesa to be a valid alternative to OpenGL.\" \"Most applications written for OpenGL can be recompiled for Mesa without making any source code changes.\" Mesa is issued with full source code under GPL and runs on a huge range of operating systems: UNIX/X11, Linux, Amiga, Apple Macintosh, BeOS, NeXT, OS/2, MS-DOS, VMS, and Windows 95/NT Mesa is also hardware accelerated on 3Dfx Voodoo and Voodoo RUSH (at time of writing) - further hardware support is expected. Other Mesa questions are answered in the Mesa FAQ at: http://www.mesa3d.org/Mesa/MesaFAQ.html Mesa can be obtained from: http://www.mesa3d.org There is a Mesa Mailing List, to subscribe, send email to majordomo@iqm.unicamp.br with this as the body of the message: subscribe mesa your-email-address ---------------------------------------------------------------------- Subject 2.06: What is GLUT? Quoting the Author of GLUT (Mark Kilgard) from his GLUT homepage (http://reality.sgi.com/mjk_asd/spec3/spec3.html): \"The OpenGL Utility Toolkit (GLUT) is a programming interface with ANSI C and FORTRAN bindings for writing window system independent OpenGL programs. The toolkit supports the following functionality: Multiple windows for OpenGL rendering. Callback driven event processing. Sophisticated input devices. An 'idle' routine and timers. A simple, cascading pop-up menu facility. Utility routines to generate various solid and wire frame objects. Support for bitmap and stroke fonts. Miscellaneous window management functions, including managing overlays.\" GLUT is Copyright material and not in the public domain, but it is freely distributable without licensing fees and comes with complete source code. It is available for Windows 95, Windows NT, UNIX/X, Linux, OS/2 and Macintosh. Other GLUT questions are answered in the GLUT FAQ which is distributed with the GLUT library. GLUT can be obtained from: http://reality.sgi.com/mjk_asd/glut3/glut3.html There is a GLUT Mailing List, to subscribe, send email to Majordomo@perp.com with a body saying \"subscribe glut\". ---------------------------------------------------------------------- Subject 2.07: What is GameGLUT? GameGLUT is a utility toolkit being written with games in mind. Mark Kilgard introduced the possibility in late 1997/early 1998. GameGLUT is considered part of GLUT 3.7 and GLUT 3.7 is still in Beta. Since Mark started working at NVIDIA development of GLUT has been greatly reduced. Hopefully it will be finished soon. ---------------------------------------------------------------------- Subject 2.08: What is Fahrenheit? Fahrenheit is being designed by Microsoft and SGI to replace OpenGL and Direct3D on the Windows platform. It has not been released yet, and no technical information is available at this time. Ron Fosner seems to know quite a bit about it and might be able to answer any specific questions you may have. His web page is www.directx.com. ---------------------------------------------------------------------- Section 3. Programming Environments and OpenGL ---------------------------------------------------------------------- Subject 3.01: Visual C++ Linking any of the libraries with Microsoft Visual C++ is as easy as changing the linked libraries. Before linking with the SGI OpenGL for Windows libraries please see the IMPORTANT NOTE in the SGI OpenGL for Windows section. ---------------------------------------------------------------------- Subject 3.02: Borland C++ A comp.graphics.api.opengl posting by John Biddiscombe, j.biddiscombe@rl.ac.uk, includes the following tips: TIP : C++Builder uses a whole load of lib's in the CBuilder/lib directory, these libs, in particular import32.lib already contain the opengl32.lib and glu32.lib inside them. This means that you don't actually need to link to the libs using C++ Builder. If you want to (say) switch from Microsoft OpenGL to SGI OpenGL, then you need to use TLIB.exe to remove the DLL's from import32.lib, some notes are included in the files in the above directory. TIP2 : Use implib.exe to generate a lib from a DLL, frequently people distribute code with lib's in MSVC format so Borland users get stuck. Borland C++ links ok to OpenGL, but there are a couple of problems users should be aware of. * The Microsoft implementation can cause undefined exceptions when run under the BCB Pro debugger. * You need to mask floating point exceptions by including the following line in your initialization routines: _control87(MCW_EM, MCW_EM); MCD_EM should be defined in float.h Failing to do this results in spurious floating point exceptions, when using lighting or normalization in particular. A couple of examples are on: http://rcru1.te.rl.ac.uk/~jab/opengl/ Before linking with the SGI OpenGL for Windows libraries please see the IMPORTANT NOTE in the SGI OpenGL for Windows section. Alan Garny has some BCB OpenGL components available: http://pc-heartbreak.physiol.ox.ac.uk/ ---------------------------------------------------------------------- Subject 3.03: Delphi TBD ---------------------------------------------------------------------- Subject 3.04: Visual Basic Patrice Scribes DirectX/OpenGL for VB site should be able to answer most questions: http://www.chez.com/scribe/ ---------------------------------------------------------------------- Subject 3.05: Java Quoting from the press release from Arcane Technologies Ltd: \"Magician allows developers to write portable, high-performance OpenGL applications using the Java programming language. To effect the high-performance rendering, Magician interfaces directly with existing OpenGL installations in the form of native code. In-core support for thread-safeness has also been implemented enabling developers to take full advantage of Java's powerful multi-threading. Additional developer features include in-built interactive tracing and profiling of OpenGL calls. Magician is currently shipping for Windows 95/NT, Linux and Irix operating systems with ports to Solaris, MacOS and OS/2 in the pipeline. Netscape Communicator, Internet Explorer, Symantec Cafe and the Sun JRE/JDK are currently supported for both application and applet usage on suitable platforms.\" See http://www.arcana.co.uk/products/magician There is also an OpenGL-Java FAQ at: http://www.arcana.co.uk/products/magician/docs/java-opengl-faq.html ---------------------------------------------------------------------- Section 4. OpenGL as a rasterization only API ---------------------------------------------------------------------- Subject 4.01: Why use OpenGL as a rasterization-only API? Because your app does its own transform, and supplies screen-space coordinates to the OpenGL. There are lots of reasons why an app might do this. ---------------------------------------------------------------------- Subject 4.02: Is there a performance hit for doing this? It depends on where the best place for doing the transform is. If (for example) there is fast transform hardware, then it would probably be a good idea to use it. If the OpenGL transform code is more efficient than the code in your app, then a similar argument applies. ---------------------------------------------------------------------- Subject 4.03: How do I set up OpenGL matrix stack for rasterization-only? Something like: glMatrixMode(GL_PROJECTION); glLoadIdentity(); glMatrixMode(GL_MODELVIEW); glLoadIdentity(); glViewport(0, 0, width, height); /* viewport size in pixels */ will mean that the 3D point (0,0,0) is in the center of the viewport, and that (1,1,0) is the top-right corner of the viewport. To get a 1:1 pixel mapping, with (0,0,0) in the top-left of the viewport and (width,height,0) in the bottom-right, do this: glMatrixMode(GL_PROJECTION); glLoadIdentity(); glMatrixMode(GL_MODELVIEW); glLoadIdentity(); glScalef(2.0f / (float)width, -2.0f / (float)height, 1.0f); glTranslatef(-((float)width / 2.0f), -((float)height / 2.0f), 0.0f); glViewport(0, 0, width, height); /* viewport size in pixels */ ---------------------------------------------------------------------- Subject 4.04: What about clipping? Most OpenGL implementations, including SGI's for Windows, have extremely efficient clip-check code. The cost varies between negligible and zero. Some hardware can rasterize primitives that go outside the viewport for free, so it's not worthwhile to do clipping on the host. For this reason, you might as well leave clipping to OpenGL. In pseudocode, you change this: if (primitive isn't rejected) if (primitive is trivially accepted) draw it else clip it to this: if (primitive isn't rejected) draw it. OpenGL will clip it, or not, as the hardware requires. ---------------------------------------------------------------------- Subject 4.05: What about the perspective divide? You _can_ supply coordinates with (w == 1.0f), if you're prepared to do the perspective divide yourself. However, you might miss out on acceleration (for a similar reason to part 4 above), plus this approach makes supplying perspective-correct texture coordinates a headache. For these reasons it's probably best to use glVertex4f() and supply the transformed (i.e. non unity) w. If you do this, you can supply texture coordinates with glTexCoord2fv(). ---------------------------------------------------------------------- Subject 4.06: Fog The degree of fogging is calculated according to the eye-coordinate's z component. With a modelview matrix that passes Z straight through (such as the two above), you can set the near and far fog values according to the range of Z values that come out of your transform. You must use GL_LINEAR for this to work. For example, to make the \"rasonly\" example fogged, do the following: { GLfloat fog_color[4] = { 1.0f, 1.0f, 1.0f, 1.0f }; /* white */ glEnable(GL_FOG); glHint(GL_FOG_HINT, GL_FASTEST); glFogi(GL_FOG_MODE, GL_LINEAR); glFogf(GL_FOG_START, 1.0f); glFogf(GL_FOG_END, 4.0f); glFogfv(GL_FOG_COLOR, fog_color); } ---------------------------------------------------------------------- Subject 4.07: Is there some sample code to do this? The best sample is Michael Gold's \"rasonly.c\" - available at: http://www.berkelium.com/OpenGL/examples/index.html ---------------------------------------------------------------------- Section 5. Rendering Problems ---------------------------------------------------------------------- Subject 5.01: Why is my fog/lighting/texture not drawing correctly? This is most commonly caused by trying to place the camera position and orientation into the Projection Matrix. While at first glance this may seem like the right way to do things, it is not. The camera transformation should be combined with the model transformation in the ModelView matrix (hence the name ModelView). Lighting and fog (and to some extent textures and z-buffer information) are based on calculations that require information about the camera and the model rotations, but need to ignore any projection information (typically perspective). As such, these calculations are based solely on the ModelView matrix and ignore the Projection matrix. ---------------------------------------------------------------------- Subject 5.02: My objects appear to be \"fighting\" in the z-buffer. Most consumer cards have a relatively low precision z-buffer (16 bit) so you need to be careful when setting up your projection so you don't make the Z range too large. In general it is best to push the near Z as far out as possible, and bring in the far Z as close as possible. Changes in the near Z will have much larger effects than changes in the far Z. This will fix most problems. If you have a large Z range to deal with you may be able to use a trick to get around the fighting. If you can break up the scene into at least two different groups of objects where one group is \"close\" and the other group is \"distant\" and if those two groups do not intersect each other, you can do the following: 1. Clear the frame/depth buffers. 2. Render the distant objects. 3. Clear the depth buffer. 4. Render the close objects. ---------------------------------------------------------------------- Subject 5.03: Why doesn't my texture appear? Provided you can see the geometry with textures disabled: 1) GL_TEXTURE_2D isn't enabled 2) Texture Coordinates are incorrect 3) glBindTexture is failing 4) Alpha is incorrect 5) You are using an unsupported blend mode. For #5, there are a few cards out there with limited blending capability. The two most noteworthy are the Permedia2 and the Riva128. ---------------------------------------------------------------------- Subject 5.04: After calling glRotate() a few times I end up rotating around the wrong axis. Why? This problem is commonly referred to as Gimble Lock. It is a problem inherent in using 3 angles to describe an orientation and is mentioned in just about every 3D graphics book in existence. Typical solutions are to use a different representation for orientation. The common ones are; Matrix, Axis/Angle, and Quaternions. http://www.3dgamedev.com/articles/eulers_are_evil.htm ftp://ftp.netcom.com/pub/he/hexapod/matrixfaq.html ---------------------------------------------------------------------- Subject 5.05: Why doesn't rendering to multiple windows under Win32 (or MFC) work. You need to make sure CS_OWNDC is part of the window class. For MFC it is often temping to add CS_OWNDC to the cs.style parameter, but that is _not_ the correct way to do it. The following link shows an example of doing it correctly: http://www.codeguru.com/doc_view/custom_window_class.shtml ---------------------------------------------------------------------- ---------------------------------------------------------------------- Section 6. Hardware Acceleration ---------------------------------------------------------------------- Subject 6.01: How do I determine if I'm getting hardware acceleration under Windows NT/95/98? After you fill out the PIXELFORMATDESCRIPTOR, do the following: int pixelFormat = ChoosePixelFormat (hDC, &pfd); PIXELFORMATDESCRIPTOR pfd_new; DescribePixelFormat (hDC, pixelFormat, sizeof(PIXELFORMATDESCRIPTOR), &pfd_new); int generic_format = pfd_new.dwFlags & PFD_GENERIC_FORMAT; int generic_accelerated = pfd_new.dwFlags & PFD_GENERIC_ACCELERATED; if (generic_format && ! generic_accelerated) { // software } else if (generic_format && generic_accelerated) { // hardware - MCD } else if (! generic_format && ! generic_accelerated) { // hardware - ICD } ---------------------------------------------------------------------- Subject 6.02: Why am I not getting hardware acceleration? Most likely you have requested a pixel format that is unsupported by your current driver or the requested format cannot fit in the video memory of your card. For instance, requesting a 1024x768 16 bit double-buffered rendering context with a 16 bit z-buffer will put you into software emulation mode on a 4 Meg Riva 128 (it would require about 4.7 Megs of video memory). You would also be put into software, or the creation of the context may fail if you request a 24 bit frame buffer on the same card. ---------------------------------------------------------------------- ---------------------------------------------------------------------- Section 7. Picking/Selection ---------------------------------------------------------------------- Subject 7.01: How do I use OpenGL's Selection Buffer? The Red Book (see Section A.02) has good example of this. The source code to everything in the Red Book is available at: http://trant.sgi.com/opengl/examples/redbook/redbook.html Specifically the pickdepth.c example. This is the prefered method of picking, but may not be practical for all applications. ---------------------------------------------------------------------- Subject 7.02: What are some other methods for picking/selection? Other methods include: 1. Casting a ray for the mouse point into the scene and checking colisions between the ray and the geometry in the scene. 2. Reading back the z-buffer under the cursor. ---------------------------------------------------------------------- ---------------------------------------------------------------------- 8. Full Screen Rendering ---------------------------------------------------------------------- Subject 8.01: How do I open a full screen window? In a Windows application where you already know the screen resolution you can simply use the following code snippet: hWnd = CreateWindow(szAppName, \"Some Name\", WS_POPUP | WS_CLIPSIBLINGS, 0, 0, WIDTH, HEIGHT, NULL, NULL, hInstance, NULL); If you don't know the screen resolution you can use the following code to get it from the OS and then call the above code to create a full screen window: HEIGHT = GetSystemMetrics(SM_CYSCREEN); WIDTH = GetSystemMetrics(SM_CXSCREEN); ---------------------------------------------------------------------- Subject 8.02: How do I change resolution under Windows NT/95/98? Many people are tempted to use DirectDraw to switch resolutions under Windows, but this can cause problems with a few of the OpenGL drivers. The best way to change resolution under Windows is to use ChangeDisplaySettings(). Old drivers under 95 may require a restart if you try to change the bit depth so it is best to have the bit depth set to the desired level before running the application. Sample Code: http://www.3dgamedev.com/code/change.c ---------------------------------------------------------------------- ---------------------------------------------------------------------- 9. Miscellaneous ---------------------------------------------------------------------- Subject 9.01: What is the best way to draw text? There are many different ways to draw text under OpenGL but to get the best results you should place the font in a 256x256 texture and use texture mapped quads with an orthographic projection to render the text. Sample Code: http://home.bc.rogers.wave.ca/borealis/opengl.html http://reality.sgi.com/opengl/tips/TexFont/TexFont.html http://home.worldnet.fr/~rehel/gltt/gltt.html ---------------------------------------------------------------------- Subject 9.02: What is the best way to draw 2D overlays? The best way is to use an orthographic projection and render the overlays as texture mapped quads. If you want areas of the quads to be transparent the textures should be RGBA with the alpha used to create areas of transparency. This is very similar to the methods used in Subject 9.01. ---------------------------------------------------------------------- Subject 9.03: Should I use OpenGL's matrix routines for all my matrix math? In general the answer is \"no\". If you use OpenGL to do the transforms for your collision detection or other things you will need to use the Feedback mechanism to get the transformed values back into your code. If you don't have hardware accelerated geometry then all you are doing is adding a layer of overhead to get the computed values. If you do have hardware accelerated transforms then your data needs to be sent over the bus to the card, transformed, then sent back. Reading data back from the card is typically very slow. As a result, even with hardware geometry it will probably be faster to do the transforms yourself. ---------------------------------------------------------------------- Subject 9.04: How do matrices work? This is a long and detailed question, check the links below for more info: ftp://ftp.netcom.com/pub/he/hexapod/matrixfaq.html http://web2.airmail.net/sjbaker1/matrices_can_be_your_friends.html ---------------------------------------------------------------------- Subject 9.05: What are Quaternions? This is a long and detailed question, check the links below for more info: http://HTTP.CS.Berkeley.EDU/~laura/cs184/quat/ ftp://ftp.netcom.com/pub/he/hexapod/matrixfaq.html ---------------------------------------------------------------------- Subject 9.06: What are BSP Trees? Check out the BSP FAQ at: http://reality.sgi.com/bspfaq/ ---------------------------------------------------------------------- Subject 9.07: What are light maps and how do I use them in OpenGL? Light maps are a set of textures that are blended with the normal textures in the scene to produce lighting effects. This technique is more generally known as multi-pass rendering, or multi-texture rendering. Multi-pass effects take two or more passes over pixels in the frame buffer. This typically means the geometry needs to be transformed multiple times and sent to the hardware card for each pass. Multi-pass can be done with standard blending and rendering techniques. Multi-texture produces the same or similar effects as multi-pass, but in a single pass. Usually this means that two textures are combined with some form of blending to produce a single output pixel. With multi-texturing the geometry only needs to be sent to the hardware once. Multi-texturing requires an extension to OpenGL. At one point two extensions were available and different drivers used different extensions (SGIS_multitexture and EXT_multitexture). Now all drivers either support, or will soon support the standardized extension (ARB_multitexture). An example using ARB_multitexture can be found at: http://www.berkelium.com/OpenGL/examples/index.html ---------------------------------------------------------------------- Subject 9.08: How do I load a .BMP file into a texture map? Microsoft has some pretty detailed instructions on how to load a DIB (a BMP file in memory) into an OpenGL texture in their MSDN distribution. Do a search for \"OpenGL BMP\" and you'll turn up some good info. You can also get some example source here: http://home.bc.rogers.wave.ca/borealis/opengl.html ---------------------------------------------------------------------- Subject 9.09: Can I mix OpenGL and DirectX? DirectX describes a suite of API's by Microsoft that includes DirectDraw, Direct3D, DirectInput, DirectPlay, DirectSound, etc. You cannot mix DirectDraw or Direct3D with OpenGL, but all of the others can be used without a problem. ---------------------------------------------------------------------- Subject 9.10: How do I access the frame/depth/texture memory directly? You don't. OpenGL does not provide any interface for accessing this memory directly. You can get access to the contents of those buffers by using glReadPixels() but it is slow. There has been much debate over whether this is a good thing or a bad thing, but the reasons are basically irrelevant. You can't get direct access through OpenGL. Access to these buffers belongs in the windowing system (through DirectDraw or something similar) and not in OpenGL. Currently Windows does not provide any means to access this information. ---------------------------------------------------------------------- Subject 9.11: How do I use OpenGL for Collision Detection? You don't. OpenGL is a used to draw images on the screen, not to do general geometry manipulation. For information on collision detection see Section A.03. ---------------------------------------------------------------------- Subject 9.12: What is the best card for running OpenGL under Windows NT/95/98? This question comes up fairly often and the only answer is, \"It depends on what you're doing\". Every few months a new card comes along that looks real cool. Every few months new drivers are released that could potentially turn a performance pig into a greyhound. This question is best answered by a little research on the your part and a few trips around the web to some sites that specialize in benchmarking cards. ---------------------------------------------------------------------- Subject 9.13: How do you use extensions? Extensions can take the form of new API functions, or as enumerants to existing functions. The following URL has a header file with many common function prototypes and enumerants. Be sure to check the glGetString(GL_EXTENSIONS) for the extension before using it. See the other examples at this URL for more details. http://www.berkelium.com/OpenGL/examples/index.html Extensions not found in this header file are detailed on: http://www.opengl.org ---------------------------------------------------------------------- Subject 9.14: How do I draw a mouse cursor on a 3dfx Voodoo1/Voodoo2 card? How do I draw a custom mouse pointer using OpenGL? Since the Voodoo1/Voodoo2 is 3D only, you do not have access to the 2D GDI functions to allow Windows to draw your pointer. Or, you may want to use OpenGL for portability to other platforms. A mouse pointer is simply a 2D overlay, and can be drawn with a texture mapped quad (see Subject 9.01 and 9.02), or as flat shaded triangles as in the sample below. Sample code: http://www.geocities.com/SiliconValley/Lakes/7220/pointer.html ---------------------------------------------------------------------- Subject 9.15: How did those guys at ID software make it so you could pick your OpenGL driver? They do not dynamically link to the opengl32.dll, they use the Windows functions LoadLibrary and GetProcAddress to manually load the appropriate DLL and get the address of each function. Sample Code: http://home.bc.rogers.wave.ca/borealis/opengl.html ---------------------------------------------------------------------- -------------------------- Appendices ---------------------------- ---------------------------------------------------------------------- ---------------------------------------------------------------------- Section A. General References ---------------------------------------------------------------------- Subject A.01: OpenGL Online Links Rather than listing endless OpenGL links here, the reader is refered to Mark Kilgard's superb collection of appropriate links at: http://reality.sgi.com/mjk/ Mark has links to anything and everything related to OpenGL. The Advanced Rendering course notes hosted at the SGI website offer good tutorials into OpenGL programming: http://www.sgi.com/Technology/OpenGL/advanced97/notes/notes.html http://www.opengl.org: In the Developers section you will find links to many useful places There are several useful USENET groups, including: comp.graphics.api.opengl comp.graphics.algorithms rec.games.programmer The red and blue books (see below for description) can be found online at: Frames-based redbook: http://ofs.msi.umn.edu:88/ebt-bin/nph-dweb/dynaweb/SGI_Developer/OpenGL_PG/@Generic__BookView Frames-based bluebook: http://ofs.msi.umn.edu:88/ebt-bin/nph-dweb/dynaweb/SGI_Developer/OpenGL_RM/@Generic__BookView No-frames redbook: http://ofs.msi.umn.edu:88/ebt-bin/nph-dweb/dynaweb/SGI_Developer/OpenGL_PG/@Generic__BookTocView;hf=0 No-frames bluebook: http://ofs.msi.umn.edu:88/ebt-bin/nph-dweb/dynaweb/SGI_Developer/OpenGL_RM/@Generic__BookTocView;hf=0 ---------------------------------------------------------------------- Subject A.02: OpenGL Specific Books The \"Red Book\" is a must have for all OpenGL programmers. The \"Blue Book is available online as web pages or help files so is only really required for people who prefer \"Dead Tree Format\". The \"Green Book\" uses GLUT and as such is useful for more platforms than X-Windows. The \"White/Alpha Book\" uses MFC. The OpenGL SuperBible contains some of the same information from the \"Red Book\", some information from the \"Blue Book\" and sets up OpenGL rendering under many different environments under Windows (Win32, MFC, OWL, etc). The SuperBible is based on OpenGL 1.0, but is still quite useful. OpenGL Reference Manual (2nd Ed.), AKA \"Blue Book\" Editors: R. Kempf, C. Frazier Addison-Wesley 1996, ISBN 0-201-46140-4 OpenGL Programming Guide (2nd Ed.), AKA \"Red Book\" M. Woo, J. Neider, T. Davis Addison-Wesley 1997, ISBN 0-201-46138-2 OpenGL Programming with X-Windows, AKA \"Green Book\" OpenGL Programming in MS-Windows, AKA \"White/Alpha Book\" OpenGL SuperBible ---------------------------------------------------------------------- Subject A.03: General Computer Graphics Online Links Some of these links have been taken from the comp.graphics.algorithms faq. [Animation] Modelling physically based systems for animation: http://www.cc.gatech.edu/gvu/animation/Animation.html Motion Capture Examples http://www.darwin3d.com/gamedev.htm Character Animation FAQ ftp://ftp.netcom.com/pub/he/hexapod/charanimfaq.html [Collisions] A variety of interesting algorithms are being researched, including: http://www.cs.berkeley.edu/~mirtich/impulse.html http://www.cs.unc.edu/~geom/I_COLLIDE.html http://www.cs.wustl.edu/~pmh/ http://www.win.tue.nl/cs/tt/gino/solid/ Source code for smallest bounding sphere around points: http://vision.ucsd.edu/~dwhite/ball.html [Level of Detail Algorithms] http://www.research.microsoft.com/research/graphics/hoppe/ http://www.cc.gatech.edu/gvu/people/peter.lindstrom http://research.microsoft.com/MSRSIGGRAPH/ http://www.undergrad.math.uwaterloo.ca/~s3graham/ http://w3imagis.imag.fr/Membres/Fredo.Durand/Book/sig97 http://www.cs.utah.edu/~ppsloan/siggraph96.html [Miscellaneous] comp.graphics.algorithms FAQ: comp.graphics.algorithms newsgroup (posted bi-monhtly) http://www.exaflop.org/docs/cgafaq ftp://rtfm.mit.edu/pub/faqs/graphics/algorithms-faq David Eberly has lots of useful math notes and code: http://www.magic-software.com/ Leath Muller is putting together several FAQs, including ones on character animation, matrices, and vectors: http://www.geocities.com/SiliconValley/Horizon/2097 The University of Manchester NURBS Library: ftp://unix.hensa.ac.uk/pub/misc/unix/nurbs/ For an implementation of Seidel's algorithm for fast trapezoidation and triangulation of polygons. You can get the code from: ftp://ftp.cs.unc.edu/pub/users/narkhede/triangulation.tar.gz A compact reference for real-time 3d computer graphics programming: http://www.cs.mcgill.ca/~zed BSP Tree FAQ by Bretton Wade: http://reality.sgi.com/bspfaq/ Gamma and Color FAQs by Charles A. Poynton: ftp://ftp.inforamp.net/pub/users/poynton/doc/colour/ http://www.inforamp.net/~poynton/ Quaternion introductions: http://www.glue.umd.edu/~rsrodger/gd/matrixfaq.htm http://http.cs.berkeley.EDU/~laura/cs184/quat ftp://ftp.netcom.com/pub/hb/hbaker/quaternion/ [Volume Lighting Examples] http://www.softplusplus.com/ ---------------------------------------------------------------------- Subject A.04: General Computer Graphics Books These are a small section of those mentioned in the comp.graphics.algorithms faq. [Foley] Computer Graphics: Principles and Practice (2nd Ed.), J.D. Foley, A. van Dam, S.K. Feiner, J.F. Hughes, Addison-Wesley 1990, ISBN 0-201-12110-7; Computer Graphics: Principles and Practice, C version J.D. Foley, A. van Dam, S.K. Feiner, J.F. Hughes, Addison-Wesley ISBN: 0-201-84840-6, 1996, 1147 pp. [Rogers:Procedural] Procedural Elements for Computer Graphics 2nd Ed, David F. Rogers, McGraw Hill 1998, ISBN 0-07-053548-5 [Rogers:Mathematical] Mathematical Elements for Computer Graphics 2nd Ed., David F. Rogers and J. Alan Adams, McGraw Hill 1990, ISBN 0-07-053530-2 [Watt:3D] 3D Computer Graphics, 2nd Edition, Alan Watt, Addison-Wesley 1993, ISBN 0-201-63186-5 [Glassner:RayTracing] An Introduction to Ray Tracing, Andrew Glassner (ed.), Academic Press 1989, ISBN 0-12-286160-4 [Gems I] Graphics Gems, Andrew Glassner (ed.), Academic Press 1990, ISBN 0-12-286165-5 [Gems II] Graphics Gems II, James Arvo (ed.), Academic Press 1991, ISBN 0-12-64480-0 [Gems III] Graphics Gems III, David Kirk (ed.), Academic Press 1992, ISBN 0-12-409670-0 (with IBM disk) or 0-12-409671-9 (with Mac disk) See also \"AP Professional Graphics CD-ROM Library,\" Academic Press, ISBN 0-12-059756-X, which contains Gems I-III. [Gems IV] Graphics Gems IV, Paul S. Heckbert (ed.), Academic Press 1994, ISBN 0-12-336155-9 (with IBM disk) or 0-12-336156-7 (with Mac disk) [Gems V] Graphic Gems V, Alan W. Paeth (ed.), Academic Press 1995, ISBN 0-12-543455-3 (with IBM disk) [Watt:Animation] Advanced Animation and Rendering Techniques, Alan Watt, Mark Watt, Addison-Wesley 1992, ISBN 0-201-54412-1 ---------------------------------------------------------------------- Subject A.05: Game Development Online Links World Wide Web: http://www.3dgamedev.com USENET: rec.games.programmer ---------------------------------------------------------------------- Subject A.06: Game Development Books If you find any good ones, let me know. So far I haven't been incredibly impressed with any Game Development books I've read or seen. ---------------------------------------------------------------------- Section B. Contributors ---------------------------------------------------------------------- Subject B.01: How can you contribute to this FAQ? Send email to tomh@biomorphic.com with your suggestions, possible topics, corrections, or pointers to information. ---------------------------------------------------------------------- Subject B.02: Contributors. Who made this all possible. * Only YOU make this possible * These are people who have contributed in some way, including the names of those whose postings that have been used to construct this FAQ: Alex Amsel Joseph O'Rourke James Bowman Tom Hubina Michael Dale Long Peder Blekken Steve Baker John Biddiscombe Richard Wright Sam McGrath Bernd Kreimeier Michael Brooks Leath Muller Ryan Haksi Brian Whitman Kowsik Guruswamy Phil J. Mayers L.J. Wischik\n"}, {"score": 540.8, "uuid": "3bc76c2a-1dfa-530a-a5e4-011ea356caf7", "index": "cw12", "trec_id": "clueweb12-0403wb-85-02767", "target_hostname": "my.opera.com", "target_uri": "http://my.opera.com/timjoh/blog/2007/11/13/taking-the-canvas-to-another-dimension", "page_rank": 1.4976979e-09, "spam_rank": 90, "title": "Tim Johansson - Taking the canvas <em>to</em> another dimension", "snippet": "<em>Direct3D</em> has no place <em>in</em> any <em>platform</em> except Windows (CE). Remember how many <em>platforms</em> Opera has <em>to</em> run and there <em>is</em> <em>opengl</em> functionality even on phones, java. Alessandro writes: This <em>is</em> a Amazing feature !!!! <em>Is</em> possible <em>to</em> get the context object from a Java Applet ?", "explanation": null, "document": "Taking the canvas to another dimension\nTuesday, November 13, 2007 4:38:34 PM\n3d , opera , canvas\nRecently Opera published an experimental build on Opera Labs , with support for the video element and video in SVG. This build also includes an experimental addition to the canvas element, the 3d canvas. In order to view the demos presented here you will need to get the Opera Labs build . The build is currently only available for Windows. Mac and Linux versions should be available soon.\nSince this is my first post I guess I should introduce myself. My name is Tim Johansson, and I am a core technology developer at Opera Software. I am responsible for, among other things, canvas (including the underlying vector graphics library) and image decoding.\nA new addition to HTML5 is the canvas. The canvas is more or less a bitmap that you can draw on using JavaScript. The actual drawing is done by a (rendering) context. The specification includes a 2d context that must be implemented, but also allows browser vendors to add their own contexts. When I first implemented the canvas tag in Opera I though it would be cool to have a 3d context, so I added one.\nIn this post I will describe the 3d context I added, which is available in the recently released Opera Labs build. The context is called opera-3d and is basically Opera's version of the 3d canvas. For those of you not familiar with the canvas tag here is a crash course in using it.\nAdd a <canvas></canvas> tag to your page\nGet the canvas element from a JavaScript using getElementById or something similar.\nCall canvas.getContext(<name>); to get the context\nThat's it. Once you have the context in your script you can just call its rendering functions.\nThe opera-3d context\nOpera's 3d context, unlike Mozilla's, is not a straight mapping to OpenGL. We keep it on a more abstract level. The main reasons for doing this are:\nIt makes it easier to implement on non-OpenGL platforms (such as D3D)\nWe wanted to have some form of collision detection available\nThe main concept is that you work with 3D models. You create 3D models, add vertices and triangles to them and finally render them to the canvas. This is what the interface looks like.\ninterface CanvasRenderingContextOpera3D {\n\n  // state\n  void save(); // push state on state stack\n  void restore(); // pop state stack and restore state\n\n  // scene/frame\n  void beginScene(); // start rendering a new frame\n  void endScene(); // finish rendering of the scene and present the result\n\n  // transformations\n  void translate(in float x, in float y, in float z);\n  void scale(in float x, in float y, in float z);\n  void rotateX(in float rotation);\n  void rotateY(in float rotation);\n  void rotateZ(in float rotation);\n\n  // rendering operation\n  void drawTriangle(in float x1, in float y1, in float z1, in float tex_s1, in float tex_t1, \n      in float x2, in float y2, in float z2, in float tex_s2, in float tex_t2, \n      in float x3, in float y3, in float z3, in float tex_s3, in float tex_t3);\n  void draw3DModel(in Canvas3DModel model);\n\n  // create objects\n  CanvasTexture createTexture(in Image img);\n  Canvas3DModel create3DModel();\n\n  // collision detection\n  string checkIntersection(in float x, in float y, in float z, in float radius, in Canvas3DModel model);\n\n  // rendering state\n  attribute CanvasTexture texture; // current texture or null for no texture, default is null\n  attribute string color; // current color, default is transparent black\n  attribute float fov; // field of view of the scene in degrees, default is 45\n  attribute float nearPlane; // distance to the near clipping plane, default is 0.1\n  attribute float farPlane; // distance to the far clipping plane, default is 100\n  attribute string ztest; // \"none\", \"less\", \"lessequal\", \"greater\", \"greaterequal\", \"equal\", \"notequal\". Default is \"lessequal\"\n  attribute string blend; // \"replace\", \"add\", \"srcalpha\", \"multiply\". Default is \"replace\"\n};\n\ninterface Canvas3DModel {\n  void addVertex(in float x, in float y, in float z, in float s, in float t);\n  void addTriangle(in integer vertex1, in integer vertex2, in integer vertex3);\n};\n\ninterface CanvasTexture{\n};\nLet's go through the different functions in the order they appear above:\nThe save and restore functions save and restore the current rendering state. They are very similar to save and restore in the 2D context.\nThe translate, scale and rotate functions modify the transformation matrix. The current transformation matrix will transform all vertices rendered with the 3D canvas. This includes Canvas3DModel objects.\nbeginScene and endScene are used to distinguish a frame. The canvas is only updated when endScene is called. When it is, the rendered image is copied to the canvas. Only the commands issued between beginScene and endScene are drawn to the canvas.\ndrawTriangle draws a single triangle. This method is usually slow and should not be used for rendering a lot of triangles.\ndraw3DModel renders a model previously created with create3DModel to the canvas. This function is much better suited for rendering large batches of triangles.\ncreateTexture creates a texture object from an image object. This method will fail if the image object's dimensions are not powers of two (1, 2, 4, 8, 16, 32 etc.) As with the regular canvas you can create textures from images (including SVG) or other canvases.\ncreate3DModel creates a 3DModel object that can be built (by adding vertices and triangles) and rendered by the script.\ncheckIntersection is a simple sphere/model collision detection function. The parameters are the sphere (centre and radius) and the model to check for collisions with the sphere. The function returns the collision point as a string when a collision occurs (the point of deepest penetration is coosen as collision point). If no collision was found the function returns an empty string instead.\nThe collision detection has some bugs in this build, and I would recomend that you do not use it yet. We will write more about collision detection when it is fixed.\nExample - a rotating cube\nThis is the first example ever written for the opera-3d context. It creates a model, adds vertices and triangles for a cube and then renders it with different transforms. If you are using an Opera build with 3d canvas enabled you can also see the rotating cube in action . The files used for this example are the HTML file shown below and an image to use as the texture ( operalogo.png in this case).\n<canvas id=\"canvas\" width=\"200\" height=\"200\">\n  Canvas not supported!\n</canvas>\n<script>\n  var canvas;\n  var context3d;\n  var rotation;\n  var texture;\n  var cube;\n  function render(){\n    context3d.beginScene();\n    context3d.translate(0,0,-5);\n    context3d.rotateY(rotation);\n    context3d.rotateX(rotation);\n    rotation += 2;\n    context3d.color = \"white\";\n    context3d.draw3DModel(cube);\n    context3d.endScene();\n  }\n  function onTick(){\n    render();\n  }\n  function onload(){\n    canvas = document.getElementById(\"canvas\");\n    context3d = canvas.getContext(\"opera-3d\");\n    if (!context3d)\n    {\n      alert(\"3d canvas not supported\");\n      return;\n    }\n    logo = new Image();\n    logo.src = \"operalogo.png\";\n    texture = context3d.createTexture(logo);\n    context3d.texture = texture;\n\n    cube = context3d.create3DModel();\n    cube.addVertex(-1, 1, 1, 0, 0);\n    cube.addVertex(1, 1, 1, 1, 0);\n    cube.addVertex(-1, -1, 1, 0, 1);\n    cube.addVertex(1, -1, 1, 1, 1);\n    cube.addVertex(-1, 1, -1, 1, 1);\n    cube.addVertex(1, 1, -1, 0, 1);\n    cube.addVertex(-1, -1, -1, 1, 0);\n    cube.addVertex(1, -1, -1, 0, 0);\n\n    cube.addTriangle(0,1,2);\n    cube.addTriangle(2,1,3);\n    cube.addTriangle(4,5,6);\n    cube.addTriangle(6,5,7);\n    cube.addTriangle(0,4,2);\n    cube.addTriangle(2,4,6);\n    cube.addTriangle(1,5,3);\n    cube.addTriangle(3,5,7);\n    cube.addTriangle(0,4,1);\n    cube.addTriangle(1,4,5);\n    cube.addTriangle(2,6,3);\n    cube.addTriangle(3,6,7);\n\n    setInterval(onTick, 10);\n  }\n  document.onload = onload();\n</script>\nMore advanced techniques\nIn the example above a plain textured cube, which was hard-coded in the script, was rendered. It is possible to do much more than this using the opera-3d context. Below I will describe some techniques that can be used to make more advanced examples.\nDOM3 Load and save\nHard-coding models is fine for small objects, but as the objects grow it becomes more and more difficult to hard-code them in the script. It is possible to get around this by converting the models to an XML format and then loading them into the script using DOM3 load and save to parse the XML. Here is a modified version of the rotating cube .\nLightmapping\nLightmapping is one of the most famous lighting techniques. It is used in many popular games, for example the quake series. The principle is that you multiply each rendered pixel with the light value at that pixel. The light value for each pixel is pre-calculated and stored in a texture.\nThe opera-3d context does not have multi-texturing yet, so it is not possible to do lightmapping in one step, but you can achieve this effect by doing multi pass rendering. In the first pass the scene is rendered as usual. In the second pass ztest is set to equal and blend is set to multiply. The scene is now rendered with the lightmap instead of the textures and the result is a lightmapped scene.\nSummary\nThat's it! This article has given you an introduction to the fundamentals of using the Opera 3d canvas. After reading all of this you should know enough to create some cool 3d-canvas demos. If you want to see a more advanced example you can have a look at the 3d snake implementation done by Mathieu 'p01' HENRI . I'm looking forward to seeing all the cool demos people will make! Get in touch with us to share your creations.\n"}, {"score": 488.73038, "uuid": "29f1fb43-a4b6-50b6-99a8-6c2846399924", "index": "cw12", "trec_id": "clueweb12-1501wb-91-10835", "target_hostname": "blogs.arm.com", "target_uri": "http://blogs.arm.com/multimedia/166-gpgpu-what-is-it-good-for/", "page_rank": 1.1777042e-09, "spam_rank": 83, "title": "GPGPU - What <em>is</em> it good for? - ARM Community", "snippet": "(A friend <em>of</em> mine once observed that it <em>is</em> possible <em>to</em> write BASIC code <em>in</em> many <em>different</em> computer languages!).", "explanation": null, "document": "2 Comments\n04 May 2010\nEveryone knows that GPUs are wonderful things that enable us to create stunning graphical effects through APIs such as OpenGL ES , but what else can we do with them? My good friend Borgar Ljosland suggested that Augmented Reality could be one of the next Big Things in his blog and while it's fun to argue with Vikings, he could well be right. Let's look into this a bit closer...\nIt is said that the beginning of wisdom is to call things by their correct names. If so, in the computing industry we are often not very wise\u2026 GPGPU (General Purpose Computing on Graphics Processing Units) has always seemed to me to be misnamed, since the computing that works best on GPUs is not really very General Purpose at all, but I\u2019ll come back to that theme later. The term GPU Computing was, I believe, coined by Dr. Jon Peddie , and I much prefer it. However, leaving all that aside, what is this GPU computing all about and how does it affect the world of cool electronic devices?\nGPGPU heritage\nIn the desktop computing world, add-in graphics cards consuming 100 to 300W of power have for some time had the capability of doing more than just graphics; they have compellingly large amounts of compute horse-power (often floating-point, measured in TeraFlops ). Along came the people who used to use scientific workstations, who found they could do their engineering structural analysis on a cheap PC with a decent graphics card for much less money than buying a workstation, and a new market was born.\nThe rise of GPGPU standards\nThere's an old saying that the great thing about standards is that there are so many to choose from! Originally there was no overall standard, with a number of different vendor-specific API standards, then Microsoft added the capability to execute compute shaders in their DirectCompute API as part of DirectX, but I would argue that the big change was OpenCL . Apple offered an API and language specification to Khronos and after a period of negotiation and spec-wrangling, Khronos adopted OpenCL as an open, royalty-free specification for everybody to implement on their GPUs. Now all GPU manufacturers can continue to claim that their proprietary APIs are better and remain supported, but lots of companies are supporting OpenCL, either in current devices or their next-generation GPUs, as well as the Microsoft standard.\nThe introduction of GPU computing was a technological inflection point. Now that a consensus is building behind a small number of APIs there is much reduced fear of any one company being the dominant force in defining the APIs and much increased confidence. Being GPU-vendor-neutral, OpenCL has gained acceptance from all the PC graphics card manufacturers in record time, so now we are starting to see the OpenCL content starting to appear.\nGPGPU in battery-powered products\nThere is widespread assumption through the industry that all the tier-1 mobile OEMs will soon produce products that use and support OpenCL. Consequently it's now a pretty much mandatory requirement for next-generation GPU IP to support OpenCL. To earn it's keep in a mobile (battery-powered) device, GPU computing will have to provide new functionality that's needed in these devices and/or to do other things that are already being done in the mobile space in a more energy-efficient fashion.\nWhat about Energy?\nOf course, at ARM we care a great deal about energy efficiency. In the battery-powered world of mobile devices, the power budget is remaining frustratingly constant, so how does image processing on GPU compare to DSPs or GPU Computing compare to CPUs? That\u2019s a really good question but the answer may well turn out to be complicated: GPUs are very efficient at certain types of computation, and CPUs better at some others. GPUs are designed to execute many threads in parallel. Graphics has high levels of data parallelism which we can exploit through multi-threading architectures such as the barrel-threaded architecture of the ARM Mali GPUs. However, single-threaded code or code that is not very parallel will execute more efficiently on your CPU. GPUs are designed to provide great throughput; CPUs for low latency. Executing very short computations on GPUs and waiting for the results to come back onto the CPU will be inefficient. Executing longer computations over a large dataset will be highly energy-efficient on a GPU such as Mali. So, we need to educate coders and we need to provide tools to help them.\nThere has also been a move towards using GPU computing in data centers. Today, this consists of racks of graphics cards connected to server PCs, but the energy costs of running data centers has become one of the most important design features for them so I predict that over time, they will move to racks of embedded ARM CPUs and ARM Mali GPUs.\nNinja coders will not be out of a job\nJust as today with our highly energy-efficient CPUs, it is still possible to write bad code, I predict it will be possible to write bad (inefficient, power-hungry) code for GPUs, either with Direct3D compute shaders or with OpenCL. (A friend of mine once observed that it is possible to write BASIC code in many different computer languages!). It may turn out to be easy to write quite good code but either by design of that code, or design of the platform, waste a lot of time and energy moving data and results back and for the between CPU and GPU. Only this week I talked with a researcher from a household name company who was benchmarking GPU computing on desktop graphics cards. He found the overhead for moving data between main memory and the memory on the graphics card eliminated any performance gains from the acceleration of the algorithm! Many SoCs will have a Unified Memory Access ( UMA ) architecture which will help here, but the issue is still a major effect to be borne in mind when designing efficient systems.\nThe good news for skilled programmers is that they will still be needed! The good news for tools writers is that there will still be a need for great tools that show how your code is executing, that identifies bottlenecks and suggests solutions. Presenting that efficiency and energy-use information in intuitive, easy-to-understand user interfaces will present some really exciting challenges and we will see some interesting innovation in this area. The good news for compute systems-designers like ARM, developing CPUs, GPUs, video processors (VPUs) and the fabric interconnect that joins them all together efficiently is that there is a huge demand for these systems and these tools. The OEM winners will be those who manage to exploit the efficiency of the GPUs and thus produce exciting applications and effects within the available power budget. I do believe that genuinely exciting times are ahead for us.\nSo, now we have some technology, we have some standards and we'll soon have some products. What about the use-cases, and where does Augmented Reality fit into this? In my next blog, I\u2019ll outline what my thoughts are for the killer mobile app that will drive the demand for GPUs, but in the meantime, I'd be interested to hear your views...\nJem Davies, ARM Fellow. Jem likes to think of himself as \"The Godfather\" to technical talent in ARM. After spending some time in his youth writing software for satellites and traffic-lights among other fascinating things, Jem spotted the technical inflection point of the mobile industry: graphics, video and other visual processing. As VP of technology in the Media Processing Division of ARM, Jem is busy with a lot of projects involving the future of cool ARM technology, which will revolutionise how people experience and interact with digital devices.\nShortlink to this post: http://bit.ly/bRrZpE\nShare This Entry:\nAll company and product names appearing in the ARM Blogs are trademarks and/or registered trademarks of ARM Limited per ARM\u2019s official trademark list. All other product or service names mentioned herein are the trademarks of their respective owners.\n"}, {"score": 322.55493, "uuid": "66be9e44-b4ff-58a5-8385-bea6a0419a7f", "index": "cw12", "trec_id": "clueweb12-0813wb-23-02371", "target_hostname": "www.cadmaps.com", "target_uri": "http://www.cadmaps.com/gisblog/", "page_rank": 1.4905067e-09, "spam_rank": 71, "title": "GIS <em>in</em> XML", "snippet": "XNA <em>is</em> closer <em>to</em> the GPU with the time tested graphics rendering pipeline familiar <em>to</em> <em>Direct3D</em>&#x2F;<em>OpenGL</em> developers, but not so familiar <em>to</em> XAML developers.", "explanation": null, "document": "Fig 1 \u2013 LRO Color Shaded Relief map of moon \u2013 Silverlight 5 XNA with Kinect interface\nSilverlight 5 was released after a short delay, at the end of last week.\nJust prior to exiting stage left, Silverlight, along with all plugins, shares a last aria. The spotlight now shifts abruptly to a new diva, mobile html5. Backstage the enterprise awaits with a bouquet of roses. Their concourse will linger long into the late evening of 2021.\nThe Last Hurrah?\nKinect devices continue to generate a lot of hacking interest. With the release of an official Microsoft Kinect beta SDK for Windows, things get even more interesting. Unfortunately, Kinect and the web aren\u2019t exactly ideal partners. It\u2019s not that web browsers wouldn\u2019t benefit by moving beyond the venerable mouse/keyboard events. After all, look at the way mobile touch, voice, inertia, gyro, accelerometer, gps . . . have all suddenly become base features in mobile browsing. The reason Kinect isn\u2019t part of the sensor event farmyard may be just a lack of portability and an \u2018i\u2019 prefix. Shrinking a Kinect doesn\u2019t work too well as stereoscopic imagery needs a degree of separation in a Newtonian world.\n[The promised advent of NearMode (50cm range) offers some tantalizing visions of 3D voxel UIs. Future mobile devices could potentially take advantage of the human body\u2019s bi-lateral symmetry. Simply cut the device in two and mount one half on each shoulder, but that isn\u2019t the state of hardware at present. ]\nFig 2 \u2013 a not so subtle fashion statement OmniTouch\nFor the present, experimenting with Kinect control of a Silverlight web app requires a relatively static configuration and a three-step process: the Kinect out there, beyond the stage lights, and the web app over here, close at hand, with a software piece in the middle. The Kinect SDK , which roughly corresponds to our visual and auditory cortex, amplifies and simplifies a flood of raw sensory input to extract bits of \u201cactionable meaning.\u201d The beta Kinect SDK gives us device drivers and APIs in managed code. However, as these APIs have not been compiled for use with Silverlight runtime, a Silverlight client will by necessity be one step further removed.\nMicrosoft includes some rich sample code as part of the Kinect SDK download. In addition there are a couple of very helpful blog posts by David Catuhe and a codeplex project, kinect toolbox .\nStep 1:\nThe approach for using Kinect for this experimental map interface is to use the GestureViewer code from Kinect Toolbox to capture some primitive commands arising from sensory input. The command repertoire is minimal including four compass direction swipes, and two circular gestures for zooming, circle clockwise zoom in, and circle counter clockwise zoom out. Voice commands are pretty much a freebie, so I\u2019ve added a few to the mix. Since GestureViewer toolbox includes a learning template based gesture module, you can capture just about any gesture desired. I\u2019m choosing to keep this simple.\nStep 2:\nOnce gesture recognition for these 6 commands is available, step 2 is handing commands off to a Silverlight client. In this project I used a socket service running on a separate thread. As gestures are detected they are pushed out to local port 4530 on a tcp socket service. There are other approaches that may be better with final release of Silverlight 5.\nStep 3:\nThe Silverlight client listens on port 4530, reading command strings that show up. Once read, the command can then be translated into appropriate actions for our Map Controller.\nFig 3 \u2013 Kinect to Silverlight architecture\nFull Moon Rising\nBut first, instead of the mundane, let\u2019s look at something a bit extraterrestrial, a more fitting client for such \u201cextraordinary\u201d UI talents. NASA has been very busy collecting large amounts of fascinating data on our nearby planetary neighbors. One data set that was recently released by ASU , stitches together a comprehensive lunar relief map with beautiful color shading. Wow what if the moon really looked like this!\nFig 4 \u2013 ASU LRO Color Shaded Relief map of moon\nIn addition to our ASU moon USGS has published a set of imagery for Mars, Venus, Mercury, as well as some Saturn and Jupiter moons. Finally, JPL thoughtfully shares a couple of WMS services and some imagery of the other planets :\nhttp://onmoon.jpl.nasa.gov/wms.cgi?version=1.1.1&request=GetCapabilities\nThis type of data wants to be 3D so I\u2019ve brushed off code from a previous post, NASA Neo 3D XNA , and adapted it for planetary data, minus the population bump map. However, bump maps for depicting terrain relief are still a must have. A useful tool for generating bump or normal imagery from color relief is SSBump Generator v5.3 . The result using this tool is an image that encodes relative elevation of the moon\u2019s surface. This is added to the XNA rendering pipeline to combine a surface texture with the color relief imagery, where it can then be applied to a simplified spherical model.\nFig 5 \u2013 part of normal map from ASU Moon Color Relief imagery\nThe result is seen in the MoonViewer client with the added benefit of immediate mode GPU rendering that allows smooth rotation and zoom.\nThe other planets and moons have somewhat less data available, but still benefit from the XNA treatment. Only Earth, Moon, Mars, Ganymede, and Io have data affording bump map relief.\nI also added a quick WMS 2D viewer html using OpenLayers against the JPL WMS servers to take a look at lunar landing sites. Default OpenLayers isn\u2019t especially pretty, but it takes less than 20 lines of js to get a zoomable viewer with landing locations. I would have preferred the elegance of Leaflet.js , but EPSG:4326 isn\u2019t supported in L.TileLayer.WMS(). MapProxy promises a way to proxy in the planet data as EPSG:3857 tiles for Leaflet consumption, but OpenLayers offers a simpler path.\nFig 6 \u2013 OpenLayer WMS viewer showing lunar landing sites\nNow that the Viewer is in place it\u2019s time to take a test drive. Here is a ClickOnce installer for GestureViewer modified to work with the Silverlight Socket service: http://107.22.247.211/MoonKinect/\nRecall that this is a Beta SDK, so in addition to a Kinect prerequisite, there are some additional runtime installs required:\nUsing the Kinect SDK Beta\nDownload Kinect SDK Beta 2:\nBe sure to look at the system requirements and the installation instructions further down the page. This is Beta still, and requires a few pieces. The release SDK is rumored to be available the first part of 2012.\nYou may have to download some additional software as well as the Kinect SDK:\nDirectX latest version: Runtime for Microsoft DirectX\u00ae 9\nFor Speech:\n\u2022 Microsoft Speech Platform Runtime, version 10.2 \u2013 select 32-bit if you are running 32-bit Windows. If you have 64-bit Windows, we suggest that you install both the 32-bit and 64-bit runtime.\n\u2022 Kinect for Windows Language Pack, version 0.9\nFinally, we are making use of port 4530 for the Socket Service. It is likely that you will need to open this port in your local firewall.\nAs you can see this is not exactly user friendly installation, but the reward is seeing Kinect control of a mapping environment. If you are hesitant to go through all of this install trouble, here is a video link that will give you an idea of the results.\nYouTube video demonstration of Kinect Gestures\nVoice commands using the Kinect are very simple to add so this version adds a few.\nHere is the listing of available commands:\npublic void SocketCommand(string current)\n        {\n            switch (command)\n            {\n                    // Kinect voice commands\n                case \"mercury-on\": { MercuryRB.IsChecked = true; break; }\n                case \"venus-on\": { VenusRB.IsChecked = true; break; }\n                case \"earth-on\": { EarthRB.IsChecked = true; break; }\n                case \"moon-on\": { MoonRB.IsChecked = true; break;}\n                case \"mars-on\": { MarsRB.IsChecked = true; break;}\n                case \"marsrelief-on\": { MarsreliefRB.IsChecked = true; break; }\n                case \"jupiter-on\": { JupiterRB.IsChecked = true; break; }\n                case \"saturn-on\": { SaturnRB.IsChecked = true; break; }\n                case \"uranus-on\": { UranusRB.IsChecked = true; break; }\n                case \"neptune-on\": { NeptuneRB.IsChecked = true; break; }\n                case \"pluto-on\": { PlutoRB.IsChecked = true; break; }\n\n                case \"callisto-on\": { CallistoRB.IsChecked = true; break; }\n                case \"io-on\": { IoRB.IsChecked = true;break;}\n                case \"europa-on\": {EuropaRB.IsChecked = true; break;}\n                case \"ganymede-on\": { GanymedeRB.IsChecked = true; break;}\n                case \"cassini-on\": { CassiniRB.IsChecked = true; break; }\n                case \"dione-on\":  {  DioneRB.IsChecked = true; break; }\n                case \"enceladus-on\": { EnceladusRB.IsChecked = true; break; }\n                case \"iapetus-on\": { IapetusRB.IsChecked = true;  break; }\n                case \"tethys-on\": { TethysRB.IsChecked = true; break; }\n                case \"moon-2d\":\n                    {\n                        MoonRB.IsChecked = true;\n                        Uri uri = Application.Current.Host.Source;\n                        System.Windows.Browser.HtmlPage.Window.Navigate(new Uri(uri.Scheme + \"://\" + uri.DnsSafeHost + \":\" + uri.Port + \"/MoonViewer/Moon.html\"), \"_blank\");\n                        break;\n                    }\n                case \"mars-2d\":\n                    {\n                        MarsRB.IsChecked = true;\n                        Uri uri = Application.Current.Host.Source;\n                        System.Windows.Browser.HtmlPage.Window.Navigate(new Uri(uri.Scheme + \"://\" + uri.DnsSafeHost + \":\" + uri.Port + \"/MoonViewer/Mars.html\"), \"_blank\");\n                        break;\n                    }\n                case \"nasaneo\":\n                    {\n                        EarthRB.IsChecked = true;\n                        System.Windows.Browser.HtmlPage.Window.Navigate(new Uri(\"http://107.22.247.211/NASANeo/\"), \"_blank\"); break;\n                    }\n                case \"rotate-east\": {\n                        RotationSpeedSlider.Value += 1.0;\n                        tbMessage.Text = \"rotate east\";\n                        break;\n                    }\n                case \"rotate-west\":\n                    {\n                        RotationSpeedSlider.Value -= 1.0;\n                        tbMessage.Text = \"rotate west\";\n                        break;\n                    }\n                case \"rotate-off\":\n                    {\n                        RotationSpeedSlider.Value = 0.0;\n                        tbMessage.Text = \"rotate off\";\n                        break;\n                    }\n                case \"reset\":\n                    {\n                        RotationSpeedSlider.Value = 0.0;\n                        orbitX = 0;\n                        orbitY = 0;\n                        tbMessage.Text = \"reset view\";\n                        break;\n                    }\n\n                //Kinect Swipe algorithmic commands\n                case \"swipetoleft\":\n                    {\n                        orbitY += Microsoft.Xna.Framework.MathHelper.ToRadians(15);\n                        tbMessage.Text = \"orbit left\";\n                        break;\n                    }\n                case \"swipetoright\":\n                    {\n                        orbitY -= Microsoft.Xna.Framework.MathHelper.ToRadians(15);\n                        tbMessage.Text = \"orbit right\";\n                        break;\n                    }\n                case \"swipeup\":\n                    {\n                        orbitX += Microsoft.Xna.Framework.MathHelper.ToRadians(15);\n                        tbMessage.Text = \"orbit up\";\n                        break;\n                    }\n                case \"swipedown\":\n                    {\n                        orbitX -= Microsoft.Xna.Framework.MathHelper.ToRadians(15);\n                        tbMessage.Text = \"orbit down\";\n                        break;\n                    }\n\n                //Kinect gesture template commands\n                case \"circle\":\n                    {\n\n                        if (scene.Camera.Position.Z > 0.75f)\n                        {\n                            scene.Camera.Position += zoomInVector * 5;\n                        }\n                        tbMessage.Text = \"zoomin\";\n                        break;\n                    }\n                case \"circle2\":\n                    {\n                        scene.Camera.Position += zoomOutVector * 5;\n                        tbMessage.Text = \"zoomout\";\n                        break;\n                    }\n            }\n        }\nPossible Extensions\nAfter posting this code, I added an experimental stretch vector control for zooming and 2 axis twisting of planets. These are activated by voice: \u2018vector twist\u2019, \u2018vector zoom\u2019, and \u2018vector off.\u2019 The Map control side of gesture commands could also benefit from some easing function animations. Another avenue of investigation would be some type of pointer intersection using a ray to indicate planet surface locations for events.\nSummary\nEven though Kinect browser control is not prime time material yet, it is a lot of experimental fun! The MoonViewer control experiment is relatively primitive. Cursor movement and click using posture detection and hand tracking is also feasible, but fine movement is still a challenge. Two hand vector controlling for 3D scenes is also promising and integrates very well with SL5 XNA immediate mode graphics.\nKinect 2.0 and NearMode will offer additional granularity. Instead of large swipe gestures, finger level manipulation should be possible. Think of 3D voxel space manipulation of subsurface geology, or thumb and forefinger vector3 twisting of LiDAR objects, and you get an idea where this could go.\nThe merger of TV and internet holds promise for both whole body and NearMode Kinect interfaces. Researchers are also adapting Kinect technology for mobile as illustrated by OmniTouch .\n. . . and naturally, lip reading ought to boost the Karaoke crowd (could help lip synching pop singers and politicians as well).\nFig 7 \u2013 Jupiter Moon Io\n"}, {"score": 286.62085, "uuid": "c338125a-1401-5331-aa61-720d87b3a33f", "index": "cw12", "trec_id": "clueweb12-0402wb-68-02125", "target_hostname": "www2.sys-con.com", "target_uri": "http://www2.sys-con.com/ITSG/virtualcd/Java/archives/0810/briggs/index.html", "page_rank": 1.1727728e-09, "spam_rank": 94, "title": "Java Games Development - Part 3", "snippet": "LWJGL <em>is</em> a modest library, still <em>in</em> development, and it aims <em>to</em> do very little other <em>than</em> <em>to</em> do things Java can&#x27;t, like draw with <em>OpenGL</em>. There <em>is</em> a frequently misunderstood purpose <em>to</em> the library though. LWJGL <em>is</em> not an add-on library <em>to</em> J2SE <em>to</em> allow you <em>to</em> write <em>OpenGL</em> applications <em>in</em> Java.", "explanation": null, "document": "Part 1 of this series appeared in the August issue of Java Developer's Journal (Vol. 8, issue 8), and Part 2 appeared in the September issue (Vol. 8, issue 9).\nJDJ: Microsoft has received quite a lot of good press (or propaganda, however you'd like to look at it) for their .NET product, and there has even been discussion that it will be/is suitable for games development with good DirectX bindings. Since Java is only just out of the gate (in terms of commercial games development), do you see .NET providing serious competition in this burgeoning market, or are there some (perhaps hidden?) advantages to Java that might make the difference in this case?\nJeff K: Don't confuse .NET the platform with CLR the VM, or C# the language.\n.NET will not be suitable for games. Its XML-based communications protocol is by definition slow and verbose, and that's before you get into the other architectural issues. I have no fear of .NET becoming the default back-end technology for networked games - it was designed with business apps in mind, which need totally different properties.\nAs for C# and CLR (which, as I understand it, are heavily based on MSVM), there are a number of points. MSVM has always supported DirectX through JDirect, but it hasn't taken off as a game platform. That they are continuing this support doesn't seem like anything new to me. C#/CLR has none of the benefits of Java (it's not cross platform, being YADC (yet another dialect of C) it's not likely to appreciably improve either productivity or code correctness.\nAbout all it does is muddy the waters around Java, which in my opinion is maybe all it's supposed to do.\nToday we have cross-platform technologies emerging in Java that provide all the benefits of DirectX without sacrificing portability, productivity, or code correctness. Examples of this are the LWJGL open source library project, and the open source bindings for Java to OpenGL (JOGL), OpenAL (JOAL), and controller input (JInput).\nDoug T: As Jeff mentions, this mostly affects Java from the C# side of things. One advantage Java has is time. At GDC this year, there was a session on Managed DirectX, which is effectively DirectX for C#, and you could have replaced every instance of C# with Java in the presentation. We've been solving those problems for years, so we have a head start.\nCas P: [Microsoft's] VM technology is currently inferior, but not for long. The easy integration with a direct, ultra-capable gaming API (DirectX) means that it's only a matter of time before M$ starts gaining a majority unless there's some direct competition in the same space from Sun. It's my belief that a three-pronged defense - for defense it is, as Java is the innocent blinking rabbit in Microsoft's headlights - is needed:\n1.\u00a0 Gang together with game technologies, embrace and flourish - OpenGL and OpenAL are Sun's only hope against DirectX, so they'd better start supporting it, encouraging it, sponsoring it, and even helping it. If Sun is seen to be behind OpenGL to the point where their own products utterly depended on it, you'd get the positive feedback loop required to ensure that both support each other and grow.\n2.\u00a0 Actively put major resources into the gaming space, gain the confidence of developers by being seen to do this, and start listening more keenly to suggestions and being a little more open about what's being done to address issues. I think we need a dedicated engineering, marketing, and support team for the whole issue, yet I feel that Jeff and Chris are the only Sun employees who are even trying, and they only seem to be let out of their cubicles once they've said their prayers to Solaris and flayed themselves for eight hours over a hot spreadsheet.\n3.\u00a0 Hardware assault - the big, big question: Is there room for a Java-based console, and if not, why not? Perhaps Sun could even fund it by running it on a Sparc chip. If there's no room for a Java-based console, then truly Java is failing as the games platform of choice because it's the best place it could possibly be from a developer's perspective.\nErik D: I think the problem with .NET is that you are specifically choosing Microsoft and Microsoft alone and, in effect, you explicitly exclude a large market potential.\nThere's no way .NET will become available on a PlayStation, for example. Of course, we also have no Java (yet?) on PS, so currently development will stick to C++.\nJava does have a longer history than .NET and has proven itself in many more ways than .NET has, such as the obvious platform independence. If Java did spread to PS3 and XBOX, I'd say \"why C# and stick with PCs if we already have Java?\" if I were a development company.\nShawn K: I do see serious competition from this because MS will do whatever it can to move developers to Windows, games or otherwise. It doesn't matter if C#/.NET isn't exactly Java. They listen to their developers and changes get made. The fact that MS will make .NET work on the XBox and future XBoxes makes it all the more compelling.\nAlso, MS makes games. They make one C# game that's a hit and it's a done deal. Developers and publishers will look at C#, and the same dynamic I stated before. The only advantages for Java that I can see right now are:\n1.\u00a0 Huge existing developer base and knowledge base.\n2.\u00a0 Deep desire in game developers not to use MS stuff. That is a true phenomenon. Many working game developers I have talked to will try anything that is not MS tech.\nI would like to point out some major disadvantages as well.\n1.\u00a0 Licensing issues\n2.\u00a0 Media APIs\nJDJ: I know some of you are currently developing 3D games using Java. What was the reasoning behind your particular approach? Part 2 of this question is: Do you have any regrets? Are there any benefits to another approach that you wish you could take advantage of?\nCas P: First a quick mention about LWJGL. LWJGL is a modest library, still in development, and it aims to do very little other than to do things Java can't, like draw with OpenGL. There is a frequently misunderstood purpose to the library though. LWJGL is not an add-on library to J2SE to allow you to write OpenGL applications in Java. It was designed from the very beginning to be a portable console game library, even if it does end up being only completely theoretical. There's only one window in LWJGL, and we get a lot of requests for multiple windows. You can't even insist on a title bar and windowed mode; it's specifically meant to provide full screen-only games. We get a lot of requests to enable one to create lots of windows and have them behave as they should. But then it wouldn't run on a console, would it? We've deliberately created a platform based around what we know the hardware and underlying O/S need to be for gaming: a display, some speakers, a few input devices - nothing more.\nA side effect of LWJGL is it enables us to deploy games with less licensing restrictions: I can natively compile my games for Windows, which solves a bunch of other problems I won't go into here, and the demos come out under the magic 5MB download patience threshold.\nI developed LWJGL in the first place because I find the OpenGL API easy and, most important, fast. Java 3D is so far above my head I barely know where to begin. This is the problem a lot of developers have with Java 3D. If you want to learn 3D programming, Java 3D isn't the thing for you.\nThe other reason for LWJGL was simplicity. It's a platform; there's a specification to program to. It's a bit vague right now because we're only in alpha, but it removes a lot of uncertainty and hassle. I discovered Alien Flux ran on Linux without any trouble at all. I was more surprised than anyone. Once it's up and running, it behaves in exactly the same way as the Windows one. You wouldn't know you were running Linux underneath it because it's full screen. I have the same hope for PlayStation 3 one day. You'd never know it was written for the PC because all the developer has to use is an empty black screen, some speakers, and three input devices, not all of which will even be present.\nAnother reason for LWJGL is performance - speed and size. I can write absolutely optimized code for LWJGL and it runs in hardly any memory. Alien Flux would even run on a PlayStation's 32MB of RAM with a little tweaking to the graphics. There are no caveats with regard to performance; all the knowledge about performance is from OpenGL, so it's very widely understood. If you write a slow LWJGL game, it's because you've used OpenGL incorrectly, not because we've written some dicky code in the library.\nAnd no regrets. Not for one moment do I think I could have done it easier or better with any other technology. GL4Java, Direct3D, Java 3D - they're all deeply flawed when it comes to writing portable games in Java. My only real regret is that it's unlikely that we'll ever be endorsed by Sun. Although if I may make a prediction here: LWJGL is very likely to become the driving factor in Java games development.\nJeff K: In terms of using OGL incorrectly, that may be true for relatively simple games, but I'm not sure it carries into the A-lines games of today. OGL doesn't give you scene graph management; you're going to need to write that yourself. It doesn't give you physics; again you're going to have to code that. My guess is that you've covered about half of the core graphics issues with OGL, or about 5% of that 10% I talked about earlier. For some folks that may be the perfect bar, for others it may be too low. However, all that being said, I do agree that being able to directly write to OGL is a good thing regardless of what you do on the top of it.\nErik D: I'm not married to LWJGL \"till death do us part\" or anything, but I do have a love affair with it because I like the low-level approach. It doesn't restrict me in any way and I believe it might become a key factor for well-performing games written in Java.\nI've been playing a little with J3D, but I thought OpenGL was a lot easier to get into, and I like keeping in full control of things. Personally, I don't like the idea of J3D completely hiding details; of course, this isn't fully justified because I haven't done much with J3D, but I do strongly believe you should always be able to get as low level as necessary where games development is concerned and I've seen people struggle with J3D issues that they don't seem to be in control of.\nIf J3D had been built on top of an OpenGL wrapper, I'd probably have used that because it obviously addresses the problem of LWJGL, that there aren't any scene graph implementations available for it yet.\nShawn K: One point I'd like to bring to light is the scene graph versus immediate mode argument. We have to remember that Java 3D is implementing a scene graph, and Java/OGL is simply immediate mode access through Java. There are pros and cons to both and they're completely independent of Java and Java 3D. That argument has waged on for generations.\nWe chose J3D for several reasons.\n1.\u00a0 Ease of use. I never want to code immediate mode graphics if I can help it. It's like assembly for graphics. I use a high-level language and a high-level graphics system. I have also used scene graphs (from SGI to PC) outside of Java and plan to keep on doing so. Eventually the class I teach adopted RenderWare (a pseudo-scene graph API) once it was an acceptable practice.\nOne problem, due to the high level and ease of use, is that developers think they can make great 3D graphics projects and not know anything about 3D graphics. Sometimes the questions that are posted on the J3D list are atrocious. OGL is so low level you have to have a bit better programming skill as well as more 3D knowledge to use it. I experience this in my courses as well. The point being, when you know what you're doing, a scene graph or immediate mode are both great tools. When you don't know, a scene graph is a lot easier.\n2.\u00a0 Scene management. Just like some LWJGL users are finding, eventually you have to build a scene graph anyway for any scene bigger than a bread basket.\n3.\u00a0 Common data structures for public as well as private interchange. By this I mean, there's a thriving community of developers who code to J3D and easily trade huge code packages because they all use J3D classes and can be tested and integrated with very little modifications if written well. I'm not saying those actual packages will end up in a final production, but the integration-to-test phase is lightning fast. If all these developers were using OGL wrappers, the exchange would be close to nothing.\nLook at the OpenGL community as it is. There's a lot of trading but it is all techniques and code \"snippets,\" not loaders and behaviors or even collision systems because each OGL developer has his or her own scene graph equivalent structure on top of OGL that they will have to translate to for any techniques and code they get from the outside world.\n4.\u00a0 Better cross-platform than OGL alone. We used Java/J3D for a long time as a true cross-platform solution. Our students' laptops ran best under DirectX, and our classroom workstations under OpenGL. For their work it was no problem to use either install and everything worked. This is less of an issue today as the laptops have better support for OGL and the workstations for DirectX. The current Java/OGL world is still an OGL on Linux/Solaris/Windows world so J3D has a slight edge there.\n5.\u00a0 Legacy. It was the only way to do 3D in Java at the time we started.\nSIDEBAR\nThe players are:\nJason R Briggs: Java Developer's Journal contributing editor and your host; games player when he has time, games developer...on occasion.\nGerardo Dada: Metrowerks' product manager for CodeWarrior Wireless Studio.\nErik Duijs: Former musician/engineer/producer with a (games) programming passion, now an IT consultant. Switched careers for the sake of better pay as well as maintaining a passion for music instead of \"eating it\" so to speak. Author of the Java Emulation Framework (JEF) and CottAGE.\nShawn Kendall: Developed Java and Java 3D-based game technology demos for Full Sail, Sun Microsystems, and I.M.I., and displayed at GDC and SIGGRAPH since 1999. He has five years of 3D technology teaching experience, and in 2002 founded Immediate Mode Interactive, LLC, a game technology company dedicated to the development and application of Java technology in computer games ( www.imilabs.com ).\nJeff Kesselman: Architect for game technologies, Advanced Software Technologies Group at Sun. He worked on the JDK performance tuning team and co-wrote Java Platform Performance: Strategies and Tactics.\nChris Melissinos: Sun's chief gaming officer and responsible for driving an industry-wide movement toward Java technology-based game development and building infrastructure programs for massively connected game play.\nCaspian Rychlik-Prince: An IT consultant in the UK who for the last 10 years has specialized in client/server systems with RDBMS back ends. He has just released a new game, Alien Flux ( www.puppygames.net ).\nDoug Twilleager: Chief architect of the Java Games Initiative at Sun Microsystems. One of the architects of Java 3D, he has also worked in the graphics research group at Sun looking at advanced rendering techniques and programmable shading.\nDavid Yazel: VP of software development of trading systems and portfolio management systems at a leading financial investment company (by day), and by night a games developer for (and founder of) the Magicosm project (a 100% Java-based MMORPG).\nAbout The Author\nJason R. Briggs is a Java programmer and development manager for a wireless technology company, based in Auckland, New Zealand. He is also a contributing editor of Java Developer's Journal. jasonbriggs@sys-con.com\nAll Rights Reserved\nE-mail: info@sys-con.com\nJava and Java-based marks are trademarks or registered trademarks of Sun Microsystems, Inc. in the United States and other countries. SYS-CON Publications, Inc. is independent of Sun Microsystems, Inc.\n"}, {"score": 245.7107, "uuid": "60f8c238-fa22-56a7-bfac-a243af7e02d7", "index": "cw12", "trec_id": "clueweb12-1612wb-13-28615", "target_hostname": "www.gamedev.net", "target_uri": "http://www.gamedev.net/page/resources/_/technical/mobile-development/pocketpc-an-introduction-r1312", "page_rank": 1.1766075e-09, "spam_rank": 98, "title": "PocketPC: An Introduction - Mobile Development - Articles - Articles -", "snippet": "The designers <em>of</em> CE decided early on <em>to</em> focus on <em>portability</em> and small size <em>in</em> the design <em>of</em> CE, and it shows.", "explanation": null, "document": "Biplane Ace for Palm\nHow Do You Program for PocketPC?\nWell, you're in luck. Not only are there some very capable developer tools for PocketPC, they're available for a song. You can purchase Microsoft's eMbedded Visual Tools 3.0 CD from Microsoft for only the cost of shipping and handling. The package includes eMbedded Visual C++, eMbedded Visual Basic, and emulators for the platforms mentioned above.\nThe tools are very mature and robust. In fact, they're almost identical to their Windows-only brethren, Visual C++ 6.0 and Visual Basic 6.0. The biggest difference is that they do not generate native x86 Windows applications. The C++ compiler cross-compiles to the aforementioned processors, while eMbedded Visual Basic produces files that are interpreted by a VBScript-style interpreter on the target device.\nLet's dispense early on with Visual Basic for games, though. Since eMbedded Visual Basic produces programs that are interpreted by the PocketPC's rather rudimentary VBScript interpreter, eMbedded Visual Basic isn't really suitable for games. If you need a form-based data-collector or something to perform field calculations for you, it's ideal. For games, though, it's just not there. Let's concentrate on the eMbedded Visual C++.\nHow the compiler works\nThere are two ways to develop an app for PocketPC, and you will very likely be using both methods interchangeably.\nThe first is by compiling your game for a connected device, then uploading, running, and debugging the game over the connection (usually serial). While this sounds complicated, it's actually quite simple. eMbedded Visual C++ works through MS's ActiveSync software, which is the software used to connect your PocketPC to your computer to exchange data with your address book and calendar. If your PocketPC is connected via ActiveSync, you've done all that's necessary to develop for your device. Simply choose the processor that your device has and press the \"make\" button just as if you were making a standard Windows application. The file will be compiled, linked, and sent over to the device. Press the \"run\" button, and your app will pop up on the device's screen. Set a breakpoint in your code, and the code will stop when it gets to that point. Examine a variable in memory, and Visual C++ will get the value and show it to you on your main screen. Neat, huh?\nAs you may have already figured out, though, there is one chief disadvantage to this approach -- speed. While compiling the file and sending it over to the device happens at a reasonable speed, debugging is downright glacial. The device and eMbedded Visual C++ are constantly having to update each other as to the status of your running program. You'll probably want to save debugging on the device as a last resort to fix bugs that don't show up under the next method -- compiling for the PocketPC emulator.\nThe second method is to develop for the on-screen PocketPC emulator. Calling it an emulator, though, is a bit of a misnomer. Rather than make processor-emulators for the various processors out there, MS simply built a version of Windows CE that runs on an x86 processor. To compile for the emulator, you set the target processor as the x86 CE Emulator, press the \"make\" button, and eMbedded Visual C++ will generate a Windows CE app that runs on the x86 processor. Pressing the \"run\" button will then run your app in the on-screen Windows CE emulator.\nThe principal advantage to this approach is speed. Speed speed speed. Using the on-screen emulator, you can run an application under the debugger and it will run just as quickly as if you were debugging a native Windows application. Copying the app to the on-screen emulator and running is almost instantaneous. Developing an app for the on-screen emulator will make you feel right at home if you're used to developing standard Windows apps under Visual C++ 6.0.\nThere are plenty of disadvantages, though, to this approach. For one, you're compiling for a processor that simply doesn't exist in the PocketPC world. If a particular device has some picadillos germaine to its processor, you won't see them when it runs on the emulator. Also, the emulator takes on the capabilities of the compiling machine, so you'll likely be developing your app on a 24-bit screen even though there are no PocketPC's with 24-bit screens. Furthermore, your emulated app will likely be running much faster emulated than on the device, so you won't get a good feel for how your game plays if you develop solely for the emulator. Finally, the emulator only runs on Windows NT or Windows 2000 for reasons that will be clear later. If you have Windows 95/98/ME, you're stuck with developing on the connected device.\nMost PocketPC developers quickly find that they need to work between the two different methods to develop a PocketPC game. For the bulk of development, the on-screen emulator is the way to go. It's a great way to get your app up and running quickly, and debugging is a breeze. From time to time, though, you'll need to compile on the device so you can ensure that the graphics look right, the game is playing at a reasonable speed, and no bugs are creeping in that aren't showing up on the emulator. Thankfully, switching between one approach and another is as simple as choosing the target processor on the toolbar and recompiling.\nThe PocketPC API\nIf this all looks great, and you're chomping at the bit to convert your large-scale DirectDraw-based isometric RPG title to the PocketPC, there's something you need to know.\nThe PocketPC API is different from the Win32 API\nSorry to throw a bucket of cold water on your plans, but if you have grand designs on simply recompiling your code and having it work, it's not going to happen that easily. A significant chunk of the Win32 API functions (around 90% of 'em, actually) aren't there.\nHey, where's GlobalAlloc?\nOperating systems are evolutionary things. Every year a new version comes out with new capabilities, some of which supercede existing capabilities. The OS makers, though, often must leave antiquated function calls in place to keep from breaking old apps. Since there weren't going to be any old CE apps, the designers went through the Win32 API with a fine-toothed comb to prune it down to its bare essentials -- a library that would still allow you to create powerful apps, but without supporting a lot of antiquated function calls. Hence, if you're looking for AddAtom() or GetWindowWord(), you won't find them.\nAfter dumping the dead wood, the designers went through the list of similar, yet redundant functions. For the most part, if there existed several functions that did a similar job, they just kept the one or two that could best cover the capabilities of the rest. Hence, MoveTo() and LineTo() are gone, but PolyLine() is still there. CreateFont() is gone, but CreateFontIndirect() is still there. DrawText() was better than TextOut(), so DrawText() got to stay. You get the idea. Just be prepared, when developing a PocketPC app, to hunt for updated versions of some of your favorite API functions.\nYou can ignore Unicode no longer\nSomething else you're going to have to get used to is text-handling. Since Unicode is the way of the world, and supporting both ANSI and Unicode would take up more space than necessary, ANSI strings got the boot. All of the PocketPC functions that take strings are expecting Unicode strings. So don't type:\nMessageBox (hWnd, \"This is my first CE app\", \"Hello World\", MB_OK);\nYou'll just upset your compiler. What it wants to see is:\nMessageBox (hWnd, TEXT(\"This is my first CE app\"), TEXT(\"Hello World\"), MB_OK);\nThe TEXT-macro simply converts a string at compile-time to unicode format. This goes for every hard-coded string in your application, from window-class-names to filenames you pass to the file-handling commands. There are Unicode equivalents for all of your favorite string-handling functions, so don't get too upset. Just kiss the venerable old char * goodbye.\nDirect3D, DirectDraw, DirectInput, DirectPlay, and OpenGL\nPocketPC doesn't support them. In fact, the API functions that aren't part of the Kernel, Window, and GDI modules of Windows probably aren't there. While some extensions like Winsock are still around (supporting IR communication, cool eh?), many of the latter-day add-ons to Windows are nowhere to be found.\nDon't despair, though. There a couple of game-related technologies available that will help you ease the pain of working for the platform.\nGame Technologies\nWhile DirectX isn't there, you're not completely out of luck. There are some technologies that'll ease the pain of losing DirectX.\nGAPI\nGAPI, formally GameX, is a technology that MS licensed that allows direct framebuffer access for games in a reasonably portable way. It's without-a-doubt the fastest way to throw pixels on the screen, but it's got a couple of drawbacks.\nGAPI is simple. It's only ten function calls. After initializing GAPI with GXOpenDisplay(), you can call GXBeginDraw() to get a pointer to the framebuffer. GXGetDisplayProperties() returns a structure containing the properties of the display, including bits per pixel, width, height, X pitch, and Y pitch. The pitch values specify the distance between pixel values in the buffer, because a framebuffer is not necessarily a 240x320 array of 16-bit values. It's up to the hardware maker how the video memory is organized.\nIn addition to framebuffer access, GAPI gives you a relatively platform-neutral way of accessing the PocketPC's controls. This is important because while some handhelds like the Casio and the iPaq have nice little direction-pads, some like the new HP PocketPC decided to clone tha Palm's horrible four-horizontal-keys layout. GXGetDefaultKeys() returns a struct containing the standard key-values that PocketPC supports, so you can easily check to see if a key is down.\nWhile GAPI's strengths are that it is very simple and does the job it sets out to do, it has a couple of weaknesses. First off, it's propriatary. While there are GAPI DLL's available for Casio, Compaq, and HP, there aren't any such DLL's available for other models or form-factors, and you're beholden to Microsoft if any new PocketPC models come out.\nAnother problem with GAPI is that direct framebuffer access precludes all of the nice window commands. If you want to draw a line, some text, or stretch a bitmap, you're on your own.\nFinally, GAPI doesn't run on the emulator, which gets rid of some of the advantages of developing on-screen as mentioned in the previous article. Thankfully, though, an intrepid hacker wrote a GAPI DLL that indeed works on the emulator. It is available here .\nThe DIBSection API and CEAnim\nIf you don't need to throw pixels at the screen at the highest speed possible, and you want very good speed without worrying about what new platforms are coming out and whether or not GAPI will support them, you should look at the Win32 DIBSection API. It's been around since Windows 95, and it works.\nDIBSections are weird birds. Back in the days of Windows 3.1, there were only two different ways to handle bitmaps, DDB's and DIB's. DDB's (Device Dependent Bitmaps) are owned by the video driver and are in whatever format the driver prefers. They are very fast to display but have one gigantic drawback -- you can't change the bits once you've created the bitmap. If you want to change the bits, you need to create a new bitmap, which make it far less than optimal for displaying frames of animation. The second method is the Device Independent Bitmap. A DIB's memory is owned by your application, but drawing the bitmap to the screen requires the video driver to convert the bitmap to screen format, which makes displaying them much slower than DDB's.\nIn the latter days of Windows 3.1, Microsoft created the much-maligned WinG. WinG added a third bitmap type that combined the best of both worlds. You could modify the bits directly, and you could display them to the screen quickly. Several console games were ported using WinG, like Earthworm Jim and a few other scrolling platform-games.\nThe WinG API survived into Windows 95 as the DIBSection API, and it still exists today. Using CreateDIBSection(), you can create a buffer of memory that's shared between the application and video driver. You can change the bits as necessary and blit the buffer to the screen very quickly using the standard old BitBlt() command.\nCEAnim is an extensive class library for Windows CE by Random Software ( www.randomly.com ). It leverages the DIBSection API to the hilt to provide all kinds of animation effects, including sprite animation, alpha blending, dirty rectangle management, and palette management. On the whole, it's much more more extensive and high-level than GAPI.\nIn addition to graphics, CEAnim includes a library of common data structures and memory management functions. Best of all, though, is that it addresses a problem caused by the loss of DirectSound -- wave mixing. There's a sound class that can play multiple sounds at once so you don't have to cripple the sounds in your game.\nIt's certainly worth a look. Download it at ftp://www.randomly.c.../ceanim_src.zip . If anything, check out the author's CE offerings at the web address above to see the kind of things you can do.\nThe DOOM and Quake Engines\nDirect3D and OpenGL don't exist for PocketPC, but you're not out of luck if you're looking for 3D that fits in your pocket. Both Doom and Quake 1 have been ported to PocketPC, and you can use them to develop your own projects. The engines for both Doom and Quake are both freely available and use the Gnu Public License, so you can freely use them in your own projects -- even commercial ones!\nQuakePPC source code and binaries are available here . DoomCE source is available here . The terms of Id's licenses are available here .\nConclusion\nPocketPC's are cool. It's easy to develop for them. The development tools are robust and very inexpensive. While the whole of the Win32 API isn't there, there's enough to get around. And there are a few technologies that will help you develop games that rival what you see on the desktop.\nEnjoy!\n"}, {"score": 236.77643, "uuid": "b75a2e86-9cc9-5f54-b4f7-ecc469f26010", "index": "cw12", "trec_id": "clueweb12-0507wb-24-20527", "target_hostname": "www.ictsc.com", "target_uri": "http://www.ictsc.com/Linux_Gamers.htm", "page_rank": 1.1716491e-09, "spam_rank": 69, "title": "Linux Gamers - The ICT &amp; Security Company", "snippet": "<em>OpenGL</em> <em>is</em> the open source equivalent <em>to</em> <em>Direct3D</em>, a component <em>of</em> DirectX (Section 3.14). The important difference being that since <em>OpenGL</em> <em>is</em> open (and DirectX <em>is</em> closed), games written <em>in</em> <em>OpenGL</em> are much easier <em>to</em> port <em>to</em> and co-develop on Linux <em>than</em> games written using DirectX.", "explanation": null, "document": "12.3. Other Resources\n1. Administra\nIf you have ideas, corrections or questions relating to this HOWTO, please email me. By receiving feedback on this howto (even if I don't have the time to answer), you make me feel like I'm doing something useful. In turn, it motivates me to write more and add to this document. You can reach me at < p(at)dirac(dot)org >. My web page is http://www.dirac.org/p and my Linux pages are at http://www.dirac.org/linux . Please do send comments and suggestions for this howto. Even if I don't take your suggestions, your input is graciously received.\nI assume a working knowledge of Linux, so I use some topics like runlevels and modules without defining them. If there are enough questions (or even protests) I'll add more basic information to this document.\n1.1. Authorship and Copyright\nThis document is copyright (c) 2001-2002 Peter Jay Salzman, < p(at)dirac(dot)org >; 2003-2004 Peter Jay Salzman and Fr\u00ef\u00bf\u00bdd\u00ef\u00bf\u00bdric Delanoy. Permission is granted to copy, distribute and/or modify this document under the terms of the Open Software License, Version 1.1, except for the provisions I list in the next paragraph. I hate HOWTO's that include the license; it's a tree killer. You can read the OSL at http://opensource.org/licenses/osl-1.1.txt .\nIf you want to create a derivative work or publish this HOWTO for commercial purposes, I would appreciate it if you contact me first. This will give me a chance to give you the most recent version. I'd also appreciate either a copy of whatever it is you're doing or a spinach, garlic, mushroom, feta cheese and artichoke heart pizza.\n1.2. Acknowledgements\nThanks goes out to these people for extensive comments, corrections, and diffs. Their effort is above and beyond the call of duty:\nFr\u00ef\u00bf\u00bdd\u00ef\u00bf\u00bdric Delanoy, Moritz Muehlenhoff < jmm(at)Informatik(dot)uni-bremen(dot)de >, Mike Phillips, Ioan Rogers < buck(at)aiur(dot)co(dot)uk >\nI would also like to thank the following people for sending in comments and corrections. Without their help, there would be more typos and mistakes than you could shake a stick at:\nMichael McDonnell\n1.3. Latest Versions and Translations\nThe latest version can be found at http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/lgh/LG-HOWTO or http://www.dirac.org/linux/writing , but this is my own personal working copy. The version at my personal web site might be broken if I'm working on the HOWTO. The version at sourceforge is bleeding edge but guaranteed to be not broken, however it may have glitches, like unfinished paragraphs. :)\nThe most recent stable version can be found at http://www.tldp.org .\n1.3.1. Russian\nDmitry Samoyloff < dsamoyloff(at)yandex(dot)ru > is the maintainer of the Russian translation. The most recent version can be found at http://www.dirac.org/linux/writing .\n1.3.2. Hungarian\nL\u00ef\u00bf\u00bdszl\u00ef\u00bf\u00bd Daczi < dacas(at)korhaz(dot)rethy(dot)hu >, the Hungarian LDP coordinator, announced that a Hungarian translation was produced by Szilard Ivan, and is available at http://tldp.fsf.hu/HOWTO/Linux-Gamers-HOWTO-hu .\n2. Definitions: Types Of Games\nNot everyone knows the different types of games that are out there, so in an effort to form a common language that we can all use, I'll run through each game type and provide a very brief history.\n2.1. Arcade style\nAlthough arcade games had their heydey in the 80's, they are nonetheless very popular. Nothing will ever replace walking into a dark, crowded and noisy arcade gallery, popping a quarter into your favorite machine and playing an old fashioned game of Space Invaders. Arcade style games attempt to simulate the arcade games themselves. There is such a vast number of these things that it's nearly impossible to enumerate them all, but they include clones of Asteroids, Space Invaders, Pac-Man, Missile Command and Galaxian.\n2.2. Card, logic and board games\nComputer based card games simulate a card game like poker or solitaire. The program can simulate your opponent(s).\nLogic games usually simulate some well known logic puzzle like Master Mind or the game where you have put sliding numbered tiles in order inside a box.\nComputer based board games simulate some kind of board game you'd play on a table top with friends, like monopoly, Mille Bourne, chess or checkers. The program can simulate your opponent.\n2.3. Text Adventure (aka Interactive Fiction)\nOnce upon a time, when Apple ][, Commodore, and Atari ruled the world, text adventures were the game of choice of `intelligent folk'. You are given a scenario and can interact with the world you're placed in:\nYou are in a room.  It is pitch dark and you're likely to be eaten by a grue.\n    > Light lantern with match.\n    You light the lantern.  This room appears to be a kitchen.  There's a table with a\n    book in the center.  You also see an oven, refrigerator and a door leading east.\n    > Open the oven.\n    In the oven you see a brown paper bag.\n    > Take the bag.  Open the bag.  Close the oven.\n    Inside the bag is a some garlic and a cheese sandwich.  The oven door is now closed.\nBack then, text adventures were self contained executables on a disk or casette. These days there's usually a data file and an interpreter. The interpreter reads data files and provides the gaming interface. The data files are the actual game itself, similar to the relationship between first person shooters ( Section 2.7 ) and wad files.\nThe first adventure game was Adventure (actually \"ADVENT\", written on a PDP-1 in 1972). You can play Adventure yourself (actually, a descendent); it comes with \"bsd games\" on most Linux distros. Text adventures became popularized by Scott Adams ( Section 11.5 ) and reached their height of popularity in the late 80's with Infocom ( Section 11.4 ) which are also playable under Linux.\nAs computer graphics became easier and more powerful, text adventures gave rise to graphic adventures. The death of commercial interactive fiction more or less coincided with the bankruptcy of Infocom.\n2.4. Graphical Adventures\nGraphical adventures are, at heart, text adventures on steroids. The degree to which they use graphics varies widely. Back in the 80's, they were little more than text adventures which showed a screen of static graphics. When you picked up an item, the background would be redrawn without the item appearing. The canonical example would be the so-called `Hi-Res Adventures' like The Wizard And The Princess. Later on, the sophisticated graphical adventures had your character roaming around the screen, and you could even use a mouse, but the interface remained purely text.\nNext there are the `point and click adventures' which basically have no text interface at all, and often have dynamic graphics, like a cat wandering around the room while you're deciding what to do next. In these games, you point at an object (say, a book) and can choose from a pull-down list of functions. Kind of like object oriented adventuring. :) There aren't many graphical adventures written natively for Linux. The only one I can think of is Hopkins FBI (which happens to be my favorite game for Linux).\n2.5. Simulation (aka Sims)\nSimulations strive to immerse the player behind the controls of something they normally wouldn't have access to. This could be something real like a fighter jet or something imaginary like a mechanized warrior combat unit. In either case, sims strive for realism.\nSome sims have little or no strategy. They simply put you in a cockpit to give you the thrill of piloting a plane. Some are considerably complex, and there's often a fine line between sims and strats ( Section 2.6 ). A good example would be Heavy Gear III or Flight Gear. These days sims and strats are nearly indistinguishable, but a long time ago, sims were real time while strats were turn based. This is awkward for modern day use, since a game like Warcraft which everyone knows as a strat, would be a sim by definition.\n2.6. Strategy (aka Strats)\nStrategy games have their roots in old Avalon type board games like Panzer Leader and old war strategy games published by SSI. Generally, they simulate some kind of scenario. The scenario can be peaceful, like running a successful city (SimCity), or not, like illegal drug selling operation (DrugWars) or an all-out war strategy game like Myth II. The types of games usually take a long time to complete and require a lot of brainpower.\nStrats can be further divided into two classes: real time and turn based. Real time strats are based on the concept of you-snooze-you-lose. For example, you're managing a city and a fire erupts somewhere. The more time it takes for you mobilize the fire fighters, the more damage the fire does. Turn based strats are more like chess---the computer takes a turn and then the player takes a turn.\n2.7. First Person Shooter (aka FPS)\nWhat light through yonder window breaks? It must be the flash of the double barreled shotgun! We have a long and twisted history with FPS games which started when id Software open sourced code for Doom. The code base has forked and merged numerous times. Other previously closed engines opened up, many engines are playable via emulators, many commercial FPS games were released for Linux and there are quite a number of FPS engines which started life as open source projects. Although you may not be able to play your favorite FPS under Linux (Half-Life plays great under winex) Linux definitely has no deficiency here!\nFirst person shooters are characterized by two things. First, you pretty much blow up everything you see. Second, the action takes place in first person. That is, through the eyes of the character who's doing all the shooting. You may even see your hands or weapon at the bottom of the screen. They can be set in fantasy (Hexen), science fiction (Quake II), present day `real world' (Soldier Of Fortune) and many other settings.\nLike text adventures, FPS fit the engine/datafile format. The engine refers to the actual game itself (Doom, Quake, Heretic2) and plays out the maps and bad guys outlined by the datafile (doom2.wad, pak0.pak, etc). Many FPS games allow people to write their own non-commercial datafile. There are hundreds, even thousands of non-commercial Doom datafiles that you can download for free off the net. Often, companies release their engines to the open source community so we can hack and improve them. However, the original data files are kept proprietary. To this day, you still have to purchase doom.wad.\n2.8. Side Scrollers\nSide scrollers are similar to FPS but you view your character as a 2D figure who runs around various screens shooting at things or performing tasks. Examples would be Abuse for Linux and the original Duke Nukem. They don't necessarily have to be violent, like xscavenger, a clone of the old 8-bit game Lode Runner.\n2.9. Third Person Shooters\nSimilar to FPS, but you view your character in third person and in 3D. On modern third person shooters you can usually do some really kick-butt maneuvers like Jackie Chan style back flips and side rolls. The canonical example would be Tomb Raider. On the Linux platform, we have Heretic 2 and Heavy Metal FAKK2.\n2.10. Role Playing Game (aka RPG)\nAnyone who has played games like Dungeons & Dragons or Call of Cthulhu knows exactly what an RPG is. You play a character, sometimes more than one, characterized by traits (eg strength, dexterity), skills (eg explosives, basket weaving, mechanics) and properties (levels, cash). As you play, the character becomes more powerful and the game adjusts itself accordingly, so instead of fighting orcs, at high levels you start fighting black dragons. The rewards increase correspondingly. At low levels you might get some gold pieces as a reward for winning a battle. At high levels, you might get a magic sword or a kick-butt assault rifle.\nRPG's generally have a quest with a well defined ending. In nethack you need to retrieve the amulet of Yendor for your god. In Ultima II, you destroy the evil sorceress Minax. At some point, your character becomes powerful enough that you can `go for it' and try to complete the quest.\nWhile the insanely popular Ultima series, written by Richard Garriot (aka Lord British) for Origin, was not the first RPG, it popularized and propelled the RPG genre into mainstream. Ultima I was released in 1987 and was the game that launched 9 (depending on how you want to count them) very popular sequels, finishing with Ultima IX: Ascension. You can play Ultima VII under Linux with Exult ( Section 11.7 ).\nThe canonical RPG on Linux is Rogue (the ncurses library started life as a screen handling routine for Rogue!) and it has infinite variants like Zangband and Nethack (which has many variants itself). Some RPG's are quite complicated and great feats of programming. There seems to be a deficiency of commercial RPGs for Linux. Not counting the rogue variants, there's also a deficiency of open source RPGs too.\n3. Libraries\nWe'll run through the different gaming libraries you'll see under Linux.\n3.1. What is Glide2?\nGlide2 is a low level graphics API and driver that accesses 3D hardware accelerated functions on 3dfx's Voodoo I, II and III cards, under XFree86 3.x.\nA program can only use the special hardware accelerated features of these cards by using the Glide2 library in one of two ways:\ndirectly written using Glide2 (Myth II, Descent III)\nindirectly using Mesa built with a Glide2 backend to simulate OpenGL (Rune, Unreal Tournament)\n3dfx opened up the specifications and source code to the open source community. This allowed Daryll Strauss to port Glide2 to Linux which enabled XFree86 3.x users to use Voodoo I, II and III cards under Linux.\nSince Glide2 accesses the video card directly, Glide2 applications will either need to be run by root or be setuid root. A way around this was to create the kernel 3dfx module. This module (and its device file /dev/3dfx) allows Glide2 graphical hardware acceleration for non-root users of non-setuid applications.\nUnfortunately, Glide2 is also a dead issue. It's only used for Voodoo I, II, III boards (which are becoming outdated), under XFree86 3.x (most people use XFree86 4.x). And since 3dfx is now a defunct company, it's a sure bet that no more work will be done on Glide2 and no more games will be written using Glide2.\n3.2. What is Glide3?\nUnlike Glide2, Glide3 is not an API used for game programming. It exists only to support DRI on Voodoo III, IV and V boards under XFree86 4.x. None of the games which use Glide2 will work with Glide3. This shouldn't be a surprise since Glide2 and Glide3 support different video cards and different versions of XFree86. The only video card that can use both Glide2 (under XFree86 3.x) and Glide3 (under XFree86 4.x) is the Voodoo III. It's reported that a Voodoo III using Glide2 will outperform a Voodoo III using Glide3.\nWhen you use a Voodoo III, IV or V under XFree86 4.x, you want to use a version of Mesa (see Section 3.4 ) which was compiled to use Glide3 as a backend to ensure hardware accelerated OpenGL on your system.\n3.3. What is OpenGL?\nOpenGL is a high level graphics programming API originally developed by SGI, and it became an industry standard for 2D and 3D graphics programming. It's defined and maintained by the Architectural Revision Board (ARB), an organization which include representatives from SGI, IBM, DEC, and Microsoft. OpenGL provides a powerful, complete and generic feature set for 2D and 3D graphics operations.\nThere are 3 canonical parts to OpenGL:\nGL: The OpenGL core calls\nGLU: The utility calls\nGLUT: OS independent window event (mouse, keyboard, etc.) handler.\nOpenGL is not only an API, it's also an implementation, written by SGI. The implementation tries to use hardware acceleration for various graphics operations whenever available, which depends on what videocard you have in you computer. If hardware acceleration is not possible for a specific task, OpenGL falls back on software rendering. This means that when you get OpenGL from SGI, if you want any kind of hardware acceleration at all, it must be OpenGL written and compiled specifically for some graphics card. Otherwise, all you'll get is software rendering. The same thing is true for OpenGL clones, like Mesa.\nOpenGL is the open source equivalent to Direct3D, a component of DirectX ( Section 3.14 ). The important difference being that since OpenGL is open (and DirectX is closed), games written in OpenGL are much easier to port to and co-develop on Linux than games written using DirectX.\n3.4. What is Mesa?\nMesa < http://www.mesa3d.org > is a free implementation of the OpenGL API, designed and written by Brian Paul. While it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant OpenGL implementation conforming to the ARB specifications. It's reported that Mesa is even faster than SGI's own OpenGL implementation.\nJust like OpenGL, Mesa makes use of hardware acceleration whenever possible. When a particular graphics task isn't able to be hardware accelerated by the video card, it's software rendered; the task is done by your computer's CPU instead. This means that there are different builds of Mesa depending on what kind of video card you have. Each build uses a different library as a backend renderer. For example, if you have a Voodoo I, II or III card under XFree86 3.x, you'd use mesa+glide2 (written by David Bucciarelli) which is the Mesa implementation of OpenGL that uses Glide2 as a backend to render for graphical operations.\n3.5. What is DRI?\nGraphics rendering has 3 players: the client application (like Quake 3), the X server and the hardware (the graphics card). Previously, client applications were prohibited from writing directly to hardware, and there was a good reason for this. A program that is allowed to directly write to hardware can crash the system in any number of ways. Rather than trusting programmers to write totally bug free, cooperative programs that access hardware, Linux simply disallowed it. However, that changed under X 4.x with DRI (Direct Rendering Infrastructure < http://www.dri.sourceforge.net >. DRI allows X clients to write 3D rendering information directly to the video card in a safe and cooperative manner.\nDRI gets the X server out of the way so the 3D driver (Mesa or OpenGL) can talk directly to the hardware. This speeds things up. The 3D rendering information doesn't even have to be hardware accelerated. On a technical note, this has a number of virtues.\nVertex data doesn't have to be encoded/decoded via GLX.\nGraphics data isn't sent over a socket to the X server.\nOn uni-processor machines the CPU doesn't have to change context between XFree86 and its client to render the graphics.\n3.6. What is GLX?\nGLX is the X extension used by OpenGL programs, it is the glue between the platform independent OpenGL and platform dependent X.\n3.7. What is Utah GLX?\nUtah-GLX is the precursor to DRI. It makes some different design decisions regarding separation of data and methods of accessing the video card like relying on root access rather than creating the kernel infrastructure for secure access. It provides support for a few cards which are not well supported by DRI like the ATI Rage Pro family, S3 Virge (although anyone using this for gaming is, well, nuts), and an open source TNT/TNT2 driver (which is very incomplete). The TNT/TNT2 driver is based on reverse-engineering of the obfuscated source code release of the X 3.3 drivers by nVidia. However, they're really incomplete, and effectively, unusable.\n3.8. What is xlib?\nEvery once in awhile you'll see some sicko (said with respect) write a game in xlib. It is a set of C libraries which comprise the lowest level programming interface for XFree86. Any graphics programming in X ultimately makes use of the xlib library.\nIt's not an understatement to say that xlib is long winded, arcane and complicated. Because of this, there are lots of libraries like SDL ( Section 3.10 ) for 2D graphics, OpenGL ( Section 3.3 ) for 3D graphics and widget sets ( Section 3.9 ) for widgets within windows which hide the details of different aspects of xlib programming.\nWhile some games are written in xlib, like the Doom Editor Yadex, xlib itself is not a serious game writing library. Most games don't need the low-level interface that xlib provides. In addition, by using the higher level libraries, a game writer can develop his game on multiple platforms, even ones that don't use XFree86.\n3.9. What is a widget set?\nWidgets are objects that make up a GUI application's interface. They include things like text entry boxes, pulldown menus, slider bars, radio buttons and much more. A widget set is a collection of related widgets that are designed to have a common interface and a consistant \"feel\". Gtk is the canonical widget set on Linux, but there are many others like fltk (a small C++ widget set), Xaw, Qt (the widget set of KDE), and Motif (the widget set used by Netscape). Motif used to be the king of widget sets in the Unix world, but it was very expensive to license. The Open Group finally opened up Motif's license for open source operating systems, but it was too little too late. There are many completely open source widget sets which are more complete and much nicer looking than Motif, including Lesstif, a totally free Motif clone.\n3.10. What is SDL (Simple DirectMedia Layer)?\nSDL < http://www.libsdl.org > is a library by Sam Lantiga (graduate of UCD, yeah!). It's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling. It's LGPL'd and provides joystick and OpenGL support as well. Unlike xlib ( Section 3.8 ), SDL is very suited for game programming.\nThe most striking part of SDL is that it's a cross platform library. Except for a few details, a program written in SDL will compile under Linux, MS Windows, BeOS, MacOS, MacOS X, Solaris, IRIX, FreeBSD, QNX and OSF. There are SDL extensions written by various people to do things like handle any graphics format you care to mention, play mpegs, display truetype fonts, sprite handling and just about everything under the sun. SDL is an example of what all graphics libraries should strive for.\nSam had an ulterior motive for writing such a cool library. He was the lead programmer for Loki Software (he now codes for Blizzard Software), which used SDL in all of its games except for Quake3.\n3.11. What is GGI?\nGGI < http://www.ggi-project.org > is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications. LibGGI applications run on SVGAlib, fb, and X servers among others. Judging from their screenshots, this is quite a powerful library.\nApplications that use LibGGI directly include Heroes, Ultrapoint, Quake, and Berlin. Most applications that use SVGALib can be run on X or any other LibGGI backend by using a wrapper library which re-implements SVGALib ( Section 3.12 ) using LibGGI. SDL ( Section 3.10 ) and clanlib ( Section 3.15 ) applications can display on LibGGI but often the native drivers for these libraries are faster, however it's a good way to get SDL, clanlib, and SVGALib applications to run where they would not before.\nGGI has a sister project, KGI, which is developing a kernel-level alternative to systems like the linux framebuffer and the DRI. This project is much less far along than LibGGI itself, but promises to combine DRI-level speeds and the stability and security UNIX users expect.\n3.12. What is SVGAlib? Frame buffer? Console?\nThe console is the dark non-graphical screen you look at when your computer first boots up (and you don't have xdm or gdm running). This is opposed to the X environment which has all sorts of GUI things like xterms. It's a common misconception that X means graphics and console means no graphics. There are certainly graphics on the console-we will discuss the two most common ways to achieve this.\nSVGAlib is a graphics library that lets you draw graphics on the console. There are many graphical applications and games that use SVGAlib like zgv (a console graphical image viewer), prboom and hhexen. I happen to be a fan of this library and of graphical console games in general; they are extremely fast, fullscreen and compelling. There are three downsides to SVGAlib. First, SVGAlib executables need to be run by root or be setuid root, however, the library releases root status immediately after the executable begins to run. Secondly, SVGAlib is video card dependent-if your video card isn't supported by SVGAlib, you're out of luck. Third, SVGAlib is Linux only. Games written in SVGAlib will only work on Linux.\nFrame buffers are consoles implemented by a graphics mode rather than a BIOS text mode. Why simulate text mode in a graphical environment? This allows us to run graphical things in console, like allowing us to choose any font we want the console to display (which is normally set by BIOS). There's a good Framebuffer HOWTO available from LDP. Graphical console games written using the frame buffer suffer from the same deficiencies of the SVGA library: not all hardware is supported and the code will only run on Linux.\n3.13. What is OpenAL?\nOpenAL < http://www.openal.org > aims to be for sound what OpenGL is for graphics. It started as a joint project between Loki Software and Creative Labs, setting out to be a vendor neutral and cross platform API for audio - the audio equivalent of OpenGL ( Section 3.3 ). Loki is no longer in business, but Creative and the Open Source community have kept the project alive. It is licensed LGPL and the specs can be obtained for free from the OpenAL website. It has support from nVidia (nForce2/3 based motherboards come with OpenAL MS Windows libraries for the on-board audio), Apple has added OpenAL to their audio framework for OSX and it can also be found powering the Epic Games Unreal Engine\nCurrently, it's not all cross-platform goodness. There is almost no support for enhancements like EAX or any hardware acceleration on Linux, though it does it exist in the Windows implementation. However, if you have a Creative SoundBlaster or Audigy sound card (with an emu10x chip), and you use ALSA sound drivers, you can get OpenAL libraries from http://www.lost.org.uk that provide hardware acceleration and decent surround support.\n3.14. What is DirectX?\nDirectX is a collection of proprietary multimedia API's, first developed by Microsoft in 1995, for its various Windows OS's. It's a mistake to say something like \"DirectX is like OpenGL\" or \"DirectX is like SDL\", as is commonly said in DirectX tutorials. Multimedia API's are more centralized on Windows than they are on Linux. A more accurate statement would be something like \"DirectX is like DRI, OpenGL and SDL combined\". As of October 2004, the most recent version of DirectX is 9c. The components of DirectX are:\nDirectDraw\nDirectDraw gives direct access to video memory, like DRI, so 2D graphics can be blitted directly to the video card. DirectDraw is like the graphical component of SDL, but the direct video card access is done by DRI rather than SDL. This is why a game can easily take out a Windows system but should not take down a Linux system.\nDirect3D (D3D)\nDirect3D, like OpenGL, provides a 3D graphics API. Whereas OpenGL is open source, lower level and compiles under a multitude of operating systems, D3D is proprietary, higher level and only compiles on Windows. D3D first appeared in DirectX 2, released in 1996.\nDirectAudio\nDirectAudio is a combination of 2 audio API's, DirectSound and DirectMusic, which allows direct access to the sound card for sound and music playback.\nDirectInput\nDirectInput gives support for gaming input devices such as joysticks.\nDirectPlay\nDirectPlay gives support for simplified networking for multiplayer gaming.\nDirectShow\nDirectShow provides support for movie files like AVI and MPG. It was a separate API from DirectX, but was integrated with DirectX 8.\nDirectSetup\nThis API provides a way to install DirectX from within an application to simplify game installation.\nDepending on the version of DirectX you're talking about, DirectX support in winex ( Section 10.5.3 ) ranges from well supported to \"kind of\" supported. It's poorly supported by wine ( Section 10.5.1 ), barely supported by vmware ( Section 10.5.5 ) and unsupported by Win4Lin ( Section 10.5.4 ).\nOne comment about portability: Each component of DirectX has multiple corresponding library on Linux. Moreover, a game writer who uses libraries like OpenGL, GGI or SDL will write a game which will trivially compile on Windows, Linux and a multitude of other OS's. Yet game companies persist using DirectX and therefore limit their audience to Windows users only. If you're a game writer, please consider using cross platform libraries and stay away from DirectX.\nA company named realtechVR started an open source project, DirectX Port, < http://www.v3x.net/directx > which, like wine, provides a Direct3D emulation layer that implements Direct3D calls. The project was focused on the BeOS platform, but is now focused on MacOS and Linux. You can get the latest cvs from their sourceforge page at < http://sourceforge.net/projects/dxglwrap >.\n3.15. Clanlib\nClanLib is a medium level development kit. At its lowest level, it provides a platform independent (as much as that is possible in C++) way of dealing with display, sound, input, networking, files, threading and such. ClanLib builds a generic game development framework, giving you easy handling of resources, network object replication, graphical user interfaces (GUI) with theme support, game scripting and more.\n4. XFree86 and You\nIf you're going to game under X, it's crucial that you know a bit about X. The \"X Window User HOWTO\", and especially \"man XF86Config\" are required reading. Don't short change yourself; read them. They have an extremely high \"information to space\" ratio. Many problems can be fixed easily if you know your way around XF86Config (or XF86Config-4).\n4.1. Getting information about your X system\nWhether you're trying to diagnose an X problem or requesting help from a mailing list or Usenet newsgroup, you'll want to have as much information available as possible. These are a set of tools you can use to obtain that information.\n4.1.1. Probeonly\nOne of the best diagnostic tools and sources of information about your X system is probeonly output. To use it, kill X if it's already running and from a console, type:\nX -probeonly 2> X.out\nYes, that's a single dash; so much for standards. The output of X goes to stderr, so we have to redirect stderr with \"2>\" to a file named X.out. This file will have almost everything there is to know about your X system. It's crucial that you know the difference between the various markers you'll see in probeonly output:\n(--) probed              (**) from config file    (==) default setting\n    (++) from command line   (!!) notice              (II) informational\n    (WW) warning             (EE) error               (??) unknown.\nHere's an example of some information I gleaned from my output:\nI'm running at 16 bpp color:\n(**) TDFX(0): Depth 16, (--) framebuffer bpp 16\nX has detected what my videocard chipset and videoram are:\n(--) Chipset 3dfx Voodoo5 found\n    (--) TDFX(0): VideoRAM: 32768 kByte Mapping 65536 kByte\n4.1.2. Getting info about your setup: xvidtune\nxvidtune is your friend when your X screen is shifted a little bit too far to the right, or if the vertical length is too small to fit on your monitor. However, it's a great diagnostic tool also. It'll give you:\nthe hsync/vsync range specified in your XF86Config file\nthe 4 horizontal and 4 vertical numbers which defines your videomode (the 1st horizontal/vertical numbers gives the screen resolution). These 8 numbers will tell you which modeline your X uses. See the XFree86 Video Timings Howto for more information. Note that explicit modelines are no longer necessary, since XFree 4.0.1 and up computes modetimings automatically based on your monitor's and video card's capabilities. However, there may be times when you'll want to play around with mode timings, like for weird hardware or if want to tweak your display.\nthe \"dot clock\" your videocard is running at.\n4.1.3. Getting info about your setup: xwininfo\nxwininfo tells you all sorts of information about X windows. And actually, your \"background\" or \"root\" window is considered a window too. So when xwininfo asks you to click on the window you want the information on, click on your background. It'll tell you things like screen and window resolution, color depth, window gravity state (which gives a hint to the window manager about where to place new windows), backing store usage and more.\n4.1.4. Other sources of information\nxdpyinfo gives cool stuff, like X version and loaded extensions (invaluable when trying to see what's missing, like GLX, DRI, XFree86-VidMode, etc.).\n4.1.5. Getting information about your 3D system\nglxinfo gives lots of useful information about OpenGL like whether direct rendering enabled, the currently installed versions of glx and mesa, vendor/renderer strings, the GL library files being used and more.\n4.2. Playing Games In X Without a Window Manager\nWhen playing a game under X, you should consider starting X without a window manager (WM). Heavyweight WMs, like Enlightenment, or full-blown desktop environments like GNOME or KDE, may produce a noticeable slow down. Even lightweight WMs, like twm, rob your CPU of clock cycles (and in twm's case, even full screen games will have a frame around the window). Running a game without a WM or DE depends on how you access X. If you usually log in to a Virtual Console and start X with \"startx\" try the following:\nModify ~/.xinitrc, which tells X what to run upon starting. Here is what my .xinitrc looks like:\n#quake3 +set r_gldriver libGR.so.1\n      #exec ut\n      #lsdldoom -server 2\n      #exec tribes2\n      exec /usr/bin/enlightenment\nYou'll usually see a window or desktop manager being executed from this file (GNOME or KDE). Comment out the lines containing the WM or desktop manager with a pound sign (#) and place your game on a new line with any command line arguments you want to pass. If the game is not located in your $PATH, give its full path name.\nIf you log directly into X using gdm, then things are a little different. These instructions are for gdm 2.4 or greater. They *may* work with kde, but I cannot say for certain.\nFirst, check your gdm.conf (usually in /etc/X11/gdm or /etc/gdm) file for a line that says begins \"SessionDesktopDir=blah\". One of the directories listed as options should be \"/usr/share/xsessions\", and is the directory which will be used in this example. As root, change to the \"/usr/share/xsessions\" directory and take a look at its contents. It should contain some .desktop files, each corresponding to an entry you'll see in gdm's Session menu, e.g gnome.desktop, enlightenment.destop. This example will show you how to log in to Doom3. Copy any of the desktop files to \"doom3.desktop\" and open the new file in your favourite text editor. The file will be full of alternative languages, so cut out everything you don't want and make the file look like this:\n[Desktop Entry]\n      Encoding=UTF-8\n      Name=DOOM III\n      Comment=iD's Doom III\n      #if game is not in path, remember to put the full path here\n      Exec=/usr/games/doom3/doom3\n      # no icon yet, only the top three are currently used\n      Icon=\n      Type=Application\nSave the file and log out of your window manager. At the gdm login screen, you should now see \"DOOM III\" as an option in \"Sessions\". Naturally you can add a .desktop file for each game you have installed\n5. Various Topics\n5.1. Memory Type Range Registers\nStarting with Pentium class processors and including Athlon, K6-2 and other CPUs, there are Memory Type Range Registers (MTRR) which control how the processor accesses ranges of memory locations. Basically, it turns many smaller separate writes to the video card into a single write (a burst). This increases efficiency in writing to the video card and can speed up your graphics by 250% or more.\nSee /usr/src/linux/Documentation/mtrr.txt for details. Note that since this file was written, XFree86 has been patched to automatically detect your video RAM base address and size and set up the MTRRs.\n5.2. Milking performance from your system for all it's worth\nIf for some reason you're using X 3.3, follow the instructions given by mtrr.txt (see Section 5.1 ) to set up your MTRRs. X 4.0 does this automatically for you.\nIf you're playing a game under X, don't run a window manager, and certainly don't run a desktop manager like GNOME or KDE. See Section 4.2 for details.\nKill all non-essential processes (you'll have to do this as root) by using the startup scripts on your system. On Debian, the startup scripts for run-level 2 are located in /etc/rc2.d/. You can kill a service in an orderly manner by sending its startup script the `stop' command:\n# cd /etc/rc2.d\n    # ./ntpd stop\nAnother (radical) option is to simply put yourself in single-user mode with\n# telinit 1\nThis will even get rid of getty; your system will only be running whatever is absolutely crucial to its operation. You'll have something like 10 processes running. The downside is that you'll have to play the game as root. But your process table will be a ghost town, and all that extra CPU will go straight to your game.\n5.3. About libraries on Linux\nA common problem you'll see in gaming is a library file not being found. They're kind of mysterious and have funny names, so we'll go over libraries on Linux for a bit. There are two types of libraries, static and dynamic. When you compile a program, by default, gcc uses dynamic libraries, but you can make gcc use static libraries instead by using the -static switch. Unless you plan on compiling your games from source code, you'll mainly be interested in dynamic libraries.\n5.3.1. Dynamic libraries\nDynamic libraries, also called a \"shared library\", provide object code for an application while it's running. That is, code gets linked into the executable at run time, as opposed to compile time. They're analagous to the .dll's used by Windows. The program responsible for linking code \"on the fly\" is called /etc/ld.so, and the dynamic libraries themselves usually end with .so with a version number, like:\n/usr/lib/libSDL.so\n    /lib/libm.so.3\nWhen using gcc, you refer to these libraries by shaving off the strings lib, .so and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `place a memo inside the executable' that says to look at the files /usr/lib/libSDL.so and /lib/libm.so.3 whenever an SDL or math function is used.\n5.3.2. Static libraries\nIn contrast to dynamic libraries which provide code while the application runs, static libraries contain code which gets linked (inserted) into the program while it's being compiled. No code gets inserted at run time; the code is completely self-contained. Static libraries usually end with .a followed by a version number, like:\n/usr/lib/libSDL.a\n    /usr/lib/libm.a\nThe .a files are really an archive of a bunch of .o (object) files archived together, similar to a tar file. You can use the nm to see what functions a static library contains:\n% nm /usr/lib/libm.a\n    ...\n    e_atan2.o:\n    00000000 T __ieee754_atan2\n    \n    e_atanh.o:\n    00000000 T __ieee754_atanh\n    00000000 r half\n    00000010 r limit\n    00000018 r ln2_2\n    ...\nWhen using gcc, you refer to these libraries by shaving off the strings \"lib\", \".a\" and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `bolt on' code from /usr/lib/SDL.a and /usr/lib/libm.a whenever it sees a math function during the compilation process.\n5.3.3. How are library files found\nIf you compile your own games, your biggest problem with libraries will either be that gcc can't find a static library or perhaps the library doesn't exist on your system. When playing games from binary, your library woes will be either be that ld.so can't find the library or the library doesn't exist on your system. So it makes some sense to talk about how gcc and ld.so go about finding libraries in the first place.\ngcc looks for libraries in the ``standard system directories'' plus any directories you specify with the -L option. You can find what these standard system directories are with gcc -print-search-dirs\nld.so looks to a binary hash contained in a file named /etc/ld.so.cache for a list of directories that contain available dynamic libraries. Since it contains binary data, you cannot modify this file directly. However, the file is generated from a text file /etc/ld.so.conf which you can edit. This file contains a list of directories that you want ld.so to search for dynamic libraries. If you want to start putting dynamic libraries in /home/joecool/privatelibs, you'd add this directory to /etc/ld.so.conf. Your change doesn't actually make it into /etc/ld.so.cache until you run ldconfig; once it's run, ld.so will begin to look for libraries in your private directory.\nAlso, even if you just add extra libraries to your system, you must update ld.so.cache to reflect the presence of the new libraries.\n5.3.4. Finding Out What Libraries a Game Depends On\nMost commercial Linux games will be dynamically linked against various LGPL libraries, such as OpenAL or SDL. For these examples, Bioware's NeverWinter Nights < http://nwn.bioware.com > will be used.\nTo find out what libraries a game uses, we can use the \"ldd\" command. Cd to /usr/games/nwn, or wherever you installed it and take a look at the files. You should see a file called nwmain; this is the actual game binary. Type \"ldd nwmain\" and you'll see:\n$ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => not found\n       libSDL-1.2.so.0 => /usr/lib/libSDL-1.2.so.0 (0x40178000)\n       libc.so.6 => /lib/libc.so.6 (0x401ff000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40319000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x409f1000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x409f3000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a01000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40acd000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40ad1000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40b88000)\n       libasound.so.2 => /usr/lib/./libasound.so.2 (0x40b90000)\nldd shows all the libraries a dynamic executable relies on, and shows you where they are. It also \"pulls in\" the dependencies of the dependencies. For instance, while NWN does not itself depend on libnvidia-tls.so, the Nvidia supplied libGL on my system does.\nMissing libraries?\nIn the example above, we can see that nwmain wants libmss.so.6, and the linker cannot find it. Usually, a missing library is a crash waiting to happen. There is one other thing to consider though: The majority of games are actually launched by a \"wrapper\", a shell script that performs some magic prior to launching the game. In the case of NWN, the wrapper is called nwn. Let's take a look at that now:\n$ less nwn\n   #!/bin/sh\n   \n   # This script runs Neverwinter Nights from the current directory\n   \n   export SDL_MOUSE_RELATIVE=0\n   export SDL_VIDEO_X11_DGAMOUSE=0\n   \n   # If you do not wish to use the SDL library included in the package, remove\n   # ./lib from LD_LIBRARY_PATH\n   export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   \n   ./nwmain $@\nThis script sets up some environment variables, then launches the game binary with whatever command line options we added. The relevant part here is the environment variable called \"LD_LIBRARY_PATH\". This is a way of adding to the linkers search path. Try copying the line to your shell and seeing what happens when you re-run ldd.\n$ export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   $ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => ./miles/libmss.so.6 (0x40178000)\n       libSDL-1.2.so.0 => ./lib/libSDL-1.2.so.0 (0x401ec000)\n       libc.so.6 => /lib/libc.so.6 (0x4025e000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40378000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x40a50000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x40a52000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a60000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40b2c000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40b30000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40be7000)\nAs you can see, this gives us slighly different results. The NWN library directories have been prepended to the search path, so now the linker can find libmss.so.6 in the \"./miles\" directory, and also finds the local copy of libSDL first, no longer using the system copy.\nThere's another benefit of these scripts: they are easily edited to allow you to provide your own copy of a library. Any game-supplied copy of a library such as OpenAL or SDL is likely to be compiled for the lowest common denominator, probably i486 or i686. If you have a Pentium4 or an AthlonXP, you could compile you own version specifically for your processor. The compiler will try to optimise the resulting binary, giving some increase in performance. See the homepage for GCC for more information this at the GCC site.\nMaking NWN use your system copy is easy. It says so in the wrapper script! Remove \"./lib:\" from the LD_LIBRARY_PATH line, and you're good to go.\nAnother nice little trick is for games that use OpenAL for their sound output (e.g. Unreal based games: UT, Postal, Rune, etc.). Since the Open Sound System's (OSS) deprecation in favour of ALSA, all Linux distributions I've seen now ship with ALSA support as default, with OSS support actually being supplied via ALSA's compatability modules. The copies of openal.so distributed with games often do NOT support ALSA, so making the game use a copy compiled yourself will allow you to use ALSA natively.\n6. When Bad Things Happen To Good People\nOf course we can't cover every Bad Thing that happens, but I'll outline some items of common sense.\nThere are two types of bad things: random and repeatable. It's very difficult to diagnose or fix random problems that you don't have any control over when they happen or not. However, if the problem is repeatable \"it happens when I press the left arrow key twice\", then you're in business.\n6.1. RTFM!\nRead the friendly manual. The `manual' can take on a few forms. For open source games there's the readme files that come with the game. Commercial games will have a printed manual and maybe some readme files on the CD the game came on. Don't forget to browse the CD your game came on for helpful tips and advice.\nDon't forget the game's website. The game's author has probably seen people with your exact same problem many times over and might put information specific to that game on the website. A prime example of this is Loki Software's online FAQs located at http://faqs.lokigames.com .\n6.2. Look For Updates and Patches\nIf you're playing an open source game that you compiled, make sure you have the newest version by checking the game's website. If your game came from a distro make sure there's not an update rpm/deb for the game.\nCommercial game companies like Loki release patches for their games. Often a game will have MANY patches (Myth2) and some games are unplayable without them (Heretic2). Check the game's website for patches whether you have a problem running the game or not; there may be an update for a security problem that you may not even be aware of.\nBy the way, Loki now has a utility that searches for Loki Software on your hard drive and automatically updates them. Check out http://updates.lokigames.com .\n6.3. Newsgroups\nIf you don't know what netnews (Usenet) is, then this is definitely worth 30 minutes of your time to learn about. Install a newsreader. I prefer console tools more, so I use tin, but slrn is also popular. Netscape has a nice graphical \"point and click\" newsreader too.\nFor instance, I can browse Loki Software's news server with tin -g news.lokigames.com. You can also specify which news server to use using the $NNTP environment variable or with the file /etc/nntpserver.\n6.4. Google Group Search\nEvery post made to Usenet gets archived at Google's database at http://groups.google.com . This archive used to be at http://www.deja.com , but was bought by Google. Many people still know the archive as \"deja\".\nIt's almost certain that whatever problem you have with Linux, gaming related or not, has already been asked about and answered on Usenet. Not once, not twice, but many times over. If you don't understand the first response you see (or if it doesn't work), then try one of the other many replies. If the page is not in a language you can understand, there are many translation sites which will convert the text into whatever language you like, including http://www.freetranslation.com and http://translation.lycos.com . My web browser of choice, Opera (available at http://www.opera.com ) allows you to use the right mouse button to select a portion of text and left click the selection to translate it into another language. Very useful when a Google group search yields a page in German which looks useful and my wife (who reads German well) isn't around.\nThe Google group search has a basic and advanced search page. Don't bother with the simple search. The advanced search is at http://groups.google.com/advanced_group_search .\nIt's easy to use. For example, if my problem was that Quake III crashed everytime Lucy jumps, I would enter \"linux quake3 crash lucy jumps\" in the \"Find messages with all of the words\" textbox.\nThere are fields for which newsgroup you want to narrow your search to. Take the time to read and understand what each field means. I promise you. You won't be disappointed with this service. Use it, and you'll be a much happier person. Do note that they don't archive private newsgroups, like Loki Software's news server. However, so many people use Usenet, it almost doesn't matter.\n6.5. Debugging: call traces and core files\nThis is generally not something you'll do for commercial games. For open source games, you can help the author by giving a corefile or stack trace. Very quickly, a core file (aka core dump) is a file that holds the \"state\" of the program at the moment it crashes. It holds valuable clues for the programmer to the nature of the crash -- what caused it and what the program was doing when it happened. If you want to learn more about core files, I have a great gdb tutorial at http://www.dirac.org/linux .\nAt the *very* least, the author will be interested in the call stack when the game crashed. Here is how you can get the call stack at barf-time:\nSometimes distros set up their OS so that core files (which are mainly useful to programmers) aren't generated. The first step is to make your system allow unlimited coresizes:\nulimit -c unlimited\nYou will now have to recompile the program and pass the -g option to gcc (explaining this is beyond the scope of this document). Now, run the game and do whatever you did to crash the program and dump a core again. Run the debugger with the core file as the 2nd argument:\n$ gdb CoolGameExecutable core\nAnd at the (gdb) prompt, type \"backtrace\". You'll see something like:\n#0 printf (format=0x80484a4 \"z is %d.\\n\") at printf.c:30\n    #1 0x8048431 in display (z=5) at try1.c:11\n    #2 0x8048406 in main () at try1.c:6\nIt may be quite long, but use your mouse to cut and paste this information into a file. Email the author and tell him:\nThe game's name\nAny error message that appears on the screen when the game crashes.\nWhat causes the crash and whether it's a repeatable crash or not.\nThe call stack\nIf you have good bandwidth, ask the author if he would like the core file that his program dumped. If he says yes, then send it. Remember to ask first, because core files can get very, very big.\n6.6. Saved Games\nIf your game allows for saved games, then sending the author a copy of the saved game is useful because it helps the tech reproduce whatever is going wrong. For commercial games, this option is more fruitful than sending a core file or call stack since commercial games can't be recompiled to include debugging information. You should definitely ask before sending a save game file because they tend to be long, but gaming companies usually have lots of bandwidth. Mike Phillips (formerly of Loki Software) mentioned that sending in saved games to Loki is definitely a good thing.\nNeedless to say, this only applies if your game crashes reproducably at a certain point. If the game segfaults every time you run it, or is incredibly slow, a saved game file won't be of much help.\n6.7. What to do when a file or library isn't being found (better living through strace)\nSometimes you'll see error messages that indicate a file wasn't found. The file could be a library:\n% ./exult \n ./exult: error while loading shared library: libSDL-1.2.so.0: cannot load shared object\n file: No such file or directory\nor it could be some kind of data file, like a wad or map file:\n% qf-client-sdl  \n IP address 192.168.0.2:27001 UDP Initialize Error: W_LoadWadFile: couldn't load gfx.wad\nSuppose gfx.wad is already on my system, but couldn't be found because it isn't in the right directory. Then where IS the right directory? Wouldn't it be helpful to know where these programs looked for the missing files?\nThis is where strace shines. strace tells you what system calls are being made, with what arguments, and what their return values are. In my `Kernel Module Programming Guide' (due to be released to LDP soon), I outline everything you may want to know about strace. But here's a brief outline using the canonical example of what strace looks like. Give the command:\nstrace -o ./LS_LOG /bin/ls\nThe -o option sends strace's output to a file; here, LS_LOG. The last argument to strace is the program we're inspecting, here, \"ls\". Look at the contents of LS_LOG. Pretty impressive, eh? Here is a typical line:\nopen(\".\", O_RDONLY|O_NONBLOCK|0x18000)  = 4\nWe used the open() system call to open \".\" with various arguments, and the return value of the call is 4. What does this have to do with files not being found?\nSuppose I want to watch the StateOfMind demo because I can't ever seem to get enough of it. One day I try to run it and something bad happens:\n% ./mind.i86_linux.glibc2.1 \n    Loading & massaging...\n    Error:Can't open data file 'mind.dat'.\nLet's use strace to find out where the program was looking for the data file.\nstrace ./mind.i86_linux.glibc2.1 2> ./StateOfMind_LOG\nPulling out vim and searching for all occurrences of mind.dat, I find the following lines:\nopen(\"/usr/share/mind.dat\",O_RDONLY) = -1 ENOENT (No such file)\n    write(2, \"Error:\", 6Error:)   = 6\n    write(2, \"Can\\'t open data file \\'mind.dat\\'.\"..., ) = 33\nIt was looking for mind.dat in only one directory. Clearly, mind.dat isn't in /usr/share. Now we can try to locate mind.dat and move it into /usr/share, or better, create a symbolic link.\nThis method works for libraries too. Suppose the library libmp3.so.2 is in /usr/local/include but your new game \"Kill-Metallica\" can't find it. You can use strace to determine where Kill-Metallica was looking for the library and make a symlink from /usr/local/include/libmp3.so.2 to wherever Kill-Metallica was looking for the library file.\nstrace is a very powerful utility. When diagnosing why things aren't being found, it's your best ally, and is even faster than looking at source code. As a last note, you can't look up information in source code of commercial games from Lokisoft or Tribsoft. But you can still use strace with them!\n6.8. Hosed consoles\nSometimes a game will exit abnormally and your console will get `hosed'. There are a few definitions of a hosed console. The text characters could look like gibberish. Your normally nice black screen could look like a quasi-graphics screen. When you press ENTER, a newline doesn't get echo'ed to the screen. Sometimes, certain keys of the keyboard won't respond. Logging out and back in don't always work, but there are a few things that might:\nIf you don't see any character on the screen as you type in, your terminal settings may be wrong. Try \"stty echo\". This should let input characters echo again.\nAt the prompt, type \"reset\". This should clear up many problems, including consoles hosed by an SVGAlib or ncurses based game.\nTry running the game again and normally. Once I had to kill Quake III in a hurry, so I performed a Ctl-Alt-Backspace. The console was hosed with a quasi-graphics screen. Running Quake III and quitting normally fixed the problem.\nThe commands deallocvt and openvt will work for most of the other problems you'll have. deallocvt N kills terminal N entirely, so that Alt-FN doesn't even work anymore. openvt -c N starts it back up.\nIf certain keys on your keyboard don't work, be creative. If you want to reboot but the `o' key doesn't work, try using halt. One method I've come up with is typing a command at the prompt and using characters on the screen with mouse cut/paste. For example, you can type \"ps ax\", and you're sure to have an `h', `a', `l' and a `t' somewhere on the screen. You can use the mouse to cut and paste the word \"halt\".\nThe most regrettable option is a reboot. If you can, an orderly shutdown is preferable; use \"halt\" or \"shutdown\". If you can't, ssh in from a another machine. That sometimes works when your console is very badly hosed. In the worst case scenario, hit the reset or power switch.\nNote that if you use a journalling filesystem like ext3, reiserfs or xfs, hitting the power switch isn't all that bad. You're still supposed to shutdown in an orderly manner, but the filesystem integrity will be maintained. You won't normally see an fsck for the partitions that use the journalling filesystem.\n6.9. Locked System\nWhen a computer \"locks\", also called \"hung\", the keyboard and mouse become completely unresponsive. This is a direct consequence of a bug in the Linux kernel. While Linux is known for stability, these things do happen, especiallly for gaming which entails highly synchronized hardware events which occur very fast, even to a computer. When a computer locks, it can be a \"hard lock\", meaning the kernel has completely stopped functioning. This often indicates misbehaving or faulty hardware. There's no recovery from this kind of lock other than pressing the reset or power button. The lock can also be a \"soft lock\", meaning that the kernel is still functioning in some capacity. It's possible to recover from this gracefully.\nThe first thing you should try is to hit control-alt-backspace which kills X. If you gain control of your system, the kernel wasn't really locked in the first place. If this didn't work after a few seconds, you'll definitely want to reboot the system using the following instructions.\nUse control-alt-delete to reboot the system. You'll know this worked if you hear the computer beep after a few seconds (this is BIOS saying \"I'm OK\" during a power on cycle).\nLog into another system and ssh into the hung system. If you can ssh in, reboot or halt the system.\nIf you can't ssh into the system, you'll need to use the \"magic SysRq key\" which is documented in /usr/src/linux/Documentation/sysrq.txt. Here's a summary for the x86 architecture (see the documentation for other architectures). Note if your keyboard doesn't have a SysRq key, use the PrintScreen key:\nHit alt-SysRq-s. This will attempt to sync your mounted filesystems so that changes to files get flushed to disk. You may hear disk activity. If you're looking at a console, the system should print the devices which were flushed.\nA few seconds later, hit alt-SysRq-u. This will attempt to remount all your mounted filesystems as read-only). You should hear disk activity. If you're looking at a console, the system will print the devices which were remounted.\nA few seconds later, use alt-SysRq-b to reboot the system.\nYou can hit alt-SysRq-h for a very terse help screen.\nTo use the magic SysRq key, your kernel needs to have been compiled with magic SysRq support. You'll find this option under \"Kernel Hacking | Kernel Debugging | Magic SysRq key\" in whatever kernel config menu you like to use. If the magic SysRq key sequence doesn't shut your system down gracefully, your kernel has crashed hard and you'll need to use the reset or power button to recover.\n7. Video Cards\n7.1. History\nOnce upon a time, a company in San Jose, California named 3dfx Interactive was king of the gaming video card market. In October 1996 they released the Voodoo I, which was a phenomenal success. It was the first hardware accelerated card, but only rendered 3D; it had to be piggybacked with a 2D video card. The idea was that 2D rendering was handled by a high quality 2D video card (Matrox was immensely popular at the time) but 3D information (see Glide2, Section 3.1 ) would be passed to the Voodoo I and rendered, using the Voodoo's fast hardware to perform the necessary graphics calculations. They released the Voodoo Rush in April 1996. It should've been a more powerful card, with a 50MHz GPU and 8MB of RAM. Even better, it was their first combined 2D/3D card, meaning that it freed up a valuable PCI slot (most PC's only had a couple of PCI slots back then) but the Rush wasn't as popular. 3dfx removed the multi-texturing unit from the Rush, and it was outperformed by the Voodoo I. At the time, ATI had their Rage series and nVidia had their Riva 128, but the Voodoo I blew them all away.\nThis was a good time for Linux. id Software's open sourced the Doom codebase and ported Quake I to Linux (December 1996). We were getting our first tastes of real commercial gaming. Life was simple: you purchased a Voodoo. And it felt good, because 3dfx open sourced their drivers. The king of video cards worked with Linux developers. Not only did we have the best video cards, but the drivers were all open source.\nIn March 1998, 3dfx released their Voodoo II, with its 3.6GB/sec memory bandwith, 12MB of video memory and 90MHz core. It supported resolutions up to 1024x768. This was 3dfx in its heyday. Like the Voodoo I, the Voodoo II was a 3D only card, and piggy backed with a 2D video card. The Voodoo Banshee was released in September 1998 as a combined 2D/3D card, like the Rush. Despite the faster 100MHz core, the Banshee was outperformed by the Voodoo II because its multi-texturing unit was removed, like with the Rush. And again like the Rush, it wasn't popular. But 3dfx reigned supreme, and nobody could touch them.\nIn April 1999, the Voodoo III was released. There were a number of Voodoo III's, ranging from a 143MHz core speed to 183MHz. There were TV-out versions. There were PCI and AGP versions (it was the first AGP video card). It was another success, but 3dfx began to lose ground to nVidia, which released their TNT 2. The TNT 2 outperformed the Voodoo II, and accelerated 3D graphics at full 32 bit color, while the Voodoo's were stuck at 16 bit color. But life was still good for Linux. We had a card that was almost neck-to-neck with nVidia, our drivers were open source, and in December 1999, id Software gave us a huge gift: they open sourced the Quake I codebase.\nThen nVidia released the GeForce 256 in October 1999. 3dfx's Voodoo IV, its direct competitor, was about a year late which is very bad when you're competing for a bleeding edge market. While nVidia was putting real R&D into their cards, 3dfx was simply adding more and faster RAM. The Voodoo IV and V rendered in full 32bpp color, had great AA support ( Section 7.4.3 ), featured a 2nd GPU, more memory, and was arguably the king of of video cards. However, 3dfx's late release of the Voodoo IV and V coupled with the fact that the GeForce could be had for half the price meant that 3dfx was sinking fast. For Linux, the newest Voodoo's could only accelerate at 16 and 24 bit color. Worse still, the Voodoo V's 2nd GPU was unused by the Linux driver (and to this day, the Voodoo V is functionally equivalent to the single GPU Voodoo IV on Linux). Most Windows users were switching to nVidia, and despite the fact that the nVidia drivers were proprietary, even Linux users began to jump onto the nVidia bandwagon. VA Linux, the largest Linux server vendor, put nVidia into their machines.\nThen in April 2000, 3dfx was attacked on a different front: ATI started releasing their first generation Radeons. Until this point, ATI had always been an innovative (they developed their own 3D acceleration chips in 1996, about the same time as 3dfx), but sleepy graphics chipset manufacturer. The Radeons were their first 3D accelerated card that gamers took any real serious interest in. Their Radeons trounced both nVidia and 3dfx. They worked with Linux developers, open sourced all their drivers and were hailed as the great hope for Linux gaming. nVidia came back with fists swinging, and this was all too much for 3dfx. Between losing the benchmark wars to the GeForce and Radeon, their lateness with new cards and high prices, 3dfx lost its market share and didn't have the funds to stay into business. On April 18 2001, they sold most of their assets and technology to nVidia, and in October 2002, they finally declared bankruptcy.\nThe demise of 3dfx was quite sudden and a slap in the face to the open source community. I still remember my friend Gabe Rosa emailing me with just \"Look at /.\" and seeing the news. It was the 2nd worst day for Linux gaming (the 1st being the demise of Loki). And it was also a shame. 3dfx was getting ready to release a new Voodoo V featuring 4 GPU's which would've trounced the ATI and nVidia offerings, as well as a new card code named \"Rampage\" which reportedly would've put them firmly back as the king of the hill. There are reports that the Rampage's technology (which was sold to nVidia) went into the GeForce 5900. Not too shabby for 3 year old technology!\nAt first, things were still simple. Linux gamers would either keep their open source Voodoos, get an open source Radeon or a closed source GeForce. However, with bigger and better games on the horizon, it was only a matter of time before the Voodoos would no longer be a viable graphics card for modern gaming. People were still using Voodoo's, but they were essentially out of the game at this point.\nATI started to release a tremendous number of versions of each video card, and keeping up with them and their terminology started to become very difficult. ATI, together with nVidia, played king of hill. Their products have been neck to neck ever since, with GeForce taking the lead a bit more times than the Radeon. But the Radeon's drivers were open source, so many Linux users stuck by them. Then things got even more complicated.\nATI started becoming more and more reluctant to open source drivers for their new releases, and suddenly, it wasn't clear who the \"good guy\" was anymore. nVidia's party line was they license some of their GL code from another company, and is thus non-releasable. Presumably, ATI doesn't want to release drivers to keep their trade secrets, well, a secret. And it gets worse. The ATI Linux drivers have been plagued by extremely poor performance. Even when an ATI offering is better than the current GeForce offering for Windows, the card is always trounced by GeForce on Linux. Because of the ATI Linux driver woes, Linux users cannot use MS Windows based benchmarks or card stats. They simply don't apply to us. And that's pretty much where we are right now.\nAs a last note, the only systematic Linux video card benchmarking effort I'm aware of was done, unfortunately, in March 2001, between a Radeon 32 DDR and a GeForce 2. You can read it for yourself at http://www.linuxhardware.org/features/01/03/19/0357219.shtml , but conclusion is that the GeForce 2 firmly and soundly trounced the Radeon 32 DDR.\n7.2. Current Status (1 March 2004)\nnVidia's latest offering is the GeForce 5900, based on the NV35 chipset. It's well supported by Linux with high quality but proprietary drivers. nVidia uses a convenient combined driver architecture; their driver will support the TNT 2 all the way up to the GeForce 5900. Although their drivers are closed source, as a company, nVidia has been supportive and good to Linux users.\nATI's has worked with Linux developers for their Radeons up to and including the Radeon 9200, which have 2D and 3D support in XFree86. I'm not entirely sure of the quality of these open source drivers, however, Soldier of Fortune I and Heavy Metal still have opaque texture problems under first generation Radeons. Beyond the 9200, you need to use ATI's binary only proprietary drivers, available in rpm format from ATI's website. It's claimed that these drivers are piss poor; a friend of mine claims his GeForce 4400 outperforms his Radeon 9700 pro. That's shameful.\nOn paper, and in the Windows benchmarks, the Radeon 9800 trounces the ill-conceived GeForce 5800 and slightly edges out the GeForce 5900. On paper, it's simply the more impressive card. But again, the driver issue makes this information unusable for us. If you have your heart set to buy the best card for Linux, you'll want to go with the GeForce 5900.\n7.2.1. SVGAlib Support\nAs of June 2002, SVGAlib support Radeon cards is shaky. Developers have reported that SVGAlib works on the Radeon 7500, Radeon QD (64MB DDR model) but has problems on the Radeon VE.\nI have no information about SVGAlib and the GeForce cards.\n7.3. Which Video Card Should I Buy? (1 March 2004)\nThe answer was very difficult last year, but here's my take on it these days:\nAll GeForce cards require a proprietary driver which will \"taint\" your kernel. However, all ATI cards beyond the Radeon 9200 also require a proprietary driver that will \"taint\" your kernel as well.\nnVidia has proven that they care enough about Linux to write and maintain current and very high quality drivers for Linux. Even when ATI open sourced its video card driver, they played the \"we'll make Linux developers write our drivers for us\" game. Their current proprietary drivers are below par.\nThe current Radeon 9800 barely beats out the GeForce 5900 in benchmarks and card specs, but Linux users won't benefit from this because of driver issues..\nATI has a very long history of dropping support for hardware as fast as they can get away with it.\nOn MS Windows, when the GeForce beat out its main competing Radeon, the review claimed that the Radeon generally had better visuals. I have no idea how this translates to Linux.\nDon't get the GeForce 5800. Card reviews claim that it has some serious heat, noise, and dust issues. It's informally called the \"dust buster\" because of noise its fan makes.\nIf you absolutely only want open source drivers on your system, the Radeon 9200 is the best card you can buy.\nIf you have a Linux/Windows dual boot, consider either the Radeon 9800 or the GeForce 5900. The Radeon will be slightly stronger on Windows. The GeForce will be stronger on Linux.\nIf you have a Linux only system, the GeForce 5900 is your best bet. As of today, the 256MB version comes in at a whopping $350, however, the 128MB version is more reasonable.\n7.4. Definitions: Video Card and 3D Terminology\nWe'll cover video card and 3D graphics terminology. This material isn't crucial to actually getting a game working, but may help in deciding what hardware and software options are best for you.\n7.4.1. Textures\nA rendered scene is basically made up of polygons and lines. A texture is a 2D image (usually a bitmap) covering the polygons of a 3D world. Think of it as a coat of paint for the polygons.\n7.4.2. T&L: Transform and Lighting\nThe T&L is the process of translating all the 3D world information (position, distance, and light sources) into the 2D image that is actually displayed on screen.\n7.4.3. AA: Anti Aliasing\nAnti aliasing is the smoothing of jagged edges along a rendered curve or polygon. Pixels are rectangular objects, so drawing an angled line or curve with them results in a 'stair step' effect, also called the 'jaggies'. This is when pixels make, what should be a smooth curve or line, jagged. AA uses CPU intensive filtering to smooth out these jagged edges. This improves a game's visuals, but can also dramatically degrade performance.\nAA is used in a number of situations. For instance, when you magnify a picture, you'll notice lines that were once smooth become jagged (try it with The Gimp). Font rendering is another big application for AA.\nAA can be done either by the application itself (as with The Gimp or the XFree86 font system) or by hardware, if your video card supports it. Since AA is CPU intensive, it's more desirable to perform it in hardware, but if we're talking about semi-static applications, like The Gimp, this really isn't an issue. For dynamic situations, like games, doing AA in hardware can be crucial.\n7.4.4. FSAA: Full Screen Anti-Aliasing\nFSAA usually involves drawing a magnified version of the entire screen in a separate framebuffer, performing AA on the entire image and rescaling it back to the normal resolution. As you can imagine, this is extremely CPU intensive. You will never see non hardware accelerated FSAA.\n7.4.5. Mip Mapping\nMip mapping is a technique where several scaled copies of the same texture are stored in the video card memory to represent the texture at different distances. When the texture is far away a smaller version of the texture (mip map) is used. When the texture is near, a bigger one is used. Mip mapping can be used regardless of filtering method ( Section 7.4.6 ). Mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.\n7.4.6. Texture Filtering\nTexture filtering is the fundamental feature required to present sweet 3D graphics. It's used for a number of purposes, like making adjacent textures blend smoothly and making textures viewed from an angle (think of looking at a billboard from an extreme angle) look realistic. There are several common texture filtering techniques including point-sampling, bilinear, trilinear and anisotropic filtering.\nWhen I talk about 'performance hits', keep in mind that the performance hit depends on what resolution you're running at. For instance, at a low resolution you may get only a very slight hit by using trilinear filtering instead of bilinear filtering. But at high resolutions, the performance hit may be enormous. Also, I'm not aware of any card that uses anisotropic texture filtering. TNT drivers claim they do, but I've read that these drivers still use trilinear filtering when actually rendering an image to the screen.\n7.4.6.1. Point Sampling Texture Filtering\nPoint sampling is rare these days, but if you run a game with 'software rendering' (which you'd need to do if you run a 3D accelerated game without a 3D accelerated board) you're likely to see it used.\n7.4.6.2. Bilinear Texture Filtering\nBilinear filtering is a computationally cheap but low quality texture filtering. It approximates the gaps between textures by sampling the color of the four closest (above, below, left and right) texels. All modern 3D accelerated video cards can do bilinear filtering in hardware with no performance hit.\n7.4.6.3. Trilinear Texture Filtering\nTrilinear filtering is a high quality bilinear filter which uses the four closest pixels in the second most suitable mip map to produce smoother transitions between mip map levels. Trilinear filtering samples eight pixels and interpolates them before rendering. Trilinear filtering always uses mip mapping. Trilinear filtering eliminates the banding effect that appears between adjacent mip map levels. Most modern 3D accelerated video cards can do trilinear filtering in hardware with no performance hit.\n7.4.6.4. Anisotropic Texture Filtering\nAnisotropic filtering is the best but most CPU intensive of the three common texture filtering methods. Trilinear filtering is capable of producing fine visuals, but it only samples from a square area which in some cases is not the ideal method. Anisotropic (meaning 'from any direction') samples from more than 8 pixels. The number of sampled pixels and which sampled pixels it uses depends on the viewing angle of the surface relative to your screen. It shines when viewing alphanumeric characters at an angle.\n7.4.7. Z Buffering\nA Z buffer is a portion of RAM which represents the distance between the viewer (you) and each pixel of an object. Many modern 3D accelerated cards have a Z buffer in their video RAM, which speeds things up considerably, but Z buffering can also be done by the application's rendering engine. However, this sort of thing clearly should be done in hardware wherever possible.\nEvery object has a stacking order, like a deck of cards. When objects are rendered into a 2D frame buffer, the rendering engine removes hidden surfaces by using the Z buffer. There are two approaches to this. Dumb engines draw far objects first and close objects last, obscuring objects below them in the Z buffer. Smart engines calculate what portions of objects will be obscured by objects above them and simply not render the portions that you won't see anyhow. For complicated textures this is a huge savings in processor work.\n8. Sound\n8.1. Which sound card is best?\nBy the word \"best\" I mean best for gaming. Gamers want high quality sound for our games with the least amount of tinkering. On the other hand, a musician would have a very different concept of what \"best sound card\" would mean. If you're a musician, you might want to check out the Linux Audio Quality HOWTO .\nNow that Linux is beginning to mature, this question isn't as important as it used to be. Once upon a time, soundcards without onboard MIDI chips (most PCI sound cards) didn't do MIDI. This was mostly a problem for things like xdoom or lxdoom using musserv. These days we have MIDI emulators like Timidity and libraries like SDL which don't require hardware MIDI support. Frankly, I've had many cards and I can't tell the difference between any of them for gaming. If you want to do things like convert a record LP to digital format, then your choice of a soundcard with a professional grade A/D converter is absolutely crucial. For this HOWTO, we'll assume that you're more of a gamer than a studio recording engineer.\nYour decision should be based on what will be the easiest to configure. If you already have a card and it works well, that's good enough. If you're in the market to buy a sound card, get something that will take you a second to configure. PCI cards are much easier to deal with than ISA since you don't need to tell their drivers about which system resources (IRQ, DMA, I/O addresses) to use. Some ISA cards ARE plug-n-play, like the Creative AWE-64, and the Linux kernel has come a long way in auto configuring them.\nMy personal recommendation is any card which has the es1370 or es1371 chip, which uses the es1370 and es1371 sound drivers on Linux. These cards include the older Ensoniq es1370 and newer Creative PCI-128. These cards are extremely cheap and trivial to get working under Linux.\nI used to be a fan of the Creative Soundblaster AWE 32, AWE 64 and AWE 64 gold soundcards. These ISA PnP cards are well supported by both OSS and Alsa. They all use the same E-mu 8000 synthesis chip which enables them to play 32 voices simultaneously (they have 32 \"channels\"). A few notes: First, the Soundblaster AWE HOWTO is very out of date. Second, the AWE 64 and AWE 64 gold can play 64 voices simultaneously, but this is done in software. Creative never released a Linux driver for these cards (and they never released programming information to Linux developers), so Linux users cannot use the extra 32 channels on the AWE 64 and AWE 64 gold. As far Linux users are concerned, all three cards are completely identical (although the AWE 64 gold has gold plated connectors, which are better for sound quality than the more common steel connectors).\nThe Creative Soundblaster Live! is an extremely popular PCI sound card these days. I've never owned one, so I cannot comment here. However, there have been numerous reports about serious problems with the Live! and AMD motherboards that use the 686b southbridge. A google search should turn up alot of information on this problem.\nA more relevent issue is speakers, but even here the difference isn't huge. I've had expensive Altec Lansing speakers perform only slightly better than el-cheapo speakers. You get what you pay for with speakers, but don't expect a huge difference. You'll want to get something with a separate sub-woofer; this does make a difference at a cost of extra power and connector wires.\n8.2. Why isn't my sound working?\nFirst of all, it's probably not the game, it's probably your setup. AFAIK, there are 3 options to getting a sound card configured under Linux: the free OSS sound drivers that come with the Linux kernel, the Alsa drivers and the commercial OSS sound drivers. Personally, I prefer the free OSS drivers, but many people swear by Alsa. The commercial OSS drivers are good when you're having trouble getting your sound card to work by free methods. Don't discount them; they're very cheap (like 10 or 20 bucks), support bleeding edge sound cards and take a lot of guesswork out of the configuring process.\nThere are 5 things that can go wrong with your sound system:\nShared interrupt\nSomething's already accessing the sound card\nYou're using the wrong driver\nA permissions problem\n8.2.1. Shared interrupt\nThe first thing to do is to figure out if you have an IRQ conflict. ISA cards can't share interrupts. PCI cards can share interrupts, but certain types of high bandwidth cards simply don't like to share, including network and sound cards. To find out whether you have a conflict, do a cat /proc/interrupts. Output on my system is:\n$ cat /proc/interrupts\n               CPU0       CPU1\n      0:   24185341          0          XT-PIC  timer\n      1:     224714          0          XT-PIC  keyboard\n      2:          0          0          XT-PIC  cascade\n      5:    2478476          0          XT-PIC  soundblaster\n      5:     325924          0          XT-PIC  eth0\n     11:     131326          0          XT-PIC  aic7xxx\n     12:    2457456          0          XT-PIC  PS/2 Mouse\n     14:     556955          0          XT-PIC  ide0\n    NMI:          0          0\n    LOC:   24186046   24186026\n    ERR:       1353\nThe second column is there because I have 2 CPU's in this machine; if you have one CPU (called UP, or uniprocessor), you'll have only 1 CPU column. The numbers on the left are the assigned IRQ's and the strings to the right indicate what device was assigned that IRQ. You can see I have an IRQ conflict between the soundcard (soundblaster) and the network card (eth0). They both share IRQ 5. Actually, I cooked this example up because I wanted to show you what an IRQ conflict looks like. But if I did have this conflict, neither my network nor my sound would work well (or at all!).\nIf my sound card is PCI, the preferred way of fixing this would be to simply move one of the cards to a different slot and hope the BIOS sorts things out. A more advanced way of fixing this would be to go into BIOS and assign IRQ's to specific slots. Modern BIOS'es can do this.\n8.2.2. Misconfigured driver\nSometimes, a card is hardwired to use a certain IRQ. You'll see this on ISA cards only. Alternatively, some ISA cards can be set to use a specific IRQ using jumpers on the card itself. With these types of cards, you need to pass the correct IRQ and memory access, \"I/O port\", to the driver.\nThis is a sound card specific issue, and beyond the scope of this HOWTO.\n8.2.3. Something is already accessing your sound card\nPerhaps an application is already accessing your soundcard. For example, maybe you have an MP3 player that's paused? If something is already accessing your card, other applications won't be able to. Even though it was written to share the card between applications, I've found that esd (the enlightenment sound daemon) sometimes doesn't work correctly. The best tool to use here is lsof, which shows which processes are accessing a file. Your sound card is represented by /dev/dsp. Right now, I'm listening to an MP3 (not a Metallica MP3, of course...) with mp3blaster.\n# lsof /dev/dsp\n    COMMAND    PID USER   FD   TYPE DEVICE SIZE   NODE NAME\n    mp3blaste 1108    p    6w   CHR   14,3      662302 /dev/dsp\nfuser is similar; but it lets you send a signal to any process accessing the device file.\n# fuser -vk /dev/dsp\n    \n                         USER        PID ACCESS COMMAND\n    /dev/dsp             root       1225 f....  mp3blaster\n                         root       1282 f....  mp3blaster\nAfter issuing this command, mp3blaster was killed with SIGKILL. See the man pages for lsof and fuser; they're very useful. Oh, you'll want to run them as root since you'll be asking for information from processes that may be owned by root.\n8.2.4. You're using the wrong driver (or no driver)\nThere are only two ways to configure your card:\nSupport must be compiled directly into the kernel\nYou must have the correct driver loaded into memory\nYou can find out which driver your sound card is using by doing \"lsmod\" or looking at the output of \"dmesg\". Since sound is crucial for me, I always compile sound into my kernels. If you don't have a driver loaded, you need to figure out what's been compiled into your kernel. That's not so straight forward. Your best bet is to compile your kernel. BTW, let me say that compiling your own kernel is the first step towards proficiency with Linux. It's painful the first time you do it, but once you do it correctly, it becomes very easy down the right, especially if you keep all your old .config files and make use of things like \"make oldconfig\". See the Kernel HOWTO for details.\nIf you haven't compiled the kernel yourself, there is an overwhelmingly good chance that your system is set up to load sound drivers as modules. That's the way distros do things. Have everything under the sun compiled as a module and try to load them all. So if you don't see your sound card's driver with lsmod, your card probably isn't configured yet.\n8.2.5. Permissions Problem\nIf the sound card works when you're root but not any other user, you probably have a permissions problem. If this is the case, as root, look at the group owner of the sound card using ls -l /dev/dsp; it'll probably be audio. Then, as root, add your non-root user to the audio group in /etc/group. For example, I added the users p and wellspring to group audio on my system:\naudio:x:29:p,wellspring\nDon't forget to use grpconv if you use shadow passwords (which should be the case on most recent distributions) in order to maintain a consistent group configuration. Then log out and log back in as the non-root user. Your sound card should work. Thanks to James Barton for reminding me to add this to the howto.\n9. Miscellaneous Problems\n9.1. Hardware Acceleration Problems\nXFree86 4.x provides a more centralized and self-contained approach to video. Much of the funkyness like kernel modules for non-root access of video boards is, thankfully, gone.\n9.1.1. Hardware acceleration isn't working at all\nIf you're getting like 1 fps, then your system isn't using hardware 3D acceleration. There's one of two things that can be going on.\nYour 3D system is misconfigured (more likely)\nGame X is misconfigured (less likely)\nThe first step is to figure out which one is happening.\nIf you have X 4.0 (X 3.* users procede to step 2), look at the output of X -probeonly. You'll see:\n(II) XXXXXX: direct rendering enabled\nor\n(II) XXXXXX: direct rendering disabled\nwhere XXXXXXX depends on which video card you have. If direct rendering is disabled, then your X configuration is definitely faulty. Your game is not at fault. You need to figure out why DRI is disabled. The most important tool for you to use at this point is the `DRI Users Guide'. It is an excellently written document that gives you step by step information on how to get DRI set up correctly on your machine. A copy is kept at http://www.xfree86.org/4.0/DRI.html .\nNote that if you pass this test, your system is CAPABLE of direct rendering. Your libraries can still be wrong. So procede to step 2.\nThere is a program called glxgears which comes with the \"mesademos\" package. You can get mesademos with Debian ( apt-get install mesademos) or you can hunt for the rpm on http://www.rpmfind.net . You can also download and compile the source yourself from the mesa homepage.\nRunning glxgears will show some gears turning. The xterm from which you run glxgears will display \"X frames in Y seconds = X/Y FPS\". You can compare your system to the list of benchmarks below.\nCPU TYPE     VIDEO CARD     X VERSION    AVERAGE FPS\nCompiling Mesa and DRI modules yourself can increase your FPS by 15 FPS; quite a performance boost! So if your number is, say, about 20 FPS slower than a comparable machine, chances are that glxgears is falling back on software rendering. In other words, your graphics card isn't 3D accelerating graphics.\nMore important than FPS is having a constant FPS for small and large windows. If hardware acceleration is working, the FPS for glxgears should be nearly independent of window size. If it's not, then you're not getting hardware acceleration.\n9.2. Hardware acceleration works only for the root user\n9.2.1. XFree86 4.x\nIf the following lines aren't present in your XF86Config-4 file, put them in:\nSection \"DRI\"\n        Mode 0666\n    EndSection\nThis allows all non-root users to use DRI. For the paranoid, it's possible to restrict DRI to only a few non-root users. See the DRI User Guide.\n9.2.2. XFree86 3.x\n9.2.2.1. Voodoo cards\nVoodoo card hardware acceleration only takes place ONLY at 16bpp color and fails silently when starting X in another color depth.\nAlso, Voodoo cards need the 3dfx.o kernel module and a /dev/3dfx device file (major 107, minor 0) for non-root hardware acceleration. Neither the module nor the device file are used under XFree86 4.x.\n10. Emulation and Virtual Machines\nLinux gets ragged on a lot because we don't have the wealth of games that other platforms have. Frankly, there's enough games for me, although it would be really nice to have some of the bleeding edge games and classics like Half-life and Carmageddon. Fortunately, we have more emulators than you can shake a stick at. Although playing an emulated game is sometimes not quite as fun as playing it on the native machine, and getting some of the emulators to work well can be a difficult task, they're here, and there's alot of them!\n10.1. What is a virtual machine?\nA \"real computer\" provides an operating system many things, including a CPU, I/O channels, memory, a BIOS to provide low level access to motherboard and I/O resources, etc. When an operating system wants to write to a hard drive, it communicates through a device driver that interfaces directly with the hardware device memory.\nHowever, it's possible to give a program all the hardware resources it needs. When it wants to access a hard drive, give it some memory to write to. When it wants to set an IRQ, give it some bogus instructions that lets it think it set an IRQ. If you do this correctly, then in principle, there's no way for the poor application to know whether it's really accessing hardware or tricked by being given resources which simulate hardware. A virtual machine is the environment which tricks applications into believing they're running on a real computer. It provides all the services that a real computer would provide.\nVM's were used initially in the 1960's to emulate time shared operating systems, but these days we use them to run software which was written for foreign operating systems, or more commonly, an entire operating system. Because of the nature of the VM, the foreign OS can't tell the difference between operating in a VM or in a \"real\" machine.\n10.2. Apple 8-bit\nAll the 8-bit Apple ][ emulators require a copy of the original ROM, for whichever system you want to emulate, in a file. If you search hard enough, you can find file copies of the ROMs for the Apple ][, ][+, ][e, ][c and //gs. They are still copyrighted by Apple, and you can only use them legally if you actually own one of these computers.\n10.2.1. KEGS\nKEGS is an Apple II emulator written by Kent Dickey < kentd(at)cup(dot)hp(dot)com > which was originally written for HP-UX, but improved and customized for Linux. It runs under X at any color depth, and supports changeable memory sizes, joysticks, and sound. KEGS boots all Apple II variants, and supports all of the Apple ]['s graphics modes. I can't find a working homepage for this application.\n10.2.2. apple2 and xapple2\nThe SVGAlib based apple2 and X based xapple2 can emulate any Apple ][ variant except for the //gs. The interface is a bit funky, but usable. Configuration is also a bit funky; this emulator would benefit from an SVGA or X based configuration tool. It supports the undocumented portion of the 6502 instruction set which some games rely on. apple2 is currently being maintained by Michael Deutschmann < michael(at)talamasca(dot)ocis(dot)net > and seems to be developed at a slow but constant pace. I don't think this application has a homepage.\n10.3. DOS\n10.3.1. dosemu\ndosemu < http://www.dosemu.org > is the canonical DOS emulator on Linux. When you think of DOS, don't think of things like PROCOM PLUS OR OTHER PROGRA~1 WHICH HAVE SHORT NAMES AND ARE IN ALL CAPS. There are some real classics that were written for DOS like Carmageddon, Redneck Rampage and Tomb Raider. dosemu can run these. Unfortunately, it can take alot of effort to get dosemu to work, and of Jan 2002, the sound code is somewhat broken. Not a big deal when you're trying to run Wordperfect or an old database application. It's an absolute show stopper for gaming. Getting dosemu to work well is not easy, but unfortunately, for DOS games it's the best avenue. Good luck. If you have success using dosemu, I would like to hear from you.\n10.4. Win16\n10.4.1. Wabi\nWabi is a commercial Win16 emulator. That is, it'll run Windows 16-bit applications from a Windows 3.1, Windows 3.11 or Windows for Workgroups 3.11 environment. Wabi was originally created by SCO Unix a long time ago and then was purchased by Caldera sometime in mid year 2001.\nWabi is fast and does a good job for what it does, although I've heard it said that wabi for Solaris is more stable than Linux. It might be useful for playing older Win16 games, but there are three problems:\nYou must have a licensed copy of Windows 3.1/3.11 or WfW 3.11.\nWabi is awfully expensive for what it does.\nWabi doesn't work under 32bpp or 24bpp color.\nWabi does NOT do DOS itself, but it looks like it can use a DOS emulator as a backend for running DOS programs. There was talk about Wabi 3.0 which would've done Win32 emulation, but AFAIK, this project was shelved indefinitely. I think Wabi will run under Linux on all architectures (can someone verify this?)\n10.5. Win32\n10.5.1. wine\nWine < http://www.winehq.com >, which bears the GNUish acronym \"Wine Is Not An Emulator\" is a non-commercial implementation of the Win32 API. The reason why it's not an emulator is subtle and not of much interest to most non computer scientists, so we'll call it an emulator here (it really does run-time translation of calls to the Win32 API to POSIX/X11 calls). Wine has come a long way, and is capable of emulating many important programs, which is great news for Linux users who want this sort of stuff.\nWine does not provide the DOS API, so you can't use it to run DOS applications. For that, you should look at dosemu ( Section 10.3.1 ). Wine has never been too good at implementing DirectX, although a number of games are known to work under wine. For gaming you might want to look at winex ( Section 10.5.3 ).\nIn addition to run-time translation of the Win32 API to POSIX/X11 (it runs Windows applications on Linux), wine also does compile-time tranlation of the Win32 API to POSIX/X11 (it compiles Windows application source code on Linux). In this sense, wine is a Windows-to-Linux porting utility. The x86 architecture isn't required, but is recommended since it allows actual x86 binary execution as well as direct DLL usage).\nYou can use wine `with Windows', which means that wine uses libraries that actually come with Microsoft Windows itself. This is legal only if you own a copy of Windows which isn't currently being used on a computer. It's said that wine has the best success when run with Windows. You can also run wine without Windows. The people at winehq are writing their own set of libraries called libwine which implements the Win32 API with no Microsoft code at all.\nWine was originally licenced under the MIT/X11 license, so it could be used for both commercial and non-commercial purposes. In mid 2002, parts of wine were re-licensed under the LGPL so that it could only be used for non-commercial puposes. This presents a problem for companies like Transgaming ( Section 10.5.3 ) and prompted a fork of wine called ReWind ( Section 10.5.2 ).\n10.5.2. rewind\nRewind < http://rewind.sourceforge.net/ > was started by Eric Pouech (a wine developer) and Ove K\u00ef\u00bf\u00bdven (a winex developer) in response to wine's license change ). It started out life as a snapshot of the last version of wine which was completely licensed under the MIT/X11 license. The aim is to keep rewind MIT/X11 based so that companies like Transgaming can offer wine based products.\n10.5.3. winex\nWinex is released by a company called Transgaming < http://www.transgaming.com >. The developers take wine (see Section 10.5.1 ) and add DirectX / DirectDraw support. Although winex is commercial, they have an interesting business model.\nThe end user (you) can download the source code for free. However, for 5 US dollars per month, you can become a subscriber of Transgaming. Being a subscriber of Transgaming gives three major benefits:\nSubscribers can download convenient packaged versions of winex in deb, rpm or tar.gz format whenever they want, including updates. They have also more functionality than the publicly available tarball: the latter is an older version which lacks some of the newest features, like support for copy protected programs.\nThere are monthly polls where subscribed users can take votes on what they want winex developers to work on. For instance, they can vote for things like \"Improve support for copy protected programs\", \"Better Installshield support\" or \"Improve DirectX 8.0 support\". As far as I can see, the developers really do listen to the subscriber polls.\nThe Transgaming website has a few user support forums. On one hand, they use the most godawful, horrible, confusing, wasteful, moronic format I've ever seen and I hope to god I never see a forum with a format as bad as Transgaming's. On the other hand, you can ask for help and the developers are VERY good about getting around to your answer; their vigilance is quite impressive. Non-subscribers can browse the forums, but only subscribers can post (and therefore, ask for support).\nThe developers of winex were going to release their Installshield, DirectX and DirectDraw enhancements to wine \"every so often\". In return, as wine maturation improved, the winex developers were going to take the new versions of wine and use them for winex. However, since the birth of Transgaming, parts of wine have been re-licensed under the more restrictive GNU LGPL license ( Section 10.5.1 ). This basically means that versions of wine that are released past the date of the re-licensing can no longer be used by winex. Therefore, winex will now be based on rewind ( Section 10.5.2 ).\n10.5.4. Win4Lin\nWin4Lin < http://www.netraverse.com > is a commercial product by Netraverse. Like vmware ( Section 10.5.5 ) it uses the virtual machine approach to running Windows applications, so you'll get a big window from which you can boot Windows and run all kinds of Windows applications. Unlike vmware, Win4Lin only does Windows 95/98/ME, but this turns out to be better for gamers. Because Win4Lin concentrates on these operating systems, reports say that it's faster and does a better job at running games under these operating system than vmware. It's also much cheaper than vmware. The most recent version of Win4Lin as of June 2003 is 5.0. It suffers nevertheless from some limitations:\nIt does not support DirectX or DirectDraw, while vmware has \"limited\" support for DirectX.\nIt only supports serial and parallel devices. This is important for people who use USB joysticks. Note that vmware supports up to 2 USB devices.\nAs of June 2003, expect to pay $89.99 without printed docs and $99.99 with printed docs. In addition, there isn't an evaluation copy available, although you get a 30 day money back guarantee. However, since it's commercial you do get tech support. vmware is considerably more expensive.\nLike vmware, you're required to have a licensed copy of Win95 or Win98. Win4Lin cannot use an existing Windows installation the way wine can.\nIt only runs on x86 architectures.\n10.5.5. VMWare\nVMWare is a virtual machine that runs multiple operating systems simultaneously on a standard PC: supported OSes include Microsoft ones, Linux, Novell Netware and FreeBSD. You can among others use it to run a MS Windows OS and launch your favourite game there. You can even run another Linux under Linux; useful is you want to test another distro for instance. Amazing! Now for the bad sides. You should definitely have a good configuration in order to run it; they claim the minimum is a 500MHz x86 CPU with 128MB RAM, but a faster processor and at least 256MB RAM seem to be the bare minimum if you want reasonable performance. Not all Linux distributions are supported: newest RedHat's, Mandrake's and Suse's are, but you're out of luck if you have an other version and/or distribution (like Debian). Moreover, vmware has only limited support for DirectX, and you might not be able to play recent games.\nSee http://www.vmware.com for more information. It's not very cheap (about 300$ for the Workstation version), but you can get a 30 day evaluation copy.\n10.5.6. What should I choose?\nFirst of all, you should try an emulator. Although some games may work with wine , you'll probably get the most success with winex : its DirectX support is constantly improving. As of version 3.1, the DirectX 8 support is nearly complete, but this may not be the case with older DirectX versions (are consequently older games).\nYou might also try a virtual machine like Win4Lin or VMWare instead of an emulator. If your goal is to run Win95/98/ME applications on Linux, without USB and on the x86 architecture, Win4Lin's cost and focus on Win95 type OS's make it a better choice than vmware. However, if you must have USB support or run Linux on a platform other than x86, vmware is your only option.\nNow if your goal is to run Win95 type OS games under Linux, Win4Lin almost seems better than vmware. The show-stopper is the fact that vmware has limited DirectX support while Win4Lin has none. This fact alone makes both Win4Lin and vmware unsuitable for most hardcore gaming purposes. But if you're going to give it a try, you're more likely to have success with vmware.\n11. Interpreters\n11.1. SCUMM Engine (LucasArts)\nLucasarts wrote an engine for point and click adventures named SCUMM (Script Creation Utility for Maniac Mansion). They wrote many graphical adventures using SCUMM, like their famous Monkey Island series (all three). Ludvig Strigeus < strigeus(at)users(dot)sourceforge(dot)net > was able to reverse engineer the SCUMM format and write an interpreter for SCUMM based games that compiles under Linux and Win32 named scummvm < http://scummvm.sourceforge.net/ >. Their website is very good, and chock full of any kind of information about SCUMM and playing these games under scummvm.\nA compatibility page is maintained at the scummvm website. FWIW, I've been able to finish many of the games that are listed as 90% done with no problems. scummvm is rock solid, and allows you to purchase SCUMM based Lucas Arts games, copy the data files to your hard drive and play them under Linux. As of February 2002, I've been following their cvs, and this project is undergoing constant development. Kudos to the scummvm team.\n11.2. AGI: Adventure Gaming Interface (Sierra)\nThe older Sierra DOS graphical adventure games used a scripting language named AGI (Adventure Gaming Interface). Some examples of games written in AGI would be Leisure Suit Larry I (EGA), Space Quest I and II, King's Quest II, Mixed-Up Mother Goose and others. These games can be played using sarienon> < http://sarien.sourceforge.net >, an open source interpreter for AGI games.\nSarien was written in SDL, so it should run on any platform that can compile SDL programs. In addition, there are versions for DOS, Strong-Arm based pda's, QNS (holy cow! embedded gaming!), MIPS based systems and SH3/4 based Pocket PC's. The developers are clearly out of their minds (in a good way!). Sarien also has numerous enhancements not found in the original games, like a Quake style pull-down console, picture and dictionary viewer, enhanced sound and support for AGDS, a Russian AGI clone. Sarien is under development and the developers have been very good about documenting the Sarien internals if anyone wants to get involved in hacking it.\n11.3. SCI: SCript Interpreter or Sierra Creative Interpreter (Sierra)\nThe newer Sierra graphical adventure games (we're talking about the late 80's here) used an interpreter named SCI. There were many versions of SCI since Sierra was constantly improving its engine. The original SCI games were DOS based, but Sierra eventually started releasing Win32 SCI based games. Some examples of games written with SCI are Leisure Suit Larry 1 (VGA), Leisure Suit Larry 2-7, Space Quest 3-6, King's Quest 4-6, Quest For Glory 1-4 and many others. Compared with AGI games, SCI adventures have better music support, a more complex engine and loads of bells and whistles.\nMany SCI based games (games written in SCI0) can be played using freesci, available at http://freesci.linuxgames.com . Like Sarien, FreeSCI has many graphics targets including SDL, xlib and GGI, so this program can compile and run under an incredible number of platforms. The developers have done a fantastic job of documenting and FAQing their application.\n11.4. Infocom Adventures (Infocom, Activision)\nThe Z-machine is a well documented < http://www.gnelson.demon.co.uk/zspec/index.html > virtual machine designed by Infocom to run their interactive fiction games. This allowed them to write game data files in a cross platform manner, since only the engine itself, the Z-machine, would be platform dependent. Z-machine went through a number of revisions during the lifetime of Infocom, and two further revisions (V7 and V8 created by Graham Nelson) after the Infocom's demise. The later versions even supported limited sound and graphics!\nOne of the most popular Z-machine interpreters is Frotz < http://www.cs.csubak.edu/~dgriffi/proj/frotz/ >. This excellently done page has many nice links for interactive fiction fans. Frotz is GPL, runs all versions of Z-machine and will compile on most versions of Unix. Frotz has spawned many forks, like a version for PalmOS and Linux based PDA's.\njzip < http://jzip.sourceforge.net/ > is another very popular Z-machine interpreter that will run V1-V5 and V8 Z-machine data files. jzip is very portable; it compiles on all Unices, OS/2, Atari ST and DOS.\nThere are actually many other Z-machine interpreters like nitfol and rezrov (written in Perl!). Each interpreter has its own set of strengths, and you can find links to them on the home pages for Frotz and jzip.\n11.5. Scott Adams Adventures (Adventure International)\nScott Adams is, arguably, the father of interactive fiction. Although he himself was inspired by the first piece of interactive fiction, Adventure, Scott brought adventuring to the masses. His games were available for Atari, Apple 2, Commodore, Sorcerer, TI, and CPM. His company, Adventure International, released a number of much loved games between 1978 and 1984 before folding. He recently released a new game (a Linux version is not available) but since the decline of adventuring, he has pretty much kept out of the gaming industry.\nAlan Cox wrote scottfree, a Scott Adams adventure game file interpreter for Unix. Using scottfree and any of the Scott Adams data files which can be downloaded from Scott's website < http://www.msadams.com/ > you can enjoy these classics.\n11.6. Ultima Underworld: The Stygian Abyss (Origin, Blue Sky Productions)\nThe Underworld Adventures project < http://uwadv.sourceforge.net/ > is an effort to port the 1992 classic, Ultima Underworld: The Stygian Abyss, to modern operating systems like Linux, MacOS X, and Windows. It uses OpenGL for 3D graphics, SDL for platform specific tasks and is released under the GNU GPL. Underworld Adventures provides an impressive graphics system which uses the original game files, so you'll need the original game disk to play.\nUnderworld Adventures also provides a bunch of tools for you to display the level maps, tools for examining uw1 conversation scripts and more.\n11.7. Ultima 7 (Origin, Electronic Arts)\nUltima 7 is actually 2 games: part I (The Black Gate) and part II (Serpent Island) which uses a slightly enhanced version of The Black Gate's engine. In addition, an addon disk was released to both part I (The Forge Of Virtue) and part II (The Silver Seed).\nA team of people developed Exult < http://exult.sourceforge.net/ > which is an open source interpreter that will run both parts of Ultima 7 and their addon disks. Exult is written in C++ using SDL, so it will compile on any platform that can compile SDL programs. It also features some enhancements over the original versions of the Ultima VII engine. You'll need to purchase a copy of Ultima 7 to play. The developers have no plans on extending Exult to interpret the other Ultimas since the engines changed so radically between releases.\nThe Exult team has also been hard at work creating a map editor, Exult Studio, and a script compiler that will let users create their own RPG in the Ultima style.\n11.8. System Shock (Electronic Arts, Origin)\nSystem Shock is a classic first person shooter/adventure from 1994, which puts it as a contemporary of Doom. However, its engine is much more feature rich than the original Doom: for example, System Shock had 3D sprites, free look and a facility to have objects on top of each other, giving the illusion of a full 3D map, like Quake. Game reviewers agree that this game has the features of Quake with a story-line more compelling than Half-life. The System Shock engine was optimized for sophistication, while Doom's engine was optimized for throwing lots of monsters at you; a completely different appoach. Quite impressive for such an old game!\nThe System Shock Hack Project < http://madeira.physiol.ucl.ac.uk/tsshp/sshock.html > is an attempt to update the game for modern operating systems. The project uses SDL and is released under the modified BSD license. While you need the original game files to play SSHP, it should work with the System Shock demo, which is freely available.\n12. Websites And Resources\n12.1. Meta gaming websites\nThese are some resources for Linux gamers no matter what kind of game you enjoy to play.\nThe Linux Game Tome: http://www.happypenguin.org\nAbout the games themselves.\n"}, {"score": 235.17697, "uuid": "0cc856e0-bfd7-50b4-84e0-e4aa368d8add", "index": "cw12", "trec_id": "clueweb12-0010wb-65-15025", "target_hostname": "tldp.org", "target_uri": "http://tldp.org/HOWTO/html_single/Linux-Gamers-HOWTO/", "page_rank": 1.2218868e-09, "spam_rank": 67, "title": "The Linux Gamers' HOWTO", "snippet": "<em>OpenGL</em> <em>is</em> the open source equivalent <em>to</em> <em>Direct3D</em>, a component <em>of</em> DirectX (Section 3.14). The important difference being that since <em>OpenGL</em> <em>is</em> open (and DirectX <em>is</em> closed), games written <em>in</em> <em>OpenGL</em> are much easier <em>to</em> port <em>to</em> and co-develop on Linux <em>than</em> games written using DirectX.", "explanation": null, "document": "12.3. Other Resources\n1. Administra\nIf you have ideas, corrections or questions relating to this HOWTO, please email me. By receiving feedback on this howto (even if I don't have the time to answer), you make me feel like I'm doing something useful. In turn, it motivates me to write more and add to this document. You can reach me at < p(at)dirac(dot)org >. My web page is http://www.dirac.org/p and my Linux pages are at http://www.dirac.org/linux . Please do send comments and suggestions for this howto. Even if I don't take your suggestions, your input is graciously received.\nI assume a working knowledge of Linux, so I use some topics like runlevels and modules without defining them. If there are enough questions (or even protests) I'll add more basic information to this document.\n1.1. Authorship and Copyright\nThis document is copyright (c) 2001-2002 Peter Jay Salzman, < p(at)dirac(dot)org >; 2003-2004 Peter Jay Salzman and Fr\u00e9d\u00e9ric Delanoy. Permission is granted to copy, distribute and/or modify this document under the terms of the Open Software License, Version 1.1, except for the provisions I list in the next paragraph. I hate HOWTO's that include the license; it's a tree killer. You can read the OSL at http://opensource.org/licenses/osl-1.1.txt .\nIf you want to create a derivative work or publish this HOWTO for commercial purposes, I would appreciate it if you contact me first. This will give me a chance to give you the most recent version. I'd also appreciate either a copy of whatever it is you're doing or a spinach, garlic, mushroom, feta cheese and artichoke heart pizza.\n1.2. Acknowledgements\nThanks goes out to these people for extensive comments, corrections, and diffs. Their effort is above and beyond the call of duty:\nFr\u00e9d\u00e9ric Delanoy, Moritz Muehlenhoff < jmm(at)Informatik(dot)uni-bremen(dot)de >, Mike Phillips, Ioan Rogers < buck(at)aiur(dot)co(dot)uk >\nI would also like to thank the following people for sending in comments and corrections. Without their help, there would be more typos and mistakes than you could shake a stick at:\nMichael McDonnell\n1.3. Latest Versions and Translations\nThe latest version can be found at http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/lgh/LG-HOWTO or http://www.dirac.org/linux/writing , but this is my own personal working copy. The version at my personal web site might be broken if I'm working on the HOWTO. The version at sourceforge is bleeding edge but guaranteed to be not broken, however it may have glitches, like unfinished paragraphs. :)\nThe most recent stable version can be found at http://www.tldp.org .\n1.3.1. Russian\nDmitry Samoyloff < dsamoyloff(at)yandex(dot)ru > is the maintainer of the Russian translation. The most recent version can be found at http://www.dirac.org/linux/writing .\n1.3.2. Hungarian\nL\u00e1szl\u00f3 Daczi < dacas(at)korhaz(dot)rethy(dot)hu >, the Hungarian LDP coordinator, announced that a Hungarian translation was produced by Szilard Ivan, and is available at http://tldp.fsf.hu/HOWTO/Linux-Gamers-HOWTO-hu .\n2. Definitions: Types Of Games\nNot everyone knows the different types of games that are out there, so in an effort to form a common language that we can all use, I'll run through each game type and provide a very brief history.\n2.1. Arcade style\nAlthough arcade games had their heydey in the 80's, they are nonetheless very popular. Nothing will ever replace walking into a dark, crowded and noisy arcade gallery, popping a quarter into your favorite machine and playing an old fashioned game of Space Invaders. Arcade style games attempt to simulate the arcade games themselves. There is such a vast number of these things that it's nearly impossible to enumerate them all, but they include clones of Asteroids, Space Invaders, Pac-Man, Missile Command and Galaxian.\n2.2. Card, logic and board games\nComputer based card games simulate a card game like poker or solitaire. The program can simulate your opponent(s).\nLogic games usually simulate some well known logic puzzle like Master Mind or the game where you have put sliding numbered tiles in order inside a box.\nComputer based board games simulate some kind of board game you'd play on a table top with friends, like monopoly, Mille Bourne, chess or checkers. The program can simulate your opponent.\n2.3. Text Adventure (aka Interactive Fiction)\nOnce upon a time, when Apple ][, Commodore, and Atari ruled the world, text adventures were the game of choice of `intelligent folk'. You are given a scenario and can interact with the world you're placed in:\nYou are in a room.  It is pitch dark and you're likely to be eaten by a grue.\n    > Light lantern with match.\n    You light the lantern.  This room appears to be a kitchen.  There's a table with a\n    book in the center.  You also see an oven, refrigerator and a door leading east.\n    > Open the oven.\n    In the oven you see a brown paper bag.\n    > Take the bag.  Open the bag.  Close the oven.\n    Inside the bag is a some garlic and a cheese sandwich.  The oven door is now closed.\nBack then, text adventures were self contained executables on a disk or casette. These days there's usually a data file and an interpreter. The interpreter reads data files and provides the gaming interface. The data files are the actual game itself, similar to the relationship between first person shooters ( Section 2.7 ) and wad files.\nThe first adventure game was Adventure (actually \u201cADVENT\u201d, written on a PDP-1 in 1972). You can play Adventure yourself (actually, a descendent); it comes with \u201cbsd games\u201d on most Linux distros. Text adventures became popularized by Scott Adams ( Section 11.5 ) and reached their height of popularity in the late 80's with Infocom ( Section 11.4 ) which are also playable under Linux.\nAs computer graphics became easier and more powerful, text adventures gave rise to graphic adventures. The death of commercial interactive fiction more or less coincided with the bankruptcy of Infocom.\n2.4. Graphical Adventures\nGraphical adventures are, at heart, text adventures on steroids. The degree to which they use graphics varies widely. Back in the 80's, they were little more than text adventures which showed a screen of static graphics. When you picked up an item, the background would be redrawn without the item appearing. The canonical example would be the so-called `Hi-Res Adventures' like The Wizard And The Princess. Later on, the sophisticated graphical adventures had your character roaming around the screen, and you could even use a mouse, but the interface remained purely text.\nNext there are the `point and click adventures' which basically have no text interface at all, and often have dynamic graphics, like a cat wandering around the room while you're deciding what to do next. In these games, you point at an object (say, a book) and can choose from a pull-down list of functions. Kind of like object oriented adventuring. :) There aren't many graphical adventures written natively for Linux. The only one I can think of is Hopkins FBI (which happens to be my favorite game for Linux).\n2.5. Simulation (aka Sims)\nSimulations strive to immerse the player behind the controls of something they normally wouldn't have access to. This could be something real like a fighter jet or something imaginary like a mechanized warrior combat unit. In either case, sims strive for realism.\nSome sims have little or no strategy. They simply put you in a cockpit to give you the thrill of piloting a plane. Some are considerably complex, and there's often a fine line between sims and strats ( Section 2.6 ). A good example would be Heavy Gear III or Flight Gear. These days sims and strats are nearly indistinguishable, but a long time ago, sims were real time while strats were turn based. This is awkward for modern day use, since a game like Warcraft which everyone knows as a strat, would be a sim by definition.\n2.6. Strategy (aka Strats)\nStrategy games have their roots in old Avalon type board games like Panzer Leader and old war strategy games published by SSI. Generally, they simulate some kind of scenario. The scenario can be peaceful, like running a successful city (SimCity), or not, like illegal drug selling operation (DrugWars) or an all-out war strategy game like Myth II. The types of games usually take a long time to complete and require a lot of brainpower.\nStrats can be further divided into two classes: real time and turn based. Real time strats are based on the concept of you-snooze-you-lose. For example, you're managing a city and a fire erupts somewhere. The more time it takes for you mobilize the fire fighters, the more damage the fire does. Turn based strats are more like chess---the computer takes a turn and then the player takes a turn.\n2.7. First Person Shooter (aka FPS)\nWhat light through yonder window breaks? It must be the flash of the double barreled shotgun! We have a long and twisted history with FPS games which started when id Software open sourced code for Doom. The code base has forked and merged numerous times. Other previously closed engines opened up, many engines are playable via emulators, many commercial FPS games were released for Linux and there are quite a number of FPS engines which started life as open source projects. Although you may not be able to play your favorite FPS under Linux (Half-Life plays great under winex) Linux definitely has no deficiency here!\nFirst person shooters are characterized by two things. First, you pretty much blow up everything you see. Second, the action takes place in first person. That is, through the eyes of the character who's doing all the shooting. You may even see your hands or weapon at the bottom of the screen. They can be set in fantasy (Hexen), science fiction (Quake II), present day `real world' (Soldier Of Fortune) and many other settings.\nLike text adventures, FPS fit the engine/datafile format. The engine refers to the actual game itself (Doom, Quake, Heretic2) and plays out the maps and bad guys outlined by the datafile (doom2.wad, pak0.pak, etc). Many FPS games allow people to write their own non-commercial datafile. There are hundreds, even thousands of non-commercial Doom datafiles that you can download for free off the net. Often, companies release their engines to the open source community so we can hack and improve them. However, the original data files are kept proprietary. To this day, you still have to purchase doom.wad.\n2.8. Side Scrollers\nSide scrollers are similar to FPS but you view your character as a 2D figure who runs around various screens shooting at things or performing tasks. Examples would be Abuse for Linux and the original Duke Nukem. They don't necessarily have to be violent, like xscavenger, a clone of the old 8-bit game Lode Runner.\n2.9. Third Person Shooters\nSimilar to FPS, but you view your character in third person and in 3D. On modern third person shooters you can usually do some really kick-butt maneuvers like Jackie Chan style back flips and side rolls. The canonical example would be Tomb Raider. On the Linux platform, we have Heretic 2 and Heavy Metal FAKK2.\n2.10. Role Playing Game (aka RPG)\nAnyone who has played games like Dungeons & Dragons or Call of Cthulhu knows exactly what an RPG is. You play a character, sometimes more than one, characterized by traits (eg strength, dexterity), skills (eg explosives, basket weaving, mechanics) and properties (levels, cash). As you play, the character becomes more powerful and the game adjusts itself accordingly, so instead of fighting orcs, at high levels you start fighting black dragons. The rewards increase correspondingly. At low levels you might get some gold pieces as a reward for winning a battle. At high levels, you might get a magic sword or a kick-butt assault rifle.\nRPG's generally have a quest with a well defined ending. In nethack you need to retrieve the amulet of Yendor for your god. In Ultima II, you destroy the evil sorceress Minax. At some point, your character becomes powerful enough that you can `go for it' and try to complete the quest.\nWhile the insanely popular Ultima series, written by Richard Garriot (aka Lord British) for Origin, was not the first RPG, it popularized and propelled the RPG genre into mainstream. Ultima I was released in 1987 and was the game that launched 9 (depending on how you want to count them) very popular sequels, finishing with Ultima IX: Ascension. You can play Ultima VII under Linux with Exult ( Section 11.7 ).\nThe canonical RPG on Linux is Rogue (the ncurses library started life as a screen handling routine for Rogue!) and it has infinite variants like Zangband and Nethack (which has many variants itself). Some RPG's are quite complicated and great feats of programming. There seems to be a deficiency of commercial RPGs for Linux. Not counting the rogue variants, there's also a deficiency of open source RPGs too.\n3. Libraries\nWe'll run through the different gaming libraries you'll see under Linux.\n3.1. What is Glide2?\nGlide2 is a low level graphics API and driver that accesses 3D hardware accelerated functions on 3dfx's Voodoo I, II and III cards, under XFree86 3.x.\nA program can only use the special hardware accelerated features of these cards by using the Glide2 library in one of two ways:\ndirectly written using Glide2 (Myth II, Descent III)\nindirectly using Mesa built with a Glide2 backend to simulate OpenGL (Rune, Unreal Tournament)\n3dfx opened up the specifications and source code to the open source community. This allowed Daryll Strauss to port Glide2 to Linux which enabled XFree86 3.x users to use Voodoo I, II and III cards under Linux.\nSince Glide2 accesses the video card directly, Glide2 applications will either need to be run by root or be setuid root. A way around this was to create the kernel 3dfx module. This module (and its device file /dev/3dfx) allows Glide2 graphical hardware acceleration for non-root users of non-setuid applications.\nUnfortunately, Glide2 is also a dead issue. It's only used for Voodoo I, II, III boards (which are becoming outdated), under XFree86 3.x (most people use XFree86 4.x). And since 3dfx is now a defunct company, it's a sure bet that no more work will be done on Glide2 and no more games will be written using Glide2.\n3.2. What is Glide3?\nUnlike Glide2, Glide3 is not an API used for game programming. It exists only to support DRI on Voodoo III, IV and V boards under XFree86 4.x. None of the games which use Glide2 will work with Glide3. This shouldn't be a surprise since Glide2 and Glide3 support different video cards and different versions of XFree86. The only video card that can use both Glide2 (under XFree86 3.x) and Glide3 (under XFree86 4.x) is the Voodoo III. It's reported that a Voodoo III using Glide2 will outperform a Voodoo III using Glide3.\nWhen you use a Voodoo III, IV or V under XFree86 4.x, you want to use a version of Mesa (see Section 3.4 ) which was compiled to use Glide3 as a backend to ensure hardware accelerated OpenGL on your system.\n3.3. What is OpenGL?\nOpenGL is a high level graphics programming API originally developed by SGI, and it became an industry standard for 2D and 3D graphics programming. It's defined and maintained by the Architectural Revision Board (ARB), an organization which include representatives from SGI, IBM, DEC, and Microsoft. OpenGL provides a powerful, complete and generic feature set for 2D and 3D graphics operations.\nThere are 3 canonical parts to OpenGL:\nGL: The OpenGL core calls\nGLU: The utility calls\nGLUT: OS independent window event (mouse, keyboard, etc.) handler.\nOpenGL is not only an API, it's also an implementation, written by SGI. The implementation tries to use hardware acceleration for various graphics operations whenever available, which depends on what videocard you have in you computer. If hardware acceleration is not possible for a specific task, OpenGL falls back on software rendering. This means that when you get OpenGL from SGI, if you want any kind of hardware acceleration at all, it must be OpenGL written and compiled specifically for some graphics card. Otherwise, all you'll get is software rendering. The same thing is true for OpenGL clones, like Mesa.\nOpenGL is the open source equivalent to Direct3D, a component of DirectX ( Section 3.14 ). The important difference being that since OpenGL is open (and DirectX is closed), games written in OpenGL are much easier to port to and co-develop on Linux than games written using DirectX.\n3.4. What is Mesa?\nMesa < http://www.mesa3d.org > is a free implementation of the OpenGL API, designed and written by Brian Paul. While it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant OpenGL implementation conforming to the ARB specifications. It's reported that Mesa is even faster than SGI's own OpenGL implementation.\nJust like OpenGL, Mesa makes use of hardware acceleration whenever possible. When a particular graphics task isn't able to be hardware accelerated by the video card, it's software rendered; the task is done by your computer's CPU instead. This means that there are different builds of Mesa depending on what kind of video card you have. Each build uses a different library as a backend renderer. For example, if you have a Voodoo I, II or III card under XFree86 3.x, you'd use mesa+glide2 (written by David Bucciarelli) which is the Mesa implementation of OpenGL that uses Glide2 as a backend to render for graphical operations.\n3.5. What is DRI?\nGraphics rendering has 3 players: the client application (like Quake 3), the X server and the hardware (the graphics card). Previously, client applications were prohibited from writing directly to hardware, and there was a good reason for this. A program that is allowed to directly write to hardware can crash the system in any number of ways. Rather than trusting programmers to write totally bug free, cooperative programs that access hardware, Linux simply disallowed it. However, that changed under X 4.x with DRI (Direct Rendering Infrastructure < http://www.dri.sourceforge.net >. DRI allows X clients to write 3D rendering information directly to the video card in a safe and cooperative manner.\nDRI gets the X server out of the way so the 3D driver (Mesa or OpenGL) can talk directly to the hardware. This speeds things up. The 3D rendering information doesn't even have to be hardware accelerated. On a technical note, this has a number of virtues.\nVertex data doesn't have to be encoded/decoded via GLX.\nGraphics data isn't sent over a socket to the X server.\nOn uni-processor machines the CPU doesn't have to change context between XFree86 and its client to render the graphics.\n3.6. What is GLX?\nGLX is the X extension used by OpenGL programs, it is the glue between the platform independent OpenGL and platform dependent X.\n3.7. What is Utah GLX?\nUtah-GLX is the precursor to DRI. It makes some different design decisions regarding separation of data and methods of accessing the video card like relying on root access rather than creating the kernel infrastructure for secure access. It provides support for a few cards which are not well supported by DRI like the ATI Rage Pro family, S3 Virge (although anyone using this for gaming is, well, nuts), and an open source TNT/TNT2 driver (which is very incomplete). The TNT/TNT2 driver is based on reverse-engineering of the obfuscated source code release of the X 3.3 drivers by nVidia. However, they're really incomplete, and effectively, unusable.\n3.8. What is xlib?\nEvery once in awhile you'll see some sicko (said with respect) write a game in xlib. It is a set of C libraries which comprise the lowest level programming interface for XFree86. Any graphics programming in X ultimately makes use of the xlib library.\nIt's not an understatement to say that xlib is long winded, arcane and complicated. Because of this, there are lots of libraries like SDL ( Section 3.10 ) for 2D graphics, OpenGL ( Section 3.3 ) for 3D graphics and widget sets ( Section 3.9 ) for widgets within windows which hide the details of different aspects of xlib programming.\nWhile some games are written in xlib, like the Doom Editor Yadex, xlib itself is not a serious game writing library. Most games don't need the low-level interface that xlib provides. In addition, by using the higher level libraries, a game writer can develop his game on multiple platforms, even ones that don't use XFree86.\n3.9. What is a widget set?\nWidgets are objects that make up a GUI application's interface. They include things like text entry boxes, pulldown menus, slider bars, radio buttons and much more. A widget set is a collection of related widgets that are designed to have a common interface and a consistant \"feel\". Gtk is the canonical widget set on Linux, but there are many others like fltk (a small C++ widget set), Xaw, Qt (the widget set of KDE), and Motif (the widget set used by Netscape). Motif used to be the king of widget sets in the Unix world, but it was very expensive to license. The Open Group finally opened up Motif's license for open source operating systems, but it was too little too late. There are many completely open source widget sets which are more complete and much nicer looking than Motif, including Lesstif, a totally free Motif clone.\n3.10. What is SDL (Simple DirectMedia Layer)?\nSDL < http://www.libsdl.org > is a library by Sam Lantiga (graduate of UCD, yeah!). It's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling. It's LGPL'd and provides joystick and OpenGL support as well. Unlike xlib ( Section 3.8 ), SDL is very suited for game programming.\nThe most striking part of SDL is that it's a cross platform library. Except for a few details, a program written in SDL will compile under Linux, MS Windows, BeOS, MacOS, MacOS X, Solaris, IRIX, FreeBSD, QNX and OSF. There are SDL extensions written by various people to do things like handle any graphics format you care to mention, play mpegs, display truetype fonts, sprite handling and just about everything under the sun. SDL is an example of what all graphics libraries should strive for.\nSam had an ulterior motive for writing such a cool library. He was the lead programmer for Loki Software (he now codes for Blizzard Software), which used SDL in all of its games except for Quake3.\n3.11. What is GGI?\nGGI < http://www.ggi-project.org > is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications. LibGGI applications run on SVGAlib, fb, and X servers among others. Judging from their screenshots, this is quite a powerful library.\nApplications that use LibGGI directly include Heroes, Ultrapoint, Quake, and Berlin. Most applications that use SVGALib can be run on X or any other LibGGI backend by using a wrapper library which re-implements SVGALib ( Section 3.12 ) using LibGGI. SDL ( Section 3.10 ) and clanlib ( Section 3.15 ) applications can display on LibGGI but often the native drivers for these libraries are faster, however it's a good way to get SDL, clanlib, and SVGALib applications to run where they would not before.\nGGI has a sister project, KGI, which is developing a kernel-level alternative to systems like the linux framebuffer and the DRI. This project is much less far along than LibGGI itself, but promises to combine DRI-level speeds and the stability and security UNIX users expect.\n3.12. What is SVGAlib? Frame buffer? Console?\nThe console is the dark non-graphical screen you look at when your computer first boots up (and you don't have xdm or gdm running). This is opposed to the X environment which has all sorts of GUI things like xterms. It's a common misconception that X means graphics and console means no graphics. There are certainly graphics on the console\u2014we will discuss the two most common ways to achieve this.\nSVGAlib is a graphics library that lets you draw graphics on the console. There are many graphical applications and games that use SVGAlib like zgv (a console graphical image viewer), prboom and hhexen. I happen to be a fan of this library and of graphical console games in general; they are extremely fast, fullscreen and compelling. There are three downsides to SVGAlib. First, SVGAlib executables need to be run by root or be setuid root, however, the library releases root status immediately after the executable begins to run. Secondly, SVGAlib is video card dependent\u2013if your video card isn't supported by SVGAlib, you're out of luck. Third, SVGAlib is Linux only. Games written in SVGAlib will only work on Linux.\nFrame buffers are consoles implemented by a graphics mode rather than a BIOS text mode. Why simulate text mode in a graphical environment? This allows us to run graphical things in console, like allowing us to choose any font we want the console to display (which is normally set by BIOS). There's a good Framebuffer HOWTO available from LDP. Graphical console games written using the frame buffer suffer from the same deficiencies of the SVGA library: not all hardware is supported and the code will only run on Linux.\n3.13. What is OpenAL?\nOpenAL < http://www.openal.org > aims to be for sound what OpenGL is for graphics. It started as a joint project between Loki Software and Creative Labs, setting out to be a vendor neutral and cross platform API for audio - the audio equivalent of OpenGL ( Section 3.3 ). Loki is no longer in business, but Creative and the Open Source community have kept the project alive. It is licensed LGPL and the specs can be obtained for free from the OpenAL website. It has support from nVidia (nForce2/3 based motherboards come with OpenAL MS Windows libraries for the on-board audio), Apple has added OpenAL to their audio framework for OSX and it can also be found powering the Epic Games Unreal Engine\nCurrently, it's not all cross-platform goodness. There is almost no support for enhancements like EAX or any hardware acceleration on Linux, though it does it exist in the Windows implementation. However, if you have a Creative SoundBlaster or Audigy sound card (with an emu10x chip), and you use ALSA sound drivers, you can get OpenAL libraries from http://www.lost.org.uk that provide hardware acceleration and decent surround support.\n3.14. What is DirectX?\nDirectX is a collection of proprietary multimedia API's, first developed by Microsoft in 1995, for its various Windows OS's. It's a mistake to say something like \"DirectX is like OpenGL\" or \"DirectX is like SDL\", as is commonly said in DirectX tutorials. Multimedia API's are more centralized on Windows than they are on Linux. A more accurate statement would be something like \"DirectX is like DRI, OpenGL and SDL combined\". As of October 2004, the most recent version of DirectX is 9c. The components of DirectX are:\nDirectDraw\nDirectDraw gives direct access to video memory, like DRI, so 2D graphics can be blitted directly to the video card. DirectDraw is like the graphical component of SDL, but the direct video card access is done by DRI rather than SDL. This is why a game can easily take out a Windows system but should not take down a Linux system.\nDirect3D (D3D)\nDirect3D, like OpenGL, provides a 3D graphics API. Whereas OpenGL is open source, lower level and compiles under a multitude of operating systems, D3D is proprietary, higher level and only compiles on Windows. D3D first appeared in DirectX 2, released in 1996.\nDirectAudio\nDirectAudio is a combination of 2 audio API's, DirectSound and DirectMusic, which allows direct access to the sound card for sound and music playback.\nDirectInput\nDirectInput gives support for gaming input devices such as joysticks.\nDirectPlay\nDirectPlay gives support for simplified networking for multiplayer gaming.\nDirectShow\nDirectShow provides support for movie files like AVI and MPG. It was a separate API from DirectX, but was integrated with DirectX 8.\nDirectSetup\nThis API provides a way to install DirectX from within an application to simplify game installation.\nDepending on the version of DirectX you're talking about, DirectX support in winex ( Section 10.5.3 ) ranges from well supported to \"kind of\" supported. It's poorly supported by wine ( Section 10.5.1 ), barely supported by vmware ( Section 10.5.5 ) and unsupported by Win4Lin ( Section 10.5.4 ).\nOne comment about portability: Each component of DirectX has multiple corresponding library on Linux. Moreover, a game writer who uses libraries like OpenGL, GGI or SDL will write a game which will trivially compile on Windows, Linux and a multitude of other OS's. Yet game companies persist using DirectX and therefore limit their audience to Windows users only. If you're a game writer, please consider using cross platform libraries and stay away from DirectX.\nA company named realtechVR started an open source project, DirectX Port, < http://www.v3x.net/directx > which, like wine, provides a Direct3D emulation layer that implements Direct3D calls. The project was focused on the BeOS platform, but is now focused on MacOS and Linux. You can get the latest cvs from their sourceforge page at < http://sourceforge.net/projects/dxglwrap >.\n3.15. Clanlib\nClanLib is a medium level development kit. At its lowest level, it provides a platform independent (as much as that is possible in C++) way of dealing with display, sound, input, networking, files, threading and such. ClanLib builds a generic game development framework, giving you easy handling of resources, network object replication, graphical user interfaces (GUI) with theme support, game scripting and more.\n4. XFree86 and You\nIf you're going to game under X, it's crucial that you know a bit about X. The \"X Window User HOWTO\", and especially \"man XF86Config\" are required reading. Don't short change yourself; read them. They have an extremely high \"information to space\" ratio. Many problems can be fixed easily if you know your way around XF86Config (or XF86Config-4).\n4.1. Getting information about your X system\nWhether you're trying to diagnose an X problem or requesting help from a mailing list or Usenet newsgroup, you'll want to have as much information available as possible. These are a set of tools you can use to obtain that information.\n4.1.1. Probeonly\nOne of the best diagnostic tools and sources of information about your X system is probeonly output. To use it, kill X if it's already running and from a console, type:\nX -probeonly 2> X.out\nYes, that's a single dash; so much for standards. The output of X goes to stderr, so we have to redirect stderr with \"2>\" to a file named X.out. This file will have almost everything there is to know about your X system. It's crucial that you know the difference between the various markers you'll see in probeonly output:\n(--) probed              (**) from config file    (==) default setting\n    (++) from command line   (!!) notice              (II) informational\n    (WW) warning             (EE) error               (??) unknown.\nHere's an example of some information I gleaned from my output:\nI'm running at 16 bpp color:\n(**) TDFX(0): Depth 16, (--) framebuffer bpp 16\nX has detected what my videocard chipset and videoram are:\n(--) Chipset 3dfx Voodoo5 found\n    (--) TDFX(0): VideoRAM: 32768 kByte Mapping 65536 kByte\n4.1.2. Getting info about your setup: xvidtune\nxvidtune is your friend when your X screen is shifted a little bit too far to the right, or if the vertical length is too small to fit on your monitor. However, it's a great diagnostic tool also. It'll give you:\nthe hsync/vsync range specified in your XF86Config file\nthe 4 horizontal and 4 vertical numbers which defines your videomode (the 1st horizontal/vertical numbers gives the screen resolution). These 8 numbers will tell you which modeline your X uses. See the XFree86 Video Timings Howto for more information. Note that explicit modelines are no longer necessary, since XFree 4.0.1 and up computes modetimings automatically based on your monitor's and video card's capabilities. However, there may be times when you'll want to play around with mode timings, like for weird hardware or if want to tweak your display.\nthe \"dot clock\" your videocard is running at.\n4.1.3. Getting info about your setup: xwininfo\nxwininfo tells you all sorts of information about X windows. And actually, your \"background\" or \"root\" window is considered a window too. So when xwininfo asks you to click on the window you want the information on, click on your background. It'll tell you things like screen and window resolution, color depth, window gravity state (which gives a hint to the window manager about where to place new windows), backing store usage and more.\n4.1.4. Other sources of information\nxdpyinfo gives cool stuff, like X version and loaded extensions (invaluable when trying to see what's missing, like GLX, DRI, XFree86-VidMode, etc.).\n4.1.5. Getting information about your 3D system\nglxinfo gives lots of useful information about OpenGL like whether direct rendering enabled, the currently installed versions of glx and mesa, vendor/renderer strings, the GL library files being used and more.\n4.2. Playing Games In X Without a Window Manager\nWhen playing a game under X, you should consider starting X without a window manager (WM). Heavyweight WMs, like Enlightenment, or full-blown desktop environments like GNOME or KDE, may produce a noticeable slow down. Even lightweight WMs, like twm, rob your CPU of clock cycles (and in twm's case, even full screen games will have a frame around the window). Running a game without a WM or DE depends on how you access X. If you usually log in to a Virtual Console and start X with \"startx\" try the following:\nModify ~/.xinitrc, which tells X what to run upon starting. Here is what my .xinitrc looks like:\n#quake3 +set r_gldriver libGR.so.1\n      #exec ut\n      #lsdldoom -server 2\n      #exec tribes2\n      exec /usr/bin/enlightenment\nYou'll usually see a window or desktop manager being executed from this file (GNOME or KDE). Comment out the lines containing the WM or desktop manager with a pound sign (#) and place your game on a new line with any command line arguments you want to pass. If the game is not located in your $PATH, give its full path name.\nIf you log directly into X using gdm, then things are a little different. These instructions are for gdm 2.4 or greater. They *may* work with kde, but I cannot say for certain.\nFirst, check your gdm.conf (usually in /etc/X11/gdm or /etc/gdm) file for a line that says begins \"SessionDesktopDir=blah\". One of the directories listed as options should be \"/usr/share/xsessions\", and is the directory which will be used in this example. As root, change to the \"/usr/share/xsessions\" directory and take a look at its contents. It should contain some .desktop files, each corresponding to an entry you'll see in gdm's Session menu, e.g gnome.desktop, enlightenment.destop. This example will show you how to log in to Doom3. Copy any of the desktop files to \"doom3.desktop\" and open the new file in your favourite text editor. The file will be full of alternative languages, so cut out everything you don't want and make the file look like this:\n[Desktop Entry]\n      Encoding=UTF-8\n      Name=DOOM III\n      Comment=iD's Doom III\n      #if game is not in path, remember to put the full path here\n      Exec=/usr/games/doom3/doom3\n      # no icon yet, only the top three are currently used\n      Icon=\n      Type=Application\nSave the file and log out of your window manager. At the gdm login screen, you should now see \"DOOM III\" as an option in \"Sessions\". Naturally you can add a .desktop file for each game you have installed\n5. Various Topics\n5.1. Memory Type Range Registers\nStarting with Pentium class processors and including Athlon, K6-2 and other CPUs, there are Memory Type Range Registers (MTRR) which control how the processor accesses ranges of memory locations. Basically, it turns many smaller separate writes to the video card into a single write (a burst). This increases efficiency in writing to the video card and can speed up your graphics by 250% or more.\nSee /usr/src/linux/Documentation/mtrr.txt for details. Note that since this file was written, XFree86 has been patched to automatically detect your video RAM base address and size and set up the MTRRs.\n5.2. Milking performance from your system for all it's worth\nIf for some reason you're using X 3.3, follow the instructions given by mtrr.txt (see Section 5.1 ) to set up your MTRRs. X 4.0 does this automatically for you.\nIf you're playing a game under X, don't run a window manager, and certainly don't run a desktop manager like GNOME or KDE. See Section 4.2 for details.\nKill all non-essential processes (you'll have to do this as root) by using the startup scripts on your system. On Debian, the startup scripts for run-level 2 are located in /etc/rc2.d/. You can kill a service in an orderly manner by sending its startup script the `stop' command:\n# cd /etc/rc2.d\n    # ./ntpd stop\nAnother (radical) option is to simply put yourself in single-user mode with\n# telinit 1\nThis will even get rid of getty; your system will only be running whatever is absolutely crucial to its operation. You'll have something like 10 processes running. The downside is that you'll have to play the game as root. But your process table will be a ghost town, and all that extra CPU will go straight to your game.\n5.3. About libraries on Linux\nA common problem you'll see in gaming is a library file not being found. They're kind of mysterious and have funny names, so we'll go over libraries on Linux for a bit. There are two types of libraries, static and dynamic. When you compile a program, by default, gcc uses dynamic libraries, but you can make gcc use static libraries instead by using the -static switch. Unless you plan on compiling your games from source code, you'll mainly be interested in dynamic libraries.\n5.3.1. Dynamic libraries\nDynamic libraries, also called a \u201cshared library\u201d, provide object code for an application while it's running. That is, code gets linked into the executable at run time, as opposed to compile time. They're analagous to the .dll's used by Windows. The program responsible for linking code \u201con the fly\u201d is called /etc/ld.so, and the dynamic libraries themselves usually end with .so with a version number, like:\n/usr/lib/libSDL.so\n    /lib/libm.so.3\nWhen using gcc, you refer to these libraries by shaving off the strings lib, .so and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `place a memo inside the executable' that says to look at the files /usr/lib/libSDL.so and /lib/libm.so.3 whenever an SDL or math function is used.\n5.3.2. Static libraries\nIn contrast to dynamic libraries which provide code while the application runs, static libraries contain code which gets linked (inserted) into the program while it's being compiled. No code gets inserted at run time; the code is completely self-contained. Static libraries usually end with .a followed by a version number, like:\n/usr/lib/libSDL.a\n    /usr/lib/libm.a\nThe .a files are really an archive of a bunch of .o (object) files archived together, similar to a tar file. You can use the nm to see what functions a static library contains:\n% nm /usr/lib/libm.a\n    ...\n    e_atan2.o:\n    00000000 T __ieee754_atan2\n    \n    e_atanh.o:\n    00000000 T __ieee754_atanh\n    00000000 r half\n    00000010 r limit\n    00000018 r ln2_2\n    ...\nWhen using gcc, you refer to these libraries by shaving off the strings \u201clib\u201d, \u201c.a\u201d and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `bolt on' code from /usr/lib/SDL.a and /usr/lib/libm.a whenever it sees a math function during the compilation process.\n5.3.3. How are library files found\nIf you compile your own games, your biggest problem with libraries will either be that gcc can't find a static library or perhaps the library doesn't exist on your system. When playing games from binary, your library woes will be either be that ld.so can't find the library or the library doesn't exist on your system. So it makes some sense to talk about how gcc and ld.so go about finding libraries in the first place.\ngcc looks for libraries in the ``standard system directories'' plus any directories you specify with the -L option. You can find what these standard system directories are with gcc -print-search-dirs\nld.so looks to a binary hash contained in a file named /etc/ld.so.cache for a list of directories that contain available dynamic libraries. Since it contains binary data, you cannot modify this file directly. However, the file is generated from a text file /etc/ld.so.conf which you can edit. This file contains a list of directories that you want ld.so to search for dynamic libraries. If you want to start putting dynamic libraries in /home/joecool/privatelibs, you'd add this directory to /etc/ld.so.conf. Your change doesn't actually make it into /etc/ld.so.cache until you run ldconfig; once it's run, ld.so will begin to look for libraries in your private directory.\nAlso, even if you just add extra libraries to your system, you must update ld.so.cache to reflect the presence of the new libraries.\n5.3.4. Finding Out What Libraries a Game Depends On\nMost commercial Linux games will be dynamically linked against various LGPL libraries, such as OpenAL or SDL. For these examples, Bioware's NeverWinter Nights < http://nwn.bioware.com > will be used.\nTo find out what libraries a game uses, we can use the \"ldd\" command. Cd to /usr/games/nwn, or wherever you installed it and take a look at the files. You should see a file called nwmain; this is the actual game binary. Type \"ldd nwmain\" and you'll see:\n$ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => not found\n       libSDL-1.2.so.0 => /usr/lib/libSDL-1.2.so.0 (0x40178000)\n       libc.so.6 => /lib/libc.so.6 (0x401ff000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40319000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x409f1000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x409f3000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a01000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40acd000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40ad1000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40b88000)\n       libasound.so.2 => /usr/lib/./libasound.so.2 (0x40b90000)\nldd shows all the libraries a dynamic executable relies on, and shows you where they are. It also \"pulls in\" the dependencies of the dependencies. For instance, while NWN does not itself depend on libnvidia-tls.so, the Nvidia supplied libGL on my system does.\nMissing libraries?\nIn the example above, we can see that nwmain wants libmss.so.6, and the linker cannot find it. Usually, a missing library is a crash waiting to happen. There is one other thing to consider though: The majority of games are actually launched by a \"wrapper\", a shell script that performs some magic prior to launching the game. In the case of NWN, the wrapper is called nwn. Let's take a look at that now:\n$ less nwn\n   #!/bin/sh\n   \n   # This script runs Neverwinter Nights from the current directory\n   \n   export SDL_MOUSE_RELATIVE=0\n   export SDL_VIDEO_X11_DGAMOUSE=0\n   \n   # If you do not wish to use the SDL library included in the package, remove\n   # ./lib from LD_LIBRARY_PATH\n   export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   \n   ./nwmain $@\nThis script sets up some environment variables, then launches the game binary with whatever command line options we added. The relevant part here is the environment variable called \"LD_LIBRARY_PATH\". This is a way of adding to the linkers search path. Try copying the line to your shell and seeing what happens when you re-run ldd.\n$ export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   $ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => ./miles/libmss.so.6 (0x40178000)\n       libSDL-1.2.so.0 => ./lib/libSDL-1.2.so.0 (0x401ec000)\n       libc.so.6 => /lib/libc.so.6 (0x4025e000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40378000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x40a50000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x40a52000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a60000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40b2c000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40b30000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40be7000)\nAs you can see, this gives us slighly different results. The NWN library directories have been prepended to the search path, so now the linker can find libmss.so.6 in the \"./miles\" directory, and also finds the local copy of libSDL first, no longer using the system copy.\nThere's another benefit of these scripts: they are easily edited to allow you to provide your own copy of a library. Any game-supplied copy of a library such as OpenAL or SDL is likely to be compiled for the lowest common denominator, probably i486 or i686. If you have a Pentium4 or an AthlonXP, you could compile you own version specifically for your processor. The compiler will try to optimise the resulting binary, giving some increase in performance. See the homepage for GCC for more information this at the GCC site.\nMaking NWN use your system copy is easy. It says so in the wrapper script! Remove \"./lib:\" from the LD_LIBRARY_PATH line, and you're good to go.\nAnother nice little trick is for games that use OpenAL for their sound output (e.g. Unreal based games: UT, Postal, Rune, etc.). Since the Open Sound System's (OSS) deprecation in favour of ALSA, all Linux distributions I've seen now ship with ALSA support as default, with OSS support actually being supplied via ALSA's compatability modules. The copies of openal.so distributed with games often do NOT support ALSA, so making the game use a copy compiled yourself will allow you to use ALSA natively.\n6. When Bad Things Happen To Good People\nOf course we can't cover every Bad Thing that happens, but I'll outline some items of common sense.\nThere are two types of bad things: random and repeatable. It's very difficult to diagnose or fix random problems that you don't have any control over when they happen or not. However, if the problem is repeatable \"it happens when I press the left arrow key twice\", then you're in business.\n6.1. RTFM!\nRead the friendly manual. The `manual' can take on a few forms. For open source games there's the readme files that come with the game. Commercial games will have a printed manual and maybe some readme files on the CD the game came on. Don't forget to browse the CD your game came on for helpful tips and advice.\nDon't forget the game's website. The game's author has probably seen people with your exact same problem many times over and might put information specific to that game on the website. A prime example of this is Loki Software's online FAQs located at http://faqs.lokigames.com .\n6.2. Look For Updates and Patches\nIf you're playing an open source game that you compiled, make sure you have the newest version by checking the game's website. If your game came from a distro make sure there's not an update rpm/deb for the game.\nCommercial game companies like Loki release patches for their games. Often a game will have MANY patches (Myth2) and some games are unplayable without them (Heretic2). Check the game's website for patches whether you have a problem running the game or not; there may be an update for a security problem that you may not even be aware of.\nBy the way, Loki now has a utility that searches for Loki Software on your hard drive and automatically updates them. Check out http://updates.lokigames.com .\n6.3. Newsgroups\nIf you don't know what netnews (Usenet) is, then this is definitely worth 30 minutes of your time to learn about. Install a newsreader. I prefer console tools more, so I use tin, but slrn is also popular. Netscape has a nice graphical \"point and click\" newsreader too.\nFor instance, I can browse Loki Software's news server with tin -g news.lokigames.com. You can also specify which news server to use using the $NNTP environment variable or with the file /etc/nntpserver.\n6.4. Google Group Search\nEvery post made to Usenet gets archived at Google's database at http://groups.google.com . This archive used to be at http://www.deja.com , but was bought by Google. Many people still know the archive as \"deja\".\nIt's almost certain that whatever problem you have with Linux, gaming related or not, has already been asked about and answered on Usenet. Not once, not twice, but many times over. If you don't understand the first response you see (or if it doesn't work), then try one of the other many replies. If the page is not in a language you can understand, there are many translation sites which will convert the text into whatever language you like, including http://www.freetranslation.com and http://translation.lycos.com . My web browser of choice, Opera (available at http://www.opera.com ) allows you to use the right mouse button to select a portion of text and left click the selection to translate it into another language. Very useful when a Google group search yields a page in German which looks useful and my wife (who reads German well) isn't around.\nThe Google group search has a basic and advanced search page. Don't bother with the simple search. The advanced search is at http://groups.google.com/advanced_group_search .\nIt's easy to use. For example, if my problem was that Quake III crashed everytime Lucy jumps, I would enter \"linux quake3 crash lucy jumps\" in the \"Find messages with all of the words\" textbox.\nThere are fields for which newsgroup you want to narrow your search to. Take the time to read and understand what each field means. I promise you. You won't be disappointed with this service. Use it, and you'll be a much happier person. Do note that they don't archive private newsgroups, like Loki Software's news server. However, so many people use Usenet, it almost doesn't matter.\n6.5. Debugging: call traces and core files\nThis is generally not something you'll do for commercial games. For open source games, you can help the author by giving a corefile or stack trace. Very quickly, a core file (aka core dump) is a file that holds the \"state\" of the program at the moment it crashes. It holds valuable clues for the programmer to the nature of the crash -- what caused it and what the program was doing when it happened. If you want to learn more about core files, I have a great gdb tutorial at http://www.dirac.org/linux .\nAt the *very* least, the author will be interested in the call stack when the game crashed. Here is how you can get the call stack at barf-time:\nSometimes distros set up their OS so that core files (which are mainly useful to programmers) aren't generated. The first step is to make your system allow unlimited coresizes:\nulimit -c unlimited\nYou will now have to recompile the program and pass the -g option to gcc (explaining this is beyond the scope of this document). Now, run the game and do whatever you did to crash the program and dump a core again. Run the debugger with the core file as the 2nd argument:\n$ gdb CoolGameExecutable core\nAnd at the (gdb) prompt, type \"backtrace\". You'll see something like:\n#0 printf (format=0x80484a4 \"z is %d.\\n\") at printf.c:30\n    #1 0x8048431 in display (z=5) at try1.c:11\n    #2 0x8048406 in main () at try1.c:6\nIt may be quite long, but use your mouse to cut and paste this information into a file. Email the author and tell him:\nThe game's name\nAny error message that appears on the screen when the game crashes.\nWhat causes the crash and whether it's a repeatable crash or not.\nThe call stack\nIf you have good bandwidth, ask the author if he would like the core file that his program dumped. If he says yes, then send it. Remember to ask first, because core files can get very, very big.\n6.6. Saved Games\nIf your game allows for saved games, then sending the author a copy of the saved game is useful because it helps the tech reproduce whatever is going wrong. For commercial games, this option is more fruitful than sending a core file or call stack since commercial games can't be recompiled to include debugging information. You should definitely ask before sending a save game file because they tend to be long, but gaming companies usually have lots of bandwidth. Mike Phillips (formerly of Loki Software) mentioned that sending in saved games to Loki is definitely a good thing.\nNeedless to say, this only applies if your game crashes reproducably at a certain point. If the game segfaults every time you run it, or is incredibly slow, a saved game file won't be of much help.\n6.7. What to do when a file or library isn't being found (better living through strace)\nSometimes you'll see error messages that indicate a file wasn't found. The file could be a library:\n% ./exult \n ./exult: error while loading shared library: libSDL-1.2.so.0: cannot load shared object\n file: No such file or directory\nor it could be some kind of data file, like a wad or map file:\n% qf-client-sdl  \n IP address 192.168.0.2:27001 UDP Initialize Error: W_LoadWadFile: couldn't load gfx.wad\nSuppose gfx.wad is already on my system, but couldn't be found because it isn't in the right directory. Then where IS the right directory? Wouldn't it be helpful to know where these programs looked for the missing files?\nThis is where strace shines. strace tells you what system calls are being made, with what arguments, and what their return values are. In my `Kernel Module Programming Guide' (due to be released to LDP soon), I outline everything you may want to know about strace. But here's a brief outline using the canonical example of what strace looks like. Give the command:\nstrace -o ./LS_LOG /bin/ls\nThe -o option sends strace's output to a file; here, LS_LOG. The last argument to strace is the program we're inspecting, here, \"ls\". Look at the contents of LS_LOG. Pretty impressive, eh? Here is a typical line:\nopen(\".\", O_RDONLY|O_NONBLOCK|0x18000)  = 4\nWe used the open() system call to open \".\" with various arguments, and the return value of the call is 4. What does this have to do with files not being found?\nSuppose I want to watch the StateOfMind demo because I can't ever seem to get enough of it. One day I try to run it and something bad happens:\n% ./mind.i86_linux.glibc2.1 \n    Loading & massaging...\n    Error:Can't open data file 'mind.dat'.\nLet's use strace to find out where the program was looking for the data file.\nstrace ./mind.i86_linux.glibc2.1 2> ./StateOfMind_LOG\nPulling out vim and searching for all occurrences of mind.dat, I find the following lines:\nopen(\"/usr/share/mind.dat\",O_RDONLY) = -1 ENOENT (No such file)\n    write(2, \"Error:\", 6Error:)   = 6\n    write(2, \"Can\\'t open data file \\'mind.dat\\'.\"..., ) = 33\nIt was looking for mind.dat in only one directory. Clearly, mind.dat isn't in /usr/share. Now we can try to locate mind.dat and move it into /usr/share, or better, create a symbolic link.\nThis method works for libraries too. Suppose the library libmp3.so.2 is in /usr/local/include but your new game \"Kill-Metallica\" can't find it. You can use strace to determine where Kill-Metallica was looking for the library and make a symlink from /usr/local/include/libmp3.so.2 to wherever Kill-Metallica was looking for the library file.\nstrace is a very powerful utility. When diagnosing why things aren't being found, it's your best ally, and is even faster than looking at source code. As a last note, you can't look up information in source code of commercial games from Lokisoft or Tribsoft. But you can still use strace with them!\n6.8. Hosed consoles\nSometimes a game will exit abnormally and your console will get `hosed'. There are a few definitions of a hosed console. The text characters could look like gibberish. Your normally nice black screen could look like a quasi-graphics screen. When you press ENTER, a newline doesn't get echo'ed to the screen. Sometimes, certain keys of the keyboard won't respond. Logging out and back in don't always work, but there are a few things that might:\nIf you don't see any character on the screen as you type in, your terminal settings may be wrong. Try \"stty echo\". This should let input characters echo again.\nAt the prompt, type \"reset\". This should clear up many problems, including consoles hosed by an SVGAlib or ncurses based game.\nTry running the game again and normally. Once I had to kill Quake III in a hurry, so I performed a Ctl-Alt-Backspace. The console was hosed with a quasi-graphics screen. Running Quake III and quitting normally fixed the problem.\nThe commands deallocvt and openvt will work for most of the other problems you'll have. deallocvt N kills terminal N entirely, so that Alt-FN doesn't even work anymore. openvt -c N starts it back up.\nIf certain keys on your keyboard don't work, be creative. If you want to reboot but the `o' key doesn't work, try using halt. One method I've come up with is typing a command at the prompt and using characters on the screen with mouse cut/paste. For example, you can type \"ps ax\", and you're sure to have an `h', `a', `l' and a `t' somewhere on the screen. You can use the mouse to cut and paste the word \"halt\".\nThe most regrettable option is a reboot. If you can, an orderly shutdown is preferable; use \"halt\" or \"shutdown\". If you can't, ssh in from a another machine. That sometimes works when your console is very badly hosed. In the worst case scenario, hit the reset or power switch.\nNote that if you use a journalling filesystem like ext3, reiserfs or xfs, hitting the power switch isn't all that bad. You're still supposed to shutdown in an orderly manner, but the filesystem integrity will be maintained. You won't normally see an fsck for the partitions that use the journalling filesystem.\n6.9. Locked System\nWhen a computer \"locks\", also called \"hung\", the keyboard and mouse become completely unresponsive. This is a direct consequence of a bug in the Linux kernel. While Linux is known for stability, these things do happen, especiallly for gaming which entails highly synchronized hardware events which occur very fast, even to a computer. When a computer locks, it can be a \"hard lock\", meaning the kernel has completely stopped functioning. This often indicates misbehaving or faulty hardware. There's no recovery from this kind of lock other than pressing the reset or power button. The lock can also be a \"soft lock\", meaning that the kernel is still functioning in some capacity. It's possible to recover from this gracefully.\nThe first thing you should try is to hit control-alt-backspace which kills X. If you gain control of your system, the kernel wasn't really locked in the first place. If this didn't work after a few seconds, you'll definitely want to reboot the system using the following instructions.\nUse control-alt-delete to reboot the system. You'll know this worked if you hear the computer beep after a few seconds (this is BIOS saying \"I'm OK\" during a power on cycle).\nLog into another system and ssh into the hung system. If you can ssh in, reboot or halt the system.\nIf you can't ssh into the system, you'll need to use the \"magic SysRq key\" which is documented in /usr/src/linux/Documentation/sysrq.txt. Here's a summary for the x86 architecture (see the documentation for other architectures). Note if your keyboard doesn't have a SysRq key, use the PrintScreen key:\nHit alt-SysRq-s. This will attempt to sync your mounted filesystems so that changes to files get flushed to disk. You may hear disk activity. If you're looking at a console, the system should print the devices which were flushed.\nA few seconds later, hit alt-SysRq-u. This will attempt to remount all your mounted filesystems as read-only). You should hear disk activity. If you're looking at a console, the system will print the devices which were remounted.\nA few seconds later, use alt-SysRq-b to reboot the system.\nYou can hit alt-SysRq-h for a very terse help screen.\nTo use the magic SysRq key, your kernel needs to have been compiled with magic SysRq support. You'll find this option under \"Kernel Hacking | Kernel Debugging | Magic SysRq key\" in whatever kernel config menu you like to use. If the magic SysRq key sequence doesn't shut your system down gracefully, your kernel has crashed hard and you'll need to use the reset or power button to recover.\n7. Video Cards\n7.1. History\nOnce upon a time, a company in San Jose, California named 3dfx Interactive was king of the gaming video card market. In October 1996 they released the Voodoo I, which was a phenomenal success. It was the first hardware accelerated card, but only rendered 3D; it had to be piggybacked with a 2D video card. The idea was that 2D rendering was handled by a high quality 2D video card (Matrox was immensely popular at the time) but 3D information (see Glide2, Section 3.1 ) would be passed to the Voodoo I and rendered, using the Voodoo's fast hardware to perform the necessary graphics calculations. They released the Voodoo Rush in April 1996. It should've been a more powerful card, with a 50MHz GPU and 8MB of RAM. Even better, it was their first combined 2D/3D card, meaning that it freed up a valuable PCI slot (most PC's only had a couple of PCI slots back then) but the Rush wasn't as popular. 3dfx removed the multi-texturing unit from the Rush, and it was outperformed by the Voodoo I. At the time, ATI had their Rage series and nVidia had their Riva 128, but the Voodoo I blew them all away.\nThis was a good time for Linux. id Software's open sourced the Doom codebase and ported Quake I to Linux (December 1996). We were getting our first tastes of real commercial gaming. Life was simple: you purchased a Voodoo. And it felt good, because 3dfx open sourced their drivers. The king of video cards worked with Linux developers. Not only did we have the best video cards, but the drivers were all open source.\nIn March 1998, 3dfx released their Voodoo II, with its 3.6GB/sec memory bandwith, 12MB of video memory and 90MHz core. It supported resolutions up to 1024x768. This was 3dfx in its heyday. Like the Voodoo I, the Voodoo II was a 3D only card, and piggy backed with a 2D video card. The Voodoo Banshee was released in September 1998 as a combined 2D/3D card, like the Rush. Despite the faster 100MHz core, the Banshee was outperformed by the Voodoo II because its multi-texturing unit was removed, like with the Rush. And again like the Rush, it wasn't popular. But 3dfx reigned supreme, and nobody could touch them.\nIn April 1999, the Voodoo III was released. There were a number of Voodoo III's, ranging from a 143MHz core speed to 183MHz. There were TV-out versions. There were PCI and AGP versions (it was the first AGP video card). It was another success, but 3dfx began to lose ground to nVidia, which released their TNT 2. The TNT 2 outperformed the Voodoo II, and accelerated 3D graphics at full 32 bit color, while the Voodoo's were stuck at 16 bit color. But life was still good for Linux. We had a card that was almost neck-to-neck with nVidia, our drivers were open source, and in December 1999, id Software gave us a huge gift: they open sourced the Quake I codebase.\nThen nVidia released the GeForce 256 in October 1999. 3dfx's Voodoo IV, its direct competitor, was about a year late which is very bad when you're competing for a bleeding edge market. While nVidia was putting real R&D into their cards, 3dfx was simply adding more and faster RAM. The Voodoo IV and V rendered in full 32bpp color, had great AA support ( Section 7.4.3 ), featured a 2nd GPU, more memory, and was arguably the king of of video cards. However, 3dfx's late release of the Voodoo IV and V coupled with the fact that the GeForce could be had for half the price meant that 3dfx was sinking fast. For Linux, the newest Voodoo's could only accelerate at 16 and 24 bit color. Worse still, the Voodoo V's 2nd GPU was unused by the Linux driver (and to this day, the Voodoo V is functionally equivalent to the single GPU Voodoo IV on Linux). Most Windows users were switching to nVidia, and despite the fact that the nVidia drivers were proprietary, even Linux users began to jump onto the nVidia bandwagon. VA Linux, the largest Linux server vendor, put nVidia into their machines.\nThen in April 2000, 3dfx was attacked on a different front: ATI started releasing their first generation Radeons. Until this point, ATI had always been an innovative (they developed their own 3D acceleration chips in 1996, about the same time as 3dfx), but sleepy graphics chipset manufacturer. The Radeons were their first 3D accelerated card that gamers took any real serious interest in. Their Radeons trounced both nVidia and 3dfx. They worked with Linux developers, open sourced all their drivers and were hailed as the great hope for Linux gaming. nVidia came back with fists swinging, and this was all too much for 3dfx. Between losing the benchmark wars to the GeForce and Radeon, their lateness with new cards and high prices, 3dfx lost its market share and didn't have the funds to stay into business. On April 18 2001, they sold most of their assets and technology to nVidia, and in October 2002, they finally declared bankruptcy.\nThe demise of 3dfx was quite sudden and a slap in the face to the open source community. I still remember my friend Gabe Rosa emailing me with just \"Look at /.\" and seeing the news. It was the 2nd worst day for Linux gaming (the 1st being the demise of Loki). And it was also a shame. 3dfx was getting ready to release a new Voodoo V featuring 4 GPU's which would've trounced the ATI and nVidia offerings, as well as a new card code named \"Rampage\" which reportedly would've put them firmly back as the king of the hill. There are reports that the Rampage's technology (which was sold to nVidia) went into the GeForce 5900. Not too shabby for 3 year old technology!\nAt first, things were still simple. Linux gamers would either keep their open source Voodoos, get an open source Radeon or a closed source GeForce. However, with bigger and better games on the horizon, it was only a matter of time before the Voodoos would no longer be a viable graphics card for modern gaming. People were still using Voodoo's, but they were essentially out of the game at this point.\nATI started to release a tremendous number of versions of each video card, and keeping up with them and their terminology started to become very difficult. ATI, together with nVidia, played king of hill. Their products have been neck to neck ever since, with GeForce taking the lead a bit more times than the Radeon. But the Radeon's drivers were open source, so many Linux users stuck by them. Then things got even more complicated.\nATI started becoming more and more reluctant to open source drivers for their new releases, and suddenly, it wasn't clear who the \"good guy\" was anymore. nVidia's party line was they license some of their GL code from another company, and is thus non-releasable. Presumably, ATI doesn't want to release drivers to keep their trade secrets, well, a secret. And it gets worse. The ATI Linux drivers have been plagued by extremely poor performance. Even when an ATI offering is better than the current GeForce offering for Windows, the card is always trounced by GeForce on Linux. Because of the ATI Linux driver woes, Linux users cannot use MS Windows based benchmarks or card stats. They simply don't apply to us. And that's pretty much where we are right now.\nAs a last note, the only systematic Linux video card benchmarking effort I'm aware of was done, unfortunately, in March 2001, between a Radeon 32 DDR and a GeForce 2. You can read it for yourself at http://www.linuxhardware.org/features/01/03/19/0357219.shtml , but conclusion is that the GeForce 2 firmly and soundly trounced the Radeon 32 DDR.\n7.2. Current Status (1 March 2004)\nnVidia's latest offering is the GeForce 5900, based on the NV35 chipset. It's well supported by Linux with high quality but proprietary drivers. nVidia uses a convenient combined driver architecture; their driver will support the TNT 2 all the way up to the GeForce 5900. Although their drivers are closed source, as a company, nVidia has been supportive and good to Linux users.\nATI's has worked with Linux developers for their Radeons up to and including the Radeon 9200, which have 2D and 3D support in XFree86. I'm not entirely sure of the quality of these open source drivers, however, Soldier of Fortune I and Heavy Metal still have opaque texture problems under first generation Radeons. Beyond the 9200, you need to use ATI's binary only proprietary drivers, available in rpm format from ATI's website. It's claimed that these drivers are piss poor; a friend of mine claims his GeForce 4400 outperforms his Radeon 9700 pro. That's shameful.\nOn paper, and in the Windows benchmarks, the Radeon 9800 trounces the ill-conceived GeForce 5800 and slightly edges out the GeForce 5900. On paper, it's simply the more impressive card. But again, the driver issue makes this information unusable for us. If you have your heart set to buy the best card for Linux, you'll want to go with the GeForce 5900.\n7.2.1. SVGAlib Support\nAs of June 2002, SVGAlib support Radeon cards is shaky. Developers have reported that SVGAlib works on the Radeon 7500, Radeon QD (64MB DDR model) but has problems on the Radeon VE.\nI have no information about SVGAlib and the GeForce cards.\n7.3. Which Video Card Should I Buy? (1 March 2004)\nThe answer was very difficult last year, but here's my take on it these days:\nAll GeForce cards require a proprietary driver which will \"taint\" your kernel. However, all ATI cards beyond the Radeon 9200 also require a proprietary driver that will \"taint\" your kernel as well.\nnVidia has proven that they care enough about Linux to write and maintain current and very high quality drivers for Linux. Even when ATI open sourced its video card driver, they played the \"we'll make Linux developers write our drivers for us\" game. Their current proprietary drivers are below par.\nThe current Radeon 9800 barely beats out the GeForce 5900 in benchmarks and card specs, but Linux users won't benefit from this because of driver issues..\nATI has a very long history of dropping support for hardware as fast as they can get away with it.\nOn MS Windows, when the GeForce beat out its main competing Radeon, the review claimed that the Radeon generally had better visuals. I have no idea how this translates to Linux.\nDon't get the GeForce 5800. Card reviews claim that it has some serious heat, noise, and dust issues. It's informally called the \"dust buster\" because of noise its fan makes.\nIf you absolutely only want open source drivers on your system, the Radeon 9200 is the best card you can buy.\nIf you have a Linux/Windows dual boot, consider either the Radeon 9800 or the GeForce 5900. The Radeon will be slightly stronger on Windows. The GeForce will be stronger on Linux.\nIf you have a Linux only system, the GeForce 5900 is your best bet. As of today, the 256MB version comes in at a whopping $350, however, the 128MB version is more reasonable.\n7.4. Definitions: Video Card and 3D Terminology\nWe'll cover video card and 3D graphics terminology. This material isn't crucial to actually getting a game working, but may help in deciding what hardware and software options are best for you.\n7.4.1. Textures\nA rendered scene is basically made up of polygons and lines. A texture is a 2D image (usually a bitmap) covering the polygons of a 3D world. Think of it as a coat of paint for the polygons.\n7.4.2. T&L: Transform and Lighting\nThe T&L is the process of translating all the 3D world information (position, distance, and light sources) into the 2D image that is actually displayed on screen.\n7.4.3. AA: Anti Aliasing\nAnti aliasing is the smoothing of jagged edges along a rendered curve or polygon. Pixels are rectangular objects, so drawing an angled line or curve with them results in a 'stair step' effect, also called the 'jaggies'. This is when pixels make, what should be a smooth curve or line, jagged. AA uses CPU intensive filtering to smooth out these jagged edges. This improves a game's visuals, but can also dramatically degrade performance.\nAA is used in a number of situations. For instance, when you magnify a picture, you'll notice lines that were once smooth become jagged (try it with The Gimp). Font rendering is another big application for AA.\nAA can be done either by the application itself (as with The Gimp or the XFree86 font system) or by hardware, if your video card supports it. Since AA is CPU intensive, it's more desirable to perform it in hardware, but if we're talking about semi-static applications, like The Gimp, this really isn't an issue. For dynamic situations, like games, doing AA in hardware can be crucial.\n7.4.4. FSAA: Full Screen Anti-Aliasing\nFSAA usually involves drawing a magnified version of the entire screen in a separate framebuffer, performing AA on the entire image and rescaling it back to the normal resolution. As you can imagine, this is extremely CPU intensive. You will never see non hardware accelerated FSAA.\n7.4.5. Mip Mapping\nMip mapping is a technique where several scaled copies of the same texture are stored in the video card memory to represent the texture at different distances. When the texture is far away a smaller version of the texture (mip map) is used. When the texture is near, a bigger one is used. Mip mapping can be used regardless of filtering method ( Section 7.4.6 ). Mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.\n7.4.6. Texture Filtering\nTexture filtering is the fundamental feature required to present sweet 3D graphics. It's used for a number of purposes, like making adjacent textures blend smoothly and making textures viewed from an angle (think of looking at a billboard from an extreme angle) look realistic. There are several common texture filtering techniques including point-sampling, bilinear, trilinear and anisotropic filtering.\nWhen I talk about 'performance hits', keep in mind that the performance hit depends on what resolution you're running at. For instance, at a low resolution you may get only a very slight hit by using trilinear filtering instead of bilinear filtering. But at high resolutions, the performance hit may be enormous. Also, I'm not aware of any card that uses anisotropic texture filtering. TNT drivers claim they do, but I've read that these drivers still use trilinear filtering when actually rendering an image to the screen.\n7.4.6.1. Point Sampling Texture Filtering\nPoint sampling is rare these days, but if you run a game with 'software rendering' (which you'd need to do if you run a 3D accelerated game without a 3D accelerated board) you're likely to see it used.\n7.4.6.2. Bilinear Texture Filtering\nBilinear filtering is a computationally cheap but low quality texture filtering. It approximates the gaps between textures by sampling the color of the four closest (above, below, left and right) texels. All modern 3D accelerated video cards can do bilinear filtering in hardware with no performance hit.\n7.4.6.3. Trilinear Texture Filtering\nTrilinear filtering is a high quality bilinear filter which uses the four closest pixels in the second most suitable mip map to produce smoother transitions between mip map levels. Trilinear filtering samples eight pixels and interpolates them before rendering. Trilinear filtering always uses mip mapping. Trilinear filtering eliminates the banding effect that appears between adjacent mip map levels. Most modern 3D accelerated video cards can do trilinear filtering in hardware with no performance hit.\n7.4.6.4. Anisotropic Texture Filtering\nAnisotropic filtering is the best but most CPU intensive of the three common texture filtering methods. Trilinear filtering is capable of producing fine visuals, but it only samples from a square area which in some cases is not the ideal method. Anisotropic (meaning 'from any direction') samples from more than 8 pixels. The number of sampled pixels and which sampled pixels it uses depends on the viewing angle of the surface relative to your screen. It shines when viewing alphanumeric characters at an angle.\n7.4.7. Z Buffering\nA Z buffer is a portion of RAM which represents the distance between the viewer (you) and each pixel of an object. Many modern 3D accelerated cards have a Z buffer in their video RAM, which speeds things up considerably, but Z buffering can also be done by the application's rendering engine. However, this sort of thing clearly should be done in hardware wherever possible.\nEvery object has a stacking order, like a deck of cards. When objects are rendered into a 2D frame buffer, the rendering engine removes hidden surfaces by using the Z buffer. There are two approaches to this. Dumb engines draw far objects first and close objects last, obscuring objects below them in the Z buffer. Smart engines calculate what portions of objects will be obscured by objects above them and simply not render the portions that you won't see anyhow. For complicated textures this is a huge savings in processor work.\n8. Sound\n8.1. Which sound card is best?\nBy the word \"best\" I mean best for gaming. Gamers want high quality sound for our games with the least amount of tinkering. On the other hand, a musician would have a very different concept of what \"best sound card\" would mean. If you're a musician, you might want to check out the Linux Audio Quality HOWTO .\nNow that Linux is beginning to mature, this question isn't as important as it used to be. Once upon a time, soundcards without onboard MIDI chips (most PCI sound cards) didn't do MIDI. This was mostly a problem for things like xdoom or lxdoom using musserv. These days we have MIDI emulators like Timidity and libraries like SDL which don't require hardware MIDI support. Frankly, I've had many cards and I can't tell the difference between any of them for gaming. If you want to do things like convert a record LP to digital format, then your choice of a soundcard with a professional grade A/D converter is absolutely crucial. For this HOWTO, we'll assume that you're more of a gamer than a studio recording engineer.\nYour decision should be based on what will be the easiest to configure. If you already have a card and it works well, that's good enough. If you're in the market to buy a sound card, get something that will take you a second to configure. PCI cards are much easier to deal with than ISA since you don't need to tell their drivers about which system resources (IRQ, DMA, I/O addresses) to use. Some ISA cards ARE plug-n-play, like the Creative AWE-64, and the Linux kernel has come a long way in auto configuring them.\nMy personal recommendation is any card which has the es1370 or es1371 chip, which uses the es1370 and es1371 sound drivers on Linux. These cards include the older Ensoniq es1370 and newer Creative PCI-128. These cards are extremely cheap and trivial to get working under Linux.\nI used to be a fan of the Creative Soundblaster AWE 32, AWE 64 and AWE 64 gold soundcards. These ISA PnP cards are well supported by both OSS and Alsa. They all use the same E-mu 8000 synthesis chip which enables them to play 32 voices simultaneously (they have 32 \"channels\"). A few notes: First, the Soundblaster AWE HOWTO is very out of date. Second, the AWE 64 and AWE 64 gold can play 64 voices simultaneously, but this is done in software. Creative never released a Linux driver for these cards (and they never released programming information to Linux developers), so Linux users cannot use the extra 32 channels on the AWE 64 and AWE 64 gold. As far Linux users are concerned, all three cards are completely identical (although the AWE 64 gold has gold plated connectors, which are better for sound quality than the more common steel connectors).\nThe Creative Soundblaster Live! is an extremely popular PCI sound card these days. I've never owned one, so I cannot comment here. However, there have been numerous reports about serious problems with the Live! and AMD motherboards that use the 686b southbridge. A google search should turn up alot of information on this problem.\nA more relevent issue is speakers, but even here the difference isn't huge. I've had expensive Altec Lansing speakers perform only slightly better than el-cheapo speakers. You get what you pay for with speakers, but don't expect a huge difference. You'll want to get something with a separate sub-woofer; this does make a difference at a cost of extra power and connector wires.\n8.2. Why isn't my sound working?\nFirst of all, it's probably not the game, it's probably your setup. AFAIK, there are 3 options to getting a sound card configured under Linux: the free OSS sound drivers that come with the Linux kernel, the Alsa drivers and the commercial OSS sound drivers. Personally, I prefer the free OSS drivers, but many people swear by Alsa. The commercial OSS drivers are good when you're having trouble getting your sound card to work by free methods. Don't discount them; they're very cheap (like 10 or 20 bucks), support bleeding edge sound cards and take a lot of guesswork out of the configuring process.\nThere are 5 things that can go wrong with your sound system:\nShared interrupt\nSomething's already accessing the sound card\nYou're using the wrong driver\nA permissions problem\n8.2.1. Shared interrupt\nThe first thing to do is to figure out if you have an IRQ conflict. ISA cards can't share interrupts. PCI cards can share interrupts, but certain types of high bandwidth cards simply don't like to share, including network and sound cards. To find out whether you have a conflict, do a cat /proc/interrupts. Output on my system is:\n$ cat /proc/interrupts\n               CPU0       CPU1\n      0:   24185341          0          XT-PIC  timer\n      1:     224714          0          XT-PIC  keyboard\n      2:          0          0          XT-PIC  cascade\n      5:    2478476          0          XT-PIC  soundblaster\n      5:     325924          0          XT-PIC  eth0\n     11:     131326          0          XT-PIC  aic7xxx\n     12:    2457456          0          XT-PIC  PS/2 Mouse\n     14:     556955          0          XT-PIC  ide0\n    NMI:          0          0\n    LOC:   24186046   24186026\n    ERR:       1353\nThe second column is there because I have 2 CPU's in this machine; if you have one CPU (called UP, or uniprocessor), you'll have only 1 CPU column. The numbers on the left are the assigned IRQ's and the strings to the right indicate what device was assigned that IRQ. You can see I have an IRQ conflict between the soundcard (soundblaster) and the network card (eth0). They both share IRQ 5. Actually, I cooked this example up because I wanted to show you what an IRQ conflict looks like. But if I did have this conflict, neither my network nor my sound would work well (or at all!).\nIf my sound card is PCI, the preferred way of fixing this would be to simply move one of the cards to a different slot and hope the BIOS sorts things out. A more advanced way of fixing this would be to go into BIOS and assign IRQ's to specific slots. Modern BIOS'es can do this.\n8.2.2. Misconfigured driver\nSometimes, a card is hardwired to use a certain IRQ. You'll see this on ISA cards only. Alternatively, some ISA cards can be set to use a specific IRQ using jumpers on the card itself. With these types of cards, you need to pass the correct IRQ and memory access, \"I/O port\", to the driver.\nThis is a sound card specific issue, and beyond the scope of this HOWTO.\n8.2.3. Something is already accessing your sound card\nPerhaps an application is already accessing your soundcard. For example, maybe you have an MP3 player that's paused? If something is already accessing your card, other applications won't be able to. Even though it was written to share the card between applications, I've found that esd (the enlightenment sound daemon) sometimes doesn't work correctly. The best tool to use here is lsof, which shows which processes are accessing a file. Your sound card is represented by /dev/dsp. Right now, I'm listening to an MP3 (not a Metallica MP3, of course...) with mp3blaster.\n# lsof /dev/dsp\n    COMMAND    PID USER   FD   TYPE DEVICE SIZE   NODE NAME\n    mp3blaste 1108    p    6w   CHR   14,3      662302 /dev/dsp\nfuser is similar; but it lets you send a signal to any process accessing the device file.\n# fuser -vk /dev/dsp\n    \n                         USER        PID ACCESS COMMAND\n    /dev/dsp             root       1225 f....  mp3blaster\n                         root       1282 f....  mp3blaster\nAfter issuing this command, mp3blaster was killed with SIGKILL. See the man pages for lsof and fuser; they're very useful. Oh, you'll want to run them as root since you'll be asking for information from processes that may be owned by root.\n8.2.4. You're using the wrong driver (or no driver)\nThere are only two ways to configure your card:\nSupport must be compiled directly into the kernel\nYou must have the correct driver loaded into memory\nYou can find out which driver your sound card is using by doing \"lsmod\" or looking at the output of \"dmesg\". Since sound is crucial for me, I always compile sound into my kernels. If you don't have a driver loaded, you need to figure out what's been compiled into your kernel. That's not so straight forward. Your best bet is to compile your kernel. BTW, let me say that compiling your own kernel is the first step towards proficiency with Linux. It's painful the first time you do it, but once you do it correctly, it becomes very easy down the right, especially if you keep all your old .config files and make use of things like \"make oldconfig\". See the Kernel HOWTO for details.\nIf you haven't compiled the kernel yourself, there is an overwhelmingly good chance that your system is set up to load sound drivers as modules. That's the way distros do things. Have everything under the sun compiled as a module and try to load them all. So if you don't see your sound card's driver with lsmod, your card probably isn't configured yet.\n8.2.5. Permissions Problem\nIf the sound card works when you're root but not any other user, you probably have a permissions problem. If this is the case, as root, look at the group owner of the sound card using ls -l /dev/dsp; it'll probably be audio. Then, as root, add your non-root user to the audio group in /etc/group. For example, I added the users p and wellspring to group audio on my system:\naudio:x:29:p,wellspring\nDon't forget to use grpconv if you use shadow passwords (which should be the case on most recent distributions) in order to maintain a consistent group configuration. Then log out and log back in as the non-root user. Your sound card should work. Thanks to James Barton for reminding me to add this to the howto.\n9. Miscellaneous Problems\n9.1. Hardware Acceleration Problems\nXFree86 4.x provides a more centralized and self-contained approach to video. Much of the funkyness like kernel modules for non-root access of video boards is, thankfully, gone.\n9.1.1. Hardware acceleration isn't working at all\nIf you're getting like 1 fps, then your system isn't using hardware 3D acceleration. There's one of two things that can be going on.\nYour 3D system is misconfigured (more likely)\nGame X is misconfigured (less likely)\nThe first step is to figure out which one is happening.\nIf you have X 4.0 (X 3.* users procede to step 2), look at the output of X -probeonly. You'll see:\n(II) XXXXXX: direct rendering enabled\nor\n(II) XXXXXX: direct rendering disabled\nwhere XXXXXXX depends on which video card you have. If direct rendering is disabled, then your X configuration is definitely faulty. Your game is not at fault. You need to figure out why DRI is disabled. The most important tool for you to use at this point is the `DRI Users Guide'. It is an excellently written document that gives you step by step information on how to get DRI set up correctly on your machine. A copy is kept at http://www.xfree86.org/4.0/DRI.html .\nNote that if you pass this test, your system is CAPABLE of direct rendering. Your libraries can still be wrong. So procede to step 2.\nThere is a program called glxgears which comes with the \"mesademos\" package. You can get mesademos with Debian ( apt-get install mesademos) or you can hunt for the rpm on http://www.rpmfind.net . You can also download and compile the source yourself from the mesa homepage.\nRunning glxgears will show some gears turning. The xterm from which you run glxgears will display \"X frames in Y seconds = X/Y FPS\". You can compare your system to the list of benchmarks below.\nCPU TYPE     VIDEO CARD     X VERSION    AVERAGE FPS\nCompiling Mesa and DRI modules yourself can increase your FPS by 15 FPS; quite a performance boost! So if your number is, say, about 20 FPS slower than a comparable machine, chances are that glxgears is falling back on software rendering. In other words, your graphics card isn't 3D accelerating graphics.\nMore important than FPS is having a constant FPS for small and large windows. If hardware acceleration is working, the FPS for glxgears should be nearly independent of window size. If it's not, then you're not getting hardware acceleration.\n9.2. Hardware acceleration works only for the root user\n9.2.1. XFree86 4.x\nIf the following lines aren't present in your XF86Config-4 file, put them in:\nSection \"DRI\"\n        Mode 0666\n    EndSection\nThis allows all non-root users to use DRI. For the paranoid, it's possible to restrict DRI to only a few non-root users. See the DRI User Guide.\n9.2.2. XFree86 3.x\n9.2.2.1. Voodoo cards\nVoodoo card hardware acceleration only takes place ONLY at 16bpp color and fails silently when starting X in another color depth.\nAlso, Voodoo cards need the 3dfx.o kernel module and a /dev/3dfx device file (major 107, minor 0) for non-root hardware acceleration. Neither the module nor the device file are used under XFree86 4.x.\n10. Emulation and Virtual Machines\nLinux gets ragged on a lot because we don't have the wealth of games that other platforms have. Frankly, there's enough games for me, although it would be really nice to have some of the bleeding edge games and classics like Half-life and Carmageddon. Fortunately, we have more emulators than you can shake a stick at. Although playing an emulated game is sometimes not quite as fun as playing it on the native machine, and getting some of the emulators to work well can be a difficult task, they're here, and there's alot of them!\n10.1. What is a virtual machine?\nA \"real computer\" provides an operating system many things, including a CPU, I/O channels, memory, a BIOS to provide low level access to motherboard and I/O resources, etc. When an operating system wants to write to a hard drive, it communicates through a device driver that interfaces directly with the hardware device memory.\nHowever, it's possible to give a program all the hardware resources it needs. When it wants to access a hard drive, give it some memory to write to. When it wants to set an IRQ, give it some bogus instructions that lets it think it set an IRQ. If you do this correctly, then in principle, there's no way for the poor application to know whether it's really accessing hardware or tricked by being given resources which simulate hardware. A virtual machine is the environment which tricks applications into believing they're running on a real computer. It provides all the services that a real computer would provide.\nVM's were used initially in the 1960's to emulate time shared operating systems, but these days we use them to run software which was written for foreign operating systems, or more commonly, an entire operating system. Because of the nature of the VM, the foreign OS can't tell the difference between operating in a VM or in a \"real\" machine.\n10.2. Apple 8-bit\nAll the 8-bit Apple ][ emulators require a copy of the original ROM, for whichever system you want to emulate, in a file. If you search hard enough, you can find file copies of the ROMs for the Apple ][, ][+, ][e, ][c and //gs. They are still copyrighted by Apple, and you can only use them legally if you actually own one of these computers.\n10.2.1. KEGS\nKEGS is an Apple II emulator written by Kent Dickey < kentd(at)cup(dot)hp(dot)com > which was originally written for HP-UX, but improved and customized for Linux. It runs under X at any color depth, and supports changeable memory sizes, joysticks, and sound. KEGS boots all Apple II variants, and supports all of the Apple ]['s graphics modes. I can't find a working homepage for this application.\n10.2.2. apple2 and xapple2\nThe SVGAlib based apple2 and X based xapple2 can emulate any Apple ][ variant except for the //gs. The interface is a bit funky, but usable. Configuration is also a bit funky; this emulator would benefit from an SVGA or X based configuration tool. It supports the undocumented portion of the 6502 instruction set which some games rely on. apple2 is currently being maintained by Michael Deutschmann < michael(at)talamasca(dot)ocis(dot)net > and seems to be developed at a slow but constant pace. I don't think this application has a homepage.\n10.3. DOS\n10.3.1. dosemu\ndosemu < http://www.dosemu.org > is the canonical DOS emulator on Linux. When you think of DOS, don't think of things like PROCOM PLUS OR OTHER PROGRA~1 WHICH HAVE SHORT NAMES AND ARE IN ALL CAPS. There are some real classics that were written for DOS like Carmageddon, Redneck Rampage and Tomb Raider. dosemu can run these. Unfortunately, it can take alot of effort to get dosemu to work, and of Jan 2002, the sound code is somewhat broken. Not a big deal when you're trying to run Wordperfect or an old database application. It's an absolute show stopper for gaming. Getting dosemu to work well is not easy, but unfortunately, for DOS games it's the best avenue. Good luck. If you have success using dosemu, I would like to hear from you.\n10.4. Win16\n10.4.1. Wabi\nWabi is a commercial Win16 emulator. That is, it'll run Windows 16-bit applications from a Windows 3.1, Windows 3.11 or Windows for Workgroups 3.11 environment. Wabi was originally created by SCO Unix a long time ago and then was purchased by Caldera sometime in mid year 2001.\nWabi is fast and does a good job for what it does, although I've heard it said that wabi for Solaris is more stable than Linux. It might be useful for playing older Win16 games, but there are three problems:\nYou must have a licensed copy of Windows 3.1/3.11 or WfW 3.11.\nWabi is awfully expensive for what it does.\nWabi doesn't work under 32bpp or 24bpp color.\nWabi does NOT do DOS itself, but it looks like it can use a DOS emulator as a backend for running DOS programs. There was talk about Wabi 3.0 which would've done Win32 emulation, but AFAIK, this project was shelved indefinitely. I think Wabi will run under Linux on all architectures (can someone verify this?)\n10.5. Win32\n10.5.1. wine\nWine < http://www.winehq.com >, which bears the GNUish acronym \"Wine Is Not An Emulator\" is a non-commercial implementation of the Win32 API. The reason why it's not an emulator is subtle and not of much interest to most non computer scientists, so we'll call it an emulator here (it really does run-time translation of calls to the Win32 API to POSIX/X11 calls). Wine has come a long way, and is capable of emulating many important programs, which is great news for Linux users who want this sort of stuff.\nWine does not provide the DOS API, so you can't use it to run DOS applications. For that, you should look at dosemu ( Section 10.3.1 ). Wine has never been too good at implementing DirectX, although a number of games are known to work under wine. For gaming you might want to look at winex ( Section 10.5.3 ).\nIn addition to run-time translation of the Win32 API to POSIX/X11 (it runs Windows applications on Linux), wine also does compile-time tranlation of the Win32 API to POSIX/X11 (it compiles Windows application source code on Linux). In this sense, wine is a Windows-to-Linux porting utility. The x86 architecture isn't required, but is recommended since it allows actual x86 binary execution as well as direct DLL usage).\nYou can use wine `with Windows', which means that wine uses libraries that actually come with Microsoft Windows itself. This is legal only if you own a copy of Windows which isn't currently being used on a computer. It's said that wine has the best success when run with Windows. You can also run wine without Windows. The people at winehq are writing their own set of libraries called libwine which implements the Win32 API with no Microsoft code at all.\nWine was originally licenced under the MIT/X11 license, so it could be used for both commercial and non-commercial purposes. In mid 2002, parts of wine were re-licensed under the LGPL so that it could only be used for non-commercial puposes. This presents a problem for companies like Transgaming ( Section 10.5.3 ) and prompted a fork of wine called ReWind ( Section 10.5.2 ).\n10.5.2. rewind\nRewind < http://rewind.sourceforge.net/ > was started by Eric Pouech (a wine developer) and Ove K\u00e5ven (a winex developer) in response to wine's license change ). It started out life as a snapshot of the last version of wine which was completely licensed under the MIT/X11 license. The aim is to keep rewind MIT/X11 based so that companies like Transgaming can offer wine based products.\n10.5.3. winex\nWinex is released by a company called Transgaming < http://www.transgaming.com >. The developers take wine (see Section 10.5.1 ) and add DirectX / DirectDraw support. Although winex is commercial, they have an interesting business model.\nThe end user (you) can download the source code for free. However, for 5 US dollars per month, you can become a subscriber of Transgaming. Being a subscriber of Transgaming gives three major benefits:\nSubscribers can download convenient packaged versions of winex in deb, rpm or tar.gz format whenever they want, including updates. They have also more functionality than the publicly available tarball: the latter is an older version which lacks some of the newest features, like support for copy protected programs.\nThere are monthly polls where subscribed users can take votes on what they want winex developers to work on. For instance, they can vote for things like \"Improve support for copy protected programs\", \"Better Installshield support\" or \"Improve DirectX 8.0 support\". As far as I can see, the developers really do listen to the subscriber polls.\nThe Transgaming website has a few user support forums. On one hand, they use the most godawful, horrible, confusing, wasteful, moronic format I've ever seen and I hope to god I never see a forum with a format as bad as Transgaming's. On the other hand, you can ask for help and the developers are VERY good about getting around to your answer; their vigilance is quite impressive. Non-subscribers can browse the forums, but only subscribers can post (and therefore, ask for support).\nThe developers of winex were going to release their Installshield, DirectX and DirectDraw enhancements to wine \"every so often\". In return, as wine maturation improved, the winex developers were going to take the new versions of wine and use them for winex. However, since the birth of Transgaming, parts of wine have been re-licensed under the more restrictive GNU LGPL license ( Section 10.5.1 ). This basically means that versions of wine that are released past the date of the re-licensing can no longer be used by winex. Therefore, winex will now be based on rewind ( Section 10.5.2 ).\n10.5.4. Win4Lin\nWin4Lin < http://www.netraverse.com > is a commercial product by Netraverse. Like vmware ( Section 10.5.5 ) it uses the virtual machine approach to running Windows applications, so you'll get a big window from which you can boot Windows and run all kinds of Windows applications. Unlike vmware, Win4Lin only does Windows 95/98/ME, but this turns out to be better for gamers. Because Win4Lin concentrates on these operating systems, reports say that it's faster and does a better job at running games under these operating system than vmware. It's also much cheaper than vmware. The most recent version of Win4Lin as of June 2003 is 5.0. It suffers nevertheless from some limitations:\nIt does not support DirectX or DirectDraw, while vmware has \"limited\" support for DirectX.\nIt only supports serial and parallel devices. This is important for people who use USB joysticks. Note that vmware supports up to 2 USB devices.\nAs of June 2003, expect to pay $89.99 without printed docs and $99.99 with printed docs. In addition, there isn't an evaluation copy available, although you get a 30 day money back guarantee. However, since it's commercial you do get tech support. vmware is considerably more expensive.\nLike vmware, you're required to have a licensed copy of Win95 or Win98. Win4Lin cannot use an existing Windows installation the way wine can.\nIt only runs on x86 architectures.\n10.5.5. VMWare\nVMWare is a virtual machine that runs multiple operating systems simultaneously on a standard PC: supported OSes include Microsoft ones, Linux, Novell Netware and FreeBSD. You can among others use it to run a MS Windows OS and launch your favourite game there. You can even run another Linux under Linux; useful is you want to test another distro for instance. Amazing! Now for the bad sides. You should definitely have a good configuration in order to run it; they claim the minimum is a 500MHz x86 CPU with 128MB RAM, but a faster processor and at least 256MB RAM seem to be the bare minimum if you want reasonable performance. Not all Linux distributions are supported: newest RedHat's, Mandrake's and Suse's are, but you're out of luck if you have an other version and/or distribution (like Debian). Moreover, vmware has only limited support for DirectX, and you might not be able to play recent games.\nSee http://www.vmware.com for more information. It's not very cheap (about 300$ for the Workstation version), but you can get a 30 day evaluation copy.\n10.5.6. What should I choose?\nFirst of all, you should try an emulator. Although some games may work with wine , you'll probably get the most success with winex : its DirectX support is constantly improving. As of version 3.1, the DirectX 8 support is nearly complete, but this may not be the case with older DirectX versions (are consequently older games).\nYou might also try a virtual machine like Win4Lin or VMWare instead of an emulator. If your goal is to run Win95/98/ME applications on Linux, without USB and on the x86 architecture, Win4Lin's cost and focus on Win95 type OS's make it a better choice than vmware. However, if you must have USB support or run Linux on a platform other than x86, vmware is your only option.\nNow if your goal is to run Win95 type OS games under Linux, Win4Lin almost seems better than vmware. The show-stopper is the fact that vmware has limited DirectX support while Win4Lin has none. This fact alone makes both Win4Lin and vmware unsuitable for most hardcore gaming purposes. But if you're going to give it a try, you're more likely to have success with vmware.\n11. Interpreters\n11.1. SCUMM Engine (LucasArts)\nLucasarts wrote an engine for point and click adventures named SCUMM (Script Creation Utility for Maniac Mansion). They wrote many graphical adventures using SCUMM, like their famous Monkey Island series (all three). Ludvig Strigeus < strigeus(at)users(dot)sourceforge(dot)net > was able to reverse engineer the SCUMM format and write an interpreter for SCUMM based games that compiles under Linux and Win32 named scummvm < http://scummvm.sourceforge.net/ >. Their website is very good, and chock full of any kind of information about SCUMM and playing these games under scummvm.\nA compatibility page is maintained at the scummvm website. FWIW, I've been able to finish many of the games that are listed as 90% done with no problems. scummvm is rock solid, and allows you to purchase SCUMM based Lucas Arts games, copy the data files to your hard drive and play them under Linux. As of February 2002, I've been following their cvs, and this project is undergoing constant development. Kudos to the scummvm team.\n11.2. AGI: Adventure Gaming Interface (Sierra)\nThe older Sierra DOS graphical adventure games used a scripting language named AGI (Adventure Gaming Interface). Some examples of games written in AGI would be Leisure Suit Larry I (EGA), Space Quest I and II, King's Quest II, Mixed-Up Mother Goose and others. These games can be played using sarienon> < http://sarien.sourceforge.net >, an open source interpreter for AGI games.\nSarien was written in SDL, so it should run on any platform that can compile SDL programs. In addition, there are versions for DOS, Strong-Arm based pda's, QNS (holy cow! embedded gaming!), MIPS based systems and SH3/4 based Pocket PC's. The developers are clearly out of their minds (in a good way!). Sarien also has numerous enhancements not found in the original games, like a Quake style pull-down console, picture and dictionary viewer, enhanced sound and support for AGDS, a Russian AGI clone. Sarien is under development and the developers have been very good about documenting the Sarien internals if anyone wants to get involved in hacking it.\n11.3. SCI: SCript Interpreter or Sierra Creative Interpreter (Sierra)\nThe newer Sierra graphical adventure games (we're talking about the late 80's here) used an interpreter named SCI. There were many versions of SCI since Sierra was constantly improving its engine. The original SCI games were DOS based, but Sierra eventually started releasing Win32 SCI based games. Some examples of games written with SCI are Leisure Suit Larry 1 (VGA), Leisure Suit Larry 2-7, Space Quest 3-6, King's Quest 4-6, Quest For Glory 1-4 and many others. Compared with AGI games, SCI adventures have better music support, a more complex engine and loads of bells and whistles.\nMany SCI based games (games written in SCI0) can be played using freesci, available at http://freesci.linuxgames.com . Like Sarien, FreeSCI has many graphics targets including SDL, xlib and GGI, so this program can compile and run under an incredible number of platforms. The developers have done a fantastic job of documenting and FAQing their application.\n11.4. Infocom Adventures (Infocom, Activision)\nThe Z-machine is a well documented < http://www.gnelson.demon.co.uk/zspec/index.html > virtual machine designed by Infocom to run their interactive fiction games. This allowed them to write game data files in a cross platform manner, since only the engine itself, the Z-machine, would be platform dependent. Z-machine went through a number of revisions during the lifetime of Infocom, and two further revisions (V7 and V8 created by Graham Nelson) after the Infocom's demise. The later versions even supported limited sound and graphics!\nOne of the most popular Z-machine interpreters is Frotz < http://www.cs.csubak.edu/~dgriffi/proj/frotz/ >. This excellently done page has many nice links for interactive fiction fans. Frotz is GPL, runs all versions of Z-machine and will compile on most versions of Unix. Frotz has spawned many forks, like a version for PalmOS and Linux based PDA's.\njzip < http://jzip.sourceforge.net/ > is another very popular Z-machine interpreter that will run V1-V5 and V8 Z-machine data files. jzip is very portable; it compiles on all Unices, OS/2, Atari ST and DOS.\nThere are actually many other Z-machine interpreters like nitfol and rezrov (written in Perl!). Each interpreter has its own set of strengths, and you can find links to them on the home pages for Frotz and jzip.\n11.5. Scott Adams Adventures (Adventure International)\nScott Adams is, arguably, the father of interactive fiction. Although he himself was inspired by the first piece of interactive fiction, Adventure, Scott brought adventuring to the masses. His games were available for Atari, Apple 2, Commodore, Sorcerer, TI, and CPM. His company, Adventure International, released a number of much loved games between 1978 and 1984 before folding. He recently released a new game (a Linux version is not available) but since the decline of adventuring, he has pretty much kept out of the gaming industry.\nAlan Cox wrote scottfree, a Scott Adams adventure game file interpreter for Unix. Using scottfree and any of the Scott Adams data files which can be downloaded from Scott's website < http://www.msadams.com/ > you can enjoy these classics.\n11.6. Ultima Underworld: The Stygian Abyss (Origin, Blue Sky Productions)\nThe Underworld Adventures project < http://uwadv.sourceforge.net/ > is an effort to port the 1992 classic, Ultima Underworld: The Stygian Abyss, to modern operating systems like Linux, MacOS X, and Windows. It uses OpenGL for 3D graphics, SDL for platform specific tasks and is released under the GNU GPL. Underworld Adventures provides an impressive graphics system which uses the original game files, so you'll need the original game disk to play.\nUnderworld Adventures also provides a bunch of tools for you to display the level maps, tools for examining uw1 conversation scripts and more.\n11.7. Ultima 7 (Origin, Electronic Arts)\nUltima 7 is actually 2 games: part I (The Black Gate) and part II (Serpent Island) which uses a slightly enhanced version of The Black Gate's engine. In addition, an addon disk was released to both part I (The Forge Of Virtue) and part II (The Silver Seed).\nA team of people developed Exult < http://exult.sourceforge.net/ > which is an open source interpreter that will run both parts of Ultima 7 and their addon disks. Exult is written in C++ using SDL, so it will compile on any platform that can compile SDL programs. It also features some enhancements over the original versions of the Ultima VII engine. You'll need to purchase a copy of Ultima 7 to play. The developers have no plans on extending Exult to interpret the other Ultimas since the engines changed so radically between releases.\nThe Exult team has also been hard at work creating a map editor, Exult Studio, and a script compiler that will let users create their own RPG in the Ultima style.\n11.8. System Shock (Electronic Arts, Origin)\nSystem Shock is a classic first person shooter/adventure from 1994, which puts it as a contemporary of Doom. However, its engine is much more feature rich than the original Doom: for example, System Shock had 3D sprites, free look and a facility to have objects on top of each other, giving the illusion of a full 3D map, like Quake. Game reviewers agree that this game has the features of Quake with a story-line more compelling than Half-life. The System Shock engine was optimized for sophistication, while Doom's engine was optimized for throwing lots of monsters at you; a completely different appoach. Quite impressive for such an old game!\nThe System Shock Hack Project < http://madeira.physiol.ucl.ac.uk/tsshp/sshock.html > is an attempt to update the game for modern operating systems. The project uses SDL and is released under the modified BSD license. While you need the original game files to play SSHP, it should work with the System Shock demo, which is freely available.\n12. Websites And Resources\n12.1. Meta gaming websites\nThese are some resources for Linux gamers no matter what kind of game you enjoy to play.\nThe Linux Game Tome: http://www.happypenguin.org\nAbout the games themselves.\n"}], [{"score": 235.09969, "uuid": "233cc461-5eac-55da-8e00-d0075194b15f", "index": "cw12", "trec_id": "clueweb12-0401wb-37-26858", "target_hostname": "ldp.huihoo.org", "target_uri": "http://ldp.huihoo.org/HOWTO/html_single/Linux-Gamers-HOWTO/", "page_rank": 1.1722736e-09, "spam_rank": 67, "title": "The Linux Gamers' HOWTO", "snippet": "<em>OpenGL</em> <em>is</em> the open source equivalent <em>to</em> <em>Direct3D</em>, a component <em>of</em> DirectX (Section 3.14). The important difference being that since <em>OpenGL</em> <em>is</em> open (and DirectX <em>is</em> closed), games written <em>in</em> <em>OpenGL</em> are much easier <em>to</em> port <em>to</em> and co-develop on Linux <em>than</em> games written using DirectX.", "explanation": null, "document": "12.3. Other Resources\n1. Administra\nIf you have ideas, corrections or questions relating to this HOWTO, please email me. By receiving feedback on this howto (even if I don't have the time to answer), you make me feel like I'm doing something useful. In turn, it motivates me to write more and add to this document. You can reach me at < p(at)dirac(dot)org >. My web page is http://www.dirac.org/p and my Linux pages are at http://www.dirac.org/linux . Please do send comments and suggestions for this howto. Even if I don't take your suggestions, your input is graciously received.\nI assume a working knowledge of Linux, so I use some topics like runlevels and modules without defining them. If there are enough questions (or even protests) I'll add more basic information to this document.\n1.1. Authorship and Copyright\nThis document is copyright (c) 2001-2002 Peter Jay Salzman, < p(at)dirac(dot)org >; 2003-2004 Peter Jay Salzman and Fr\u00e9d\u00e9ric Delanoy. Permission is granted to copy, distribute and/or modify this document under the terms of the Open Software License, Version 1.1, except for the provisions I list in the next paragraph. I hate HOWTO's that include the license; it's a tree killer. You can read the OSL at http://opensource.org/licenses/osl-1.1.txt .\nIf you want to create a derivative work or publish this HOWTO for commercial purposes, I would appreciate it if you contact me first. This will give me a chance to give you the most recent version. I'd also appreciate either a copy of whatever it is you're doing or a spinach, garlic, mushroom, feta cheese and artichoke heart pizza.\n1.2. Acknowledgements\nThanks goes out to these people for extensive comments, corrections, and diffs. Their effort is above and beyond the call of duty:\nFr\u00e9d\u00e9ric Delanoy, Moritz Muehlenhoff < jmm(at)Informatik(dot)uni-bremen(dot)de >, Mike Phillips, Ioan Rogers < buck(at)aiur(dot)co(dot)uk >\nI would also like to thank the following people for sending in comments and corrections. Without their help, there would be more typos and mistakes than you could shake a stick at:\nMichael McDonnell\n1.3. Latest Versions and Translations\nThe latest version can be found at http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/lgh/LG-HOWTO or http://www.dirac.org/linux/writing , but this is my own personal working copy. The version at my personal web site might be broken if I'm working on the HOWTO. The version at sourceforge is bleeding edge but guaranteed to be not broken, however it may have glitches, like unfinished paragraphs. :)\nThe most recent stable version can be found at http://www.tldp.org .\n1.3.1. Russian\nDmitry Samoyloff < dsamoyloff(at)yandex(dot)ru > is the maintainer of the Russian translation. The most recent version can be found at http://www.dirac.org/linux/writing .\n1.3.2. Hungarian\nL\u00e1szl\u00f3 Daczi < dacas(at)korhaz(dot)rethy(dot)hu >, the Hungarian LDP coordinator, announced that a Hungarian translation was produced by Szilard Ivan, and is available at http://tldp.fsf.hu/HOWTO/Linux-Gamers-HOWTO-hu .\n2. Definitions: Types Of Games\nNot everyone knows the different types of games that are out there, so in an effort to form a common language that we can all use, I'll run through each game type and provide a very brief history.\n2.1. Arcade style\nAlthough arcade games had their heydey in the 80's, they are nonetheless very popular. Nothing will ever replace walking into a dark, crowded and noisy arcade gallery, popping a quarter into your favorite machine and playing an old fashioned game of Space Invaders. Arcade style games attempt to simulate the arcade games themselves. There is such a vast number of these things that it's nearly impossible to enumerate them all, but they include clones of Asteroids, Space Invaders, Pac-Man, Missile Command and Galaxian.\n2.2. Card, logic and board games\nComputer based card games simulate a card game like poker or solitaire. The program can simulate your opponent(s).\nLogic games usually simulate some well known logic puzzle like Master Mind or the game where you have put sliding numbered tiles in order inside a box.\nComputer based board games simulate some kind of board game you'd play on a table top with friends, like monopoly, Mille Bourne, chess or checkers. The program can simulate your opponent.\n2.3. Text Adventure (aka Interactive Fiction)\nOnce upon a time, when Apple ][, Commodore, and Atari ruled the world, text adventures were the game of choice of `intelligent folk'. You are given a scenario and can interact with the world you're placed in:\nYou are in a room.  It is pitch dark and you're likely to be eaten by a grue.\n    > Light lantern with match.\n    You light the lantern.  This room appears to be a kitchen.  There's a table with a\n    book in the center.  You also see an oven, refrigerator and a door leading east.\n    > Open the oven.\n    In the oven you see a brown paper bag.\n    > Take the bag.  Open the bag.  Close the oven.\n    Inside the bag is a some garlic and a cheese sandwich.  The oven door is now closed.\nBack then, text adventures were self contained executables on a disk or casette. These days there's usually a data file and an interpreter. The interpreter reads data files and provides the gaming interface. The data files are the actual game itself, similar to the relationship between first person shooters ( Section 2.7 ) and wad files.\nThe first adventure game was Adventure (actually \u201cADVENT\u201d, written on a PDP-1 in 1972). You can play Adventure yourself (actually, a descendent); it comes with \u201cbsd games\u201d on most Linux distros. Text adventures became popularized by Scott Adams ( Section 11.5 ) and reached their height of popularity in the late 80's with Infocom ( Section 11.4 ) which are also playable under Linux.\nAs computer graphics became easier and more powerful, text adventures gave rise to graphic adventures. The death of commercial interactive fiction more or less coincided with the bankruptcy of Infocom.\n2.4. Graphical Adventures\nGraphical adventures are, at heart, text adventures on steroids. The degree to which they use graphics varies widely. Back in the 80's, they were little more than text adventures which showed a screen of static graphics. When you picked up an item, the background would be redrawn without the item appearing. The canonical example would be the so-called `Hi-Res Adventures' like The Wizard And The Princess. Later on, the sophisticated graphical adventures had your character roaming around the screen, and you could even use a mouse, but the interface remained purely text.\nNext there are the `point and click adventures' which basically have no text interface at all, and often have dynamic graphics, like a cat wandering around the room while you're deciding what to do next. In these games, you point at an object (say, a book) and can choose from a pull-down list of functions. Kind of like object oriented adventuring. :) There aren't many graphical adventures written natively for Linux. The only one I can think of is Hopkins FBI (which happens to be my favorite game for Linux).\n2.5. Simulation (aka Sims)\nSimulations strive to immerse the player behind the controls of something they normally wouldn't have access to. This could be something real like a fighter jet or something imaginary like a mechanized warrior combat unit. In either case, sims strive for realism.\nSome sims have little or no strategy. They simply put you in a cockpit to give you the thrill of piloting a plane. Some are considerably complex, and there's often a fine line between sims and strats ( Section 2.6 ). A good example would be Heavy Gear III or Flight Gear. These days sims and strats are nearly indistinguishable, but a long time ago, sims were real time while strats were turn based. This is awkward for modern day use, since a game like Warcraft which everyone knows as a strat, would be a sim by definition.\n2.6. Strategy (aka Strats)\nStrategy games have their roots in old Avalon type board games like Panzer Leader and old war strategy games published by SSI. Generally, they simulate some kind of scenario. The scenario can be peaceful, like running a successful city (SimCity), or not, like illegal drug selling operation (DrugWars) or an all-out war strategy game like Myth II. The types of games usually take a long time to complete and require a lot of brainpower.\nStrats can be further divided into two classes: real time and turn based. Real time strats are based on the concept of you-snooze-you-lose. For example, you're managing a city and a fire erupts somewhere. The more time it takes for you mobilize the fire fighters, the more damage the fire does. Turn based strats are more like chess---the computer takes a turn and then the player takes a turn.\n2.7. First Person Shooter (aka FPS)\nWhat light through yonder window breaks? It must be the flash of the double barreled shotgun! We have a long and twisted history with FPS games which started when id Software open sourced code for Doom. The code base has forked and merged numerous times. Other previously closed engines opened up, many engines are playable via emulators, many commercial FPS games were released for Linux and there are quite a number of FPS engines which started life as open source projects. Although you may not be able to play your favorite FPS under Linux (Half-Life plays great under winex) Linux definitely has no deficiency here!\nFirst person shooters are characterized by two things. First, you pretty much blow up everything you see. Second, the action takes place in first person. That is, through the eyes of the character who's doing all the shooting. You may even see your hands or weapon at the bottom of the screen. They can be set in fantasy (Hexen), science fiction (Quake II), present day `real world' (Soldier Of Fortune) and many other settings.\nLike text adventures, FPS fit the engine/datafile format. The engine refers to the actual game itself (Doom, Quake, Heretic2) and plays out the maps and bad guys outlined by the datafile (doom2.wad, pak0.pak, etc). Many FPS games allow people to write their own non-commercial datafile. There are hundreds, even thousands of non-commercial Doom datafiles that you can download for free off the net. Often, companies release their engines to the open source community so we can hack and improve them. However, the original data files are kept proprietary. To this day, you still have to purchase doom.wad.\n2.8. Side Scrollers\nSide scrollers are similar to FPS but you view your character as a 2D figure who runs around various screens shooting at things or performing tasks. Examples would be Abuse for Linux and the original Duke Nukem. They don't necessarily have to be violent, like xscavenger, a clone of the old 8-bit game Lode Runner.\n2.9. Third Person Shooters\nSimilar to FPS, but you view your character in third person and in 3D. On modern third person shooters you can usually do some really kick-butt maneuvers like Jackie Chan style back flips and side rolls. The canonical example would be Tomb Raider. On the Linux platform, we have Heretic 2 and Heavy Metal FAKK2.\n2.10. Role Playing Game (aka RPG)\nAnyone who has played games like Dungeons & Dragons or Call of Cthulhu knows exactly what an RPG is. You play a character, sometimes more than one, characterized by traits (eg strength, dexterity), skills (eg explosives, basket weaving, mechanics) and properties (levels, cash). As you play, the character becomes more powerful and the game adjusts itself accordingly, so instead of fighting orcs, at high levels you start fighting black dragons. The rewards increase correspondingly. At low levels you might get some gold pieces as a reward for winning a battle. At high levels, you might get a magic sword or a kick-butt assault rifle.\nRPG's generally have a quest with a well defined ending. In nethack you need to retrieve the amulet of Yendor for your god. In Ultima II, you destroy the evil sorceress Minax. At some point, your character becomes powerful enough that you can `go for it' and try to complete the quest.\nWhile the insanely popular Ultima series, written by Richard Garriot (aka Lord British) for Origin, was not the first RPG, it popularized and propelled the RPG genre into mainstream. Ultima I was released in 1987 and was the game that launched 9 (depending on how you want to count them) very popular sequels, finishing with Ultima IX: Ascension. You can play Ultima VII under Linux with Exult ( Section 11.7 ).\nThe canonical RPG on Linux is Rogue (the ncurses library started life as a screen handling routine for Rogue!) and it has infinite variants like Zangband and Nethack (which has many variants itself). Some RPG's are quite complicated and great feats of programming. There seems to be a deficiency of commercial RPGs for Linux. Not counting the rogue variants, there's also a deficiency of open source RPGs too.\n3. Libraries\nWe'll run through the different gaming libraries you'll see under Linux.\n3.1. What is Glide2?\nGlide2 is a low level graphics API and driver that accesses 3D hardware accelerated functions on 3dfx's Voodoo I, II and III cards, under XFree86 3.x.\nA program can only use the special hardware accelerated features of these cards by using the Glide2 library in one of two ways:\ndirectly written using Glide2 (Myth II, Descent III)\nindirectly using Mesa built with a Glide2 backend to simulate OpenGL (Rune, Unreal Tournament)\n3dfx opened up the specifications and source code to the open source community. This allowed Daryll Strauss to port Glide2 to Linux which enabled XFree86 3.x users to use Voodoo I, II and III cards under Linux.\nSince Glide2 accesses the video card directly, Glide2 applications will either need to be run by root or be setuid root. A way around this was to create the kernel 3dfx module. This module (and its device file /dev/3dfx) allows Glide2 graphical hardware acceleration for non-root users of non-setuid applications.\nUnfortunately, Glide2 is also a dead issue. It's only used for Voodoo I, II, III boards (which are becoming outdated), under XFree86 3.x (most people use XFree86 4.x). And since 3dfx is now a defunct company, it's a sure bet that no more work will be done on Glide2 and no more games will be written using Glide2.\n3.2. What is Glide3?\nUnlike Glide2, Glide3 is not an API used for game programming. It exists only to support DRI on Voodoo III, IV and V boards under XFree86 4.x. None of the games which use Glide2 will work with Glide3. This shouldn't be a surprise since Glide2 and Glide3 support different video cards and different versions of XFree86. The only video card that can use both Glide2 (under XFree86 3.x) and Glide3 (under XFree86 4.x) is the Voodoo III. It's reported that a Voodoo III using Glide2 will outperform a Voodoo III using Glide3.\nWhen you use a Voodoo III, IV or V under XFree86 4.x, you want to use a version of Mesa (see Section 3.4 ) which was compiled to use Glide3 as a backend to ensure hardware accelerated OpenGL on your system.\n3.3. What is OpenGL?\nOpenGL is a high level graphics programming API originally developed by SGI, and it became an industry standard for 2D and 3D graphics programming. It's defined and maintained by the Architectural Revision Board (ARB), an organization which include representatives from SGI, IBM, DEC, and Microsoft. OpenGL provides a powerful, complete and generic feature set for 2D and 3D graphics operations.\nThere are 3 canonical parts to OpenGL:\nGL: The OpenGL core calls\nGLU: The utility calls\nGLUT: OS independent window event (mouse, keyboard, etc.) handler.\nOpenGL is not only an API, it's also an implementation, written by SGI. The implementation tries to use hardware acceleration for various graphics operations whenever available, which depends on what videocard you have in you computer. If hardware acceleration is not possible for a specific task, OpenGL falls back on software rendering. This means that when you get OpenGL from SGI, if you want any kind of hardware acceleration at all, it must be OpenGL written and compiled specifically for some graphics card. Otherwise, all you'll get is software rendering. The same thing is true for OpenGL clones, like Mesa.\nOpenGL is the open source equivalent to Direct3D, a component of DirectX ( Section 3.14 ). The important difference being that since OpenGL is open (and DirectX is closed), games written in OpenGL are much easier to port to and co-develop on Linux than games written using DirectX.\n3.4. What is Mesa?\nMesa < http://www.mesa3d.org > is a free implementation of the OpenGL API, designed and written by Brian Paul. While it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant OpenGL implementation conforming to the ARB specifications. It's reported that Mesa is even faster than SGI's own OpenGL implementation.\nJust like OpenGL, Mesa makes use of hardware acceleration whenever possible. When a particular graphics task isn't able to be hardware accelerated by the video card, it's software rendered; the task is done by your computer's CPU instead. This means that there are different builds of Mesa depending on what kind of video card you have. Each build uses a different library as a backend renderer. For example, if you have a Voodoo I, II or III card under XFree86 3.x, you'd use mesa+glide2 (written by David Bucciarelli) which is the Mesa implementation of OpenGL that uses Glide2 as a backend to render for graphical operations.\n3.5. What is DRI?\nGraphics rendering has 3 players: the client application (like Quake 3), the X server and the hardware (the graphics card). Previously, client applications were prohibited from writing directly to hardware, and there was a good reason for this. A program that is allowed to directly write to hardware can crash the system in any number of ways. Rather than trusting programmers to write totally bug free, cooperative programs that access hardware, Linux simply disallowed it. However, that changed under X 4.x with DRI (Direct Rendering Infrastructure < http://www.dri.sourceforge.net >. DRI allows X clients to write 3D rendering information directly to the video card in a safe and cooperative manner.\nDRI gets the X server out of the way so the 3D driver (Mesa or OpenGL) can talk directly to the hardware. This speeds things up. The 3D rendering information doesn't even have to be hardware accelerated. On a technical note, this has a number of virtues.\nVertex data doesn't have to be encoded/decoded via GLX.\nGraphics data isn't sent over a socket to the X server.\nOn uni-processor machines the CPU doesn't have to change context between XFree86 and its client to render the graphics.\n3.6. What is GLX?\nGLX is the X extension used by OpenGL programs, it is the glue between the platform independent OpenGL and platform dependent X.\n3.7. What is Utah GLX?\nUtah-GLX is the precursor to DRI. It makes some different design decisions regarding separation of data and methods of accessing the video card like relying on root access rather than creating the kernel infrastructure for secure access. It provides support for a few cards which are not well supported by DRI like the ATI Rage Pro family, S3 Virge (although anyone using this for gaming is, well, nuts), and an open source TNT/TNT2 driver (which is very incomplete). The TNT/TNT2 driver is based on reverse-engineering of the obfuscated source code release of the X 3.3 drivers by nVidia. However, they're really incomplete, and effectively, unusable.\n3.8. What is xlib?\nEvery once in awhile you'll see some sicko (said with respect) write a game in xlib. It is a set of C libraries which comprise the lowest level programming interface for XFree86. Any graphics programming in X ultimately makes use of the xlib library.\nIt's not an understatement to say that xlib is long winded, arcane and complicated. Because of this, there are lots of libraries like SDL ( Section 3.10 ) for 2D graphics, OpenGL ( Section 3.3 ) for 3D graphics and widget sets ( Section 3.9 ) for widgets within windows which hide the details of different aspects of xlib programming.\nWhile some games are written in xlib, like the Doom Editor Yadex, xlib itself is not a serious game writing library. Most games don't need the low-level interface that xlib provides. In addition, by using the higher level libraries, a game writer can develop his game on multiple platforms, even ones that don't use XFree86.\n3.9. What is a widget set?\nWidgets are objects that make up a GUI application's interface. They include things like text entry boxes, pulldown menus, slider bars, radio buttons and much more. A widget set is a collection of related widgets that are designed to have a common interface and a consistant \"feel\". Gtk is the canonical widget set on Linux, but there are many others like fltk (a small C++ widget set), Xaw, Qt (the widget set of KDE), and Motif (the widget set used by Netscape). Motif used to be the king of widget sets in the Unix world, but it was very expensive to license. The Open Group finally opened up Motif's license for open source operating systems, but it was too little too late. There are many completely open source widget sets which are more complete and much nicer looking than Motif, including Lesstif, a totally free Motif clone.\n3.10. What is SDL (Simple DirectMedia Layer)?\nSDL < http://www.libsdl.org > is a library by Sam Lantiga (graduate of UCD, yeah!). It's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling. It's LGPL'd and provides joystick and OpenGL support as well. Unlike xlib ( Section 3.8 ), SDL is very suited for game programming.\nThe most striking part of SDL is that it's a cross platform library. Except for a few details, a program written in SDL will compile under Linux, MS Windows, BeOS, MacOS, MacOS X, Solaris, IRIX, FreeBSD, QNX and OSF. There are SDL extensions written by various people to do things like handle any graphics format you care to mention, play mpegs, display truetype fonts, sprite handling and just about everything under the sun. SDL is an example of what all graphics libraries should strive for.\nSam had an ulterior motive for writing such a cool library. He was the lead programmer for Loki Software (he now codes for Blizzard Software), which used SDL in all of its games except for Quake3.\n3.11. What is GGI?\nGGI < http://www.ggi-project.org > is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications. LibGGI applications run on SVGAlib, fb, and X servers among others. Judging from their screenshots, this is quite a powerful library.\nApplications that use LibGGI directly include Heroes, Ultrapoint, Quake, and Berlin. Most applications that use SVGALib can be run on X or any other LibGGI backend by using a wrapper library which re-implements SVGALib ( Section 3.12 ) using LibGGI. SDL ( Section 3.10 ) and clanlib ( Section 3.15 ) applications can display on LibGGI but often the native drivers for these libraries are faster, however it's a good way to get SDL, clanlib, and SVGALib applications to run where they would not before.\nGGI has a sister project, KGI, which is developing a kernel-level alternative to systems like the linux framebuffer and the DRI. This project is much less far along than LibGGI itself, but promises to combine DRI-level speeds and the stability and security UNIX users expect.\n3.12. What is SVGAlib? Frame buffer? Console?\nThe console is the dark non-graphical screen you look at when your computer first boots up (and you don't have xdm or gdm running). This is opposed to the X environment which has all sorts of GUI things like xterms. It's a common misconception that X means graphics and console means no graphics. There are certainly graphics on the console\u2014we will discuss the two most common ways to achieve this.\nSVGAlib is a graphics library that lets you draw graphics on the console. There are many graphical applications and games that use SVGAlib like zgv (a console graphical image viewer), prboom and hhexen. I happen to be a fan of this library and of graphical console games in general; they are extremely fast, fullscreen and compelling. There are three downsides to SVGAlib. First, SVGAlib executables need to be run by root or be setuid root, however, the library releases root status immediately after the executable begins to run. Secondly, SVGAlib is video card dependent\u2013if your video card isn't supported by SVGAlib, you're out of luck. Third, SVGAlib is Linux only. Games written in SVGAlib will only work on Linux.\nFrame buffers are consoles implemented by a graphics mode rather than a BIOS text mode. Why simulate text mode in a graphical environment? This allows us to run graphical things in console, like allowing us to choose any font we want the console to display (which is normally set by BIOS). There's a good Framebuffer HOWTO available from LDP. Graphical console games written using the frame buffer suffer from the same deficiencies of the SVGA library: not all hardware is supported and the code will only run on Linux.\n3.13. What is OpenAL?\nOpenAL < http://www.openal.org > aims to be for sound what OpenGL is for graphics. It started as a joint project between Loki Software and Creative Labs, setting out to be a vendor neutral and cross platform API for audio - the audio equivalent of OpenGL ( Section 3.3 ). Loki is no longer in business, but Creative and the Open Source community have kept the project alive. It is licensed LGPL and the specs can be obtained for free from the OpenAL website. It has support from nVidia (nForce2/3 based motherboards come with OpenAL MS Windows libraries for the on-board audio), Apple has added OpenAL to their audio framework for OSX and it can also be found powering the Epic Games Unreal Engine\nCurrently, it's not all cross-platform goodness. There is almost no support for enhancements like EAX or any hardware acceleration on Linux, though it does it exist in the Windows implementation. However, if you have a Creative SoundBlaster or Audigy sound card (with an emu10x chip), and you use ALSA sound drivers, you can get OpenAL libraries from http://www.lost.org.uk that provide hardware acceleration and decent surround support.\n3.14. What is DirectX?\nDirectX is a collection of proprietary multimedia API's, first developed by Microsoft in 1995, for its various Windows OS's. It's a mistake to say something like \"DirectX is like OpenGL\" or \"DirectX is like SDL\", as is commonly said in DirectX tutorials. Multimedia API's are more centralized on Windows than they are on Linux. A more accurate statement would be something like \"DirectX is like DRI, OpenGL and SDL combined\". As of October 2004, the most recent version of DirectX is 9c. The components of DirectX are:\nDirectDraw\nDirectDraw gives direct access to video memory, like DRI, so 2D graphics can be blitted directly to the video card. DirectDraw is like the graphical component of SDL, but the direct video card access is done by DRI rather than SDL. This is why a game can easily take out a Windows system but should not take down a Linux system.\nDirect3D (D3D)\nDirect3D, like OpenGL, provides a 3D graphics API. Whereas OpenGL is open source, lower level and compiles under a multitude of operating systems, D3D is proprietary, higher level and only compiles on Windows. D3D first appeared in DirectX 2, released in 1996.\nDirectAudio\nDirectAudio is a combination of 2 audio API's, DirectSound and DirectMusic, which allows direct access to the sound card for sound and music playback.\nDirectInput\nDirectInput gives support for gaming input devices such as joysticks.\nDirectPlay\nDirectPlay gives support for simplified networking for multiplayer gaming.\nDirectShow\nDirectShow provides support for movie files like AVI and MPG. It was a separate API from DirectX, but was integrated with DirectX 8.\nDirectSetup\nThis API provides a way to install DirectX from within an application to simplify game installation.\nDepending on the version of DirectX you're talking about, DirectX support in winex ( Section 10.5.3 ) ranges from well supported to \"kind of\" supported. It's poorly supported by wine ( Section 10.5.1 ), barely supported by vmware ( Section 10.5.5 ) and unsupported by Win4Lin ( Section 10.5.4 ).\nOne comment about portability: Each component of DirectX has multiple corresponding library on Linux. Moreover, a game writer who uses libraries like OpenGL, GGI or SDL will write a game which will trivially compile on Windows, Linux and a multitude of other OS's. Yet game companies persist using DirectX and therefore limit their audience to Windows users only. If you're a game writer, please consider using cross platform libraries and stay away from DirectX.\nA company named realtechVR started an open source project, DirectX Port, < http://www.v3x.net/directx > which, like wine, provides a Direct3D emulation layer that implements Direct3D calls. The project was focused on the BeOS platform, but is now focused on MacOS and Linux. You can get the latest cvs from their sourceforge page at < http://sourceforge.net/projects/dxglwrap >.\n3.15. Clanlib\nClanLib is a medium level development kit. At its lowest level, it provides a platform independent (as much as that is possible in C++) way of dealing with display, sound, input, networking, files, threading and such. ClanLib builds a generic game development framework, giving you easy handling of resources, network object replication, graphical user interfaces (GUI) with theme support, game scripting and more.\n4. XFree86 and You\nIf you're going to game under X, it's crucial that you know a bit about X. The \"X Window User HOWTO\", and especially \"man XF86Config\" are required reading. Don't short change yourself; read them. They have an extremely high \"information to space\" ratio. Many problems can be fixed easily if you know your way around XF86Config (or XF86Config-4).\n4.1. Getting information about your X system\nWhether you're trying to diagnose an X problem or requesting help from a mailing list or Usenet newsgroup, you'll want to have as much information available as possible. These are a set of tools you can use to obtain that information.\n4.1.1. Probeonly\nOne of the best diagnostic tools and sources of information about your X system is probeonly output. To use it, kill X if it's already running and from a console, type:\nX -probeonly 2> X.out\nYes, that's a single dash; so much for standards. The output of X goes to stderr, so we have to redirect stderr with \"2>\" to a file named X.out. This file will have almost everything there is to know about your X system. It's crucial that you know the difference between the various markers you'll see in probeonly output:\n(--) probed              (**) from config file    (==) default setting\n    (++) from command line   (!!) notice              (II) informational\n    (WW) warning             (EE) error               (??) unknown.\nHere's an example of some information I gleaned from my output:\nI'm running at 16 bpp color:\n(**) TDFX(0): Depth 16, (--) framebuffer bpp 16\nX has detected what my videocard chipset and videoram are:\n(--) Chipset 3dfx Voodoo5 found\n    (--) TDFX(0): VideoRAM: 32768 kByte Mapping 65536 kByte\n4.1.2. Getting info about your setup: xvidtune\nxvidtune is your friend when your X screen is shifted a little bit too far to the right, or if the vertical length is too small to fit on your monitor. However, it's a great diagnostic tool also. It'll give you:\nthe hsync/vsync range specified in your XF86Config file\nthe 4 horizontal and 4 vertical numbers which defines your videomode (the 1st horizontal/vertical numbers gives the screen resolution). These 8 numbers will tell you which modeline your X uses. See the XFree86 Video Timings Howto for more information. Note that explicit modelines are no longer necessary, since XFree 4.0.1 and up computes modetimings automatically based on your monitor's and video card's capabilities. However, there may be times when you'll want to play around with mode timings, like for weird hardware or if want to tweak your display.\nthe \"dot clock\" your videocard is running at.\n4.1.3. Getting info about your setup: xwininfo\nxwininfo tells you all sorts of information about X windows. And actually, your \"background\" or \"root\" window is considered a window too. So when xwininfo asks you to click on the window you want the information on, click on your background. It'll tell you things like screen and window resolution, color depth, window gravity state (which gives a hint to the window manager about where to place new windows), backing store usage and more.\n4.1.4. Other sources of information\nxdpyinfo gives cool stuff, like X version and loaded extensions (invaluable when trying to see what's missing, like GLX, DRI, XFree86-VidMode, etc.).\n4.1.5. Getting information about your 3D system\nglxinfo gives lots of useful information about OpenGL like whether direct rendering enabled, the currently installed versions of glx and mesa, vendor/renderer strings, the GL library files being used and more.\n4.2. Playing Games In X Without a Window Manager\nWhen playing a game under X, you should consider starting X without a window manager (WM). Heavyweight WMs, like Enlightenment, or full-blown desktop environments like GNOME or KDE, may produce a noticeable slow down. Even lightweight WMs, like twm, rob your CPU of clock cycles (and in twm's case, even full screen games will have a frame around the window). Running a game without a WM or DE depends on how you access X. If you usually log in to a Virtual Console and start X with \"startx\" try the following:\nModify ~/.xinitrc, which tells X what to run upon starting. Here is what my .xinitrc looks like:\n#quake3 +set r_gldriver libGR.so.1\n      #exec ut\n      #lsdldoom -server 2\n      #exec tribes2\n      exec /usr/bin/enlightenment\nYou'll usually see a window or desktop manager being executed from this file (GNOME or KDE). Comment out the lines containing the WM or desktop manager with a pound sign (#) and place your game on a new line with any command line arguments you want to pass. If the game is not located in your $PATH, give its full path name.\nIf you log directly into X using gdm, then things are a little different. These instructions are for gdm 2.4 or greater. They *may* work with kde, but I cannot say for certain.\nFirst, check your gdm.conf (usually in /etc/X11/gdm or /etc/gdm) file for a line that says begins \"SessionDesktopDir=blah\". One of the directories listed as options should be \"/usr/share/xsessions\", and is the directory which will be used in this example. As root, change to the \"/usr/share/xsessions\" directory and take a look at its contents. It should contain some .desktop files, each corresponding to an entry you'll see in gdm's Session menu, e.g gnome.desktop, enlightenment.destop. This example will show you how to log in to Doom3. Copy any of the desktop files to \"doom3.desktop\" and open the new file in your favourite text editor. The file will be full of alternative languages, so cut out everything you don't want and make the file look like this:\n[Desktop Entry]\n      Encoding=UTF-8\n      Name=DOOM III\n      Comment=iD's Doom III\n      #if game is not in path, remember to put the full path here\n      Exec=/usr/games/doom3/doom3\n      # no icon yet, only the top three are currently used\n      Icon=\n      Type=Application\nSave the file and log out of your window manager. At the gdm login screen, you should now see \"DOOM III\" as an option in \"Sessions\". Naturally you can add a .desktop file for each game you have installed\n5. Various Topics\n5.1. Memory Type Range Registers\nStarting with Pentium class processors and including Athlon, K6-2 and other CPUs, there are Memory Type Range Registers (MTRR) which control how the processor accesses ranges of memory locations. Basically, it turns many smaller separate writes to the video card into a single write (a burst). This increases efficiency in writing to the video card and can speed up your graphics by 250% or more.\nSee /usr/src/linux/Documentation/mtrr.txt for details. Note that since this file was written, XFree86 has been patched to automatically detect your video RAM base address and size and set up the MTRRs.\n5.2. Milking performance from your system for all it's worth\nIf for some reason you're using X 3.3, follow the instructions given by mtrr.txt (see Section 5.1 ) to set up your MTRRs. X 4.0 does this automatically for you.\nIf you're playing a game under X, don't run a window manager, and certainly don't run a desktop manager like GNOME or KDE. See Section 4.2 for details.\nKill all non-essential processes (you'll have to do this as root) by using the startup scripts on your system. On Debian, the startup scripts for run-level 2 are located in /etc/rc2.d/. You can kill a service in an orderly manner by sending its startup script the `stop' command:\n# cd /etc/rc2.d\n    # ./ntpd stop\nAnother (radical) option is to simply put yourself in single-user mode with\n# telinit 1\nThis will even get rid of getty; your system will only be running whatever is absolutely crucial to its operation. You'll have something like 10 processes running. The downside is that you'll have to play the game as root. But your process table will be a ghost town, and all that extra CPU will go straight to your game.\n5.3. About libraries on Linux\nA common problem you'll see in gaming is a library file not being found. They're kind of mysterious and have funny names, so we'll go over libraries on Linux for a bit. There are two types of libraries, static and dynamic. When you compile a program, by default, gcc uses dynamic libraries, but you can make gcc use static libraries instead by using the -static switch. Unless you plan on compiling your games from source code, you'll mainly be interested in dynamic libraries.\n5.3.1. Dynamic libraries\nDynamic libraries, also called a \u201cshared library\u201d, provide object code for an application while it's running. That is, code gets linked into the executable at run time, as opposed to compile time. They're analagous to the .dll's used by Windows. The program responsible for linking code \u201con the fly\u201d is called /etc/ld.so, and the dynamic libraries themselves usually end with .so with a version number, like:\n/usr/lib/libSDL.so\n    /lib/libm.so.3\nWhen using gcc, you refer to these libraries by shaving off the strings lib, .so and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `place a memo inside the executable' that says to look at the files /usr/lib/libSDL.so and /lib/libm.so.3 whenever an SDL or math function is used.\n5.3.2. Static libraries\nIn contrast to dynamic libraries which provide code while the application runs, static libraries contain code which gets linked (inserted) into the program while it's being compiled. No code gets inserted at run time; the code is completely self-contained. Static libraries usually end with .a followed by a version number, like:\n/usr/lib/libSDL.a\n    /usr/lib/libm.a\nThe .a files are really an archive of a bunch of .o (object) files archived together, similar to a tar file. You can use the nm to see what functions a static library contains:\n% nm /usr/lib/libm.a\n    ...\n    e_atan2.o:\n    00000000 T __ieee754_atan2\n    \n    e_atanh.o:\n    00000000 T __ieee754_atanh\n    00000000 r half\n    00000010 r limit\n    00000018 r ln2_2\n    ...\nWhen using gcc, you refer to these libraries by shaving off the strings \u201clib\u201d, \u201c.a\u201d and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `bolt on' code from /usr/lib/SDL.a and /usr/lib/libm.a whenever it sees a math function during the compilation process.\n5.3.3. How are library files found\nIf you compile your own games, your biggest problem with libraries will either be that gcc can't find a static library or perhaps the library doesn't exist on your system. When playing games from binary, your library woes will be either be that ld.so can't find the library or the library doesn't exist on your system. So it makes some sense to talk about how gcc and ld.so go about finding libraries in the first place.\ngcc looks for libraries in the ``standard system directories'' plus any directories you specify with the -L option. You can find what these standard system directories are with gcc -print-search-dirs\nld.so looks to a binary hash contained in a file named /etc/ld.so.cache for a list of directories that contain available dynamic libraries. Since it contains binary data, you cannot modify this file directly. However, the file is generated from a text file /etc/ld.so.conf which you can edit. This file contains a list of directories that you want ld.so to search for dynamic libraries. If you want to start putting dynamic libraries in /home/joecool/privatelibs, you'd add this directory to /etc/ld.so.conf. Your change doesn't actually make it into /etc/ld.so.cache until you run ldconfig; once it's run, ld.so will begin to look for libraries in your private directory.\nAlso, even if you just add extra libraries to your system, you must update ld.so.cache to reflect the presence of the new libraries.\n5.3.4. Finding Out What Libraries a Game Depends On\nMost commercial Linux games will be dynamically linked against various LGPL libraries, such as OpenAL or SDL. For these examples, Bioware's NeverWinter Nights < http://nwn.bioware.com > will be used.\nTo find out what libraries a game uses, we can use the \"ldd\" command. Cd to /usr/games/nwn, or wherever you installed it and take a look at the files. You should see a file called nwmain; this is the actual game binary. Type \"ldd nwmain\" and you'll see:\n$ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => not found\n       libSDL-1.2.so.0 => /usr/lib/libSDL-1.2.so.0 (0x40178000)\n       libc.so.6 => /lib/libc.so.6 (0x401ff000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40319000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x409f1000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x409f3000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a01000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40acd000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40ad1000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40b88000)\n       libasound.so.2 => /usr/lib/./libasound.so.2 (0x40b90000)\nldd shows all the libraries a dynamic executable relies on, and shows you where they are. It also \"pulls in\" the dependencies of the dependencies. For instance, while NWN does not itself depend on libnvidia-tls.so, the Nvidia supplied libGL on my system does.\nMissing libraries?\nIn the example above, we can see that nwmain wants libmss.so.6, and the linker cannot find it. Usually, a missing library is a crash waiting to happen. There is one other thing to consider though: The majority of games are actually launched by a \"wrapper\", a shell script that performs some magic prior to launching the game. In the case of NWN, the wrapper is called nwn. Let's take a look at that now:\n$ less nwn\n   #!/bin/sh\n   \n   # This script runs Neverwinter Nights from the current directory\n   \n   export SDL_MOUSE_RELATIVE=0\n   export SDL_VIDEO_X11_DGAMOUSE=0\n   \n   # If you do not wish to use the SDL library included in the package, remove\n   # ./lib from LD_LIBRARY_PATH\n   export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   \n   ./nwmain $@\nThis script sets up some environment variables, then launches the game binary with whatever command line options we added. The relevant part here is the environment variable called \"LD_LIBRARY_PATH\". This is a way of adding to the linkers search path. Try copying the line to your shell and seeing what happens when you re-run ldd.\n$ export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   $ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => ./miles/libmss.so.6 (0x40178000)\n       libSDL-1.2.so.0 => ./lib/libSDL-1.2.so.0 (0x401ec000)\n       libc.so.6 => /lib/libc.so.6 (0x4025e000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40378000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x40a50000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x40a52000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a60000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40b2c000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40b30000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40be7000)\nAs you can see, this gives us slighly different results. The NWN library directories have been prepended to the search path, so now the linker can find libmss.so.6 in the \"./miles\" directory, and also finds the local copy of libSDL first, no longer using the system copy.\nThere's another benefit of these scripts: they are easily edited to allow you to provide your own copy of a library. Any game-supplied copy of a library such as OpenAL or SDL is likely to be compiled for the lowest common denominator, probably i486 or i686. If you have a Pentium4 or an AthlonXP, you could compile you own version specifically for your processor. The compiler will try to optimise the resulting binary, giving some increase in performance. See the homepage for GCC for more information this at the GCC site.\nMaking NWN use your system copy is easy. It says so in the wrapper script! Remove \"./lib:\" from the LD_LIBRARY_PATH line, and you're good to go.\nAnother nice little trick is for games that use OpenAL for their sound output (e.g. Unreal based games: UT, Postal, Rune, etc.). Since the Open Sound System's (OSS) deprecation in favour of ALSA, all Linux distributions I've seen now ship with ALSA support as default, with OSS support actually being supplied via ALSA's compatability modules. The copies of openal.so distributed with games often do NOT support ALSA, so making the game use a copy compiled yourself will allow you to use ALSA natively.\n6. When Bad Things Happen To Good People\nOf course we can't cover every Bad Thing that happens, but I'll outline some items of common sense.\nThere are two types of bad things: random and repeatable. It's very difficult to diagnose or fix random problems that you don't have any control over when they happen or not. However, if the problem is repeatable \"it happens when I press the left arrow key twice\", then you're in business.\n6.1. RTFM!\nRead the friendly manual. The `manual' can take on a few forms. For open source games there's the readme files that come with the game. Commercial games will have a printed manual and maybe some readme files on the CD the game came on. Don't forget to browse the CD your game came on for helpful tips and advice.\nDon't forget the game's website. The game's author has probably seen people with your exact same problem many times over and might put information specific to that game on the website. A prime example of this is Loki Software's online FAQs located at http://faqs.lokigames.com .\n6.2. Look For Updates and Patches\nIf you're playing an open source game that you compiled, make sure you have the newest version by checking the game's website. If your game came from a distro make sure there's not an update rpm/deb for the game.\nCommercial game companies like Loki release patches for their games. Often a game will have MANY patches (Myth2) and some games are unplayable without them (Heretic2). Check the game's website for patches whether you have a problem running the game or not; there may be an update for a security problem that you may not even be aware of.\nBy the way, Loki now has a utility that searches for Loki Software on your hard drive and automatically updates them. Check out http://updates.lokigames.com .\n6.3. Newsgroups\nIf you don't know what netnews (Usenet) is, then this is definitely worth 30 minutes of your time to learn about. Install a newsreader. I prefer console tools more, so I use tin, but slrn is also popular. Netscape has a nice graphical \"point and click\" newsreader too.\nFor instance, I can browse Loki Software's news server with tin -g news.lokigames.com. You can also specify which news server to use using the $NNTP environment variable or with the file /etc/nntpserver.\n6.4. Google Group Search\nEvery post made to Usenet gets archived at Google's database at http://groups.google.com . This archive used to be at http://www.deja.com , but was bought by Google. Many people still know the archive as \"deja\".\nIt's almost certain that whatever problem you have with Linux, gaming related or not, has already been asked about and answered on Usenet. Not once, not twice, but many times over. If you don't understand the first response you see (or if it doesn't work), then try one of the other many replies. If the page is not in a language you can understand, there are many translation sites which will convert the text into whatever language you like, including http://www.freetranslation.com and http://translation.lycos.com . My web browser of choice, Opera (available at http://www.opera.com ) allows you to use the right mouse button to select a portion of text and left click the selection to translate it into another language. Very useful when a Google group search yields a page in German which looks useful and my wife (who reads German well) isn't around.\nThe Google group search has a basic and advanced search page. Don't bother with the simple search. The advanced search is at http://groups.google.com/advanced_group_search .\nIt's easy to use. For example, if my problem was that Quake III crashed everytime Lucy jumps, I would enter \"linux quake3 crash lucy jumps\" in the \"Find messages with all of the words\" textbox.\nThere are fields for which newsgroup you want to narrow your search to. Take the time to read and understand what each field means. I promise you. You won't be disappointed with this service. Use it, and you'll be a much happier person. Do note that they don't archive private newsgroups, like Loki Software's news server. However, so many people use Usenet, it almost doesn't matter.\n6.5. Debugging: call traces and core files\nThis is generally not something you'll do for commercial games. For open source games, you can help the author by giving a corefile or stack trace. Very quickly, a core file (aka core dump) is a file that holds the \"state\" of the program at the moment it crashes. It holds valuable clues for the programmer to the nature of the crash -- what caused it and what the program was doing when it happened. If you want to learn more about core files, I have a great gdb tutorial at http://www.dirac.org/linux .\nAt the *very* least, the author will be interested in the call stack when the game crashed. Here is how you can get the call stack at barf-time:\nSometimes distros set up their OS so that core files (which are mainly useful to programmers) aren't generated. The first step is to make your system allow unlimited coresizes:\nulimit -c unlimited\nYou will now have to recompile the program and pass the -g option to gcc (explaining this is beyond the scope of this document). Now, run the game and do whatever you did to crash the program and dump a core again. Run the debugger with the core file as the 2nd argument:\n$ gdb CoolGameExecutable core\nAnd at the (gdb) prompt, type \"backtrace\". You'll see something like:\n#0 printf (format=0x80484a4 \"z is %d.\\n\") at printf.c:30\n    #1 0x8048431 in display (z=5) at try1.c:11\n    #2 0x8048406 in main () at try1.c:6\nIt may be quite long, but use your mouse to cut and paste this information into a file. Email the author and tell him:\nThe game's name\nAny error message that appears on the screen when the game crashes.\nWhat causes the crash and whether it's a repeatable crash or not.\nThe call stack\nIf you have good bandwidth, ask the author if he would like the core file that his program dumped. If he says yes, then send it. Remember to ask first, because core files can get very, very big.\n6.6. Saved Games\nIf your game allows for saved games, then sending the author a copy of the saved game is useful because it helps the tech reproduce whatever is going wrong. For commercial games, this option is more fruitful than sending a core file or call stack since commercial games can't be recompiled to include debugging information. You should definitely ask before sending a save game file because they tend to be long, but gaming companies usually have lots of bandwidth. Mike Phillips (formerly of Loki Software) mentioned that sending in saved games to Loki is definitely a good thing.\nNeedless to say, this only applies if your game crashes reproducably at a certain point. If the game segfaults every time you run it, or is incredibly slow, a saved game file won't be of much help.\n6.7. What to do when a file or library isn't being found (better living through strace)\nSometimes you'll see error messages that indicate a file wasn't found. The file could be a library:\n% ./exult \n ./exult: error while loading shared library: libSDL-1.2.so.0: cannot load shared object\n file: No such file or directory\nor it could be some kind of data file, like a wad or map file:\n% qf-client-sdl  \n IP address 192.168.0.2:27001 UDP Initialize Error: W_LoadWadFile: couldn't load gfx.wad\nSuppose gfx.wad is already on my system, but couldn't be found because it isn't in the right directory. Then where IS the right directory? Wouldn't it be helpful to know where these programs looked for the missing files?\nThis is where strace shines. strace tells you what system calls are being made, with what arguments, and what their return values are. In my `Kernel Module Programming Guide' (due to be released to LDP soon), I outline everything you may want to know about strace. But here's a brief outline using the canonical example of what strace looks like. Give the command:\nstrace -o ./LS_LOG /bin/ls\nThe -o option sends strace's output to a file; here, LS_LOG. The last argument to strace is the program we're inspecting, here, \"ls\". Look at the contents of LS_LOG. Pretty impressive, eh? Here is a typical line:\nopen(\".\", O_RDONLY|O_NONBLOCK|0x18000)  = 4\nWe used the open() system call to open \".\" with various arguments, and the return value of the call is 4. What does this have to do with files not being found?\nSuppose I want to watch the StateOfMind demo because I can't ever seem to get enough of it. One day I try to run it and something bad happens:\n% ./mind.i86_linux.glibc2.1 \n    Loading & massaging...\n    Error:Can't open data file 'mind.dat'.\nLet's use strace to find out where the program was looking for the data file.\nstrace ./mind.i86_linux.glibc2.1 2> ./StateOfMind_LOG\nPulling out vim and searching for all occurrences of mind.dat, I find the following lines:\nopen(\"/usr/share/mind.dat\",O_RDONLY) = -1 ENOENT (No such file)\n    write(2, \"Error:\", 6Error:)   = 6\n    write(2, \"Can\\'t open data file \\'mind.dat\\'.\"..., ) = 33\nIt was looking for mind.dat in only one directory. Clearly, mind.dat isn't in /usr/share. Now we can try to locate mind.dat and move it into /usr/share, or better, create a symbolic link.\nThis method works for libraries too. Suppose the library libmp3.so.2 is in /usr/local/include but your new game \"Kill-Metallica\" can't find it. You can use strace to determine where Kill-Metallica was looking for the library and make a symlink from /usr/local/include/libmp3.so.2 to wherever Kill-Metallica was looking for the library file.\nstrace is a very powerful utility. When diagnosing why things aren't being found, it's your best ally, and is even faster than looking at source code. As a last note, you can't look up information in source code of commercial games from Lokisoft or Tribsoft. But you can still use strace with them!\n6.8. Hosed consoles\nSometimes a game will exit abnormally and your console will get `hosed'. There are a few definitions of a hosed console. The text characters could look like gibberish. Your normally nice black screen could look like a quasi-graphics screen. When you press ENTER, a newline doesn't get echo'ed to the screen. Sometimes, certain keys of the keyboard won't respond. Logging out and back in don't always work, but there are a few things that might:\nIf you don't see any character on the screen as you type in, your terminal settings may be wrong. Try \"stty echo\". This should let input characters echo again.\nAt the prompt, type \"reset\". This should clear up many problems, including consoles hosed by an SVGAlib or ncurses based game.\nTry running the game again and normally. Once I had to kill Quake III in a hurry, so I performed a Ctl-Alt-Backspace. The console was hosed with a quasi-graphics screen. Running Quake III and quitting normally fixed the problem.\nThe commands deallocvt and openvt will work for most of the other problems you'll have. deallocvt N kills terminal N entirely, so that Alt-FN doesn't even work anymore. openvt -c N starts it back up.\nIf certain keys on your keyboard don't work, be creative. If you want to reboot but the `o' key doesn't work, try using halt. One method I've come up with is typing a command at the prompt and using characters on the screen with mouse cut/paste. For example, you can type \"ps ax\", and you're sure to have an `h', `a', `l' and a `t' somewhere on the screen. You can use the mouse to cut and paste the word \"halt\".\nThe most regrettable option is a reboot. If you can, an orderly shutdown is preferable; use \"halt\" or \"shutdown\". If you can't, ssh in from a another machine. That sometimes works when your console is very badly hosed. In the worst case scenario, hit the reset or power switch.\nNote that if you use a journalling filesystem like ext3, reiserfs or xfs, hitting the power switch isn't all that bad. You're still supposed to shutdown in an orderly manner, but the filesystem integrity will be maintained. You won't normally see an fsck for the partitions that use the journalling filesystem.\n6.9. Locked System\nWhen a computer \"locks\", also called \"hung\", the keyboard and mouse become completely unresponsive. This is a direct consequence of a bug in the Linux kernel. While Linux is known for stability, these things do happen, especiallly for gaming which entails highly synchronized hardware events which occur very fast, even to a computer. When a computer locks, it can be a \"hard lock\", meaning the kernel has completely stopped functioning. This often indicates misbehaving or faulty hardware. There's no recovery from this kind of lock other than pressing the reset or power button. The lock can also be a \"soft lock\", meaning that the kernel is still functioning in some capacity. It's possible to recover from this gracefully.\nThe first thing you should try is to hit control-alt-backspace which kills X. If you gain control of your system, the kernel wasn't really locked in the first place. If this didn't work after a few seconds, you'll definitely want to reboot the system using the following instructions.\nUse control-alt-delete to reboot the system. You'll know this worked if you hear the computer beep after a few seconds (this is BIOS saying \"I'm OK\" during a power on cycle).\nLog into another system and ssh into the hung system. If you can ssh in, reboot or halt the system.\nIf you can't ssh into the system, you'll need to use the \"magic SysRq key\" which is documented in /usr/src/linux/Documentation/sysrq.txt. Here's a summary for the x86 architecture (see the documentation for other architectures). Note if your keyboard doesn't have a SysRq key, use the PrintScreen key:\nHit alt-SysRq-s. This will attempt to sync your mounted filesystems so that changes to files get flushed to disk. You may hear disk activity. If you're looking at a console, the system should print the devices which were flushed.\nA few seconds later, hit alt-SysRq-u. This will attempt to remount all your mounted filesystems as read-only). You should hear disk activity. If you're looking at a console, the system will print the devices which were remounted.\nA few seconds later, use alt-SysRq-b to reboot the system.\nYou can hit alt-SysRq-h for a very terse help screen.\nTo use the magic SysRq key, your kernel needs to have been compiled with magic SysRq support. You'll find this option under \"Kernel Hacking | Kernel Debugging | Magic SysRq key\" in whatever kernel config menu you like to use. If the magic SysRq key sequence doesn't shut your system down gracefully, your kernel has crashed hard and you'll need to use the reset or power button to recover.\n7. Video Cards\n7.1. History\nOnce upon a time, a company in San Jose, California named 3dfx Interactive was king of the gaming video card market. In October 1996 they released the Voodoo I, which was a phenomenal success. It was the first hardware accelerated card, but only rendered 3D; it had to be piggybacked with a 2D video card. The idea was that 2D rendering was handled by a high quality 2D video card (Matrox was immensely popular at the time) but 3D information (see Glide2, Section 3.1 ) would be passed to the Voodoo I and rendered, using the Voodoo's fast hardware to perform the necessary graphics calculations. They released the Voodoo Rush in April 1996. It should've been a more powerful card, with a 50MHz GPU and 8MB of RAM. Even better, it was their first combined 2D/3D card, meaning that it freed up a valuable PCI slot (most PC's only had a couple of PCI slots back then) but the Rush wasn't as popular. 3dfx removed the multi-texturing unit from the Rush, and it was outperformed by the Voodoo I. At the time, ATI had their Rage series and nVidia had their Riva 128, but the Voodoo I blew them all away.\nThis was a good time for Linux. id Software's open sourced the Doom codebase and ported Quake I to Linux (December 1996). We were getting our first tastes of real commercial gaming. Life was simple: you purchased a Voodoo. And it felt good, because 3dfx open sourced their drivers. The king of video cards worked with Linux developers. Not only did we have the best video cards, but the drivers were all open source.\nIn March 1998, 3dfx released their Voodoo II, with its 3.6GB/sec memory bandwith, 12MB of video memory and 90MHz core. It supported resolutions up to 1024x768. This was 3dfx in its heyday. Like the Voodoo I, the Voodoo II was a 3D only card, and piggy backed with a 2D video card. The Voodoo Banshee was released in September 1998 as a combined 2D/3D card, like the Rush. Despite the faster 100MHz core, the Banshee was outperformed by the Voodoo II because its multi-texturing unit was removed, like with the Rush. And again like the Rush, it wasn't popular. But 3dfx reigned supreme, and nobody could touch them.\nIn April 1999, the Voodoo III was released. There were a number of Voodoo III's, ranging from a 143MHz core speed to 183MHz. There were TV-out versions. There were PCI and AGP versions (it was the first AGP video card). It was another success, but 3dfx began to lose ground to nVidia, which released their TNT 2. The TNT 2 outperformed the Voodoo II, and accelerated 3D graphics at full 32 bit color, while the Voodoo's were stuck at 16 bit color. But life was still good for Linux. We had a card that was almost neck-to-neck with nVidia, our drivers were open source, and in December 1999, id Software gave us a huge gift: they open sourced the Quake I codebase.\nThen nVidia released the GeForce 256 in October 1999. 3dfx's Voodoo IV, its direct competitor, was about a year late which is very bad when you're competing for a bleeding edge market. While nVidia was putting real R&D into their cards, 3dfx was simply adding more and faster RAM. The Voodoo IV and V rendered in full 32bpp color, had great AA support ( Section 7.4.3 ), featured a 2nd GPU, more memory, and was arguably the king of of video cards. However, 3dfx's late release of the Voodoo IV and V coupled with the fact that the GeForce could be had for half the price meant that 3dfx was sinking fast. For Linux, the newest Voodoo's could only accelerate at 16 and 24 bit color. Worse still, the Voodoo V's 2nd GPU was unused by the Linux driver (and to this day, the Voodoo V is functionally equivalent to the single GPU Voodoo IV on Linux). Most Windows users were switching to nVidia, and despite the fact that the nVidia drivers were proprietary, even Linux users began to jump onto the nVidia bandwagon. VA Linux, the largest Linux server vendor, put nVidia into their machines.\nThen in April 2000, 3dfx was attacked on a different front: ATI started releasing their first generation Radeons. Until this point, ATI had always been an innovative (they developed their own 3D acceleration chips in 1996, about the same time as 3dfx), but sleepy graphics chipset manufacturer. The Radeons were their first 3D accelerated card that gamers took any real serious interest in. Their Radeons trounced both nVidia and 3dfx. They worked with Linux developers, open sourced all their drivers and were hailed as the great hope for Linux gaming. nVidia came back with fists swinging, and this was all too much for 3dfx. Between losing the benchmark wars to the GeForce and Radeon, their lateness with new cards and high prices, 3dfx lost its market share and didn't have the funds to stay into business. On April 18 2001, they sold most of their assets and technology to nVidia, and in October 2002, they finally declared bankruptcy.\nThe demise of 3dfx was quite sudden and a slap in the face to the open source community. I still remember my friend Gabe Rosa emailing me with just \"Look at /.\" and seeing the news. It was the 2nd worst day for Linux gaming (the 1st being the demise of Loki). And it was also a shame. 3dfx was getting ready to release a new Voodoo V featuring 4 GPU's which would've trounced the ATI and nVidia offerings, as well as a new card code named \"Rampage\" which reportedly would've put them firmly back as the king of the hill. There are reports that the Rampage's technology (which was sold to nVidia) went into the GeForce 5900. Not too shabby for 3 year old technology!\nAt first, things were still simple. Linux gamers would either keep their open source Voodoos, get an open source Radeon or a closed source GeForce. However, with bigger and better games on the horizon, it was only a matter of time before the Voodoos would no longer be a viable graphics card for modern gaming. People were still using Voodoo's, but they were essentially out of the game at this point.\nATI started to release a tremendous number of versions of each video card, and keeping up with them and their terminology started to become very difficult. ATI, together with nVidia, played king of hill. Their products have been neck to neck ever since, with GeForce taking the lead a bit more times than the Radeon. But the Radeon's drivers were open source, so many Linux users stuck by them. Then things got even more complicated.\nATI started becoming more and more reluctant to open source drivers for their new releases, and suddenly, it wasn't clear who the \"good guy\" was anymore. nVidia's party line was they license some of their GL code from another company, and is thus non-releasable. Presumably, ATI doesn't want to release drivers to keep their trade secrets, well, a secret. And it gets worse. The ATI Linux drivers have been plagued by extremely poor performance. Even when an ATI offering is better than the current GeForce offering for Windows, the card is always trounced by GeForce on Linux. Because of the ATI Linux driver woes, Linux users cannot use MS Windows based benchmarks or card stats. They simply don't apply to us. And that's pretty much where we are right now.\nAs a last note, the only systematic Linux video card benchmarking effort I'm aware of was done, unfortunately, in March 2001, between a Radeon 32 DDR and a GeForce 2. You can read it for yourself at http://www.linuxhardware.org/features/01/03/19/0357219.shtml , but conclusion is that the GeForce 2 firmly and soundly trounced the Radeon 32 DDR.\n7.2. Current Status (1 March 2004)\nnVidia's latest offering is the GeForce 5900, based on the NV35 chipset. It's well supported by Linux with high quality but proprietary drivers. nVidia uses a convenient combined driver architecture; their driver will support the TNT 2 all the way up to the GeForce 5900. Although their drivers are closed source, as a company, nVidia has been supportive and good to Linux users.\nATI's has worked with Linux developers for their Radeons up to and including the Radeon 9200, which have 2D and 3D support in XFree86. I'm not entirely sure of the quality of these open source drivers, however, Soldier of Fortune I and Heavy Metal still have opaque texture problems under first generation Radeons. Beyond the 9200, you need to use ATI's binary only proprietary drivers, available in rpm format from ATI's website. It's claimed that these drivers are piss poor; a friend of mine claims his GeForce 4400 outperforms his Radeon 9700 pro. That's shameful.\nOn paper, and in the Windows benchmarks, the Radeon 9800 trounces the ill-conceived GeForce 5800 and slightly edges out the GeForce 5900. On paper, it's simply the more impressive card. But again, the driver issue makes this information unusable for us. If you have your heart set to buy the best card for Linux, you'll want to go with the GeForce 5900.\n7.2.1. SVGAlib Support\nAs of June 2002, SVGAlib support Radeon cards is shaky. Developers have reported that SVGAlib works on the Radeon 7500, Radeon QD (64MB DDR model) but has problems on the Radeon VE.\nI have no information about SVGAlib and the GeForce cards.\n7.3. Which Video Card Should I Buy? (1 March 2004)\nThe answer was very difficult last year, but here's my take on it these days:\nAll GeForce cards require a proprietary driver which will \"taint\" your kernel. However, all ATI cards beyond the Radeon 9200 also require a proprietary driver that will \"taint\" your kernel as well.\nnVidia has proven that they care enough about Linux to write and maintain current and very high quality drivers for Linux. Even when ATI open sourced its video card driver, they played the \"we'll make Linux developers write our drivers for us\" game. Their current proprietary drivers are below par.\nThe current Radeon 9800 barely beats out the GeForce 5900 in benchmarks and card specs, but Linux users won't benefit from this because of driver issues..\nATI has a very long history of dropping support for hardware as fast as they can get away with it.\nOn MS Windows, when the GeForce beat out its main competing Radeon, the review claimed that the Radeon generally had better visuals. I have no idea how this translates to Linux.\nDon't get the GeForce 5800. Card reviews claim that it has some serious heat, noise, and dust issues. It's informally called the \"dust buster\" because of noise its fan makes.\nIf you absolutely only want open source drivers on your system, the Radeon 9200 is the best card you can buy.\nIf you have a Linux/Windows dual boot, consider either the Radeon 9800 or the GeForce 5900. The Radeon will be slightly stronger on Windows. The GeForce will be stronger on Linux.\nIf you have a Linux only system, the GeForce 5900 is your best bet. As of today, the 256MB version comes in at a whopping $350, however, the 128MB version is more reasonable.\n7.4. Definitions: Video Card and 3D Terminology\nWe'll cover video card and 3D graphics terminology. This material isn't crucial to actually getting a game working, but may help in deciding what hardware and software options are best for you.\n7.4.1. Textures\nA rendered scene is basically made up of polygons and lines. A texture is a 2D image (usually a bitmap) covering the polygons of a 3D world. Think of it as a coat of paint for the polygons.\n7.4.2. T&L: Transform and Lighting\nThe T&L is the process of translating all the 3D world information (position, distance, and light sources) into the 2D image that is actually displayed on screen.\n7.4.3. AA: Anti Aliasing\nAnti aliasing is the smoothing of jagged edges along a rendered curve or polygon. Pixels are rectangular objects, so drawing an angled line or curve with them results in a 'stair step' effect, also called the 'jaggies'. This is when pixels make, what should be a smooth curve or line, jagged. AA uses CPU intensive filtering to smooth out these jagged edges. This improves a game's visuals, but can also dramatically degrade performance.\nAA is used in a number of situations. For instance, when you magnify a picture, you'll notice lines that were once smooth become jagged (try it with The Gimp). Font rendering is another big application for AA.\nAA can be done either by the application itself (as with The Gimp or the XFree86 font system) or by hardware, if your video card supports it. Since AA is CPU intensive, it's more desirable to perform it in hardware, but if we're talking about semi-static applications, like The Gimp, this really isn't an issue. For dynamic situations, like games, doing AA in hardware can be crucial.\n7.4.4. FSAA: Full Screen Anti-Aliasing\nFSAA usually involves drawing a magnified version of the entire screen in a separate framebuffer, performing AA on the entire image and rescaling it back to the normal resolution. As you can imagine, this is extremely CPU intensive. You will never see non hardware accelerated FSAA.\n7.4.5. Mip Mapping\nMip mapping is a technique where several scaled copies of the same texture are stored in the video card memory to represent the texture at different distances. When the texture is far away a smaller version of the texture (mip map) is used. When the texture is near, a bigger one is used. Mip mapping can be used regardless of filtering method ( Section 7.4.6 ). Mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.\n7.4.6. Texture Filtering\nTexture filtering is the fundamental feature required to present sweet 3D graphics. It's used for a number of purposes, like making adjacent textures blend smoothly and making textures viewed from an angle (think of looking at a billboard from an extreme angle) look realistic. There are several common texture filtering techniques including point-sampling, bilinear, trilinear and anisotropic filtering.\nWhen I talk about 'performance hits', keep in mind that the performance hit depends on what resolution you're running at. For instance, at a low resolution you may get only a very slight hit by using trilinear filtering instead of bilinear filtering. But at high resolutions, the performance hit may be enormous. Also, I'm not aware of any card that uses anisotropic texture filtering. TNT drivers claim they do, but I've read that these drivers still use trilinear filtering when actually rendering an image to the screen.\n7.4.6.1. Point Sampling Texture Filtering\nPoint sampling is rare these days, but if you run a game with 'software rendering' (which you'd need to do if you run a 3D accelerated game without a 3D accelerated board) you're likely to see it used.\n7.4.6.2. Bilinear Texture Filtering\nBilinear filtering is a computationally cheap but low quality texture filtering. It approximates the gaps between textures by sampling the color of the four closest (above, below, left and right) texels. All modern 3D accelerated video cards can do bilinear filtering in hardware with no performance hit.\n7.4.6.3. Trilinear Texture Filtering\nTrilinear filtering is a high quality bilinear filter which uses the four closest pixels in the second most suitable mip map to produce smoother transitions between mip map levels. Trilinear filtering samples eight pixels and interpolates them before rendering. Trilinear filtering always uses mip mapping. Trilinear filtering eliminates the banding effect that appears between adjacent mip map levels. Most modern 3D accelerated video cards can do trilinear filtering in hardware with no performance hit.\n7.4.6.4. Anisotropic Texture Filtering\nAnisotropic filtering is the best but most CPU intensive of the three common texture filtering methods. Trilinear filtering is capable of producing fine visuals, but it only samples from a square area which in some cases is not the ideal method. Anisotropic (meaning 'from any direction') samples from more than 8 pixels. The number of sampled pixels and which sampled pixels it uses depends on the viewing angle of the surface relative to your screen. It shines when viewing alphanumeric characters at an angle.\n7.4.7. Z Buffering\nA Z buffer is a portion of RAM which represents the distance between the viewer (you) and each pixel of an object. Many modern 3D accelerated cards have a Z buffer in their video RAM, which speeds things up considerably, but Z buffering can also be done by the application's rendering engine. However, this sort of thing clearly should be done in hardware wherever possible.\nEvery object has a stacking order, like a deck of cards. When objects are rendered into a 2D frame buffer, the rendering engine removes hidden surfaces by using the Z buffer. There are two approaches to this. Dumb engines draw far objects first and close objects last, obscuring objects below them in the Z buffer. Smart engines calculate what portions of objects will be obscured by objects above them and simply not render the portions that you won't see anyhow. For complicated textures this is a huge savings in processor work.\n8. Sound\n8.1. Which sound card is best?\nBy the word \"best\" I mean best for gaming. Gamers want high quality sound for our games with the least amount of tinkering. On the other hand, a musician would have a very different concept of what \"best sound card\" would mean. If you're a musician, you might want to check out the Linux Audio Quality HOWTO .\nNow that Linux is beginning to mature, this question isn't as important as it used to be. Once upon a time, soundcards without onboard MIDI chips (most PCI sound cards) didn't do MIDI. This was mostly a problem for things like xdoom or lxdoom using musserv. These days we have MIDI emulators like Timidity and libraries like SDL which don't require hardware MIDI support. Frankly, I've had many cards and I can't tell the difference between any of them for gaming. If you want to do things like convert a record LP to digital format, then your choice of a soundcard with a professional grade A/D converter is absolutely crucial. For this HOWTO, we'll assume that you're more of a gamer than a studio recording engineer.\nYour decision should be based on what will be the easiest to configure. If you already have a card and it works well, that's good enough. If you're in the market to buy a sound card, get something that will take you a second to configure. PCI cards are much easier to deal with than ISA since you don't need to tell their drivers about which system resources (IRQ, DMA, I/O addresses) to use. Some ISA cards ARE plug-n-play, like the Creative AWE-64, and the Linux kernel has come a long way in auto configuring them.\nMy personal recommendation is any card which has the es1370 or es1371 chip, which uses the es1370 and es1371 sound drivers on Linux. These cards include the older Ensoniq es1370 and newer Creative PCI-128. These cards are extremely cheap and trivial to get working under Linux.\nI used to be a fan of the Creative Soundblaster AWE 32, AWE 64 and AWE 64 gold soundcards. These ISA PnP cards are well supported by both OSS and Alsa. They all use the same E-mu 8000 synthesis chip which enables them to play 32 voices simultaneously (they have 32 \"channels\"). A few notes: First, the Soundblaster AWE HOWTO is very out of date. Second, the AWE 64 and AWE 64 gold can play 64 voices simultaneously, but this is done in software. Creative never released a Linux driver for these cards (and they never released programming information to Linux developers), so Linux users cannot use the extra 32 channels on the AWE 64 and AWE 64 gold. As far Linux users are concerned, all three cards are completely identical (although the AWE 64 gold has gold plated connectors, which are better for sound quality than the more common steel connectors).\nThe Creative Soundblaster Live! is an extremely popular PCI sound card these days. I've never owned one, so I cannot comment here. However, there have been numerous reports about serious problems with the Live! and AMD motherboards that use the 686b southbridge. A google search should turn up alot of information on this problem.\nA more relevent issue is speakers, but even here the difference isn't huge. I've had expensive Altec Lansing speakers perform only slightly better than el-cheapo speakers. You get what you pay for with speakers, but don't expect a huge difference. You'll want to get something with a separate sub-woofer; this does make a difference at a cost of extra power and connector wires.\n8.2. Why isn't my sound working?\nFirst of all, it's probably not the game, it's probably your setup. AFAIK, there are 3 options to getting a sound card configured under Linux: the free OSS sound drivers that come with the Linux kernel, the Alsa drivers and the commercial OSS sound drivers. Personally, I prefer the free OSS drivers, but many people swear by Alsa. The commercial OSS drivers are good when you're having trouble getting your sound card to work by free methods. Don't discount them; they're very cheap (like 10 or 20 bucks), support bleeding edge sound cards and take a lot of guesswork out of the configuring process.\nThere are 5 things that can go wrong with your sound system:\nShared interrupt\nSomething's already accessing the sound card\nYou're using the wrong driver\nA permissions problem\n8.2.1. Shared interrupt\nThe first thing to do is to figure out if you have an IRQ conflict. ISA cards can't share interrupts. PCI cards can share interrupts, but certain types of high bandwidth cards simply don't like to share, including network and sound cards. To find out whether you have a conflict, do a cat /proc/interrupts. Output on my system is:\n$ cat /proc/interrupts\n               CPU0       CPU1\n      0:   24185341          0          XT-PIC  timer\n      1:     224714          0          XT-PIC  keyboard\n      2:          0          0          XT-PIC  cascade\n      5:    2478476          0          XT-PIC  soundblaster\n      5:     325924          0          XT-PIC  eth0\n     11:     131326          0          XT-PIC  aic7xxx\n     12:    2457456          0          XT-PIC  PS/2 Mouse\n     14:     556955          0          XT-PIC  ide0\n    NMI:          0          0\n    LOC:   24186046   24186026\n    ERR:       1353\nThe second column is there because I have 2 CPU's in this machine; if you have one CPU (called UP, or uniprocessor), you'll have only 1 CPU column. The numbers on the left are the assigned IRQ's and the strings to the right indicate what device was assigned that IRQ. You can see I have an IRQ conflict between the soundcard (soundblaster) and the network card (eth0). They both share IRQ 5. Actually, I cooked this example up because I wanted to show you what an IRQ conflict looks like. But if I did have this conflict, neither my network nor my sound would work well (or at all!).\nIf my sound card is PCI, the preferred way of fixing this would be to simply move one of the cards to a different slot and hope the BIOS sorts things out. A more advanced way of fixing this would be to go into BIOS and assign IRQ's to specific slots. Modern BIOS'es can do this.\n8.2.2. Misconfigured driver\nSometimes, a card is hardwired to use a certain IRQ. You'll see this on ISA cards only. Alternatively, some ISA cards can be set to use a specific IRQ using jumpers on the card itself. With these types of cards, you need to pass the correct IRQ and memory access, \"I/O port\", to the driver.\nThis is a sound card specific issue, and beyond the scope of this HOWTO.\n8.2.3. Something is already accessing your sound card\nPerhaps an application is already accessing your soundcard. For example, maybe you have an MP3 player that's paused? If something is already accessing your card, other applications won't be able to. Even though it was written to share the card between applications, I've found that esd (the enlightenment sound daemon) sometimes doesn't work correctly. The best tool to use here is lsof, which shows which processes are accessing a file. Your sound card is represented by /dev/dsp. Right now, I'm listening to an MP3 (not a Metallica MP3, of course...) with mp3blaster.\n# lsof /dev/dsp\n    COMMAND    PID USER   FD   TYPE DEVICE SIZE   NODE NAME\n    mp3blaste 1108    p    6w   CHR   14,3      662302 /dev/dsp\nfuser is similar; but it lets you send a signal to any process accessing the device file.\n# fuser -vk /dev/dsp\n    \n                         USER        PID ACCESS COMMAND\n    /dev/dsp             root       1225 f....  mp3blaster\n                         root       1282 f....  mp3blaster\nAfter issuing this command, mp3blaster was killed with SIGKILL. See the man pages for lsof and fuser; they're very useful. Oh, you'll want to run them as root since you'll be asking for information from processes that may be owned by root.\n8.2.4. You're using the wrong driver (or no driver)\nThere are only two ways to configure your card:\nSupport must be compiled directly into the kernel\nYou must have the correct driver loaded into memory\nYou can find out which driver your sound card is using by doing \"lsmod\" or looking at the output of \"dmesg\". Since sound is crucial for me, I always compile sound into my kernels. If you don't have a driver loaded, you need to figure out what's been compiled into your kernel. That's not so straight forward. Your best bet is to compile your kernel. BTW, let me say that compiling your own kernel is the first step towards proficiency with Linux. It's painful the first time you do it, but once you do it correctly, it becomes very easy down the right, especially if you keep all your old .config files and make use of things like \"make oldconfig\". See the Kernel HOWTO for details.\nIf you haven't compiled the kernel yourself, there is an overwhelmingly good chance that your system is set up to load sound drivers as modules. That's the way distros do things. Have everything under the sun compiled as a module and try to load them all. So if you don't see your sound card's driver with lsmod, your card probably isn't configured yet.\n8.2.5. Permissions Problem\nIf the sound card works when you're root but not any other user, you probably have a permissions problem. If this is the case, as root, look at the group owner of the sound card using ls -l /dev/dsp; it'll probably be audio. Then, as root, add your non-root user to the audio group in /etc/group. For example, I added the users p and wellspring to group audio on my system:\naudio:x:29:p,wellspring\nDon't forget to use grpconv if you use shadow passwords (which should be the case on most recent distributions) in order to maintain a consistent group configuration. Then log out and log back in as the non-root user. Your sound card should work. Thanks to James Barton for reminding me to add this to the howto.\n9. Miscellaneous Problems\n9.1. Hardware Acceleration Problems\nXFree86 4.x provides a more centralized and self-contained approach to video. Much of the funkyness like kernel modules for non-root access of video boards is, thankfully, gone.\n9.1.1. Hardware acceleration isn't working at all\nIf you're getting like 1 fps, then your system isn't using hardware 3D acceleration. There's one of two things that can be going on.\nYour 3D system is misconfigured (more likely)\nGame X is misconfigured (less likely)\nThe first step is to figure out which one is happening.\nIf you have X 4.0 (X 3.* users procede to step 2), look at the output of X -probeonly. You'll see:\n(II) XXXXXX: direct rendering enabled\nor\n(II) XXXXXX: direct rendering disabled\nwhere XXXXXXX depends on which video card you have. If direct rendering is disabled, then your X configuration is definitely faulty. Your game is not at fault. You need to figure out why DRI is disabled. The most important tool for you to use at this point is the `DRI Users Guide'. It is an excellently written document that gives you step by step information on how to get DRI set up correctly on your machine. A copy is kept at http://www.xfree86.org/4.0/DRI.html .\nNote that if you pass this test, your system is CAPABLE of direct rendering. Your libraries can still be wrong. So procede to step 2.\nThere is a program called glxgears which comes with the \"mesademos\" package. You can get mesademos with Debian ( apt-get install mesademos) or you can hunt for the rpm on http://www.rpmfind.net . You can also download and compile the source yourself from the mesa homepage.\nRunning glxgears will show some gears turning. The xterm from which you run glxgears will display \"X frames in Y seconds = X/Y FPS\". You can compare your system to the list of benchmarks below.\nCPU TYPE     VIDEO CARD     X VERSION    AVERAGE FPS\nCompiling Mesa and DRI modules yourself can increase your FPS by 15 FPS; quite a performance boost! So if your number is, say, about 20 FPS slower than a comparable machine, chances are that glxgears is falling back on software rendering. In other words, your graphics card isn't 3D accelerating graphics.\nMore important than FPS is having a constant FPS for small and large windows. If hardware acceleration is working, the FPS for glxgears should be nearly independent of window size. If it's not, then you're not getting hardware acceleration.\n9.2. Hardware acceleration works only for the root user\n9.2.1. XFree86 4.x\nIf the following lines aren't present in your XF86Config-4 file, put them in:\nSection \"DRI\"\n        Mode 0666\n    EndSection\nThis allows all non-root users to use DRI. For the paranoid, it's possible to restrict DRI to only a few non-root users. See the DRI User Guide.\n9.2.2. XFree86 3.x\n9.2.2.1. Voodoo cards\nVoodoo card hardware acceleration only takes place ONLY at 16bpp color and fails silently when starting X in another color depth.\nAlso, Voodoo cards need the 3dfx.o kernel module and a /dev/3dfx device file (major 107, minor 0) for non-root hardware acceleration. Neither the module nor the device file are used under XFree86 4.x.\n10. Emulation and Virtual Machines\nLinux gets ragged on a lot because we don't have the wealth of games that other platforms have. Frankly, there's enough games for me, although it would be really nice to have some of the bleeding edge games and classics like Half-life and Carmageddon. Fortunately, we have more emulators than you can shake a stick at. Although playing an emulated game is sometimes not quite as fun as playing it on the native machine, and getting some of the emulators to work well can be a difficult task, they're here, and there's alot of them!\n10.1. What is a virtual machine?\nA \"real computer\" provides an operating system many things, including a CPU, I/O channels, memory, a BIOS to provide low level access to motherboard and I/O resources, etc. When an operating system wants to write to a hard drive, it communicates through a device driver that interfaces directly with the hardware device memory.\nHowever, it's possible to give a program all the hardware resources it needs. When it wants to access a hard drive, give it some memory to write to. When it wants to set an IRQ, give it some bogus instructions that lets it think it set an IRQ. If you do this correctly, then in principle, there's no way for the poor application to know whether it's really accessing hardware or tricked by being given resources which simulate hardware. A virtual machine is the environment which tricks applications into believing they're running on a real computer. It provides all the services that a real computer would provide.\nVM's were used initially in the 1960's to emulate time shared operating systems, but these days we use them to run software which was written for foreign operating systems, or more commonly, an entire operating system. Because of the nature of the VM, the foreign OS can't tell the difference between operating in a VM or in a \"real\" machine.\n10.2. Apple 8-bit\nAll the 8-bit Apple ][ emulators require a copy of the original ROM, for whichever system you want to emulate, in a file. If you search hard enough, you can find file copies of the ROMs for the Apple ][, ][+, ][e, ][c and //gs. They are still copyrighted by Apple, and you can only use them legally if you actually own one of these computers.\n10.2.1. KEGS\nKEGS is an Apple II emulator written by Kent Dickey < kentd(at)cup(dot)hp(dot)com > which was originally written for HP-UX, but improved and customized for Linux. It runs under X at any color depth, and supports changeable memory sizes, joysticks, and sound. KEGS boots all Apple II variants, and supports all of the Apple ]['s graphics modes. I can't find a working homepage for this application.\n10.2.2. apple2 and xapple2\nThe SVGAlib based apple2 and X based xapple2 can emulate any Apple ][ variant except for the //gs. The interface is a bit funky, but usable. Configuration is also a bit funky; this emulator would benefit from an SVGA or X based configuration tool. It supports the undocumented portion of the 6502 instruction set which some games rely on. apple2 is currently being maintained by Michael Deutschmann < michael(at)talamasca(dot)ocis(dot)net > and seems to be developed at a slow but constant pace. I don't think this application has a homepage.\n10.3. DOS\n10.3.1. dosemu\ndosemu < http://www.dosemu.org > is the canonical DOS emulator on Linux. When you think of DOS, don't think of things like PROCOM PLUS OR OTHER PROGRA~1 WHICH HAVE SHORT NAMES AND ARE IN ALL CAPS. There are some real classics that were written for DOS like Carmageddon, Redneck Rampage and Tomb Raider. dosemu can run these. Unfortunately, it can take alot of effort to get dosemu to work, and of Jan 2002, the sound code is somewhat broken. Not a big deal when you're trying to run Wordperfect or an old database application. It's an absolute show stopper for gaming. Getting dosemu to work well is not easy, but unfortunately, for DOS games it's the best avenue. Good luck. If you have success using dosemu, I would like to hear from you.\n10.4. Win16\n10.4.1. Wabi\nWabi is a commercial Win16 emulator. That is, it'll run Windows 16-bit applications from a Windows 3.1, Windows 3.11 or Windows for Workgroups 3.11 environment. Wabi was originally created by SCO Unix a long time ago and then was purchased by Caldera sometime in mid year 2001.\nWabi is fast and does a good job for what it does, although I've heard it said that wabi for Solaris is more stable than Linux. It might be useful for playing older Win16 games, but there are three problems:\nYou must have a licensed copy of Windows 3.1/3.11 or WfW 3.11.\nWabi is awfully expensive for what it does.\nWabi doesn't work under 32bpp or 24bpp color.\nWabi does NOT do DOS itself, but it looks like it can use a DOS emulator as a backend for running DOS programs. There was talk about Wabi 3.0 which would've done Win32 emulation, but AFAIK, this project was shelved indefinitely. I think Wabi will run under Linux on all architectures (can someone verify this?)\n10.5. Win32\n10.5.1. wine\nWine < http://www.winehq.com >, which bears the GNUish acronym \"Wine Is Not An Emulator\" is a non-commercial implementation of the Win32 API. The reason why it's not an emulator is subtle and not of much interest to most non computer scientists, so we'll call it an emulator here (it really does run-time translation of calls to the Win32 API to POSIX/X11 calls). Wine has come a long way, and is capable of emulating many important programs, which is great news for Linux users who want this sort of stuff.\nWine does not provide the DOS API, so you can't use it to run DOS applications. For that, you should look at dosemu ( Section 10.3.1 ). Wine has never been too good at implementing DirectX, although a number of games are known to work under wine. For gaming you might want to look at winex ( Section 10.5.3 ).\nIn addition to run-time translation of the Win32 API to POSIX/X11 (it runs Windows applications on Linux), wine also does compile-time tranlation of the Win32 API to POSIX/X11 (it compiles Windows application source code on Linux). In this sense, wine is a Windows-to-Linux porting utility. The x86 architecture isn't required, but is recommended since it allows actual x86 binary execution as well as direct DLL usage).\nYou can use wine `with Windows', which means that wine uses libraries that actually come with Microsoft Windows itself. This is legal only if you own a copy of Windows which isn't currently being used on a computer. It's said that wine has the best success when run with Windows. You can also run wine without Windows. The people at winehq are writing their own set of libraries called libwine which implements the Win32 API with no Microsoft code at all.\nWine was originally licenced under the MIT/X11 license, so it could be used for both commercial and non-commercial purposes. In mid 2002, parts of wine were re-licensed under the LGPL so that it could only be used for non-commercial puposes. This presents a problem for companies like Transgaming ( Section 10.5.3 ) and prompted a fork of wine called ReWind ( Section 10.5.2 ).\n10.5.2. rewind\nRewind < http://rewind.sourceforge.net/ > was started by Eric Pouech (a wine developer) and Ove K\u00e5ven (a winex developer) in response to wine's license change ). It started out life as a snapshot of the last version of wine which was completely licensed under the MIT/X11 license. The aim is to keep rewind MIT/X11 based so that companies like Transgaming can offer wine based products.\n10.5.3. winex\nWinex is released by a company called Transgaming < http://www.transgaming.com >. The developers take wine (see Section 10.5.1 ) and add DirectX / DirectDraw support. Although winex is commercial, they have an interesting business model.\nThe end user (you) can download the source code for free. However, for 5 US dollars per month, you can become a subscriber of Transgaming. Being a subscriber of Transgaming gives three major benefits:\nSubscribers can download convenient packaged versions of winex in deb, rpm or tar.gz format whenever they want, including updates. They have also more functionality than the publicly available tarball: the latter is an older version which lacks some of the newest features, like support for copy protected programs.\nThere are monthly polls where subscribed users can take votes on what they want winex developers to work on. For instance, they can vote for things like \"Improve support for copy protected programs\", \"Better Installshield support\" or \"Improve DirectX 8.0 support\". As far as I can see, the developers really do listen to the subscriber polls.\nThe Transgaming website has a few user support forums. On one hand, they use the most godawful, horrible, confusing, wasteful, moronic format I've ever seen and I hope to god I never see a forum with a format as bad as Transgaming's. On the other hand, you can ask for help and the developers are VERY good about getting around to your answer; their vigilance is quite impressive. Non-subscribers can browse the forums, but only subscribers can post (and therefore, ask for support).\nThe developers of winex were going to release their Installshield, DirectX and DirectDraw enhancements to wine \"every so often\". In return, as wine maturation improved, the winex developers were going to take the new versions of wine and use them for winex. However, since the birth of Transgaming, parts of wine have been re-licensed under the more restrictive GNU LGPL license ( Section 10.5.1 ). This basically means that versions of wine that are released past the date of the re-licensing can no longer be used by winex. Therefore, winex will now be based on rewind ( Section 10.5.2 ).\n10.5.4. Win4Lin\nWin4Lin < http://www.netraverse.com > is a commercial product by Netraverse. Like vmware ( Section 10.5.5 ) it uses the virtual machine approach to running Windows applications, so you'll get a big window from which you can boot Windows and run all kinds of Windows applications. Unlike vmware, Win4Lin only does Windows 95/98/ME, but this turns out to be better for gamers. Because Win4Lin concentrates on these operating systems, reports say that it's faster and does a better job at running games under these operating system than vmware. It's also much cheaper than vmware. The most recent version of Win4Lin as of June 2003 is 5.0. It suffers nevertheless from some limitations:\nIt does not support DirectX or DirectDraw, while vmware has \"limited\" support for DirectX.\nIt only supports serial and parallel devices. This is important for people who use USB joysticks. Note that vmware supports up to 2 USB devices.\nAs of June 2003, expect to pay $89.99 without printed docs and $99.99 with printed docs. In addition, there isn't an evaluation copy available, although you get a 30 day money back guarantee. However, since it's commercial you do get tech support. vmware is considerably more expensive.\nLike vmware, you're required to have a licensed copy of Win95 or Win98. Win4Lin cannot use an existing Windows installation the way wine can.\nIt only runs on x86 architectures.\n10.5.5. VMWare\nVMWare is a virtual machine that runs multiple operating systems simultaneously on a standard PC: supported OSes include Microsoft ones, Linux, Novell Netware and FreeBSD. You can among others use it to run a MS Windows OS and launch your favourite game there. You can even run another Linux under Linux; useful is you want to test another distro for instance. Amazing! Now for the bad sides. You should definitely have a good configuration in order to run it; they claim the minimum is a 500MHz x86 CPU with 128MB RAM, but a faster processor and at least 256MB RAM seem to be the bare minimum if you want reasonable performance. Not all Linux distributions are supported: newest RedHat's, Mandrake's and Suse's are, but you're out of luck if you have an other version and/or distribution (like Debian). Moreover, vmware has only limited support for DirectX, and you might not be able to play recent games.\nSee http://www.vmware.com for more information. It's not very cheap (about 300$ for the Workstation version), but you can get a 30 day evaluation copy.\n10.5.6. What should I choose?\nFirst of all, you should try an emulator. Although some games may work with wine , you'll probably get the most success with winex : its DirectX support is constantly improving. As of version 3.1, the DirectX 8 support is nearly complete, but this may not be the case with older DirectX versions (are consequently older games).\nYou might also try a virtual machine like Win4Lin or VMWare instead of an emulator. If your goal is to run Win95/98/ME applications on Linux, without USB and on the x86 architecture, Win4Lin's cost and focus on Win95 type OS's make it a better choice than vmware. However, if you must have USB support or run Linux on a platform other than x86, vmware is your only option.\nNow if your goal is to run Win95 type OS games under Linux, Win4Lin almost seems better than vmware. The show-stopper is the fact that vmware has limited DirectX support while Win4Lin has none. This fact alone makes both Win4Lin and vmware unsuitable for most hardcore gaming purposes. But if you're going to give it a try, you're more likely to have success with vmware.\n11. Interpreters\n11.1. SCUMM Engine (LucasArts)\nLucasarts wrote an engine for point and click adventures named SCUMM (Script Creation Utility for Maniac Mansion). They wrote many graphical adventures using SCUMM, like their famous Monkey Island series (all three). Ludvig Strigeus < strigeus(at)users(dot)sourceforge(dot)net > was able to reverse engineer the SCUMM format and write an interpreter for SCUMM based games that compiles under Linux and Win32 named scummvm < http://scummvm.sourceforge.net/ >. Their website is very good, and chock full of any kind of information about SCUMM and playing these games under scummvm.\nA compatibility page is maintained at the scummvm website. FWIW, I've been able to finish many of the games that are listed as 90% done with no problems. scummvm is rock solid, and allows you to purchase SCUMM based Lucas Arts games, copy the data files to your hard drive and play them under Linux. As of February 2002, I've been following their cvs, and this project is undergoing constant development. Kudos to the scummvm team.\n11.2. AGI: Adventure Gaming Interface (Sierra)\nThe older Sierra DOS graphical adventure games used a scripting language named AGI (Adventure Gaming Interface). Some examples of games written in AGI would be Leisure Suit Larry I (EGA), Space Quest I and II, King's Quest II, Mixed-Up Mother Goose and others. These games can be played using sarienon> < http://sarien.sourceforge.net >, an open source interpreter for AGI games.\nSarien was written in SDL, so it should run on any platform that can compile SDL programs. In addition, there are versions for DOS, Strong-Arm based pda's, QNS (holy cow! embedded gaming!), MIPS based systems and SH3/4 based Pocket PC's. The developers are clearly out of their minds (in a good way!). Sarien also has numerous enhancements not found in the original games, like a Quake style pull-down console, picture and dictionary viewer, enhanced sound and support for AGDS, a Russian AGI clone. Sarien is under development and the developers have been very good about documenting the Sarien internals if anyone wants to get involved in hacking it.\n11.3. SCI: SCript Interpreter or Sierra Creative Interpreter (Sierra)\nThe newer Sierra graphical adventure games (we're talking about the late 80's here) used an interpreter named SCI. There were many versions of SCI since Sierra was constantly improving its engine. The original SCI games were DOS based, but Sierra eventually started releasing Win32 SCI based games. Some examples of games written with SCI are Leisure Suit Larry 1 (VGA), Leisure Suit Larry 2-7, Space Quest 3-6, King's Quest 4-6, Quest For Glory 1-4 and many others. Compared with AGI games, SCI adventures have better music support, a more complex engine and loads of bells and whistles.\nMany SCI based games (games written in SCI0) can be played using freesci, available at http://freesci.linuxgames.com . Like Sarien, FreeSCI has many graphics targets including SDL, xlib and GGI, so this program can compile and run under an incredible number of platforms. The developers have done a fantastic job of documenting and FAQing their application.\n11.4. Infocom Adventures (Infocom, Activision)\nThe Z-machine is a well documented < http://www.gnelson.demon.co.uk/zspec/index.html > virtual machine designed by Infocom to run their interactive fiction games. This allowed them to write game data files in a cross platform manner, since only the engine itself, the Z-machine, would be platform dependent. Z-machine went through a number of revisions during the lifetime of Infocom, and two further revisions (V7 and V8 created by Graham Nelson) after the Infocom's demise. The later versions even supported limited sound and graphics!\nOne of the most popular Z-machine interpreters is Frotz < http://www.cs.csubak.edu/~dgriffi/proj/frotz/ >. This excellently done page has many nice links for interactive fiction fans. Frotz is GPL, runs all versions of Z-machine and will compile on most versions of Unix. Frotz has spawned many forks, like a version for PalmOS and Linux based PDA's.\njzip < http://jzip.sourceforge.net/ > is another very popular Z-machine interpreter that will run V1-V5 and V8 Z-machine data files. jzip is very portable; it compiles on all Unices, OS/2, Atari ST and DOS.\nThere are actually many other Z-machine interpreters like nitfol and rezrov (written in Perl!). Each interpreter has its own set of strengths, and you can find links to them on the home pages for Frotz and jzip.\n11.5. Scott Adams Adventures (Adventure International)\nScott Adams is, arguably, the father of interactive fiction. Although he himself was inspired by the first piece of interactive fiction, Adventure, Scott brought adventuring to the masses. His games were available for Atari, Apple 2, Commodore, Sorcerer, TI, and CPM. His company, Adventure International, released a number of much loved games between 1978 and 1984 before folding. He recently released a new game (a Linux version is not available) but since the decline of adventuring, he has pretty much kept out of the gaming industry.\nAlan Cox wrote scottfree, a Scott Adams adventure game file interpreter for Unix. Using scottfree and any of the Scott Adams data files which can be downloaded from Scott's website < http://www.msadams.com/ > you can enjoy these classics.\n11.6. Ultima Underworld: The Stygian Abyss (Origin, Blue Sky Productions)\nThe Underworld Adventures project < http://uwadv.sourceforge.net/ > is an effort to port the 1992 classic, Ultima Underworld: The Stygian Abyss, to modern operating systems like Linux, MacOS X, and Windows. It uses OpenGL for 3D graphics, SDL for platform specific tasks and is released under the GNU GPL. Underworld Adventures provides an impressive graphics system which uses the original game files, so you'll need the original game disk to play.\nUnderworld Adventures also provides a bunch of tools for you to display the level maps, tools for examining uw1 conversation scripts and more.\n11.7. Ultima 7 (Origin, Electronic Arts)\nUltima 7 is actually 2 games: part I (The Black Gate) and part II (Serpent Island) which uses a slightly enhanced version of The Black Gate's engine. In addition, an addon disk was released to both part I (The Forge Of Virtue) and part II (The Silver Seed).\nA team of people developed Exult < http://exult.sourceforge.net/ > which is an open source interpreter that will run both parts of Ultima 7 and their addon disks. Exult is written in C++ using SDL, so it will compile on any platform that can compile SDL programs. It also features some enhancements over the original versions of the Ultima VII engine. You'll need to purchase a copy of Ultima 7 to play. The developers have no plans on extending Exult to interpret the other Ultimas since the engines changed so radically between releases.\nThe Exult team has also been hard at work creating a map editor, Exult Studio, and a script compiler that will let users create their own RPG in the Ultima style.\n11.8. System Shock (Electronic Arts, Origin)\nSystem Shock is a classic first person shooter/adventure from 1994, which puts it as a contemporary of Doom. However, its engine is much more feature rich than the original Doom: for example, System Shock had 3D sprites, free look and a facility to have objects on top of each other, giving the illusion of a full 3D map, like Quake. Game reviewers agree that this game has the features of Quake with a story-line more compelling than Half-life. The System Shock engine was optimized for sophistication, while Doom's engine was optimized for throwing lots of monsters at you; a completely different appoach. Quite impressive for such an old game!\nThe System Shock Hack Project < http://madeira.physiol.ucl.ac.uk/tsshp/sshock.html > is an attempt to update the game for modern operating systems. The project uses SDL and is released under the modified BSD license. While you need the original game files to play SSHP, it should work with the System Shock demo, which is freely available.\n12. Websites And Resources\n12.1. Meta gaming websites\nThese are some resources for Linux gamers no matter what kind of game you enjoy to play.\nThe Linux Game Tome: http://www.happypenguin.org\nAbout the games themselves.\n"}, {"score": 234.97726, "uuid": "07b856db-3880-57d7-895e-08493a912e85", "index": "cw12", "trec_id": "clueweb12-0903wb-66-21293", "target_hostname": "www.mentalcases.net", "target_uri": "http://www.mentalcases.net/texts/howtos/Linux-Gamers-HOWTO.html", "page_rank": 1.1703973e-09, "spam_rank": 74, "title": "The Linux Gamers' HOWTO", "snippet": "<em>OpenGL</em> <em>is</em> the open source equivalent <em>to</em> <em>Direct3D</em>, a component <em>of</em> DirectX (Section 3.14). The important difference being that since <em>OpenGL</em> <em>is</em> open (and DirectX <em>is</em> closed), games written <em>in</em> <em>OpenGL</em> are much easier <em>to</em> port <em>to</em> and co-develop on Linux <em>than</em> games written using DirectX.", "explanation": null, "document": "12.3. Other Resources\n1. Administra\nIf you have ideas, corrections or questions relating to this HOWTO, please email me. By receiving feedback on this howto (even if I don't have the time to answer), you make me feel like I'm doing something useful. In turn, it motivates me to write more and add to this document. You can reach me at < p(at)dirac(dot)org >. My web page is http://www.dirac.org/p and my Linux pages are at http://www.dirac.org/linux . Please do send comments and suggestions for this howto. Even if I don't take your suggestions, your input is graciously received.\nI assume a working knowledge of Linux, so I use some topics like runlevels and modules without defining them. If there are enough questions (or even protests) I'll add more basic information to this document.\n1.1. Authorship and Copyright\nThis document is copyright (c) 2001-2002 Peter Jay Salzman, < p(at)dirac(dot)org >; 2003-2004 Peter Jay Salzman and Fr\u00e9d\u00e9ric Delanoy. Permission is granted to copy, distribute and/or modify this document under the terms of the Open Software License, Version 1.1, except for the provisions I list in the next paragraph. I hate HOWTO's that include the license; it's a tree killer. You can read the OSL at http://opensource.org/licenses/osl-1.1.txt .\nIf you want to create a derivative work or publish this HOWTO for commercial purposes, I would appreciate it if you contact me first. This will give me a chance to give you the most recent version. I'd also appreciate either a copy of whatever it is you're doing or a spinach, garlic, mushroom, feta cheese and artichoke heart pizza.\n1.2. Acknowledgements\nThanks goes out to these people for extensive comments, corrections, and diffs. Their effort is above and beyond the call of duty:\nFr\u00e9d\u00e9ric Delanoy, Moritz Muehlenhoff < jmm(at)Informatik(dot)uni-bremen(dot)de >, Mike Phillips, Ioan Rogers < buck(at)aiur(dot)co(dot)uk >\nI would also like to thank the following people for sending in comments and corrections. Without their help, there would be more typos and mistakes than you could shake a stick at:\nMichael McDonnell\n1.3. Latest Versions and Translations\nThe latest version can be found at http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/lgh/LG-HOWTO or http://www.dirac.org/linux/writing , but this is my own personal working copy. The version at my personal web site might be broken if I'm working on the HOWTO. The version at sourceforge is bleeding edge but guaranteed to be not broken, however it may have glitches, like unfinished paragraphs. :)\nThe most recent stable version can be found at http://www.tldp.org .\n1.3.1. Russian\nDmitry Samoyloff < dsamoyloff(at)yandex(dot)ru > is the maintainer of the Russian translation. The most recent version can be found at http://www.dirac.org/linux/writing .\n1.3.2. Hungarian\nL\u00e1szl\u00f3 Daczi < dacas(at)korhaz(dot)rethy(dot)hu >, the Hungarian LDP coordinator, announced that a Hungarian translation was produced by Szilard Ivan, and is available at http://tldp.fsf.hu/HOWTO/Linux-Gamers-HOWTO-hu .\n2. Definitions: Types Of Games\nNot everyone knows the different types of games that are out there, so in an effort to form a common language that we can all use, I'll run through each game type and provide a very brief history.\n2.1. Arcade style\nAlthough arcade games had their heydey in the 80's, they are nonetheless very popular. Nothing will ever replace walking into a dark, crowded and noisy arcade gallery, popping a quarter into your favorite machine and playing an old fashioned game of Space Invaders. Arcade style games attempt to simulate the arcade games themselves. There is such a vast number of these things that it's nearly impossible to enumerate them all, but they include clones of Asteroids, Space Invaders, Pac-Man, Missile Command and Galaxian.\n2.2. Card, logic and board games\nComputer based card games simulate a card game like poker or solitaire. The program can simulate your opponent(s).\nLogic games usually simulate some well known logic puzzle like Master Mind or the game where you have put sliding numbered tiles in order inside a box.\nComputer based board games simulate some kind of board game you'd play on a table top with friends, like monopoly, Mille Bourne, chess or checkers. The program can simulate your opponent.\n2.3. Text Adventure (aka Interactive Fiction)\nOnce upon a time, when Apple ][, Commodore, and Atari ruled the world, text adventures were the game of choice of `intelligent folk'. You are given a scenario and can interact with the world you're placed in:\nYou are in a room.  It is pitch dark and you're likely to be eaten by a grue.\n    > Light lantern with match.\n    You light the lantern.  This room appears to be a kitchen.  There's a table with a\n    book in the center.  You also see an oven, refrigerator and a door leading east.\n    > Open the oven.\n    In the oven you see a brown paper bag.\n    > Take the bag.  Open the bag.  Close the oven.\n    Inside the bag is a some garlic and a cheese sandwich.  The oven door is now closed.\nBack then, text adventures were self contained executables on a disk or casette. These days there's usually a data file and an interpreter. The interpreter reads data files and provides the gaming interface. The data files are the actual game itself, similar to the relationship between first person shooters ( Section 2.7 ) and wad files.\nThe first adventure game was Adventure (actually \u201cADVENT\u201d, written on a PDP-1 in 1972). You can play Adventure yourself (actually, a descendent); it comes with \u201cbsd games\u201d on most Linux distros. Text adventures became popularized by Scott Adams ( Section 11.5 ) and reached their height of popularity in the late 80's with Infocom ( Section 11.4 ) which are also playable under Linux.\nAs computer graphics became easier and more powerful, text adventures gave rise to graphic adventures. The death of commercial interactive fiction more or less coincided with the bankruptcy of Infocom.\n2.4. Graphical Adventures\nGraphical adventures are, at heart, text adventures on steroids. The degree to which they use graphics varies widely. Back in the 80's, they were little more than text adventures which showed a screen of static graphics. When you picked up an item, the background would be redrawn without the item appearing. The canonical example would be the so-called `Hi-Res Adventures' like The Wizard And The Princess. Later on, the sophisticated graphical adventures had your character roaming around the screen, and you could even use a mouse, but the interface remained purely text.\nNext there are the `point and click adventures' which basically have no text interface at all, and often have dynamic graphics, like a cat wandering around the room while you're deciding what to do next. In these games, you point at an object (say, a book) and can choose from a pull-down list of functions. Kind of like object oriented adventuring. :) There aren't many graphical adventures written natively for Linux. The only one I can think of is Hopkins FBI (which happens to be my favorite game for Linux).\n2.5. Simulation (aka Sims)\nSimulations strive to immerse the player behind the controls of something they normally wouldn't have access to. This could be something real like a fighter jet or something imaginary like a mechanized warrior combat unit. In either case, sims strive for realism.\nSome sims have little or no strategy. They simply put you in a cockpit to give you the thrill of piloting a plane. Some are considerably complex, and there's often a fine line between sims and strats ( Section 2.6 ). A good example would be Heavy Gear III or Flight Gear. These days sims and strats are nearly indistinguishable, but a long time ago, sims were real time while strats were turn based. This is awkward for modern day use, since a game like Warcraft which everyone knows as a strat, would be a sim by definition.\n2.6. Strategy (aka Strats)\nStrategy games have their roots in old Avalon type board games like Panzer Leader and old war strategy games published by SSI. Generally, they simulate some kind of scenario. The scenario can be peaceful, like running a successful city (SimCity), or not, like illegal drug selling operation (DrugWars) or an all-out war strategy game like Myth II. The types of games usually take a long time to complete and require a lot of brainpower.\nStrats can be further divided into two classes: real time and turn based. Real time strats are based on the concept of you-snooze-you-lose. For example, you're managing a city and a fire erupts somewhere. The more time it takes for you mobilize the fire fighters, the more damage the fire does. Turn based strats are more like chess---the computer takes a turn and then the player takes a turn.\n2.7. First Person Shooter (aka FPS)\nWhat light through yonder window breaks? It must be the flash of the double barreled shotgun! We have a long and twisted history with FPS games which started when id Software open sourced code for Doom. The code base has forked and merged numerous times. Other previously closed engines opened up, many engines are playable via emulators, many commercial FPS games were released for Linux and there are quite a number of FPS engines which started life as open source projects. Although you may not be able to play your favorite FPS under Linux (Half-Life plays great under winex) Linux definitely has no deficiency here!\nFirst person shooters are characterized by two things. First, you pretty much blow up everything you see. Second, the action takes place in first person. That is, through the eyes of the character who's doing all the shooting. You may even see your hands or weapon at the bottom of the screen. They can be set in fantasy (Hexen), science fiction (Quake II), present day `real world' (Soldier Of Fortune) and many other settings.\nLike text adventures, FPS fit the engine/datafile format. The engine refers to the actual game itself (Doom, Quake, Heretic2) and plays out the maps and bad guys outlined by the datafile (doom2.wad, pak0.pak, etc). Many FPS games allow people to write their own non-commercial datafile. There are hundreds, even thousands of non-commercial Doom datafiles that you can download for free off the net. Often, companies release their engines to the open source community so we can hack and improve them. However, the original data files are kept proprietary. To this day, you still have to purchase doom.wad.\n2.8. Side Scrollers\nSide scrollers are similar to FPS but you view your character as a 2D figure who runs around various screens shooting at things or performing tasks. Examples would be Abuse for Linux and the original Duke Nukem. They don't necessarily have to be violent, like xscavenger, a clone of the old 8-bit game Lode Runner.\n2.9. Third Person Shooters\nSimilar to FPS, but you view your character in third person and in 3D. On modern third person shooters you can usually do some really kick-butt maneuvers like Jackie Chan style back flips and side rolls. The canonical example would be Tomb Raider. On the Linux platform, we have Heretic 2 and Heavy Metal FAKK2.\n2.10. Role Playing Game (aka RPG)\nAnyone who has played games like Dungeons & Dragons or Call of Cthulhu knows exactly what an RPG is. You play a character, sometimes more than one, characterized by traits (eg strength, dexterity), skills (eg explosives, basket weaving, mechanics) and properties (levels, cash). As you play, the character becomes more powerful and the game adjusts itself accordingly, so instead of fighting orcs, at high levels you start fighting black dragons. The rewards increase correspondingly. At low levels you might get some gold pieces as a reward for winning a battle. At high levels, you might get a magic sword or a kick-butt assault rifle.\nRPG's generally have a quest with a well defined ending. In nethack you need to retrieve the amulet of Yendor for your god. In Ultima II, you destroy the evil sorceress Minax. At some point, your character becomes powerful enough that you can `go for it' and try to complete the quest.\nWhile the insanely popular Ultima series, written by Richard Garriot (aka Lord British) for Origin, was not the first RPG, it popularized and propelled the RPG genre into mainstream. Ultima I was released in 1987 and was the game that launched 9 (depending on how you want to count them) very popular sequels, finishing with Ultima IX: Ascension. You can play Ultima VII under Linux with Exult ( Section 11.7 ).\nThe canonical RPG on Linux is Rogue (the ncurses library started life as a screen handling routine for Rogue!) and it has infinite variants like Zangband and Nethack (which has many variants itself). Some RPG's are quite complicated and great feats of programming. There seems to be a deficiency of commercial RPGs for Linux. Not counting the rogue variants, there's also a deficiency of open source RPGs too.\n3. Libraries\nWe'll run through the different gaming libraries you'll see under Linux.\n3.1. What is Glide2?\nGlide2 is a low level graphics API and driver that accesses 3D hardware accelerated functions on 3dfx's Voodoo I, II and III cards, under XFree86 3.x.\nA program can only use the special hardware accelerated features of these cards by using the Glide2 library in one of two ways:\ndirectly written using Glide2 (Myth II, Descent III)\nindirectly using Mesa built with a Glide2 backend to simulate OpenGL (Rune, Unreal Tournament)\n3dfx opened up the specifications and source code to the open source community. This allowed Daryll Strauss to port Glide2 to Linux which enabled XFree86 3.x users to use Voodoo I, II and III cards under Linux.\nSince Glide2 accesses the video card directly, Glide2 applications will either need to be run by root or be setuid root. A way around this was to create the kernel 3dfx module. This module (and its device file /dev/3dfx) allows Glide2 graphical hardware acceleration for non-root users of non-setuid applications.\nUnfortunately, Glide2 is also a dead issue. It's only used for Voodoo I, II, III boards (which are becoming outdated), under XFree86 3.x (most people use XFree86 4.x). And since 3dfx is now a defunct company, it's a sure bet that no more work will be done on Glide2 and no more games will be written using Glide2.\n3.2. What is Glide3?\nUnlike Glide2, Glide3 is not an API used for game programming. It exists only to support DRI on Voodoo III, IV and V boards under XFree86 4.x. None of the games which use Glide2 will work with Glide3. This shouldn't be a surprise since Glide2 and Glide3 support different video cards and different versions of XFree86. The only video card that can use both Glide2 (under XFree86 3.x) and Glide3 (under XFree86 4.x) is the Voodoo III. It's reported that a Voodoo III using Glide2 will outperform a Voodoo III using Glide3.\nWhen you use a Voodoo III, IV or V under XFree86 4.x, you want to use a version of Mesa (see Section 3.4 ) which was compiled to use Glide3 as a backend to ensure hardware accelerated OpenGL on your system.\n3.3. What is OpenGL?\nOpenGL is a high level graphics programming API originally developed by SGI, and it became an industry standard for 2D and 3D graphics programming. It's defined and maintained by the Architectural Revision Board (ARB), an organization which include representatives from SGI, IBM, DEC, and Microsoft. OpenGL provides a powerful, complete and generic feature set for 2D and 3D graphics operations.\nThere are 3 canonical parts to OpenGL:\nGL: The OpenGL core calls\nGLU: The utility calls\nGLUT: OS independent window event (mouse, keyboard, etc.) handler.\nOpenGL is not only an API, it's also an implementation, written by SGI. The implementation tries to use hardware acceleration for various graphics operations whenever available, which depends on what videocard you have in you computer. If hardware acceleration is not possible for a specific task, OpenGL falls back on software rendering. This means that when you get OpenGL from SGI, if you want any kind of hardware acceleration at all, it must be OpenGL written and compiled specifically for some graphics card. Otherwise, all you'll get is software rendering. The same thing is true for OpenGL clones, like Mesa.\nOpenGL is the open source equivalent to Direct3D, a component of DirectX ( Section 3.14 ). The important difference being that since OpenGL is open (and DirectX is closed), games written in OpenGL are much easier to port to and co-develop on Linux than games written using DirectX.\n3.4. What is Mesa?\nMesa < http://www.mesa3d.org > is a free implementation of the OpenGL API, designed and written by Brian Paul. While it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant OpenGL implementation conforming to the ARB specifications. It's reported that Mesa is even faster than SGI's own OpenGL implementation.\nJust like OpenGL, Mesa makes use of hardware acceleration whenever possible. When a particular graphics task isn't able to be hardware accelerated by the video card, it's software rendered; the task is done by your computer's CPU instead. This means that there are different builds of Mesa depending on what kind of video card you have. Each build uses a different library as a backend renderer. For example, if you have a Voodoo I, II or III card under XFree86 3.x, you'd use mesa+glide2 (written by David Bucciarelli) which is the Mesa implementation of OpenGL that uses Glide2 as a backend to render for graphical operations.\n3.5. What is DRI?\nGraphics rendering has 3 players: the client application (like Quake 3), the X server and the hardware (the graphics card). Previously, client applications were prohibited from writing directly to hardware, and there was a good reason for this. A program that is allowed to directly write to hardware can crash the system in any number of ways. Rather than trusting programmers to write totally bug free, cooperative programs that access hardware, Linux simply disallowed it. However, that changed under X 4.x with DRI (Direct Rendering Infrastructure < http://www.dri.sourceforge.net >. DRI allows X clients to write 3D rendering information directly to the video card in a safe and cooperative manner.\nDRI gets the X server out of the way so the 3D driver (Mesa or OpenGL) can talk directly to the hardware. This speeds things up. The 3D rendering information doesn't even have to be hardware accelerated. On a technical note, this has a number of virtues.\nVertex data doesn't have to be encoded/decoded via GLX.\nGraphics data isn't sent over a socket to the X server.\nOn uni-processor machines the CPU doesn't have to change context between XFree86 and its client to render the graphics.\n3.6. What is GLX?\nGLX is the X extension used by OpenGL programs, it is the glue between the platform independent OpenGL and platform dependent X.\n3.7. What is Utah GLX?\nUtah-GLX is the precursor to DRI. It makes some different design decisions regarding separation of data and methods of accessing the video card like relying on root access rather than creating the kernel infrastructure for secure access. It provides support for a few cards which are not well supported by DRI like the ATI Rage Pro family, S3 Virge (although anyone using this for gaming is, well, nuts), and an open source TNT/TNT2 driver (which is very incomplete). The TNT/TNT2 driver is based on reverse-engineering of the obfuscated source code release of the X 3.3 drivers by nVidia. However, they're really incomplete, and effectively, unusable.\n3.8. What is xlib?\nEvery once in awhile you'll see some sicko (said with respect) write a game in xlib. It is a set of C libraries which comprise the lowest level programming interface for XFree86. Any graphics programming in X ultimately makes use of the xlib library.\nIt's not an understatement to say that xlib is long winded, arcane and complicated. Because of this, there are lots of libraries like SDL ( Section 3.10 ) for 2D graphics, OpenGL ( Section 3.3 ) for 3D graphics and widget sets ( Section 3.9 ) for widgets within windows which hide the details of different aspects of xlib programming.\nWhile some games are written in xlib, like the Doom Editor Yadex, xlib itself is not a serious game writing library. Most games don't need the low-level interface that xlib provides. In addition, by using the higher level libraries, a game writer can develop his game on multiple platforms, even ones that don't use XFree86.\n3.9. What is a widget set?\nWidgets are objects that make up a GUI application's interface. They include things like text entry boxes, pulldown menus, slider bars, radio buttons and much more. A widget set is a collection of related widgets that are designed to have a common interface and a consistant \"feel\". Gtk is the canonical widget set on Linux, but there are many others like fltk (a small C++ widget set), Xaw, Qt (the widget set of KDE), and Motif (the widget set used by Netscape). Motif used to be the king of widget sets in the Unix world, but it was very expensive to license. The Open Group finally opened up Motif's license for open source operating systems, but it was too little too late. There are many completely open source widget sets which are more complete and much nicer looking than Motif, including Lesstif, a totally free Motif clone.\n3.10. What is SDL (Simple DirectMedia Layer)?\nSDL < http://www.libsdl.org > is a library by Sam Lantiga (graduate of UCD, yeah!). It's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling. It's LGPL'd and provides joystick and OpenGL support as well. Unlike xlib ( Section 3.8 ), SDL is very suited for game programming.\nThe most striking part of SDL is that it's a cross platform library. Except for a few details, a program written in SDL will compile under Linux, MS Windows, BeOS, MacOS, MacOS X, Solaris, IRIX, FreeBSD, QNX and OSF. There are SDL extensions written by various people to do things like handle any graphics format you care to mention, play mpegs, display truetype fonts, sprite handling and just about everything under the sun. SDL is an example of what all graphics libraries should strive for.\nSam had an ulterior motive for writing such a cool library. He was the lead programmer for Loki Software (he now codes for Blizzard Software), which used SDL in all of its games except for Quake3.\n3.11. What is GGI?\nGGI < http://www.ggi-project.org > is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications. LibGGI applications run on SVGAlib, fb, and X servers among others. Judging from their screenshots, this is quite a powerful library.\nApplications that use LibGGI directly include Heroes, Ultrapoint, Quake, and Berlin. Most applications that use SVGALib can be run on X or any other LibGGI backend by using a wrapper library which re-implements SVGALib ( Section 3.12 ) using LibGGI. SDL ( Section 3.10 ) and clanlib ( Section 3.15 ) applications can display on LibGGI but often the native drivers for these libraries are faster, however it's a good way to get SDL, clanlib, and SVGALib applications to run where they would not before.\nGGI has a sister project, KGI, which is developing a kernel-level alternative to systems like the linux framebuffer and the DRI. This project is much less far along than LibGGI itself, but promises to combine DRI-level speeds and the stability and security UNIX users expect.\n3.12. What is SVGAlib? Frame buffer? Console?\nThe console is the dark non-graphical screen you look at when your computer first boots up (and you don't have xdm or gdm running). This is opposed to the X environment which has all sorts of GUI things like xterms. It's a common misconception that X means graphics and console means no graphics. There are certainly graphics on the console\u2014we will discuss the two most common ways to achieve this.\nSVGAlib is a graphics library that lets you draw graphics on the console. There are many graphical applications and games that use SVGAlib like zgv (a console graphical image viewer), prboom and hhexen. I happen to be a fan of this library and of graphical console games in general; they are extremely fast, fullscreen and compelling. There are three downsides to SVGAlib. First, SVGAlib executables need to be run by root or be setuid root, however, the library releases root status immediately after the executable begins to run. Secondly, SVGAlib is video card dependent\u2013if your video card isn't supported by SVGAlib, you're out of luck. Third, SVGAlib is Linux only. Games written in SVGAlib will only work on Linux.\nFrame buffers are consoles implemented by a graphics mode rather than a BIOS text mode. Why simulate text mode in a graphical environment? This allows us to run graphical things in console, like allowing us to choose any font we want the console to display (which is normally set by BIOS). There's a good Framebuffer HOWTO available from LDP. Graphical console games written using the frame buffer suffer from the same deficiencies of the SVGA library: not all hardware is supported and the code will only run on Linux.\n3.13. What is OpenAL?\nOpenAL < http://www.openal.org > aims to be for sound what OpenGL is for graphics. It started as a joint project between Loki Software and Creative Labs, setting out to be a vendor neutral and cross platform API for audio - the audio equivalent of OpenGL ( Section 3.3 ). Loki is no longer in business, but Creative and the Open Source community have kept the project alive. It is licensed LGPL and the specs can be obtained for free from the OpenAL website. It has support from nVidia (nForce2/3 based motherboards come with OpenAL MS Windows libraries for the on-board audio), Apple has added OpenAL to their audio framework for OSX and it can also be found powering the Epic Games Unreal Engine\nCurrently, it's not all cross-platform goodness. There is almost no support for enhancements like EAX or any hardware acceleration on Linux, though it does it exist in the Windows implementation. However, if you have a Creative SoundBlaster or Audigy sound card (with an emu10x chip), and you use ALSA sound drivers, you can get OpenAL libraries from http://www.lost.org.uk that provide hardware acceleration and decent surround support.\n3.14. What is DirectX?\nDirectX is a collection of proprietary multimedia API's, first developed by Microsoft in 1995, for its various Windows OS's. It's a mistake to say something like \"DirectX is like OpenGL\" or \"DirectX is like SDL\", as is commonly said in DirectX tutorials. Multimedia API's are more centralized on Windows than they are on Linux. A more accurate statement would be something like \"DirectX is like DRI, OpenGL and SDL combined\". As of October 2004, the most recent version of DirectX is 9c. The components of DirectX are:\nDirectDraw\nDirectDraw gives direct access to video memory, like DRI, so 2D graphics can be blitted directly to the video card. DirectDraw is like the graphical component of SDL, but the direct video card access is done by DRI rather than SDL. This is why a game can easily take out a Windows system but should not take down a Linux system.\nDirect3D (D3D)\nDirect3D, like OpenGL, provides a 3D graphics API. Whereas OpenGL is open source, lower level and compiles under a multitude of operating systems, D3D is proprietary, higher level and only compiles on Windows. D3D first appeared in DirectX 2, released in 1996.\nDirectAudio\nDirectAudio is a combination of 2 audio API's, DirectSound and DirectMusic, which allows direct access to the sound card for sound and music playback.\nDirectInput\nDirectInput gives support for gaming input devices such as joysticks.\nDirectPlay\nDirectPlay gives support for simplified networking for multiplayer gaming.\nDirectShow\nDirectShow provides support for movie files like AVI and MPG. It was a separate API from DirectX, but was integrated with DirectX 8.\nDirectSetup\nThis API provides a way to install DirectX from within an application to simplify game installation.\nDepending on the version of DirectX you're talking about, DirectX support in winex ( Section 10.5.3 ) ranges from well supported to \"kind of\" supported. It's poorly supported by wine ( Section 10.5.1 ), barely supported by vmware ( Section 10.5.5 ) and unsupported by Win4Lin ( Section 10.5.4 ).\nOne comment about portability: Each component of DirectX has multiple corresponding library on Linux. Moreover, a game writer who uses libraries like OpenGL, GGI or SDL will write a game which will trivially compile on Windows, Linux and a multitude of other OS's. Yet game companies persist using DirectX and therefore limit their audience to Windows users only. If you're a game writer, please consider using cross platform libraries and stay away from DirectX.\nA company named realtechVR started an open source project, DirectX Port, < http://www.v3x.net/directx > which, like wine, provides a Direct3D emulation layer that implements Direct3D calls. The project was focused on the BeOS platform, but is now focused on MacOS and Linux. You can get the latest cvs from their sourceforge page at < http://sourceforge.net/projects/dxglwrap >.\n3.15. Clanlib\nClanLib is a medium level development kit. At its lowest level, it provides a platform independent (as much as that is possible in C++) way of dealing with display, sound, input, networking, files, threading and such. ClanLib builds a generic game development framework, giving you easy handling of resources, network object replication, graphical user interfaces (GUI) with theme support, game scripting and more.\n4. XFree86 and You\nIf you're going to game under X, it's crucial that you know a bit about X. The \"X Window User HOWTO\", and especially \"man XF86Config\" are required reading. Don't short change yourself; read them. They have an extremely high \"information to space\" ratio. Many problems can be fixed easily if you know your way around XF86Config (or XF86Config-4).\n4.1. Getting information about your X system\nWhether you're trying to diagnose an X problem or requesting help from a mailing list or Usenet newsgroup, you'll want to have as much information available as possible. These are a set of tools you can use to obtain that information.\n4.1.1. Probeonly\nOne of the best diagnostic tools and sources of information about your X system is probeonly output. To use it, kill X if it's already running and from a console, type:\nX -probeonly 2> X.out\nYes, that's a single dash; so much for standards. The output of X goes to stderr, so we have to redirect stderr with \"2>\" to a file named X.out. This file will have almost everything there is to know about your X system. It's crucial that you know the difference between the various markers you'll see in probeonly output:\n(--) probed              (**) from config file    (==) default setting\n    (++) from command line   (!!) notice              (II) informational\n    (WW) warning             (EE) error               (??) unknown.\nHere's an example of some information I gleaned from my output:\nI'm running at 16 bpp color:\n(**) TDFX(0): Depth 16, (--) framebuffer bpp 16\nX has detected what my videocard chipset and videoram are:\n(--) Chipset 3dfx Voodoo5 found\n    (--) TDFX(0): VideoRAM: 32768 kByte Mapping 65536 kByte\n4.1.2. Getting info about your setup: xvidtune\nxvidtune is your friend when your X screen is shifted a little bit too far to the right, or if the vertical length is too small to fit on your monitor. However, it's a great diagnostic tool also. It'll give you:\nthe hsync/vsync range specified in your XF86Config file\nthe 4 horizontal and 4 vertical numbers which defines your videomode (the 1st horizontal/vertical numbers gives the screen resolution). These 8 numbers will tell you which modeline your X uses. See the XFree86 Video Timings Howto for more information. Note that explicit modelines are no longer necessary, since XFree 4.0.1 and up computes modetimings automatically based on your monitor's and video card's capabilities. However, there may be times when you'll want to play around with mode timings, like for weird hardware or if want to tweak your display.\nthe \"dot clock\" your videocard is running at.\n4.1.3. Getting info about your setup: xwininfo\nxwininfo tells you all sorts of information about X windows. And actually, your \"background\" or \"root\" window is considered a window too. So when xwininfo asks you to click on the window you want the information on, click on your background. It'll tell you things like screen and window resolution, color depth, window gravity state (which gives a hint to the window manager about where to place new windows), backing store usage and more.\n4.1.4. Other sources of information\nxdpyinfo gives cool stuff, like X version and loaded extensions (invaluable when trying to see what's missing, like GLX, DRI, XFree86-VidMode, etc.).\n4.1.5. Getting information about your 3D system\nglxinfo gives lots of useful information about OpenGL like whether direct rendering enabled, the currently installed versions of glx and mesa, vendor/renderer strings, the GL library files being used and more.\n4.2. Playing Games In X Without a Window Manager\nWhen playing a game under X, you should consider starting X without a window manager (WM). Heavyweight WMs, like Enlightenment, or full-blown desktop environments like GNOME or KDE, may produce a noticeable slow down. Even lightweight WMs, like twm, rob your CPU of clock cycles (and in twm's case, even full screen games will have a frame around the window). Running a game without a WM or DE depends on how you access X. If you usually log in to a Virtual Console and start X with \"startx\" try the following:\nModify ~/.xinitrc, which tells X what to run upon starting. Here is what my .xinitrc looks like:\n#quake3 +set r_gldriver libGR.so.1\n      #exec ut\n      #lsdldoom -server 2\n      #exec tribes2\n      exec /usr/bin/enlightenment\nYou'll usually see a window or desktop manager being executed from this file (GNOME or KDE). Comment out the lines containing the WM or desktop manager with a pound sign (#) and place your game on a new line with any command line arguments you want to pass. If the game is not located in your $PATH, give its full path name.\nIf you log directly into X using gdm, then things are a little different. These instructions are for gdm 2.4 or greater. They *may* work with kde, but I cannot say for certain.\nFirst, check your gdm.conf (usually in /etc/X11/gdm or /etc/gdm) file for a line that says begins \"SessionDesktopDir=blah\". One of the directories listed as options should be \"/usr/share/xsessions\", and is the directory which will be used in this example. As root, change to the \"/usr/share/xsessions\" directory and take a look at its contents. It should contain some .desktop files, each corresponding to an entry you'll see in gdm's Session menu, e.g gnome.desktop, enlightenment.destop. This example will show you how to log in to Doom3. Copy any of the desktop files to \"doom3.desktop\" and open the new file in your favourite text editor. The file will be full of alternative languages, so cut out everything you don't want and make the file look like this:\n[Desktop Entry]\n      Encoding=UTF-8\n      Name=DOOM III\n      Comment=iD's Doom III\n      #if game is not in path, remember to put the full path here\n      Exec=/usr/games/doom3/doom3\n      # no icon yet, only the top three are currently used\n      Icon=\n      Type=Application\nSave the file and log out of your window manager. At the gdm login screen, you should now see \"DOOM III\" as an option in \"Sessions\". Naturally you can add a .desktop file for each game you have installed\n5. Various Topics\n5.1. Memory Type Range Registers\nStarting with Pentium class processors and including Athlon, K6-2 and other CPUs, there are Memory Type Range Registers (MTRR) which control how the processor accesses ranges of memory locations. Basically, it turns many smaller separate writes to the video card into a single write (a burst). This increases efficiency in writing to the video card and can speed up your graphics by 250% or more.\nSee /usr/src/linux/Documentation/mtrr.txt for details. Note that since this file was written, XFree86 has been patched to automatically detect your video RAM base address and size and set up the MTRRs.\n5.2. Milking performance from your system for all it's worth\nIf for some reason you're using X 3.3, follow the instructions given by mtrr.txt (see Section 5.1 ) to set up your MTRRs. X 4.0 does this automatically for you.\nIf you're playing a game under X, don't run a window manager, and certainly don't run a desktop manager like GNOME or KDE. See Section 4.2 for details.\nKill all non-essential processes (you'll have to do this as root) by using the startup scripts on your system. On Debian, the startup scripts for run-level 2 are located in /etc/rc2.d/. You can kill a service in an orderly manner by sending its startup script the `stop' command:\n# cd /etc/rc2.d\n    # ./ntpd stop\nAnother (radical) option is to simply put yourself in single-user mode with\n# telinit 1\nThis will even get rid of getty; your system will only be running whatever is absolutely crucial to its operation. You'll have something like 10 processes running. The downside is that you'll have to play the game as root. But your process table will be a ghost town, and all that extra CPU will go straight to your game.\n5.3. About libraries on Linux\nA common problem you'll see in gaming is a library file not being found. They're kind of mysterious and have funny names, so we'll go over libraries on Linux for a bit. There are two types of libraries, static and dynamic. When you compile a program, by default, gcc uses dynamic libraries, but you can make gcc use static libraries instead by using the -static switch. Unless you plan on compiling your games from source code, you'll mainly be interested in dynamic libraries.\n5.3.1. Dynamic libraries\nDynamic libraries, also called a \u201cshared library\u201d, provide object code for an application while it's running. That is, code gets linked into the executable at run time, as opposed to compile time. They're analagous to the .dll's used by Windows. The program responsible for linking code \u201con the fly\u201d is called /etc/ld.so, and the dynamic libraries themselves usually end with .so with a version number, like:\n/usr/lib/libSDL.so\n    /lib/libm.so.3\nWhen using gcc, you refer to these libraries by shaving off the strings lib, .so and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `place a memo inside the executable' that says to look at the files /usr/lib/libSDL.so and /lib/libm.so.3 whenever an SDL or math function is used.\n5.3.2. Static libraries\nIn contrast to dynamic libraries which provide code while the application runs, static libraries contain code which gets linked (inserted) into the program while it's being compiled. No code gets inserted at run time; the code is completely self-contained. Static libraries usually end with .a followed by a version number, like:\n/usr/lib/libSDL.a\n    /usr/lib/libm.a\nThe .a files are really an archive of a bunch of .o (object) files archived together, similar to a tar file. You can use the nm to see what functions a static library contains:\n% nm /usr/lib/libm.a\n    ...\n    e_atan2.o:\n    00000000 T __ieee754_atan2\n    \n    e_atanh.o:\n    00000000 T __ieee754_atanh\n    00000000 r half\n    00000010 r limit\n    00000018 r ln2_2\n    ...\nWhen using gcc, you refer to these libraries by shaving off the strings \u201clib\u201d, \u201c.a\u201d and all version numbers. So to use these two libraries, you would pass gcc the -lSDL -lm options. gcc will then `bolt on' code from /usr/lib/SDL.a and /usr/lib/libm.a whenever it sees a math function during the compilation process.\n5.3.3. How are library files found\nIf you compile your own games, your biggest problem with libraries will either be that gcc can't find a static library or perhaps the library doesn't exist on your system. When playing games from binary, your library woes will be either be that ld.so can't find the library or the library doesn't exist on your system. So it makes some sense to talk about how gcc and ld.so go about finding libraries in the first place.\ngcc looks for libraries in the ``standard system directories'' plus any directories you specify with the -L option. You can find what these standard system directories are with gcc -print-search-dirs\nld.so looks to a binary hash contained in a file named /etc/ld.so.cache for a list of directories that contain available dynamic libraries. Since it contains binary data, you cannot modify this file directly. However, the file is generated from a text file /etc/ld.so.conf which you can edit. This file contains a list of directories that you want ld.so to search for dynamic libraries. If you want to start putting dynamic libraries in /home/joecool/privatelibs, you'd add this directory to /etc/ld.so.conf. Your change doesn't actually make it into /etc/ld.so.cache until you run ldconfig; once it's run, ld.so will begin to look for libraries in your private directory.\nAlso, even if you just add extra libraries to your system, you must update ld.so.cache to reflect the presence of the new libraries.\n5.3.4. Finding Out What Libraries a Game Depends On\nMost commercial Linux games will be dynamically linked against various LGPL libraries, such as OpenAL or SDL. For these examples, Bioware's NeverWinter Nights < http://nwn.bioware.com > will be used.\nTo find out what libraries a game uses, we can use the \"ldd\" command. Cd to /usr/games/nwn, or wherever you installed it and take a look at the files. You should see a file called nwmain; this is the actual game binary. Type \"ldd nwmain\" and you'll see:\n$ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => not found\n       libSDL-1.2.so.0 => /usr/lib/libSDL-1.2.so.0 (0x40178000)\n       libc.so.6 => /lib/libc.so.6 (0x401ff000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40319000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x409f1000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x409f3000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a01000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40acd000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40ad1000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40b88000)\n       libasound.so.2 => /usr/lib/./libasound.so.2 (0x40b90000)\nldd shows all the libraries a dynamic executable relies on, and shows you where they are. It also \"pulls in\" the dependencies of the dependencies. For instance, while NWN does not itself depend on libnvidia-tls.so, the Nvidia supplied libGL on my system does.\nMissing libraries?\nIn the example above, we can see that nwmain wants libmss.so.6, and the linker cannot find it. Usually, a missing library is a crash waiting to happen. There is one other thing to consider though: The majority of games are actually launched by a \"wrapper\", a shell script that performs some magic prior to launching the game. In the case of NWN, the wrapper is called nwn. Let's take a look at that now:\n$ less nwn\n   #!/bin/sh\n   \n   # This script runs Neverwinter Nights from the current directory\n   \n   export SDL_MOUSE_RELATIVE=0\n   export SDL_VIDEO_X11_DGAMOUSE=0\n   \n   # If you do not wish to use the SDL library included in the package, remove\n   # ./lib from LD_LIBRARY_PATH\n   export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   \n   ./nwmain $@\nThis script sets up some environment variables, then launches the game binary with whatever command line options we added. The relevant part here is the environment variable called \"LD_LIBRARY_PATH\". This is a way of adding to the linkers search path. Try copying the line to your shell and seeing what happens when you re-run ldd.\n$ export LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\n   $ ldd nwmain\n       linux-gate.so.1 =>  (0xffffe000)\n       libm.so.6 => /lib/libm.so.6 (0x40027000)\n       libpthread.so.0 => /lib/libpthread.so.0 (0x40049000)\n       libGL.so.1 => /usr/lib/libGL.so.1 (0x4009b000)\n       libGLU.so.1 => /usr/X11R6/lib/libGLU.so.1 (0x40103000)\n       libmss.so.6 => ./miles/libmss.so.6 (0x40178000)\n       libSDL-1.2.so.0 => ./lib/libSDL-1.2.so.0 (0x401ec000)\n       libc.so.6 => /lib/libc.so.6 (0x4025e000)\n       /lib/ld-linux.so.2 (0x40000000)\n       libGLcore.so.1 => /usr/lib/libGLcore.so.1 (0x40378000)\n       libnvidia-tls.so.1 => /usr/lib/libnvidia-tls.so.1 (0x40a50000)\n       libXext.so.6 => /usr/X11R6/lib/libXext.so.6 (0x40a52000)\n       libX11.so.6 => /usr/X11R6/lib/libX11.so.6 (0x40a60000)\n       libdl.so.2 => /lib/libdl.so.2 (0x40b2c000)\n       libstdc++.so.5 => /usr/lib/libstdc++.so.5 (0x40b30000)\n       libgcc_s.so.1 => /usr/lib/libgcc_s.so.1 (0x40be7000)\nAs you can see, this gives us slighly different results. The NWN library directories have been prepended to the search path, so now the linker can find libmss.so.6 in the \"./miles\" directory, and also finds the local copy of libSDL first, no longer using the system copy.\nThere's another benefit of these scripts: they are easily edited to allow you to provide your own copy of a library. Any game-supplied copy of a library such as OpenAL or SDL is likely to be compiled for the lowest common denominator, probably i486 or i686. If you have a Pentium4 or an AthlonXP, you could compile you own version specifically for your processor. The compiler will try to optimise the resulting binary, giving some increase in performance. See the homepage for GCC for more information this at the GCC site.\nMaking NWN use your system copy is easy. It says so in the wrapper script! Remove \"./lib:\" from the LD_LIBRARY_PATH line, and you're good to go.\nAnother nice little trick is for games that use OpenAL for their sound output (e.g. Unreal based games: UT, Postal, Rune, etc.). Since the Open Sound System's (OSS) deprecation in favour of ALSA, all Linux distributions I've seen now ship with ALSA support as default, with OSS support actually being supplied via ALSA's compatability modules. The copies of openal.so distributed with games often do NOT support ALSA, so making the game use a copy compiled yourself will allow you to use ALSA natively.\n6. When Bad Things Happen To Good People\nOf course we can't cover every Bad Thing that happens, but I'll outline some items of common sense.\nThere are two types of bad things: random and repeatable. It's very difficult to diagnose or fix random problems that you don't have any control over when they happen or not. However, if the problem is repeatable \"it happens when I press the left arrow key twice\", then you're in business.\n6.1. RTFM!\nRead the friendly manual. The `manual' can take on a few forms. For open source games there's the readme files that come with the game. Commercial games will have a printed manual and maybe some readme files on the CD the game came on. Don't forget to browse the CD your game came on for helpful tips and advice.\nDon't forget the game's website. The game's author has probably seen people with your exact same problem many times over and might put information specific to that game on the website. A prime example of this is Loki Software's online FAQs located at http://faqs.lokigames.com .\n6.2. Look For Updates and Patches\nIf you're playing an open source game that you compiled, make sure you have the newest version by checking the game's website. If your game came from a distro make sure there's not an update rpm/deb for the game.\nCommercial game companies like Loki release patches for their games. Often a game will have MANY patches (Myth2) and some games are unplayable without them (Heretic2). Check the game's website for patches whether you have a problem running the game or not; there may be an update for a security problem that you may not even be aware of.\nBy the way, Loki now has a utility that searches for Loki Software on your hard drive and automatically updates them. Check out http://updates.lokigames.com .\n6.3. Newsgroups\nIf you don't know what netnews (Usenet) is, then this is definitely worth 30 minutes of your time to learn about. Install a newsreader. I prefer console tools more, so I use tin, but slrn is also popular. Netscape has a nice graphical \"point and click\" newsreader too.\nFor instance, I can browse Loki Software's news server with tin -g news.lokigames.com. You can also specify which news server to use using the $NNTP environment variable or with the file /etc/nntpserver.\n6.4. Google Group Search\nEvery post made to Usenet gets archived at Google's database at http://groups.google.com . This archive used to be at http://www.deja.com , but was bought by Google. Many people still know the archive as \"deja\".\nIt's almost certain that whatever problem you have with Linux, gaming related or not, has already been asked about and answered on Usenet. Not once, not twice, but many times over. If you don't understand the first response you see (or if it doesn't work), then try one of the other many replies. If the page is not in a language you can understand, there are many translation sites which will convert the text into whatever language you like, including http://www.freetranslation.com and http://translation.lycos.com . My web browser of choice, Opera (available at http://www.opera.com ) allows you to use the right mouse button to select a portion of text and left click the selection to translate it into another language. Very useful when a Google group search yields a page in German which looks useful and my wife (who reads German well) isn't around.\nThe Google group search has a basic and advanced search page. Don't bother with the simple search. The advanced search is at http://groups.google.com/advanced_group_search .\nIt's easy to use. For example, if my problem was that Quake III crashed everytime Lucy jumps, I would enter \"linux quake3 crash lucy jumps\" in the \"Find messages with all of the words\" textbox.\nThere are fields for which newsgroup you want to narrow your search to. Take the time to read and understand what each field means. I promise you. You won't be disappointed with this service. Use it, and you'll be a much happier person. Do note that they don't archive private newsgroups, like Loki Software's news server. However, so many people use Usenet, it almost doesn't matter.\n6.5. Debugging: call traces and core files\nThis is generally not something you'll do for commercial games. For open source games, you can help the author by giving a corefile or stack trace. Very quickly, a core file (aka core dump) is a file that holds the \"state\" of the program at the moment it crashes. It holds valuable clues for the programmer to the nature of the crash -- what caused it and what the program was doing when it happened. If you want to learn more about core files, I have a great gdb tutorial at http://www.dirac.org/linux .\nAt the *very* least, the author will be interested in the call stack when the game crashed. Here is how you can get the call stack at barf-time:\nSometimes distros set up their OS so that core files (which are mainly useful to programmers) aren't generated. The first step is to make your system allow unlimited coresizes:\nulimit -c unlimited\nYou will now have to recompile the program and pass the -g option to gcc (explaining this is beyond the scope of this document). Now, run the game and do whatever you did to crash the program and dump a core again. Run the debugger with the core file as the 2nd argument:\n$ gdb CoolGameExecutable core\nAnd at the (gdb) prompt, type \"backtrace\". You'll see something like:\n#0 printf (format=0x80484a4 \"z is %d.\\n\") at printf.c:30\n    #1 0x8048431 in display (z=5) at try1.c:11\n    #2 0x8048406 in main () at try1.c:6\nIt may be quite long, but use your mouse to cut and paste this information into a file. Email the author and tell him:\nThe game's name\nAny error message that appears on the screen when the game crashes.\nWhat causes the crash and whether it's a repeatable crash or not.\nThe call stack\nIf you have good bandwidth, ask the author if he would like the core file that his program dumped. If he says yes, then send it. Remember to ask first, because core files can get very, very big.\n6.6. Saved Games\nIf your game allows for saved games, then sending the author a copy of the saved game is useful because it helps the tech reproduce whatever is going wrong. For commercial games, this option is more fruitful than sending a core file or call stack since commercial games can't be recompiled to include debugging information. You should definitely ask before sending a save game file because they tend to be long, but gaming companies usually have lots of bandwidth. Mike Phillips (formerly of Loki Software) mentioned that sending in saved games to Loki is definitely a good thing.\nNeedless to say, this only applies if your game crashes reproducably at a certain point. If the game segfaults every time you run it, or is incredibly slow, a saved game file won't be of much help.\n6.7. What to do when a file or library isn't being found (better living through strace)\nSometimes you'll see error messages that indicate a file wasn't found. The file could be a library:\n% ./exult \n ./exult: error while loading shared library: libSDL-1.2.so.0: cannot load shared object\n file: No such file or directory\nor it could be some kind of data file, like a wad or map file:\n% qf-client-sdl  \n IP address 192.168.0.2:27001 UDP Initialize Error: W_LoadWadFile: couldn't load gfx.wad\nSuppose gfx.wad is already on my system, but couldn't be found because it isn't in the right directory. Then where IS the right directory? Wouldn't it be helpful to know where these programs looked for the missing files?\nThis is where strace shines. strace tells you what system calls are being made, with what arguments, and what their return values are. In my `Kernel Module Programming Guide' (due to be released to LDP soon), I outline everything you may want to know about strace. But here's a brief outline using the canonical example of what strace looks like. Give the command:\nstrace -o ./LS_LOG /bin/ls\nThe -o option sends strace's output to a file; here, LS_LOG. The last argument to strace is the program we're inspecting, here, \"ls\". Look at the contents of LS_LOG. Pretty impressive, eh? Here is a typical line:\nopen(\".\", O_RDONLY|O_NONBLOCK|0x18000)  = 4\nWe used the open() system call to open \".\" with various arguments, and the return value of the call is 4. What does this have to do with files not being found?\nSuppose I want to watch the StateOfMind demo because I can't ever seem to get enough of it. One day I try to run it and something bad happens:\n% ./mind.i86_linux.glibc2.1 \n    Loading & massaging...\n    Error:Can't open data file 'mind.dat'.\nLet's use strace to find out where the program was looking for the data file.\nstrace ./mind.i86_linux.glibc2.1 2> ./StateOfMind_LOG\nPulling out vim and searching for all occurrences of mind.dat, I find the following lines:\nopen(\"/usr/share/mind.dat\",O_RDONLY) = -1 ENOENT (No such file)\n    write(2, \"Error:\", 6Error:)   = 6\n    write(2, \"Can\\'t open data file \\'mind.dat\\'.\"..., ) = 33\nIt was looking for mind.dat in only one directory. Clearly, mind.dat isn't in /usr/share. Now we can try to locate mind.dat and move it into /usr/share, or better, create a symbolic link.\nThis method works for libraries too. Suppose the library libmp3.so.2 is in /usr/local/include but your new game \"Kill-Metallica\" can't find it. You can use strace to determine where Kill-Metallica was looking for the library and make a symlink from /usr/local/include/libmp3.so.2 to wherever Kill-Metallica was looking for the library file.\nstrace is a very powerful utility. When diagnosing why things aren't being found, it's your best ally, and is even faster than looking at source code. As a last note, you can't look up information in source code of commercial games from Lokisoft or Tribsoft. But you can still use strace with them!\n6.8. Hosed consoles\nSometimes a game will exit abnormally and your console will get `hosed'. There are a few definitions of a hosed console. The text characters could look like gibberish. Your normally nice black screen could look like a quasi-graphics screen. When you press ENTER, a newline doesn't get echo'ed to the screen. Sometimes, certain keys of the keyboard won't respond. Logging out and back in don't always work, but there are a few things that might:\nIf you don't see any character on the screen as you type in, your terminal settings may be wrong. Try \"stty echo\". This should let input characters echo again.\nAt the prompt, type \"reset\". This should clear up many problems, including consoles hosed by an SVGAlib or ncurses based game.\nTry running the game again and normally. Once I had to kill Quake III in a hurry, so I performed a Ctl-Alt-Backspace. The console was hosed with a quasi-graphics screen. Running Quake III and quitting normally fixed the problem.\nThe commands deallocvt and openvt will work for most of the other problems you'll have. deallocvt N kills terminal N entirely, so that Alt-FN doesn't even work anymore. openvt -c N starts it back up.\nIf certain keys on your keyboard don't work, be creative. If you want to reboot but the `o' key doesn't work, try using halt. One method I've come up with is typing a command at the prompt and using characters on the screen with mouse cut/paste. For example, you can type \"ps ax\", and you're sure to have an `h', `a', `l' and a `t' somewhere on the screen. You can use the mouse to cut and paste the word \"halt\".\nThe most regrettable option is a reboot. If you can, an orderly shutdown is preferable; use \"halt\" or \"shutdown\". If you can't, ssh in from a another machine. That sometimes works when your console is very badly hosed. In the worst case scenario, hit the reset or power switch.\nNote that if you use a journalling filesystem like ext3, reiserfs or xfs, hitting the power switch isn't all that bad. You're still supposed to shutdown in an orderly manner, but the filesystem integrity will be maintained. You won't normally see an fsck for the partitions that use the journalling filesystem.\n6.9. Locked System\nWhen a computer \"locks\", also called \"hung\", the keyboard and mouse become completely unresponsive. This is a direct consequence of a bug in the Linux kernel. While Linux is known for stability, these things do happen, especiallly for gaming which entails highly synchronized hardware events which occur very fast, even to a computer. When a computer locks, it can be a \"hard lock\", meaning the kernel has completely stopped functioning. This often indicates misbehaving or faulty hardware. There's no recovery from this kind of lock other than pressing the reset or power button. The lock can also be a \"soft lock\", meaning that the kernel is still functioning in some capacity. It's possible to recover from this gracefully.\nThe first thing you should try is to hit control-alt-backspace which kills X. If you gain control of your system, the kernel wasn't really locked in the first place. If this didn't work after a few seconds, you'll definitely want to reboot the system using the following instructions.\nUse control-alt-delete to reboot the system. You'll know this worked if you hear the computer beep after a few seconds (this is BIOS saying \"I'm OK\" during a power on cycle).\nLog into another system and ssh into the hung system. If you can ssh in, reboot or halt the system.\nIf you can't ssh into the system, you'll need to use the \"magic SysRq key\" which is documented in /usr/src/linux/Documentation/sysrq.txt. Here's a summary for the x86 architecture (see the documentation for other architectures). Note if your keyboard doesn't have a SysRq key, use the PrintScreen key:\nHit alt-SysRq-s. This will attempt to sync your mounted filesystems so that changes to files get flushed to disk. You may hear disk activity. If you're looking at a console, the system should print the devices which were flushed.\nA few seconds later, hit alt-SysRq-u. This will attempt to remount all your mounted filesystems as read-only). You should hear disk activity. If you're looking at a console, the system will print the devices which were remounted.\nA few seconds later, use alt-SysRq-b to reboot the system.\nYou can hit alt-SysRq-h for a very terse help screen.\nTo use the magic SysRq key, your kernel needs to have been compiled with magic SysRq support. You'll find this option under \"Kernel Hacking | Kernel Debugging | Magic SysRq key\" in whatever kernel config menu you like to use. If the magic SysRq key sequence doesn't shut your system down gracefully, your kernel has crashed hard and you'll need to use the reset or power button to recover.\n7. Video Cards\n7.1. History\nOnce upon a time, a company in San Jose, California named 3dfx Interactive was king of the gaming video card market. In October 1996 they released the Voodoo I, which was a phenomenal success. It was the first hardware accelerated card, but only rendered 3D; it had to be piggybacked with a 2D video card. The idea was that 2D rendering was handled by a high quality 2D video card (Matrox was immensely popular at the time) but 3D information (see Glide2, Section 3.1 ) would be passed to the Voodoo I and rendered, using the Voodoo's fast hardware to perform the necessary graphics calculations. They released the Voodoo Rush in April 1996. It should've been a more powerful card, with a 50MHz GPU and 8MB of RAM. Even better, it was their first combined 2D/3D card, meaning that it freed up a valuable PCI slot (most PC's only had a couple of PCI slots back then) but the Rush wasn't as popular. 3dfx removed the multi-texturing unit from the Rush, and it was outperformed by the Voodoo I. At the time, ATI had their Rage series and nVidia had their Riva 128, but the Voodoo I blew them all away.\nThis was a good time for Linux. id Software's open sourced the Doom codebase and ported Quake I to Linux (December 1996). We were getting our first tastes of real commercial gaming. Life was simple: you purchased a Voodoo. And it felt good, because 3dfx open sourced their drivers. The king of video cards worked with Linux developers. Not only did we have the best video cards, but the drivers were all open source.\nIn March 1998, 3dfx released their Voodoo II, with its 3.6GB/sec memory bandwith, 12MB of video memory and 90MHz core. It supported resolutions up to 1024x768. This was 3dfx in its heyday. Like the Voodoo I, the Voodoo II was a 3D only card, and piggy backed with a 2D video card. The Voodoo Banshee was released in September 1998 as a combined 2D/3D card, like the Rush. Despite the faster 100MHz core, the Banshee was outperformed by the Voodoo II because its multi-texturing unit was removed, like with the Rush. And again like the Rush, it wasn't popular. But 3dfx reigned supreme, and nobody could touch them.\nIn April 1999, the Voodoo III was released. There were a number of Voodoo III's, ranging from a 143MHz core speed to 183MHz. There were TV-out versions. There were PCI and AGP versions (it was the first AGP video card). It was another success, but 3dfx began to lose ground to nVidia, which released their TNT 2. The TNT 2 outperformed the Voodoo II, and accelerated 3D graphics at full 32 bit color, while the Voodoo's were stuck at 16 bit color. But life was still good for Linux. We had a card that was almost neck-to-neck with nVidia, our drivers were open source, and in December 1999, id Software gave us a huge gift: they open sourced the Quake I codebase.\nThen nVidia released the GeForce 256 in October 1999. 3dfx's Voodoo IV, its direct competitor, was about a year late which is very bad when you're competing for a bleeding edge market. While nVidia was putting real R&D into their cards, 3dfx was simply adding more and faster RAM. The Voodoo IV and V rendered in full 32bpp color, had great AA support ( Section 7.4.3 ), featured a 2nd GPU, more memory, and was arguably the king of of video cards. However, 3dfx's late release of the Voodoo IV and V coupled with the fact that the GeForce could be had for half the price meant that 3dfx was sinking fast. For Linux, the newest Voodoo's could only accelerate at 16 and 24 bit color. Worse still, the Voodoo V's 2nd GPU was unused by the Linux driver (and to this day, the Voodoo V is functionally equivalent to the single GPU Voodoo IV on Linux). Most Windows users were switching to nVidia, and despite the fact that the nVidia drivers were proprietary, even Linux users began to jump onto the nVidia bandwagon. VA Linux, the largest Linux server vendor, put nVidia into their machines.\nThen in April 2000, 3dfx was attacked on a different front: ATI started releasing their first generation Radeons. Until this point, ATI had always been an innovative (they developed their own 3D acceleration chips in 1996, about the same time as 3dfx), but sleepy graphics chipset manufacturer. The Radeons were their first 3D accelerated card that gamers took any real serious interest in. Their Radeons trounced both nVidia and 3dfx. They worked with Linux developers, open sourced all their drivers and were hailed as the great hope for Linux gaming. nVidia came back with fists swinging, and this was all too much for 3dfx. Between losing the benchmark wars to the GeForce and Radeon, their lateness with new cards and high prices, 3dfx lost its market share and didn't have the funds to stay into business. On April 18 2001, they sold most of their assets and technology to nVidia, and in October 2002, they finally declared bankruptcy.\nThe demise of 3dfx was quite sudden and a slap in the face to the open source community. I still remember my friend Gabe Rosa emailing me with just \"Look at /.\" and seeing the news. It was the 2nd worst day for Linux gaming (the 1st being the demise of Loki). And it was also a shame. 3dfx was getting ready to release a new Voodoo V featuring 4 GPU's which would've trounced the ATI and nVidia offerings, as well as a new card code named \"Rampage\" which reportedly would've put them firmly back as the king of the hill. There are reports that the Rampage's technology (which was sold to nVidia) went into the GeForce 5900. Not too shabby for 3 year old technology!\nAt first, things were still simple. Linux gamers would either keep their open source Voodoos, get an open source Radeon or a closed source GeForce. However, with bigger and better games on the horizon, it was only a matter of time before the Voodoos would no longer be a viable graphics card for modern gaming. People were still using Voodoo's, but they were essentially out of the game at this point.\nATI started to release a tremendous number of versions of each video card, and keeping up with them and their terminology started to become very difficult. ATI, together with nVidia, played king of hill. Their products have been neck to neck ever since, with GeForce taking the lead a bit more times than the Radeon. But the Radeon's drivers were open source, so many Linux users stuck by them. Then things got even more complicated.\nATI started becoming more and more reluctant to open source drivers for their new releases, and suddenly, it wasn't clear who the \"good guy\" was anymore. nVidia's party line was they license some of their GL code from another company, and is thus non-releasable. Presumably, ATI doesn't want to release drivers to keep their trade secrets, well, a secret. And it gets worse. The ATI Linux drivers have been plagued by extremely poor performance. Even when an ATI offering is better than the current GeForce offering for Windows, the card is always trounced by GeForce on Linux. Because of the ATI Linux driver woes, Linux users cannot use MS Windows based benchmarks or card stats. They simply don't apply to us. And that's pretty much where we are right now.\nAs a last note, the only systematic Linux video card benchmarking effort I'm aware of was done, unfortunately, in March 2001, between a Radeon 32 DDR and a GeForce 2. You can read it for yourself at http://www.linuxhardware.org/features/01/03/19/0357219.shtml , but conclusion is that the GeForce 2 firmly and soundly trounced the Radeon 32 DDR.\n7.2. Current Status (1 March 2004)\nnVidia's latest offering is the GeForce 5900, based on the NV35 chipset. It's well supported by Linux with high quality but proprietary drivers. nVidia uses a convenient combined driver architecture; their driver will support the TNT 2 all the way up to the GeForce 5900. Although their drivers are closed source, as a company, nVidia has been supportive and good to Linux users.\nATI's has worked with Linux developers for their Radeons up to and including the Radeon 9200, which have 2D and 3D support in XFree86. I'm not entirely sure of the quality of these open source drivers, however, Soldier of Fortune I and Heavy Metal still have opaque texture problems under first generation Radeons. Beyond the 9200, you need to use ATI's binary only proprietary drivers, available in rpm format from ATI's website. It's claimed that these drivers are piss poor; a friend of mine claims his GeForce 4400 outperforms his Radeon 9700 pro. That's shameful.\nOn paper, and in the Windows benchmarks, the Radeon 9800 trounces the ill-conceived GeForce 5800 and slightly edges out the GeForce 5900. On paper, it's simply the more impressive card. But again, the driver issue makes this information unusable for us. If you have your heart set to buy the best card for Linux, you'll want to go with the GeForce 5900.\n7.2.1. SVGAlib Support\nAs of June 2002, SVGAlib support Radeon cards is shaky. Developers have reported that SVGAlib works on the Radeon 7500, Radeon QD (64MB DDR model) but has problems on the Radeon VE.\nI have no information about SVGAlib and the GeForce cards.\n7.3. Which Video Card Should I Buy? (1 March 2004)\nThe answer was very difficult last year, but here's my take on it these days:\nAll GeForce cards require a proprietary driver which will \"taint\" your kernel. However, all ATI cards beyond the Radeon 9200 also require a proprietary driver that will \"taint\" your kernel as well.\nnVidia has proven that they care enough about Linux to write and maintain current and very high quality drivers for Linux. Even when ATI open sourced its video card driver, they played the \"we'll make Linux developers write our drivers for us\" game. Their current proprietary drivers are below par.\nThe current Radeon 9800 barely beats out the GeForce 5900 in benchmarks and card specs, but Linux users won't benefit from this because of driver issues..\nATI has a very long history of dropping support for hardware as fast as they can get away with it.\nOn MS Windows, when the GeForce beat out its main competing Radeon, the review claimed that the Radeon generally had better visuals. I have no idea how this translates to Linux.\nDon't get the GeForce 5800. Card reviews claim that it has some serious heat, noise, and dust issues. It's informally called the \"dust buster\" because of noise its fan makes.\nIf you absolutely only want open source drivers on your system, the Radeon 9200 is the best card you can buy.\nIf you have a Linux/Windows dual boot, consider either the Radeon 9800 or the GeForce 5900. The Radeon will be slightly stronger on Windows. The GeForce will be stronger on Linux.\nIf you have a Linux only system, the GeForce 5900 is your best bet. As of today, the 256MB version comes in at a whopping $350, however, the 128MB version is more reasonable.\n7.4. Definitions: Video Card and 3D Terminology\nWe'll cover video card and 3D graphics terminology. This material isn't crucial to actually getting a game working, but may help in deciding what hardware and software options are best for you.\n7.4.1. Textures\nA rendered scene is basically made up of polygons and lines. A texture is a 2D image (usually a bitmap) covering the polygons of a 3D world. Think of it as a coat of paint for the polygons.\n7.4.2. T&L: Transform and Lighting\nThe T&L is the process of translating all the 3D world information (position, distance, and light sources) into the 2D image that is actually displayed on screen.\n7.4.3. AA: Anti Aliasing\nAnti aliasing is the smoothing of jagged edges along a rendered curve or polygon. Pixels are rectangular objects, so drawing an angled line or curve with them results in a 'stair step' effect, also called the 'jaggies'. This is when pixels make, what should be a smooth curve or line, jagged. AA uses CPU intensive filtering to smooth out these jagged edges. This improves a game's visuals, but can also dramatically degrade performance.\nAA is used in a number of situations. For instance, when you magnify a picture, you'll notice lines that were once smooth become jagged (try it with The Gimp). Font rendering is another big application for AA.\nAA can be done either by the application itself (as with The Gimp or the XFree86 font system) or by hardware, if your video card supports it. Since AA is CPU intensive, it's more desirable to perform it in hardware, but if we're talking about semi-static applications, like The Gimp, this really isn't an issue. For dynamic situations, like games, doing AA in hardware can be crucial.\n7.4.4. FSAA: Full Screen Anti-Aliasing\nFSAA usually involves drawing a magnified version of the entire screen in a separate framebuffer, performing AA on the entire image and rescaling it back to the normal resolution. As you can imagine, this is extremely CPU intensive. You will never see non hardware accelerated FSAA.\n7.4.5. Mip Mapping\nMip mapping is a technique where several scaled copies of the same texture are stored in the video card memory to represent the texture at different distances. When the texture is far away a smaller version of the texture (mip map) is used. When the texture is near, a bigger one is used. Mip mapping can be used regardless of filtering method ( Section 7.4.6 ). Mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.\n7.4.6. Texture Filtering\nTexture filtering is the fundamental feature required to present sweet 3D graphics. It's used for a number of purposes, like making adjacent textures blend smoothly and making textures viewed from an angle (think of looking at a billboard from an extreme angle) look realistic. There are several common texture filtering techniques including point-sampling, bilinear, trilinear and anisotropic filtering.\nWhen I talk about 'performance hits', keep in mind that the performance hit depends on what resolution you're running at. For instance, at a low resolution you may get only a very slight hit by using trilinear filtering instead of bilinear filtering. But at high resolutions, the performance hit may be enormous. Also, I'm not aware of any card that uses anisotropic texture filtering. TNT drivers claim they do, but I've read that these drivers still use trilinear filtering when actually rendering an image to the screen.\n7.4.6.1. Point Sampling Texture Filtering\nPoint sampling is rare these days, but if you run a game with 'software rendering' (which you'd need to do if you run a 3D accelerated game without a 3D accelerated board) you're likely to see it used.\n7.4.6.2. Bilinear Texture Filtering\nBilinear filtering is a computationally cheap but low quality texture filtering. It approximates the gaps between textures by sampling the color of the four closest (above, below, left and right) texels. All modern 3D accelerated video cards can do bilinear filtering in hardware with no performance hit.\n7.4.6.3. Trilinear Texture Filtering\nTrilinear filtering is a high quality bilinear filter which uses the four closest pixels in the second most suitable mip map to produce smoother transitions between mip map levels. Trilinear filtering samples eight pixels and interpolates them before rendering. Trilinear filtering always uses mip mapping. Trilinear filtering eliminates the banding effect that appears between adjacent mip map levels. Most modern 3D accelerated video cards can do trilinear filtering in hardware with no performance hit.\n7.4.6.4. Anisotropic Texture Filtering\nAnisotropic filtering is the best but most CPU intensive of the three common texture filtering methods. Trilinear filtering is capable of producing fine visuals, but it only samples from a square area which in some cases is not the ideal method. Anisotropic (meaning 'from any direction') samples from more than 8 pixels. The number of sampled pixels and which sampled pixels it uses depends on the viewing angle of the surface relative to your screen. It shines when viewing alphanumeric characters at an angle.\n7.4.7. Z Buffering\nA Z buffer is a portion of RAM which represents the distance between the viewer (you) and each pixel of an object. Many modern 3D accelerated cards have a Z buffer in their video RAM, which speeds things up considerably, but Z buffering can also be done by the application's rendering engine. However, this sort of thing clearly should be done in hardware wherever possible.\nEvery object has a stacking order, like a deck of cards. When objects are rendered into a 2D frame buffer, the rendering engine removes hidden surfaces by using the Z buffer. There are two approaches to this. Dumb engines draw far objects first and close objects last, obscuring objects below them in the Z buffer. Smart engines calculate what portions of objects will be obscured by objects above them and simply not render the portions that you won't see anyhow. For complicated textures this is a huge savings in processor work.\n8. Sound\n8.1. Which sound card is best?\nBy the word \"best\" I mean best for gaming. Gamers want high quality sound for our games with the least amount of tinkering. On the other hand, a musician would have a very different concept of what \"best sound card\" would mean. If you're a musician, you might want to check out the Linux Audio Quality HOWTO .\nNow that Linux is beginning to mature, this question isn't as important as it used to be. Once upon a time, soundcards without onboard MIDI chips (most PCI sound cards) didn't do MIDI. This was mostly a problem for things like xdoom or lxdoom using musserv. These days we have MIDI emulators like Timidity and libraries like SDL which don't require hardware MIDI support. Frankly, I've had many cards and I can't tell the difference between any of them for gaming. If you want to do things like convert a record LP to digital format, then your choice of a soundcard with a professional grade A/D converter is absolutely crucial. For this HOWTO, we'll assume that you're more of a gamer than a studio recording engineer.\nYour decision should be based on what will be the easiest to configure. If you already have a card and it works well, that's good enough. If you're in the market to buy a sound card, get something that will take you a second to configure. PCI cards are much easier to deal with than ISA since you don't need to tell their drivers about which system resources (IRQ, DMA, I/O addresses) to use. Some ISA cards ARE plug-n-play, like the Creative AWE-64, and the Linux kernel has come a long way in auto configuring them.\nMy personal recommendation is any card which has the es1370 or es1371 chip, which uses the es1370 and es1371 sound drivers on Linux. These cards include the older Ensoniq es1370 and newer Creative PCI-128. These cards are extremely cheap and trivial to get working under Linux.\nI used to be a fan of the Creative Soundblaster AWE 32, AWE 64 and AWE 64 gold soundcards. These ISA PnP cards are well supported by both OSS and Alsa. They all use the same E-mu 8000 synthesis chip which enables them to play 32 voices simultaneously (they have 32 \"channels\"). A few notes: First, the Soundblaster AWE HOWTO is very out of date. Second, the AWE 64 and AWE 64 gold can play 64 voices simultaneously, but this is done in software. Creative never released a Linux driver for these cards (and they never released programming information to Linux developers), so Linux users cannot use the extra 32 channels on the AWE 64 and AWE 64 gold. As far Linux users are concerned, all three cards are completely identical (although the AWE 64 gold has gold plated connectors, which are better for sound quality than the more common steel connectors).\nThe Creative Soundblaster Live! is an extremely popular PCI sound card these days. I've never owned one, so I cannot comment here. However, there have been numerous reports about serious problems with the Live! and AMD motherboards that use the 686b southbridge. A google search should turn up alot of information on this problem.\nA more relevent issue is speakers, but even here the difference isn't huge. I've had expensive Altec Lansing speakers perform only slightly better than el-cheapo speakers. You get what you pay for with speakers, but don't expect a huge difference. You'll want to get something with a separate sub-woofer; this does make a difference at a cost of extra power and connector wires.\n8.2. Why isn't my sound working?\nFirst of all, it's probably not the game, it's probably your setup. AFAIK, there are 3 options to getting a sound card configured under Linux: the free OSS sound drivers that come with the Linux kernel, the Alsa drivers and the commercial OSS sound drivers. Personally, I prefer the free OSS drivers, but many people swear by Alsa. The commercial OSS drivers are good when you're having trouble getting your sound card to work by free methods. Don't discount them; they're very cheap (like 10 or 20 bucks), support bleeding edge sound cards and take a lot of guesswork out of the configuring process.\nThere are 5 things that can go wrong with your sound system:\nShared interrupt\nSomething's already accessing the sound card\nYou're using the wrong driver\nA permissions problem\n8.2.1. Shared interrupt\nThe first thing to do is to figure out if you have an IRQ conflict. ISA cards can't share interrupts. PCI cards can share interrupts, but certain types of high bandwidth cards simply don't like to share, including network and sound cards. To find out whether you have a conflict, do a cat /proc/interrupts. Output on my system is:\n$ cat /proc/interrupts\n               CPU0       CPU1\n      0:   24185341          0          XT-PIC  timer\n      1:     224714          0          XT-PIC  keyboard\n      2:          0          0          XT-PIC  cascade\n      5:    2478476          0          XT-PIC  soundblaster\n      5:     325924          0          XT-PIC  eth0\n     11:     131326          0          XT-PIC  aic7xxx\n     12:    2457456          0          XT-PIC  PS/2 Mouse\n     14:     556955          0          XT-PIC  ide0\n    NMI:          0          0\n    LOC:   24186046   24186026\n    ERR:       1353\nThe second column is there because I have 2 CPU's in this machine; if you have one CPU (called UP, or uniprocessor), you'll have only 1 CPU column. The numbers on the left are the assigned IRQ's and the strings to the right indicate what device was assigned that IRQ. You can see I have an IRQ conflict between the soundcard (soundblaster) and the network card (eth0). They both share IRQ 5. Actually, I cooked this example up because I wanted to show you what an IRQ conflict looks like. But if I did have this conflict, neither my network nor my sound would work well (or at all!).\nIf my sound card is PCI, the preferred way of fixing this would be to simply move one of the cards to a different slot and hope the BIOS sorts things out. A more advanced way of fixing this would be to go into BIOS and assign IRQ's to specific slots. Modern BIOS'es can do this.\n8.2.2. Misconfigured driver\nSometimes, a card is hardwired to use a certain IRQ. You'll see this on ISA cards only. Alternatively, some ISA cards can be set to use a specific IRQ using jumpers on the card itself. With these types of cards, you need to pass the correct IRQ and memory access, \"I/O port\", to the driver.\nThis is a sound card specific issue, and beyond the scope of this HOWTO.\n8.2.3. Something is already accessing your sound card\nPerhaps an application is already accessing your soundcard. For example, maybe you have an MP3 player that's paused? If something is already accessing your card, other applications won't be able to. Even though it was written to share the card between applications, I've found that esd (the enlightenment sound daemon) sometimes doesn't work correctly. The best tool to use here is lsof, which shows which processes are accessing a file. Your sound card is represented by /dev/dsp. Right now, I'm listening to an MP3 (not a Metallica MP3, of course...) with mp3blaster.\n# lsof /dev/dsp\n    COMMAND    PID USER   FD   TYPE DEVICE SIZE   NODE NAME\n    mp3blaste 1108    p    6w   CHR   14,3      662302 /dev/dsp\nfuser is similar; but it lets you send a signal to any process accessing the device file.\n# fuser -vk /dev/dsp\n    \n                         USER        PID ACCESS COMMAND\n    /dev/dsp             root       1225 f....  mp3blaster\n                         root       1282 f....  mp3blaster\nAfter issuing this command, mp3blaster was killed with SIGKILL. See the man pages for lsof and fuser; they're very useful. Oh, you'll want to run them as root since you'll be asking for information from processes that may be owned by root.\n8.2.4. You're using the wrong driver (or no driver)\nThere are only two ways to configure your card:\nSupport must be compiled directly into the kernel\nYou must have the correct driver loaded into memory\nYou can find out which driver your sound card is using by doing \"lsmod\" or looking at the output of \"dmesg\". Since sound is crucial for me, I always compile sound into my kernels. If you don't have a driver loaded, you need to figure out what's been compiled into your kernel. That's not so straight forward. Your best bet is to compile your kernel. BTW, let me say that compiling your own kernel is the first step towards proficiency with Linux. It's painful the first time you do it, but once you do it correctly, it becomes very easy down the right, especially if you keep all your old .config files and make use of things like \"make oldconfig\". See the Kernel HOWTO for details.\nIf you haven't compiled the kernel yourself, there is an overwhelmingly good chance that your system is set up to load sound drivers as modules. That's the way distros do things. Have everything under the sun compiled as a module and try to load them all. So if you don't see your sound card's driver with lsmod, your card probably isn't configured yet.\n8.2.5. Permissions Problem\nIf the sound card works when you're root but not any other user, you probably have a permissions problem. If this is the case, as root, look at the group owner of the sound card using ls -l /dev/dsp; it'll probably be audio. Then, as root, add your non-root user to the audio group in /etc/group. For example, I added the users p and wellspring to group audio on my system:\naudio:x:29:p,wellspring\nDon't forget to use grpconv if you use shadow passwords (which should be the case on most recent distributions) in order to maintain a consistent group configuration. Then log out and log back in as the non-root user. Your sound card should work. Thanks to James Barton for reminding me to add this to the howto.\n9. Miscellaneous Problems\n9.1. Hardware Acceleration Problems\nXFree86 4.x provides a more centralized and self-contained approach to video. Much of the funkyness like kernel modules for non-root access of video boards is, thankfully, gone.\n9.1.1. Hardware acceleration isn't working at all\nIf you're getting like 1 fps, then your system isn't using hardware 3D acceleration. There's one of two things that can be going on.\nYour 3D system is misconfigured (more likely)\nGame X is misconfigured (less likely)\nThe first step is to figure out which one is happening.\nIf you have X 4.0 (X 3.* users procede to step 2), look at the output of X -probeonly. You'll see:\n(II) XXXXXX: direct rendering enabled\nor\n(II) XXXXXX: direct rendering disabled\nwhere XXXXXXX depends on which video card you have. If direct rendering is disabled, then your X configuration is definitely faulty. Your game is not at fault. You need to figure out why DRI is disabled. The most important tool for you to use at this point is the `DRI Users Guide'. It is an excellently written document that gives you step by step information on how to get DRI set up correctly on your machine. A copy is kept at http://www.xfree86.org/4.0/DRI.html .\nNote that if you pass this test, your system is CAPABLE of direct rendering. Your libraries can still be wrong. So procede to step 2.\nThere is a program called glxgears which comes with the \"mesademos\" package. You can get mesademos with Debian ( apt-get install mesademos) or you can hunt for the rpm on http://www.rpmfind.net . You can also download and compile the source yourself from the mesa homepage.\nRunning glxgears will show some gears turning. The xterm from which you run glxgears will display \"X frames in Y seconds = X/Y FPS\". You can compare your system to the list of benchmarks below.\nCPU TYPE     VIDEO CARD     X VERSION    AVERAGE FPS\nCompiling Mesa and DRI modules yourself can increase your FPS by 15 FPS; quite a performance boost! So if your number is, say, about 20 FPS slower than a comparable machine, chances are that glxgears is falling back on software rendering. In other words, your graphics card isn't 3D accelerating graphics.\nMore important than FPS is having a constant FPS for small and large windows. If hardware acceleration is working, the FPS for glxgears should be nearly independent of window size. If it's not, then you're not getting hardware acceleration.\n9.2. Hardware acceleration works only for the root user\n9.2.1. XFree86 4.x\nIf the following lines aren't present in your XF86Config-4 file, put them in:\nSection \"DRI\"\n        Mode 0666\n    EndSection\nThis allows all non-root users to use DRI. For the paranoid, it's possible to restrict DRI to only a few non-root users. See the DRI User Guide.\n9.2.2. XFree86 3.x\n9.2.2.1. Voodoo cards\nVoodoo card hardware acceleration only takes place ONLY at 16bpp color and fails silently when starting X in another color depth.\nAlso, Voodoo cards need the 3dfx.o kernel module and a /dev/3dfx device file (major 107, minor 0) for non-root hardware acceleration. Neither the module nor the device file are used under XFree86 4.x.\n10. Emulation and Virtual Machines\nLinux gets ragged on a lot because we don't have the wealth of games that other platforms have. Frankly, there's enough games for me, although it would be really nice to have some of the bleeding edge games and classics like Half-life and Carmageddon. Fortunately, we have more emulators than you can shake a stick at. Although playing an emulated game is sometimes not quite as fun as playing it on the native machine, and getting some of the emulators to work well can be a difficult task, they're here, and there's alot of them!\n10.1. What is a virtual machine?\nA \"real computer\" provides an operating system many things, including a CPU, I/O channels, memory, a BIOS to provide low level access to motherboard and I/O resources, etc. When an operating system wants to write to a hard drive, it communicates through a device driver that interfaces directly with the hardware device memory.\nHowever, it's possible to give a program all the hardware resources it needs. When it wants to access a hard drive, give it some memory to write to. When it wants to set an IRQ, give it some bogus instructions that lets it think it set an IRQ. If you do this correctly, then in principle, there's no way for the poor application to know whether it's really accessing hardware or tricked by being given resources which simulate hardware. A virtual machine is the environment which tricks applications into believing they're running on a real computer. It provides all the services that a real computer would provide.\nVM's were used initially in the 1960's to emulate time shared operating systems, but these days we use them to run software which was written for foreign operating systems, or more commonly, an entire operating system. Because of the nature of the VM, the foreign OS can't tell the difference between operating in a VM or in a \"real\" machine.\n10.2. Apple 8-bit\nAll the 8-bit Apple ][ emulators require a copy of the original ROM, for whichever system you want to emulate, in a file. If you search hard enough, you can find file copies of the ROMs for the Apple ][, ][+, ][e, ][c and //gs. They are still copyrighted by Apple, and you can only use them legally if you actually own one of these computers.\n10.2.1. KEGS\nKEGS is an Apple II emulator written by Kent Dickey < kentd(at)cup(dot)hp(dot)com > which was originally written for HP-UX, but improved and customized for Linux. It runs under X at any color depth, and supports changeable memory sizes, joysticks, and sound. KEGS boots all Apple II variants, and supports all of the Apple ]['s graphics modes. I can't find a working homepage for this application.\n10.2.2. apple2 and xapple2\nThe SVGAlib based apple2 and X based xapple2 can emulate any Apple ][ variant except for the //gs. The interface is a bit funky, but usable. Configuration is also a bit funky; this emulator would benefit from an SVGA or X based configuration tool. It supports the undocumented portion of the 6502 instruction set which some games rely on. apple2 is currently being maintained by Michael Deutschmann < michael(at)talamasca(dot)ocis(dot)net > and seems to be developed at a slow but constant pace. I don't think this application has a homepage.\n10.3. DOS\n10.3.1. dosemu\ndosemu < http://www.dosemu.org > is the canonical DOS emulator on Linux. When you think of DOS, don't think of things like PROCOM PLUS OR OTHER PROGRA~1 WHICH HAVE SHORT NAMES AND ARE IN ALL CAPS. There are some real classics that were written for DOS like Carmageddon, Redneck Rampage and Tomb Raider. dosemu can run these. Unfortunately, it can take alot of effort to get dosemu to work, and of Jan 2002, the sound code is somewhat broken. Not a big deal when you're trying to run Wordperfect or an old database application. It's an absolute show stopper for gaming. Getting dosemu to work well is not easy, but unfortunately, for DOS games it's the best avenue. Good luck. If you have success using dosemu, I would like to hear from you.\n10.4. Win16\n10.4.1. Wabi\nWabi is a commercial Win16 emulator. That is, it'll run Windows 16-bit applications from a Windows 3.1, Windows 3.11 or Windows for Workgroups 3.11 environment. Wabi was originally created by SCO Unix a long time ago and then was purchased by Caldera sometime in mid year 2001.\nWabi is fast and does a good job for what it does, although I've heard it said that wabi for Solaris is more stable than Linux. It might be useful for playing older Win16 games, but there are three problems:\nYou must have a licensed copy of Windows 3.1/3.11 or WfW 3.11.\nWabi is awfully expensive for what it does.\nWabi doesn't work under 32bpp or 24bpp color.\nWabi does NOT do DOS itself, but it looks like it can use a DOS emulator as a backend for running DOS programs. There was talk about Wabi 3.0 which would've done Win32 emulation, but AFAIK, this project was shelved indefinitely. I think Wabi will run under Linux on all architectures (can someone verify this?)\n10.5. Win32\n10.5.1. wine\nWine < http://www.winehq.com >, which bears the GNUish acronym \"Wine Is Not An Emulator\" is a non-commercial implementation of the Win32 API. The reason why it's not an emulator is subtle and not of much interest to most non computer scientists, so we'll call it an emulator here (it really does run-time translation of calls to the Win32 API to POSIX/X11 calls). Wine has come a long way, and is capable of emulating many important programs, which is great news for Linux users who want this sort of stuff.\nWine does not provide the DOS API, so you can't use it to run DOS applications. For that, you should look at dosemu ( Section 10.3.1 ). Wine has never been too good at implementing DirectX, although a number of games are known to work under wine. For gaming you might want to look at winex ( Section 10.5.3 ).\nIn addition to run-time translation of the Win32 API to POSIX/X11 (it runs Windows applications on Linux), wine also does compile-time tranlation of the Win32 API to POSIX/X11 (it compiles Windows application source code on Linux). In this sense, wine is a Windows-to-Linux porting utility. The x86 architecture isn't required, but is recommended since it allows actual x86 binary execution as well as direct DLL usage).\nYou can use wine `with Windows', which means that wine uses libraries that actually come with Microsoft Windows itself. This is legal only if you own a copy of Windows which isn't currently being used on a computer. It's said that wine has the best success when run with Windows. You can also run wine without Windows. The people at winehq are writing their own set of libraries called libwine which implements the Win32 API with no Microsoft code at all.\nWine was originally licenced under the MIT/X11 license, so it could be used for both commercial and non-commercial purposes. In mid 2002, parts of wine were re-licensed under the LGPL so that it could only be used for non-commercial puposes. This presents a problem for companies like Transgaming ( Section 10.5.3 ) and prompted a fork of wine called ReWind ( Section 10.5.2 ).\n10.5.2. rewind\nRewind < http://rewind.sourceforge.net/ > was started by Eric Pouech (a wine developer) and Ove K\u00e5ven (a winex developer) in response to wine's license change ). It started out life as a snapshot of the last version of wine which was completely licensed under the MIT/X11 license. The aim is to keep rewind MIT/X11 based so that companies like Transgaming can offer wine based products.\n10.5.3. winex\nWinex is released by a company called Transgaming < http://www.transgaming.com >. The developers take wine (see Section 10.5.1 ) and add DirectX / DirectDraw support. Although winex is commercial, they have an interesting business model.\nThe end user (you) can download the source code for free. However, for 5 US dollars per month, you can become a subscriber of Transgaming. Being a subscriber of Transgaming gives three major benefits:\nSubscribers can download convenient packaged versions of winex in deb, rpm or tar.gz format whenever they want, including updates. They have also more functionality than the publicly available tarball: the latter is an older version which lacks some of the newest features, like support for copy protected programs.\nThere are monthly polls where subscribed users can take votes on what they want winex developers to work on. For instance, they can vote for things like \"Improve support for copy protected programs\", \"Better Installshield support\" or \"Improve DirectX 8.0 support\". As far as I can see, the developers really do listen to the subscriber polls.\nThe Transgaming website has a few user support forums. On one hand, they use the most godawful, horrible, confusing, wasteful, moronic format I've ever seen and I hope to god I never see a forum with a format as bad as Transgaming's. On the other hand, you can ask for help and the developers are VERY good about getting around to your answer; their vigilance is quite impressive. Non-subscribers can browse the forums, but only subscribers can post (and therefore, ask for support).\nThe developers of winex were going to release their Installshield, DirectX and DirectDraw enhancements to wine \"every so often\". In return, as wine maturation improved, the winex developers were going to take the new versions of wine and use them for winex. However, since the birth of Transgaming, parts of wine have been re-licensed under the more restrictive GNU LGPL license ( Section 10.5.1 ). This basically means that versions of wine that are released past the date of the re-licensing can no longer be used by winex. Therefore, winex will now be based on rewind ( Section 10.5.2 ).\n10.5.4. Win4Lin\nWin4Lin < http://www.netraverse.com > is a commercial product by Netraverse. Like vmware ( Section 10.5.5 ) it uses the virtual machine approach to running Windows applications, so you'll get a big window from which you can boot Windows and run all kinds of Windows applications. Unlike vmware, Win4Lin only does Windows 95/98/ME, but this turns out to be better for gamers. Because Win4Lin concentrates on these operating systems, reports say that it's faster and does a better job at running games under these operating system than vmware. It's also much cheaper than vmware. The most recent version of Win4Lin as of June 2003 is 5.0. It suffers nevertheless from some limitations:\nIt does not support DirectX or DirectDraw, while vmware has \"limited\" support for DirectX.\nIt only supports serial and parallel devices. This is important for people who use USB joysticks. Note that vmware supports up to 2 USB devices.\nAs of June 2003, expect to pay $89.99 without printed docs and $99.99 with printed docs. In addition, there isn't an evaluation copy available, although you get a 30 day money back guarantee. However, since it's commercial you do get tech support. vmware is considerably more expensive.\nLike vmware, you're required to have a licensed copy of Win95 or Win98. Win4Lin cannot use an existing Windows installation the way wine can.\nIt only runs on x86 architectures.\n10.5.5. VMWare\nVMWare is a virtual machine that runs multiple operating systems simultaneously on a standard PC: supported OSes include Microsoft ones, Linux, Novell Netware and FreeBSD. You can among others use it to run a MS Windows OS and launch your favourite game there. You can even run another Linux under Linux; useful is you want to test another distro for instance. Amazing! Now for the bad sides. You should definitely have a good configuration in order to run it; they claim the minimum is a 500MHz x86 CPU with 128MB RAM, but a faster processor and at least 256MB RAM seem to be the bare minimum if you want reasonable performance. Not all Linux distributions are supported: newest RedHat's, Mandrake's and Suse's are, but you're out of luck if you have an other version and/or distribution (like Debian). Moreover, vmware has only limited support for DirectX, and you might not be able to play recent games.\nSee http://www.vmware.com for more information. It's not very cheap (about 300$ for the Workstation version), but you can get a 30 day evaluation copy.\n10.5.6. What should I choose?\nFirst of all, you should try an emulator. Although some games may work with wine , you'll probably get the most success with winex : its DirectX support is constantly improving. As of version 3.1, the DirectX 8 support is nearly complete, but this may not be the case with older DirectX versions (are consequently older games).\nYou might also try a virtual machine like Win4Lin or VMWare instead of an emulator. If your goal is to run Win95/98/ME applications on Linux, without USB and on the x86 architecture, Win4Lin's cost and focus on Win95 type OS's make it a better choice than vmware. However, if you must have USB support or run Linux on a platform other than x86, vmware is your only option.\nNow if your goal is to run Win95 type OS games under Linux, Win4Lin almost seems better than vmware. The show-stopper is the fact that vmware has limited DirectX support while Win4Lin has none. This fact alone makes both Win4Lin and vmware unsuitable for most hardcore gaming purposes. But if you're going to give it a try, you're more likely to have success with vmware.\n11. Interpreters\n11.1. SCUMM Engine (LucasArts)\nLucasarts wrote an engine for point and click adventures named SCUMM (Script Creation Utility for Maniac Mansion). They wrote many graphical adventures using SCUMM, like their famous Monkey Island series (all three). Ludvig Strigeus < strigeus(at)users(dot)sourceforge(dot)net > was able to reverse engineer the SCUMM format and write an interpreter for SCUMM based games that compiles under Linux and Win32 named scummvm < http://scummvm.sourceforge.net/ >. Their website is very good, and chock full of any kind of information about SCUMM and playing these games under scummvm.\nA compatibility page is maintained at the scummvm website. FWIW, I've been able to finish many of the games that are listed as 90% done with no problems. scummvm is rock solid, and allows you to purchase SCUMM based Lucas Arts games, copy the data files to your hard drive and play them under Linux. As of February 2002, I've been following their cvs, and this project is undergoing constant development. Kudos to the scummvm team.\n11.2. AGI: Adventure Gaming Interface (Sierra)\nThe older Sierra DOS graphical adventure games used a scripting language named AGI (Adventure Gaming Interface). Some examples of games written in AGI would be Leisure Suit Larry I (EGA), Space Quest I and II, King's Quest II, Mixed-Up Mother Goose and others. These games can be played using sarienon> < http://sarien.sourceforge.net >, an open source interpreter for AGI games.\nSarien was written in SDL, so it should run on any platform that can compile SDL programs. In addition, there are versions for DOS, Strong-Arm based pda's, QNS (holy cow! embedded gaming!), MIPS based systems and SH3/4 based Pocket PC's. The developers are clearly out of their minds (in a good way!). Sarien also has numerous enhancements not found in the original games, like a Quake style pull-down console, picture and dictionary viewer, enhanced sound and support for AGDS, a Russian AGI clone. Sarien is under development and the developers have been very good about documenting the Sarien internals if anyone wants to get involved in hacking it.\n11.3. SCI: SCript Interpreter or Sierra Creative Interpreter (Sierra)\nThe newer Sierra graphical adventure games (we're talking about the late 80's here) used an interpreter named SCI. There were many versions of SCI since Sierra was constantly improving its engine. The original SCI games were DOS based, but Sierra eventually started releasing Win32 SCI based games. Some examples of games written with SCI are Leisure Suit Larry 1 (VGA), Leisure Suit Larry 2-7, Space Quest 3-6, King's Quest 4-6, Quest For Glory 1-4 and many others. Compared with AGI games, SCI adventures have better music support, a more complex engine and loads of bells and whistles.\nMany SCI based games (games written in SCI0) can be played using freesci, available at http://freesci.linuxgames.com . Like Sarien, FreeSCI has many graphics targets including SDL, xlib and GGI, so this program can compile and run under an incredible number of platforms. The developers have done a fantastic job of documenting and FAQing their application.\n11.4. Infocom Adventures (Infocom, Activision)\nThe Z-machine is a well documented < http://www.gnelson.demon.co.uk/zspec/index.html > virtual machine designed by Infocom to run their interactive fiction games. This allowed them to write game data files in a cross platform manner, since only the engine itself, the Z-machine, would be platform dependent. Z-machine went through a number of revisions during the lifetime of Infocom, and two further revisions (V7 and V8 created by Graham Nelson) after the Infocom's demise. The later versions even supported limited sound and graphics!\nOne of the most popular Z-machine interpreters is Frotz < http://www.cs.csubak.edu/~dgriffi/proj/frotz/ >. This excellently done page has many nice links for interactive fiction fans. Frotz is GPL, runs all versions of Z-machine and will compile on most versions of Unix. Frotz has spawned many forks, like a version for PalmOS and Linux based PDA's.\njzip < http://jzip.sourceforge.net/ > is another very popular Z-machine interpreter that will run V1-V5 and V8 Z-machine data files. jzip is very portable; it compiles on all Unices, OS/2, Atari ST and DOS.\nThere are actually many other Z-machine interpreters like nitfol and rezrov (written in Perl!). Each interpreter has its own set of strengths, and you can find links to them on the home pages for Frotz and jzip.\n11.5. Scott Adams Adventures (Adventure International)\nScott Adams is, arguably, the father of interactive fiction. Although he himself was inspired by the first piece of interactive fiction, Adventure, Scott brought adventuring to the masses. His games were available for Atari, Apple 2, Commodore, Sorcerer, TI, and CPM. His company, Adventure International, released a number of much loved games between 1978 and 1984 before folding. He recently released a new game (a Linux version is not available) but since the decline of adventuring, he has pretty much kept out of the gaming industry.\nAlan Cox wrote scottfree, a Scott Adams adventure game file interpreter for Unix. Using scottfree and any of the Scott Adams data files which can be downloaded from Scott's website < http://www.msadams.com/ > you can enjoy these classics.\n11.6. Ultima Underworld: The Stygian Abyss (Origin, Blue Sky Productions)\nThe Underworld Adventures project < http://uwadv.sourceforge.net/ > is an effort to port the 1992 classic, Ultima Underworld: The Stygian Abyss, to modern operating systems like Linux, MacOS X, and Windows. It uses OpenGL for 3D graphics, SDL for platform specific tasks and is released under the GNU GPL. Underworld Adventures provides an impressive graphics system which uses the original game files, so you'll need the original game disk to play.\nUnderworld Adventures also provides a bunch of tools for you to display the level maps, tools for examining uw1 conversation scripts and more.\n11.7. Ultima 7 (Origin, Electronic Arts)\nUltima 7 is actually 2 games: part I (The Black Gate) and part II (Serpent Island) which uses a slightly enhanced version of The Black Gate's engine. In addition, an addon disk was released to both part I (The Forge Of Virtue) and part II (The Silver Seed).\nA team of people developed Exult < http://exult.sourceforge.net/ > which is an open source interpreter that will run both parts of Ultima 7 and their addon disks. Exult is written in C++ using SDL, so it will compile on any platform that can compile SDL programs. It also features some enhancements over the original versions of the Ultima VII engine. You'll need to purchase a copy of Ultima 7 to play. The developers have no plans on extending Exult to interpret the other Ultimas since the engines changed so radically between releases.\nThe Exult team has also been hard at work creating a map editor, Exult Studio, and a script compiler that will let users create their own RPG in the Ultima style.\n11.8. System Shock (Electronic Arts, Origin)\nSystem Shock is a classic first person shooter/adventure from 1994, which puts it as a contemporary of Doom. However, its engine is much more feature rich than the original Doom: for example, System Shock had 3D sprites, free look and a facility to have objects on top of each other, giving the illusion of a full 3D map, like Quake. Game reviewers agree that this game has the features of Quake with a story-line more compelling than Half-life. The System Shock engine was optimized for sophistication, while Doom's engine was optimized for throwing lots of monsters at you; a completely different appoach. Quite impressive for such an old game!\nThe System Shock Hack Project < http://madeira.physiol.ucl.ac.uk/tsshp/sshock.html > is an attempt to update the game for modern operating systems. The project uses SDL and is released under the modified BSD license. While you need the original game files to play SSHP, it should work with the System Shock demo, which is freely available.\n12. Websites And Resources\n12.1. Meta gaming websites\nThese are some resources for Linux gamers no matter what kind of game you enjoy to play.\nThe Linux Game Tome: http://www.happypenguin.org\nAbout the games themselves.\n"}, {"score": 228.74603, "uuid": "5c3cc23a-bacc-581e-941b-2ea298f0d0e3", "index": "cw12", "trec_id": "clueweb12-0013wb-42-28563", "target_hostname": "wiki.tldp.org", "target_uri": "http://wiki.tldp.org/Linux-Gamers-HOWTO", "page_rank": 1.1763566e-09, "spam_rank": 72, "title": "Linux-Gamers-HOWTO - The Linux Documentation Project", "snippet": "<em>OpenGL</em> <em>is</em> the open source equivalent <em>to</em> <em>Direct3D</em>, a component <em>of</em> DirectX (Section 3.14). The important difference being that since <em>OpenGL</em> <em>is</em> open (and DirectX <em>is</em> closed), games written <em>in</em> <em>OpenGL</em> are much easier <em>to</em> port <em>to</em> and co-develop on Linux <em>than</em> games written using DirectX.", "explanation": null, "document": "Copyright \u00a9 2001, 2002 Peter Jay Salzman\nCopyright \u00a9 2003, 2004 Peter Jay Salzman, Fr\u00e9d\u00e9ric Delanoy\n2004-11-13 v.1.0.6\nAbstract\nThe same questions get asked repeatedly on Linux related mailing lists and news groups. Many of them arise because people don't know as much as they should about how things \"work\" on Linux, at least, as far as games go. Gaming can be a tough pursuit; it requires knowledge from an incredibly vast range of topics from compilers to libraries to system administration to networking to XFree86 administration ... you get the picture. Every aspect of your computer plays a role in gaming. It's a demanding topic, but this fact is shadowed by the primary goal of gaming: to have fun and blow off some steam.\nThis document is a stepping stone to get the most common problems resolved and to give people the knowledge to begin thinking intelligently about what is going on with their games. Just as with anything else on Linux, you need to know a little more about what's going on behind the scenes with your system to be able to keep your games healthy or to diagnose and fix them when they're not.\n&lt;[[mailto:p(at)dirac(dot)org|p(at)dirac(dot)org]]&gt; / http://www.dirac.org/p .\nDistributed subject to the Open Software License, ver 1.1\n1. Administra\nIf you have ideas, corrections or questions relating to this HOWTO, please email me. By receiving feedback on this howto (even if I don't have the time to answer), you make me feel like I'm doing something useful. In turn, it motivates me to write more and add to this document. You can reach me at &lt;[[mailto:p(at)dirac(dot)org|p(at)dirac(dot)org]]&gt;. My web page is http://www.dirac.org/p and my Linux pages are at http://www.dirac.org/linux . Please do send comments and suggestions for this howto. Even if I don't take your suggestions, your input is graciously received.\nI assume a working knowledge of Linux, so I use some topics like runlevels and modules without defining them. If there are enough questions (or even protests) I'll add more basic information to this document.\n1.1. Authorship and Copyright\nThis document is copyright (c) 2001-2002 Peter Jay Salzman, &lt;[[mailto:p(at)dirac(dot)org|p(at)dirac(dot)org]]&gt;; 2003-2004 Peter Jay Salzman and Fr\u00e9d\u00e9ric Delanoy. Permission is granted to copy, distribute and/or modify this document under the terms of the Open Software License, Version 1.1, except for the provisions I list in the next paragraph. I hate HOWTO's that include the license; it's a tree killer. You can read the OSL at http://opensource.org/licenses/osl-1.1.txt .\nIf you want to create a derivative work or publish this HOWTO for commercial purposes, I would appreciate it if you contact me first. This will give me a chance to give you the most recent version. I'd also appreciate either a copy of whatever it is you're doing or a spinach, garlic, mushroom, feta cheese and artichoke heart pizza.\n1.2. Acknowledgements\nThanks goes out to these people for extensive comments, corrections, and diffs. Their effort is above and beyond the call of duty:\nFr\u00e9d\u00e9ric Delanoy, Moritz Muehlenhoff &lt;[[mailto:jmm(at)Informatik(dot)uni-bremen(dot)de|jmm(at)Informatik(dot)uni-bremen(dot)de]]&gt;, Mike Phillips, Ioan Rogers &lt;[[mailto:buck(at)aiur(dot)co(dot)uk|buck(at)aiur(dot)co(dot)uk]]&gt;\nI would also like to thank the following people for sending in comments and corrections. Without their help, there would be more typos and mistakes than you could shake a stick at:\nMichael McDonnell\n1.3. Latest Versions and Translations\nThe latest version can be found at http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/lgh/LG-HOWTO or http://www.dirac.org/linux/writing , but this is my own personal working copy. The version at my personal web site might be broken if I'm working on the HOWTO. The version at sourceforge is bleeding edge but guaranteed to be not broken, however it may have glitches, like unfinished paragraphs.\nThe most recent stable version can be found at http://www.tldp.org .\n1.3.1. Russian\nDmitry Samoyloff &lt;[[mailto:dsamoyloff(at)yandex(dot)ru|dsamoyloff(at)yandex(dot)ru]]&gt; is the maintainer of the Russian translation. The most recent version can be found at http://www.dirac.org/linux/writing .\n1.3.2. Hungarian\nL\u00e1szl\u00f3 Daczi &lt;[[mailto:dacas(at)korhaz(dot)rethy(dot)hu|dacas(at)korhaz(dot)rethy(dot)hu]]&gt;, the Hungarian LDP coordinator, announced that a Hungarian translation was produced by Szilard Ivan, and is available at http://tldp.fsf.hu/HOWTO/Linux-Gamers-HOWTO-hu .\n2. Definitions: Types Of Games\nNot everyone knows the different types of games that are out there, so in an effort to form a common language that we can all use, I'll run through each game type and provide a very brief history.\n2.1. Arcade style\nAlthough arcade games had their heydey in the 80's, they are nonetheless very popular. Nothing will ever replace walking into a dark, crowded and noisy arcade gallery, popping a quarter into your favorite machine and playing an old fashioned game of Space Invaders. Arcade style games attempt to simulate the arcade games themselves. There is such a vast number of these things that it's nearly impossible to enumerate them all, but they include clones of Asteroids, Space Invaders, Pac-Man, Missile Command and Galaxian.\n2.2. Card, logic and board games\nComputer based card games simulate a card game like poker or solitaire. The program can simulate your opponent(s).\nLogic games usually simulate some well known logic puzzle like Master Mind or the game where you have put sliding numbered tiles in order inside a box.\nComputer based board games simulate some kind of board game you'd play on a table top with friends, like monopoly, Mille Bourne, chess or checkers. The program can simulate your opponent.\n2.3. Text Adventure (aka Interactive Fiction)\nOnce upon a time, when Apple ][, Commodore, and Atari ruled the world, text adventures were the game of choice of `intelligent folk'. You are given a scenario and can interact with the world you're placed in:\nYou\u00a0are\u00a0in\u00a0a\u00a0room.\u00a0\u00a0It\u00a0is\u00a0pitch\u00a0dark\u00a0and\u00a0you're\u00a0likely\u00a0to\u00a0be\u00a0eaten\u00a0by\u00a0a\u00a0grue.\u00a0\u00a0\u00a0\u00a0\u00a0&gt;\u00a0Light\u00a0lantern\u00a0with\u00a0match.\u00a0\u00a0\u00a0\u00a0\u00a0You\u00a0light\u00a0the\u00a0lantern.\u00a0\u00a0This\u00a0room\u00a0appears\u00a0to\u00a0be\u00a0a\u00a0kitchen.\u00a0\u00a0There's\u00a0a\u00a0table\u00a0with\u00a0a\u00a0\u00a0\u00a0\u00a0\u00a0book\u00a0in\u00a0the\u00a0center.\u00a0\u00a0You\u00a0also\u00a0see\u00a0an\u00a0oven,\u00a0refrigerator\u00a0and\u00a0a\u00a0door\u00a0leading\u00a0east.\u00a0\u00a0\u00a0\u00a0\u00a0&gt;\u00a0Open\u00a0the\u00a0oven.\u00a0\u00a0\u00a0\u00a0\u00a0In\u00a0the\u00a0oven\u00a0you\u00a0see\u00a0a\u00a0brown\u00a0paper\u00a0bag.\u00a0\u00a0\u00a0\u00a0\u00a0&gt;\u00a0Take\u00a0the\u00a0bag.\u00a0\u00a0Open\u00a0the\u00a0bag.\u00a0\u00a0Close\u00a0the\u00a0oven.\u00a0\u00a0\u00a0\u00a0\u00a0Inside\u00a0the\u00a0bag\u00a0is\u00a0a\u00a0some\u00a0garlic\u00a0and\u00a0a\u00a0cheese\u00a0sandwich.\u00a0\u00a0The\u00a0oven\u00a0door\u00a0is\u00a0now\u00a0closed.\nBack then, text adventures were self contained executables on a disk or casette. These days there's usually a data file and an interpreter. The interpreter reads data files and provides the gaming interface. The data files are the actual game itself, similar to the relationship between first person shooters ( Section 2.7 ) and wad files.\nThe first adventure game was Adventure (actually \u201cADVENT\u201d, written on a PDP-1 in 1972). You can play Adventure yourself (actually, a descendent); it comes with \u201cbsd games\u201d on most Linux distros. Text adventures became popularized by Scott Adams ( Section 11.5 ) and reached their height of popularity in the late 80's with Infocom ( Section 11.4 ) which are also playable under Linux.\nAs computer graphics became easier and more powerful, text adventures gave rise to graphic adventures. The death of commercial interactive fiction more or less coincided with the bankruptcy of Infocom.\n2.4. Graphical Adventures\nGraphical adventures are, at heart, text adventures on steroids. The degree to which they use graphics varies widely. Back in the 80's, they were little more than text adventures which showed a screen of static graphics. When you picked up an item, the background would be redrawn without the item appearing. The canonical example would be the so-called `Hi-Res Adventures' like The Wizard And The Princess. Later on, the sophisticated graphical adventures had your character roaming around the screen, and you could even use a mouse, but the interface remained purely text.\nNext there are the `point and click adventures' which basically have no text interface at all, and often have dynamic graphics, like a cat wandering around the room while you're deciding what to do next. In these games, you point at an object (say, a book) and can choose from a pull-down list of functions. Kind of like object oriented adventuring.\nThere aren't many graphical adventures written natively for Linux. The only one I can think of is Hopkins FBI (which happens to be my favorite game for Linux).\n2.5. Simulation (aka Sims)\nSimulations strive to immerse the player behind the controls of something they normally wouldn't have access to. This could be something real like a fighter jet or something imaginary like a mechanized warrior combat unit. In either case, sims strive for realism.\nSome sims have little or no strategy. They simply put you in a cockpit to give you the thrill of piloting a plane. Some are considerably complex, and there's often a fine line between sims and strats ( Section 2.6 ). A good example would be Heavy Gear III or Flight Gear. These days sims and strats are nearly indistinguishable, but a long time ago, sims were real time while strats were turn based. This is awkward for modern day use, since a game like Warcraft which everyone knows as a strat, would be a sim by definition.\n2.6. Strategy (aka Strats)\nStrategy games have their roots in old Avalon type board games like Panzer Leader and old war strategy games published by SSI. Generally, they simulate some kind of scenario. The scenario can be peaceful, like running a successful city ( SimCity ), or not, like illegal drug selling operation ( DrugWars ) or an all-out war strategy game like Myth II. The types of games usually take a long time to complete and require a lot of brainpower.\nStrats can be further divided into two classes: real time and turn based. Real time strats are based on the concept of you-snooze-you-lose. For example, you're managing a city and a fire erupts somewhere. The more time it takes for you mobilize the fire fighters, the more damage the fire does. Turn based strats are more like chess---the computer takes a turn and then the player takes a turn.\n2.7. First Person Shooter (aka FPS)\nWhat light through yonder window breaks? It must be the flash of the double barreled shotgun! We have a long and twisted history with FPS games which started when id Software open sourced code for Doom. The code base has forked and merged numerous times. Other previously closed engines opened up, many engines are playable via emulators, many commercial FPS games were released for Linux and there are quite a number of FPS engines which started life as open source projects. Although you may not be able to play your favorite FPS under Linux (Half-Life plays great under winex) Linux definitely has no deficiency here!\nFirst person shooters are characterized by two things. First, you pretty much blow up everything you see. Second, the action takes place in first person. That is, through the eyes of the character who's doing all the shooting. You may even see your hands or weapon at the bottom of the screen. They can be set in fantasy (Hexen), science fiction (Quake II), present day `real world' (Soldier Of Fortune) and many other settings.\nLike text adventures, FPS fit the engine/datafile format. The engine refers to the actual game itself (Doom, Quake, Heretic2) and plays out the maps and bad guys outlined by the datafile (doom2.wad, pak0.pak, etc). Many FPS games allow people to write their own non-commercial datafile. There are hundreds, even thousands of non-commercial Doom datafiles that you can download for free off the net. Often, companies release their engines to the open source community so we can hack and improve them. However, the original data files are kept proprietary. To this day, you still have to purchase doom.wad.\n2.8. Side Scrollers\nSide scrollers are similar to FPS but you view your character as a 2D figure who runs around various screens shooting at things or performing tasks. Examples would be Abuse for Linux and the original Duke Nukem. They don't necessarily have to be violent, like xscavenger, a clone of the old 8-bit game Lode Runner.\n2.9. Third Person Shooters\nSimilar to FPS, but you view your character in third person and in 3D. On modern third person shooters you can usually do some really kick-butt maneuvers like Jackie Chan style back flips and side rolls. The canonical example would be Tomb Raider. On the Linux platform, we have Heretic 2 and Heavy Metal FAKK2.\n2.10. Role Playing Game (aka RPG)\nAnyone who has played games like Dungeons & Dragons or Call of Cthulhu knows exactly what an RPG is. You play a character, sometimes more than one, characterized by traits (eg strength, dexterity), skills (eg explosives, basket weaving, mechanics) and properties (levels, cash). As you play, the character becomes more powerful and the game adjusts itself accordingly, so instead of fighting orcs, at high levels you start fighting black dragons. The rewards increase correspondingly. At low levels you might get some gold pieces as a reward for winning a battle. At high levels, you might get a magic sword or a kick-butt assault rifle.\nRPG's generally have a quest with a well defined ending. In nethack you need to retrieve the amulet of Yendor for your god. In Ultima II, you destroy the evil sorceress Minax. At some point, your character becomes powerful enough that you can `go for it' and try to complete the quest.\nWhile the insanely popular Ultima series, written by Richard Garriot (aka Lord British) for Origin, was not the first RPG, it popularized and propelled the RPG genre into mainstream. Ultima I was released in 1987 and was the game that launched 9 (depending on how you want to count them) very popular sequels, finishing with Ultima IX: Ascension. You can play Ultima VII under Linux with Exult ( Section 11.7 ).\nThe canonical RPG on Linux is Rogue (the ncurses library started life as a screen handling routine for Rogue!) and it has infinite variants like Zangband and Nethack (which has many variants itself). Some RPG's are quite complicated and great feats of programming. There seems to be a deficiency of commercial RPGs for Linux. Not counting the rogue variants, there's also a deficiency of open source RPGs too.\n3. Libraries\nWe'll run through the different gaming libraries you'll see under Linux.\n3.1. What is Glide2?\nGlide2 is a low level graphics API and driver that accesses 3D hardware accelerated functions on 3dfx's Voodoo I, II and III cards, under XFree86 3.x.\nA program can only use the special hardware accelerated features of these cards by using the Glide2 library in one of two ways:\ndirectly written using Glide2 (Myth II, Descent III)\nindirectly using Mesa built with a Glide2 backend to simulate OpenGL (Rune, Unreal Tournament)\n3dfx opened up the specifications and source code to the open source community. This allowed Daryll Strauss to port Glide2 to Linux which enabled XFree86 3.x users to use Voodoo I, II and III cards under Linux.\nSince Glide2 accesses the video card directly, Glide2 applications will either need to be run by root or be setuid root. A way around this was to create the kernel 3dfx module. This module (and its device file /dev/3dfx) allows Glide2 graphical hardware acceleration for non-root users of non-setuid applications.\nUnfortunately, Glide2 is also a dead issue. It's only used for Voodoo I, II, III boards (which are becoming outdated), under XFree86 3.x (most people use XFree86 4.x). And since 3dfx is now a defunct company, it's a sure bet that no more work will be done on Glide2 and no more games will be written using Glide2.\n3.2. What is Glide3?\nUnlike Glide2, Glide3 is not an API used for game programming. It exists only to support DRI on Voodoo III, IV and V boards under XFree86 4.x. None of the games which use Glide2 will work with Glide3. This shouldn't be a surprise since Glide2 and Glide3 support different video cards and different versions of XFree86. The only video card that can use both Glide2 (under XFree86 3.x) and Glide3 (under XFree86 4.x) is the Voodoo III. It's reported that a Voodoo III using Glide2 will outperform a Voodoo III using Glide3.\nWhen you use a Voodoo III, IV or V under XFree86 4.x, you want to use a version of Mesa (see Section 3.4 ) which was compiled to use Glide3 as a backend to ensure hardware accelerated OpenGL on your system.\n3.3. What is OpenGL?\nOpenGL is a high level graphics programming API originally developed by SGI, and it became an industry standard for 2D and 3D graphics programming. It's defined and maintained by the Architectural Revision Board (ARB), an organization which include representatives from SGI, IBM, DEC, and Microsoft. OpenGL provides a powerful, complete and generic feature set for 2D and 3D graphics operations.\nThere are 3 canonical parts to OpenGL:\nGL: The OpenGL core calls\nGLU: The utility calls\nGLUT: OS independent window event (mouse, keyboard, etc.) handler.\nOpenGL is not only an API, it's also an implementation, written by SGI. The implementation tries to use hardware acceleration for various graphics operations whenever available, which depends on what videocard you have in you computer. If hardware acceleration is not possible for a specific task, OpenGL falls back on software rendering. This means that when you get OpenGL from SGI, if you want any kind of hardware acceleration at all, it must be OpenGL written and compiled specifically for some graphics card. Otherwise, all you'll get is software rendering. The same thing is true for OpenGL clones, like Mesa.\nOpenGL is the open source equivalent to Direct3D, a component of DirectX ( Section 3.14 ). The important difference being that since OpenGL is open (and DirectX is closed), games written in OpenGL are much easier to port to and co-develop on Linux than games written using DirectX.\n3.4. What is Mesa?\nMesa < http://www.mesa3d.org&gt; is a free implementation of the OpenGL API, designed and written by Brian Paul. While it's not officially certified (that would take more money than an open source project has), it's an almost fully compliant OpenGL implementation conforming to the ARB specifications. It's reported that Mesa is even faster than SGI's own OpenGL implementation.\nJust like OpenGL, Mesa makes use of hardware acceleration whenever possible. When a particular graphics task isn't able to be hardware accelerated by the video card, it's software rendered; the task is done by your computer's CPU instead. This means that there are different builds of Mesa depending on what kind of video card you have. Each build uses a different library as a backend renderer. For example, if you have a Voodoo I, II or III card under XFree86 3.x, you'd use mesa+glide2 (written by David Bucciarelli) which is the Mesa implementation of OpenGL that uses Glide2 as a backend to render for graphical operations.\n3.5. What is DRI?\nGraphics rendering has 3 players: the client application (like Quake 3), the X server and the hardware (the graphics card). Previously, client applications were prohibited from writing directly to hardware, and there was a good reason for this. A program that is allowed to directly write to hardware can crash the system in any number of ways. Rather than trusting programmers to write totally bug free, cooperative programs that access hardware, Linux simply disallowed it. However, that changed under X 4.x with DRI (Direct Rendering Infrastructure < http://www.dri.sourceforge.net&gt; . DRI allows X clients to write 3D rendering information directly to the video card in a safe and cooperative manner.\nDRI gets the X server out of the way so the 3D driver (Mesa or OpenGL) can talk directly to the hardware. This speeds things up. The 3D rendering information doesn't even have to be hardware accelerated. On a technical note, this has a number of virtues.\nVertex data doesn't have to be encoded/decoded via GLX.\nGraphics data isn't sent over a socket to the X server.\nOn uni-processor machines the CPU doesn't have to change context between XFree86 and its client to render the graphics.\n3.6. What is GLX?\nGLX is the X extension used by OpenGL programs, it is the glue between the platform independent OpenGL and platform dependent X.\n3.7. What is Utah GLX?\nUtah-GLX is the precursor to DRI. It makes some different design decisions regarding separation of data and methods of accessing the video card like relying on root access rather than creating the kernel infrastructure for secure access. It provides support for a few cards which are not well supported by DRI like the ATI Rage Pro family, S3 Virge (although anyone using this for gaming is, well, nuts), and an open source TNT/TNT2 driver (which is very incomplete). The TNT/TNT2 driver is based on reverse-engineering of the obfuscated source code release of the X 3.3 drivers by nVidia. However, they're really incomplete, and effectively, unusable.\n3.8. What is xlib?\nEvery once in awhile you'll see some sicko (said with respect) write a game in xlib. It is a set of C libraries which comprise the lowest level programming interface for XFree86. Any graphics programming in X ultimately makes use of the xlib library.\nIt's not an understatement to say that xlib is long winded, arcane and complicated. Because of this, there are lots of libraries like SDL ( Section 3.10 ) for 2D graphics, OpenGL ( Section 3.3 ) for 3D graphics and widget sets ( Section 3.9 ) for widgets within windows which hide the details of different aspects of xlib programming.\nWhile some games are written in xlib, like the Doom Editor Yadex, xlib itself is not a serious game writing library. Most games don't need the low-level interface that xlib provides. In addition, by using the higher level libraries, a game writer can develop his game on multiple platforms, even ones that don't use XFree86.\n3.9. What is a widget set?\nWidgets are objects that make up a GUI application's interface. They include things like text entry boxes, pulldown menus, slider bars, radio buttons and much more. A widget set is a collection of related widgets that are designed to have a common interface and a consistant \"feel\". Gtk is the canonical widget set on Linux, but there are many others like fltk (a small C++ widget set), Xaw, Qt (the widget set of KDE), and Motif (the widget set used by Netscape). Motif used to be the king of widget sets in the Unix world, but it was very expensive to license. The Open Group finally opened up Motif's license for open source operating systems, but it was too little too late. There are many completely open source widget sets which are more complete and much nicer looking than Motif, including Lesstif, a totally free Motif clone.\n3.10. What is SDL (Simple DirectMedia Layer)?\nSDL < http://www.libsdl.org&gt; is a library by Sam Lantiga (graduate of UCD, yeah!). It's actually a meta-library, meaning that not only is it a graphics library which hides the details of xlib programming, it provides an easy interface for sound, music and event handling. It's LGPL'd and provides joystick and OpenGL support as well. Unlike xlib ( Section 3.8 ), SDL is very suited for game programming.\nThe most striking part of SDL is that it's a cross platform library. Except for a few details, a program written in SDL will compile under Linux, MS Windows, BeOS, MacOS, MacOS X, Solaris, IRIX, FreeBSD, QNX and OSF. There are SDL extensions written by various people to do things like handle any graphics format you care to mention, play mpegs, display truetype fonts, sprite handling and just about everything under the sun. SDL is an example of what all graphics libraries should strive for.\nSam had an ulterior motive for writing such a cool library. He was the lead programmer for Loki Software (he now codes for Blizzard Software), which used SDL in all of its games except for Quake3.\n3.11. What is GGI?\nGGI < http://www.ggi-project.org&gt; is a project which aims to implement a graphics abstraction layer in lower level code, put graphics hardware support into a common codebase, and bring higher stability and portability to graphics applications. LibGGI applications run on SVGAlib, fb, and X servers among others. Judging from their screenshots, this is quite a powerful library.\nApplications that use LibGGI directly include Heroes, Ultrapoint, Quake, and Berlin. Most applications that use SVGALib can be run on X or any other LibGGI backend by using a wrapper library which re-implements SVGALib ( Section 3.12 ) using LibGGI. SDL ( Section 3.10 ) and clanlib ( Section 3.15 ) applications can display on LibGGI but often the native drivers for these libraries are faster, however it's a good way to get SDL, clanlib, and SVGALib applications to run where they would not before.\nGGI has a sister project, KGI, which is developing a kernel-level alternative to systems like the linux framebuffer and the DRI. This project is much less far along than LibGGI itself, but promises to combine DRI-level speeds and the stability and security UNIX users expect.\n3.12. What is SVGAlib? Frame buffer? Console?\nThe console is the dark non-graphical screen you look at when your computer first boots up (and you don't have xdm or gdm running). This is opposed to the X environment which has all sorts of GUI things like xterms. It's a common misconception that X means graphics and console means no graphics. There are certainly graphics on the console\u2014we will discuss the two most common ways to achieve this.\nSVGAlib is a graphics library that lets you draw graphics on the console. There are many graphical applications and games that use SVGAlib like zgv (a console graphical image viewer), prboom and hhexen. I happen to be a fan of this library and of graphical console games in general; they are extremely fast, fullscreen and compelling. There are three downsides to SVGAlib. First, SVGAlib executables need to be run by root or be setuid root, however, the library releases root status immediately after the executable begins to run. Secondly, SVGAlib is video card dependent\u2013if your video card isn't supported by SVGAlib, you're out of luck. Third, SVGAlib is Linux only. Games written in SVGAlib will only work on Linux.\nFrame buffers are consoles implemented by a graphics mode rather than a BIOS text mode. Why simulate text mode in a graphical environment? This allows us to run graphical things in console, like allowing us to choose any font we want the console to display (which is normally set by BIOS). There's a good Framebuffer HOWTO available from LDP. Graphical console games written using the frame buffer suffer from the same deficiencies of the SVGA library: not all hardware is supported and the code will only run on Linux.\n3.13. What is OpenAL?\nOpenAL < http://www.openal.org&gt; aims to be for sound what OpenGL is for graphics. It started as a joint project between Loki Software and Creative Labs, setting out to be a vendor neutral and cross platform API for audio - the audio equivalent of OpenGL ( Section 3.3 ). Loki is no longer in business, but Creative and the Open Source community have kept the project alive. It is licensed LGPL and the specs can be obtained for free from the OpenAL website. It has support from nVidia (nForce2/3 based motherboards come with OpenAL MS Windows libraries for the on-board audio), Apple has added OpenAL to their audio framework for OSX and it can also be found powering the Epic Games Unreal Engine\nCurrently, it's not all cross-platform goodness. There is almost no support for enhancements like EAX or any hardware acceleration on Linux, though it does it exist in the Windows implementation. However, if you have a Creative SoundBlaster or Audigy sound card (with an emu10x chip), and you use ALSA sound drivers, you can get OpenAL libraries from http://www.lost.org.uk that provide hardware acceleration and decent surround support.\n3.14. What is DirectX?\nDirectX is a collection of proprietary multimedia API's, first developed by Microsoft in 1995, for its various Windows OS's. It's a mistake to say something like \"DirectX is like OpenGL\" or \"DirectX is like SDL\", as is commonly said in DirectX tutorials. Multimedia API's are more centralized on Windows than they are on Linux. A more accurate statement would be something like \"DirectX is like DRI, OpenGL and SDL combined\". As of October 2004, the most recent version of DirectX is 9c. The components of DirectX are:\nDirectDraw :: DirectDraw gives direct access to video memory, like DRI, so 2D graphics can be blitted directly to the video card. DirectDraw is like the graphical component of SDL, but the direct video card access is done by DRI rather than SDL. This is why a game can easily take out a Windows system but should not take down a Linux system.Direct3D (D3D):: Direct3D, like OpenGL, provides a 3D graphics API. Whereas OpenGL is open source, lower level and compiles under a multitude of operating systems, D3D is proprietary, higher level and only compiles on Windows. D3D first appeared in DirectX 2, released in 1996. DirectAudio :: DirectAudio is a combination of 2 audio API's, DirectSound and DirectMusic , which allows direct access to the sound card for sound and music playback. DirectInput :: DirectInput gives support for gaming input devices such as joysticks. DirectPlay :: DirectPlay gives support for simplified networking for multiplayer gaming. DirectShow :: DirectShow provides support for movie files like AVI and MPG. It was a separate API from DirectX, but was integrated with DirectX 8. DirectSetup :: This API provides a way to install DirectX from within an application to simplify game installation.\nDepending on the version of DirectX you're talking about, DirectX support in winex ( Section 10.5.3 ) ranges from well supported to \"kind of\" supported. It's poorly supported by wine ( Section 10.5.1 ), barely supported by vmware ( Section 10.5.5 ) and unsupported by Win4Lin ( Section 10.5.4 ).\nOne comment about portability: Each component of DirectX has multiple corresponding library on Linux. Moreover, a game writer who uses libraries like OpenGL, GGI or SDL will write a game which will trivially compile on Windows, Linux and a multitude of other OS's. Yet game companies persist using DirectX and therefore limit their audience to Windows users only. If you're a game writer, please consider using cross platform libraries and stay away from DirectX.\nA company named realtechVR started an open source project, DirectX Port, < http://www.v3x.net/directx&gt; which, like wine, provides a Direct3D emulation layer that implements Direct3D calls. The project was focused on the BeOS platform, but is now focused on MacOS and Linux. You can get the latest cvs from their sourceforge page at < http://sourceforge.net/projects/dxglwrap&gt; .\n3.15. Clanlib\nClanLib is a medium level development kit. At its lowest level, it provides a platform independent (as much as that is possible in C++) way of dealing with display, sound, input, networking, files, threading and such. ClanLib builds a generic game development framework, giving you easy handling of resources, network object replication, graphical user interfaces (GUI) with theme support, game scripting and more.\n4. XFree86 and You\nIf you're going to game under X, it's crucial that you know a bit about X. The \"X Window User HOWTO\", and especially \"man XF86Config\" are required reading. Don't short change yourself; read them. They have an extremely high \"information to space\" ratio. Many problems can be fixed easily if you know your way around XF86Config (or XF86Config-4).\n4.1. Getting information about your X system\nWhether you're trying to diagnose an X problem or requesting help from a mailing list or Usenet newsgroup, you'll want to have as much information available as possible. These are a set of tools you can use to obtain that information.\n4.1.1. Probeonly\nOne of the best diagnostic tools and sources of information about your X system is probeonly output. To use it, kill X if it's already running and from a console, type:\nX\u00a0-probeonly\u00a02&gt;\u00a0X.out\nYes, that's a single dash; so much for standards. The output of X goes to stderr, so we have to redirect stderr with \"2>\" to a file named X.out. This file will have almost everything there is to know about your X system. It's crucial that you know the difference between the various markers you'll see in probeonly output:\n(--)\u00a0probed\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(**)\u00a0from\u00a0config\u00a0file\u00a0\u00a0\u00a0\u00a0(==)\u00a0default\u00a0setting\u00a0\u00a0\u00a0\u00a0\u00a0(++)\u00a0from\u00a0command\u00a0line\u00a0\u00a0\u00a0(!!)\u00a0notice\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(II)\u00a0informational\u00a0\u00a0\u00a0\u00a0\u00a0(WW)\u00a0warning\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(EE)\u00a0error\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(??)\u00a0unknown.\nHere's an example of some information I gleaned from my output:\nI'm running at 16 bpp color:\n(**)\u00a0TDFX(0):\u00a0Depth\u00a016,\u00a0(--)\u00a0framebuffer\u00a0bpp\u00a016\nX has detected what my videocard chipset and videoram are:\n(--)\u00a0Chipset\u00a03dfx\u00a0Voodoo5\u00a0found\u00a0\u00a0\u00a0\u00a0\u00a0(--)\u00a0TDFX(0):\u00a0VideoRAM:\u00a032768\u00a0kByte\u00a0Mapping\u00a065536\u00a0kByte\n4.1.2. Getting info about your setup: xvidtune\nxvidtune is your friend when your X screen is shifted a little bit too far to the right, or if the vertical length is too small to fit on your monitor. However, it's a great diagnostic tool also. It'll give you:\nthe hsync/vsync range specified in your XF86Config file\nthe 4 horizontal and 4 vertical numbers which defines your videomode (the 1st horizontal/vertical numbers gives the screen resolution). These 8 numbers will tell you which modeline your X uses. See the XFree86 Video Timings Howto for more information. Note that explicit modelines are no longer necessary, since XFree 4.0.1 and up computes modetimings automatically based on your monitor's and video card's capabilities. However, there may be times when you'll want to play around with mode timings, like for weird hardware or if want to tweak your display.\nthe \"dot clock\" your videocard is running at.\n4.1.3. Getting info about your setup: xwininfo\nxwininfo tells you all sorts of information about X windows. And actually, your \"background\" or \"root\" window is considered a window too. So when xwininfo asks you to click on the window you want the information on, click on your background. It'll tell you things like screen and window resolution, color depth, window gravity state (which gives a hint to the window manager about where to place new windows), backing store usage and more.\n4.1.4. Other sources of information\nxdpyinfo gives cool stuff, like X version and loaded extensions (invaluable when trying to see what's missing, like GLX, DRI, XFree86- VidMode , etc.).\n4.1.5. Getting information about your 3D system\nglxinfo gives lots of useful information about OpenGL like whether direct rendering enabled, the currently installed versions of glx and mesa, vendor/renderer strings, the GL library files being used and more.\n4.2. Playing Games In X Without a Window Manager\nWhen playing a game under X, you should consider starting X without a window manager (WM). Heavyweight WMs, like Enlightenment, or full-blown desktop environments like GNOME or KDE, may produce a noticeable slow down. Even lightweight WMs, like twm, rob your CPU of clock cycles (and in twm's case, even full screen games will have a frame around the window). Running a game without a WM or DE depends on how you access X. If you usually log in to a Virtual Console and start X with \"startx\" try the following:\nModify ~/.xinitrc, which tells X what to run upon starting. Here is what my .xinitrc looks like:\n#quake3\u00a0+set\u00a0r_gldriver\u00a0libGR.so.1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#exec\u00a0ut\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#lsdldoom\u00a0-server\u00a02\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#exec\u00a0tribes2\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0exec\u00a0/usr/bin/enlightenment\nYou'll usually see a window or desktop manager being executed from this file (GNOME or KDE). Comment out the lines containing the WM or desktop manager with a pound sign (#) and place your game on a new line with any command line arguments you want to pass. If the game is not located in your $PATH, give its full path name.\nIf you log directly into X using gdm, then things are a little different. These instructions are for gdm 2.4 or greater. They *may* work with kde, but I cannot say for certain.\nFirst, check your gdm.conf (usually in /etc/X11/gdm or /etc/gdm) file for a line that says begins \"SessionDesktopDir=blah\". One of the directories listed as options should be \"/usr/share/xsessions\", and is the directory which will be used in this example. As root, change to the \"/usr/share/xsessions\" directory and take a look at its contents. It should contain some .desktop files, each corresponding to an entry you'll see in gdm's Session menu, e.g gnome.desktop, enlightenment.destop. This example will show you how to log in to Doom3. Copy any of the desktop files to \"doom3.desktop\" and open the new file in your favourite text editor. The file will be full of alternative languages, so cut out everything you don't want and make the file look like this:\n[Desktop\u00a0Entry]\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Encoding=UTF-8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Name=DOOM\u00a0III\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Comment=iD's\u00a0Doom\u00a0III\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#if\u00a0game\u00a0is\u00a0not\u00a0in\u00a0path,\u00a0remember\u00a0to\u00a0put\u00a0the\u00a0full\u00a0path\u00a0here\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exec=/usr/games/doom3/doom3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0#\u00a0no\u00a0icon\u00a0yet,\u00a0only\u00a0the\u00a0top\u00a0three\u00a0are\u00a0currently\u00a0used\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Icon=\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Type=Application\nSave the file and log out of your window manager. At the gdm login screen, you should now see \"DOOM\u00a0III\" as an option in \"Sessions\". Naturally you can add a .desktop file for each game you have installed\n5. Various Topics\n5.1. Memory Type Range Registers\nStarting with Pentium class processors and including Athlon, K6-2 and other CPUs, there are Memory Type Range Registers (MTRR) which control how the processor accesses ranges of memory locations. Basically, it turns many smaller separate writes to the video card into a single write (a burst). This increases efficiency in writing to the video card and can speed up your graphics by 250% or more.\nSee /usr/src/linux/Documentation/mtrr.txt for details. Note that since this file was written, XFree86 has been patched to automatically detect your video RAM base address and size and set up the MTRRs.\n5.2. Milking performance from your system for all it's worth\nIf for some reason you're using X 3.3, follow the instructions given by mtrr.txt (see Section 5.1 ) to set up your MTRRs. X 4.0 does this automatically for you.\nIf you're playing a game under X, don't run a window manager, and certainly don't run a desktop manager like GNOME or KDE. See Section 4.2 for details.Kill all non-essential processes (you'll have to do this as root) by using the startup scripts on your system. On Debian, the startup scripts for run-level 2 are located in /etc/rc2.d/. You can kill a service in an orderly manner by sending its startup script the `stop' command:||<tablestyle=\"width:90%; background-color:#E0E0E0\"> #\u00a0cd\u00a0/etc/rc2.d\u00a0\u00a0\u00a0\u00a0\u00a0#\u00a0./ntpd\u00a0stop || Another (radical) option is to simply put yourself in single-user mode with||<tablestyle=\"width:90%; background-color:#E0E0E0\"> #\u00a0telinit\u00a01 || This will even get rid of getty; your system will only be running whatever is absolutely crucial to its operation. You'll have something like 10 processes running. The downside is that you'll have to play the game as root. But your process table will be a ghost town, and all that extra CPU will go straight to your game.\n5.3. About libraries on Linux\nA common problem you'll see in gaming is a library file not being found. They're kind of mysterious and have funny names, so we'll go over libraries on Linux for a bit. There are two types of libraries, static and dynamic. When you compile a program, by default, gcc uses dynamic libraries, but you can make gcc use static libraries instead by using the -static switch. Unless you plan on compiling your games from source code, you'll mainly be interested in dynamic libraries.\n5.3.1. Dynamic libraries\nDynamic libraries, also called a \u201cshared library\u201d, provide object code for an application while it's running. That is, code gets linked into the executable at run time, as opposed to compile time. They're analagous to the .dll's used by Windows. The program responsible for linking code \u201con the fly\u201d is called /etc/ld.so, and the dynamic libraries themselves usually end with .so with a version number, like:\n/usr/lib/libSDL.so\u00a0\u00a0\u00a0\u00a0\u00a0/lib/libm.so.3\nWhen using gcc, you refer to these libraries by shaving off the strings lib, .so and all version numbers. So to use these two libraries, you would pass gcc the -lSDL\u00a0-lm options. gcc will then place\u00a0a\u00a0memo\u00a0inside\u00a0the\u00a0executable'\u00a0that\u00a0says\u00a0to\u00a0look\u00a0at\u00a0the\u00a0files /usr/lib/libSDL.so and /lib/libm.so.3` whenever an SDL or math function is used.\n5.3.2. Static libraries\nIn contrast to dynamic libraries which provide code while the application runs, static libraries contain code which gets linked (inserted) into the program while it's being compiled. No code gets inserted at run time; the code is completely self-contained. Static libraries usually end with .a followed by a version number, like:\n/usr/lib/libSDL.a\u00a0\u00a0\u00a0\u00a0\u00a0/usr/lib/libm.a\nThe .a files are really an archive of a bunch of .o (object) files archived together, similar to a tar file. You can use the nm to see what functions a static library contains:\n%\u00a0nm\u00a0/usr/lib/libm.a\u00a0\u00a0\u00a0\u00a0\u00a0...\u00a0\u00a0\u00a0\u00a0\u00a0e_atan2.o:\u00a0\u00a0\u00a0\u00a0\u00a000000000\u00a0T\u00a0__ieee754_atan2\u00a0\u00a0\u00a0\u00a0\u00a0e_atanh.o:\u00a0\u00a0\u00a0\u00a0\u00a000000000\u00a0T\u00a0__ieee754_atanh\u00a0\u00a0\u00a0\u00a0\u00a000000000\u00a0r\u00a0half\u00a0\u00a0\u00a0\u00a0\u00a000000010\u00a0r\u00a0limit\u00a0\u00a0\u00a0\u00a0\u00a000000018\u00a0r\u00a0ln2_2\u00a0\u00a0\u00a0\u00a0\u00a0...\nWhen using gcc, you refer to these libraries by shaving off the strings \u201clib\u201d, \u201c.a\u201d and all version numbers. So to use these two libraries, you would pass gcc the -lSDL\u00a0-lm options. gcc will then bolt\u00a0on'\u00a0code\u00a0from /usr/lib/SDL.a and /usr/lib/libm.a` whenever it sees a math function during the compilation process.\n5.3.3. How are library files found\nIf you compile your own games, your biggest problem with libraries will either be that gcc can't find a static library or perhaps the library doesn't exist on your system. When playing games from binary, your library woes will be either be that ld.so can't find the library or the library doesn't exist on your system. So it makes some sense to talk about how gcc and ld.so go about finding libraries in the first place.\ngcc looks for libraries in the standard system directories plus any directories you specify with the -L option. You can find what these standard system directories are with gcc -print-search-dirs\nld.so looks to a binary hash contained in a file named /etc/ld.so.cache for a list of directories that contain available dynamic libraries. Since it contains binary data, you cannot modify this file directly. However, the file is generated from a text file /etc/ld.so.conf which you can edit. This file contains a list of directories that you want ld.so to search for dynamic libraries. If you want to start putting dynamic libraries in /home/joecool/privatelibs, you'd add this directory to /etc/ld.so.conf. Your change doesn't actually make it into /etc/ld.so.cache until you run ldconfig; once it's run, ld.so will begin to look for libraries in your private directory.\nAlso, even if you just add extra libraries to your system, you must update ld.so.cache to reflect the presence of the new libraries.\n5.3.4. Finding Out What Libraries a Game Depends On\nMost commercial Linux games will be dynamically linked against various LGPL libraries, such as OpenAL or SDL. For these examples, Bioware's NeverWinter Nights < http://nwn.bioware.com&gt; will be used.\nTo find out what libraries a game uses, we can use the \"ldd\" command. Cd to /usr/games/nwn, or wherever you installed it and take a look at the files. You should see a file called nwmain; this is the actual game binary. Type \"ldd\u00a0nwmain\" and you'll see:\n$\u00a0ldd\u00a0nwmain\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0linux-gate.so.1\u00a0=&gt;\u00a0\u00a0(0xffffe000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libm.so.6\u00a0=&gt;\u00a0/lib/libm.so.6\u00a0(0x40027000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libpthread.so.0\u00a0=&gt;\u00a0/lib/libpthread.so.0\u00a0(0x40049000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGL.so.1\u00a0=&gt;\u00a0/usr/lib/libGL.so.1\u00a0(0x4009b000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGLU.so.1\u00a0=&gt;\u00a0/usr/X11R6/lib/libGLU.so.1\u00a0(0x40103000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libmss.so.6\u00a0=&gt;\u00a0not\u00a0found\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libSDL-1.2.so.0\u00a0=&gt;\u00a0/usr/lib/libSDL-1.2.so.0\u00a0(0x40178000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libc.so.6\u00a0=&gt;\u00a0/lib/libc.so.6\u00a0(0x401ff000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/lib/ld-linux.so.2\u00a0(0x40000000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGLcore.so.1\u00a0=&gt;\u00a0/usr/lib/libGLcore.so.1\u00a0(0x40319000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libnvidia-tls.so.1\u00a0=&gt;\u00a0/usr/lib/libnvidia-tls.so.1\u00a0(0x409f1000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libXext.so.6\u00a0=&gt;\u00a0/usr/X11R6/lib/libXext.so.6\u00a0(0x409f3000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libX11.so.6\u00a0=&gt;\u00a0/usr/X11R6/lib/libX11.so.6\u00a0(0x40a01000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libdl.so.2\u00a0=&gt;\u00a0/lib/libdl.so.2\u00a0(0x40acd000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libstdc++.so.5\u00a0=&gt;\u00a0/usr/lib/libstdc++.so.5\u00a0(0x40ad1000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libgcc_s.so.1\u00a0=&gt;\u00a0/usr/lib/libgcc_s.so.1\u00a0(0x40b88000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libasound.so.2\u00a0=&gt;\u00a0/usr/lib/./libasound.so.2\u00a0(0x40b90000)\nldd shows all the libraries a dynamic executable relies on, and shows you where they are. It also \"pulls in\" the dependencies of the dependencies. For instance, while NWN does not itself depend on libnvidia-tls.so, the Nvidia supplied libGL on my system does.\nMissing libraries?\nIn the example above, we can see that nwmain wants libmss.so.6, and the linker cannot find it. Usually, a missing library is a crash waiting to happen. There is one other thing to consider though: The majority of games are actually launched by a \"wrapper\", a shell script that performs some magic prior to launching the game. In the case of NWN, the wrapper is called nwn. Let's take a look at that now:\n$\u00a0less\u00a0nwn\u00a0\u00a0\u00a0\u00a0#!/bin/sh\u00a0\u00a0\u00a0\u00a0#\u00a0This\u00a0script\u00a0runs\u00a0Neverwinter\u00a0Nights\u00a0from\u00a0the\u00a0current\u00a0directory\u00a0\u00a0\u00a0\u00a0export\u00a0SDL_MOUSE_RELATIVE=0\u00a0\u00a0\u00a0\u00a0export\u00a0SDL_VIDEO_X11_DGAMOUSE=0\u00a0\u00a0\u00a0\u00a0#\u00a0If\u00a0you\u00a0do\u00a0not\u00a0wish\u00a0to\u00a0use\u00a0the\u00a0SDL\u00a0library\u00a0included\u00a0in\u00a0the\u00a0package,\u00a0remove\u00a0\u00a0\u00a0\u00a0#\u00a0./lib\u00a0from\u00a0LD_LIBRARY_PATH\u00a0\u00a0\u00a0\u00a0export\u00a0LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\u00a0\u00a0\u00a0\u00a0./nwmain\u00a0$@\nThis script sets up some environment variables, then launches the game binary with whatever command line options we added. The relevant part here is the environment variable called \"LD_LIBRARY_PATH\". This is a way of adding to the linkers search path. Try copying the line to your shell and seeing what happens when you re-run ldd.\n$\u00a0export\u00a0LD_LIBRARY_PATH=./lib:./miles:$LD_LIBRARY_PATH\u00a0\u00a0\u00a0\u00a0$\u00a0ldd\u00a0nwmain\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0linux-gate.so.1\u00a0=&gt;\u00a0\u00a0(0xffffe000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libm.so.6\u00a0=&gt;\u00a0/lib/libm.so.6\u00a0(0x40027000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libpthread.so.0\u00a0=&gt;\u00a0/lib/libpthread.so.0\u00a0(0x40049000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGL.so.1\u00a0=&gt;\u00a0/usr/lib/libGL.so.1\u00a0(0x4009b000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGLU.so.1\u00a0=&gt;\u00a0/usr/X11R6/lib/libGLU.so.1\u00a0(0x40103000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libmss.so.6\u00a0=&gt;\u00a0./miles/libmss.so.6\u00a0(0x40178000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libSDL-1.2.so.0\u00a0=&gt;\u00a0./lib/libSDL-1.2.so.0\u00a0(0x401ec000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libc.so.6\u00a0=&gt;\u00a0/lib/libc.so.6\u00a0(0x4025e000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/lib/ld-linux.so.2\u00a0(0x40000000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libGLcore.so.1\u00a0=&gt;\u00a0/usr/lib/libGLcore.so.1\u00a0(0x40378000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libnvidia-tls.so.1\u00a0=&gt;\u00a0/usr/lib/libnvidia-tls.so.1\u00a0(0x40a50000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libXext.so.6\u00a0=&gt;\u00a0/usr/X11R6/lib/libXext.so.6\u00a0(0x40a52000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libX11.so.6\u00a0=&gt;\u00a0/usr/X11R6/lib/libX11.so.6\u00a0(0x40a60000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libdl.so.2\u00a0=&gt;\u00a0/lib/libdl.so.2\u00a0(0x40b2c000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libstdc++.so.5\u00a0=&gt;\u00a0/usr/lib/libstdc++.so.5\u00a0(0x40b30000)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0libgcc_s.so.1\u00a0=&gt;\u00a0/usr/lib/libgcc_s.so.1\u00a0(0x40be7000)\nAs you can see, this gives us slighly different results. The NWN library directories have been prepended to the search path, so now the linker can find libmss.so.6 in the \"./miles\" directory, and also finds the local copy of libSDL first, no longer using the system copy.\nThere's another benefit of these scripts: they are easily edited to allow you to provide your own copy of a library. Any game-supplied copy of a library such as OpenAL or SDL is likely to be compiled for the lowest common denominator, probably i486 or i686. If you have a Pentium4 or an AthlonXP, you could compile you own version specifically for your processor. The compiler will try to optimise the resulting binary, giving some increase in performance. See the homepage for GCC for more information this at the GCC site.\nMaking NWN use your system copy is easy. It says so in the wrapper script! Remove \"./lib:\" from the LD_LIBRARY_PATH line, and you're good to go.\nAnother nice little trick is for games that use OpenAL for their sound output (e.g. Unreal based games: UT, Postal, Rune, etc.). Since the Open Sound System's (OSS) deprecation in favour of ALSA, all Linux distributions I've seen now ship with ALSA support as default, with OSS support actually being supplied via ALSA's compatability modules. The copies of openal.so distributed with games often do NOT support ALSA, so making the game use a copy compiled yourself will allow you to use ALSA natively.\n6. When Bad Things Happen To Good People\nOf course we can't cover every Bad Thing that happens, but I'll outline some items of common sense.\nThere are two types of bad things: random and repeatable. It's very difficult to diagnose or fix random problems that you don't have any control over when they happen or not. However, if the problem is repeatable \"it happens when I press the left arrow key twice\", then you're in business.\n6.1. RTFM!\nRead the friendly manual. The `manual' can take on a few forms. For open source games there's the readme files that come with the game. Commercial games will have a printed manual and maybe some readme files on the CD the game came on. Don't forget to browse the CD your game came on for helpful tips and advice.\nDon't forget the game's website. The game's author has probably seen people with your exact same problem many times over and might put information specific to that game on the website. A prime example of this is Loki Software's online FAQs located at http://faqs.lokigames.com .\n6.2. Look For Updates and Patches\nIf you're playing an open source game that you compiled, make sure you have the newest version by checking the game's website. If your game came from a distro make sure there's not an update rpm/deb for the game.\nCommercial game companies like Loki release patches for their games. Often a game will have MANY patches (Myth2) and some games are unplayable without them (Heretic2). Check the game's website for patches whether you have a problem running the game or not; there may be an update for a security problem that you may not even be aware of.\nBy the way, Loki now has a utility that searches for Loki Software on your hard drive and automatically updates them. Check out http://updates.lokigames.com .\n6.3. Newsgroups\nIf you don't know what netnews (Usenet) is, then this is definitely worth 30 minutes of your time to learn about. Install a newsreader. I prefer console tools more, so I use tin, but slrn is also popular. Netscape has a nice graphical \"point and click\" newsreader too.\nFor instance, I can browse Loki Software's news server with tin -g news.lokigames.com. You can also specify which news server to use using the $NNTP environment variable or with the file /etc/nntpserver.\n6.4. Google Group Search\nEvery post made to Usenet gets archived at Google's database at http://groups.google.com . This archive used to be at http://www.deja.com , but was bought by Google. Many people still know the archive as \"deja\".\nIt's almost certain that whatever problem you have with Linux, gaming related or not, has already been asked about and answered on Usenet. Not once, not twice, but many times over. If you don't understand the first response you see (or if it doesn't work), then try one of the other many replies. If the page is not in a language you can understand, there are many translation sites which will convert the text into whatever language you like, including http://www.freetranslation.com and http://translation.lycos.com . My web browser of choice, Opera (available at http://www.opera.com ) allows you to use the right mouse button to select a portion of text and left click the selection to translate it into another language. Very useful when a Google group search yields a page in German which looks useful and my wife (who reads German well) isn't around.\nThe Google group search has a basic and advanced search page. Don't bother with the simple search. The advanced search is at http://groups.google.com/advanced_group_search .\nIt's easy to use. For example, if my problem was that Quake III crashed everytime Lucy jumps, I would enter \"linux quake3 crash lucy jumps\" in the \"Find messages with all of the words\" textbox.\nThere are fields for which newsgroup you want to narrow your search to. Take the time to read and understand what each field means. I promise you. You won't be disappointed with this service. Use it, and you'll be a much happier person. Do note that they don't archive private newsgroups, like Loki Software's news server. However, so many people use Usenet, it almost doesn't matter.\n6.5. Debugging: call traces and core files\nThis is generally not something you'll do for commercial games. For open source games, you can help the author by giving a corefile or stack trace. Very quickly, a core file (aka core dump) is a file that holds the \"state\" of the program at the moment it crashes. It holds valuable clues for the programmer to the nature of the crash -- what caused it and what the program was doing when it happened. If you want to learn more about core files, I have a great gdb tutorial at http://www.dirac.org/linux .\nAt the *very* least, the author will be interested in the call stack when the game crashed. Here is how you can get the call stack at barf-time:\nSometimes distros set up their OS so that core files (which are mainly useful to programmers) aren't generated. The first step is to make your system allow unlimited coresizes:\nulimit\u00a0-c\u00a0unlimited\nYou will now have to recompile the program and pass the -g option to gcc (explaining this is beyond the scope of this document). Now, run the game and do whatever you did to crash the program and dump a core again. Run the debugger with the core file as the 2nd argument:\n$\u00a0gdb\u00a0CoolGameExecutable\u00a0core\nAnd at the (gdb) prompt, type \"backtrace\". You'll see something like:\n#0\u00a0printf\u00a0(format=0x80484a4\u00a0\"z\u00a0is\u00a0%d.\\n\")\u00a0at\u00a0printf.c:30\u00a0\u00a0\u00a0\u00a0\u00a0#1\u00a00x8048431\u00a0in\u00a0display\u00a0(z=5)\u00a0at\u00a0try1.c:11\u00a0\u00a0\u00a0\u00a0\u00a0#2\u00a00x8048406\u00a0in\u00a0main\u00a0()\u00a0at\u00a0try1.c:6\nIt may be quite long, but use your mouse to cut and paste this information into a file. Email the author and tell him:\nThe game's name\nAny error message that appears on the screen when the game crashes.\nWhat causes the crash and whether it's a repeatable crash or not.\nThe call stack\nIf you have good bandwidth, ask the author if he would like the core file that his program dumped. If he says yes, then send it. Remember to ask first, because core files can get very, very big.\n6.6. Saved Games\nIf your game allows for saved games, then sending the author a copy of the saved game is useful because it helps the tech reproduce whatever is going wrong. For commercial games, this option is more fruitful than sending a core file or call stack since commercial games can't be recompiled to include debugging information. You should definitely ask before sending a save game file because they tend to be long, but gaming companies usually have lots of bandwidth. Mike Phillips (formerly of Loki Software) mentioned that sending in saved games to Loki is definitely a good thing.\nNeedless to say, this only applies if your game crashes reproducably at a certain point. If the game segfaults every time you run it, or is incredibly slow, a saved game file won't be of much help.\n6.7. What to do when a file or library isn't being found (better living through strace)\nSometimes you'll see error messages that indicate a file wasn't found. The file could be a library:\n%\u00a0./exult\u00a0\u00a0\u00a0./exult:\u00a0error\u00a0while\u00a0loading\u00a0shared\u00a0library:\u00a0libSDL-1.2.so.0:\u00a0cannot\u00a0load\u00a0shared\u00a0object\u00a0\u00a0file:\u00a0No\u00a0such\u00a0file\u00a0or\u00a0directory\nor it could be some kind of data file, like a wad or map file:\n%\u00a0qf-client-sdl\u00a0\u00a0\u00a0\u00a0IP\u00a0address\u00a0192.168.0.2:27001\u00a0UDP\u00a0Initialize\u00a0Error:\u00a0W_LoadWadFile:\u00a0couldn't\u00a0load\u00a0gfx.wad\nSuppose gfx.wad is already on my system, but couldn't be found because it isn't in the right directory. Then where IS the right directory? Wouldn't it be helpful to know where these programs looked for the missing files?\nThis is where strace shines. strace tells you what system calls are being made, with what arguments, and what their return values are. In my `Kernel Module Programming Guide' (due to be released to LDP soon), I outline everything you may want to know about strace. But here's a brief outline using the canonical example of what strace looks like. Give the command:\nstrace\u00a0-o\u00a0./LS_LOG\u00a0/bin/ls\nThe -o option sends strace's output to a file; here, LS_LOG. The last argument to strace is the program we're inspecting, here, \"ls\". Look at the contents of LS_LOG. Pretty impressive, eh? Here is a typical line:\nopen(\".\",\u00a0O_RDONLY|O_NONBLOCK|0x18000)\u00a0\u00a0=\u00a04\nWe used the open() system call to open \".\" with various arguments, and the return value of the call is 4. What does this have to do with files not being found?\nSuppose I want to watch the StateOfMind demo because I can't ever seem to get enough of it. One day I try to run it and something bad happens:\n%\u00a0./mind.i86_linux.glibc2.1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Loading\u00a0&amp;\u00a0massaging...\u00a0\u00a0\u00a0\u00a0\u00a0Error:Can't\u00a0open\u00a0data\u00a0file\u00a0'mind.dat'.\nLet's use strace to find out where the program was looking for the data file.\nstrace\u00a0./mind.i86_linux.glibc2.1\u00a02&gt;\u00a0./StateOfMind_LOG\nPulling out vim and searching for all occurrences of mind.dat, I find the following lines:\nopen(\"/usr/share/mind.dat\",O_RDONLY)\u00a0=\u00a0-1\u00a0ENOENT\u00a0(No\u00a0such\u00a0file)\u00a0\u00a0\u00a0\u00a0\u00a0write(2,\u00a0\"Error:\",\u00a06Error:)\u00a0\u00a0\u00a0=\u00a06\u00a0\u00a0\u00a0\u00a0\u00a0write(2,\u00a0\"Can\\'t\u00a0open\u00a0data\u00a0file\u00a0\\'mind.dat\\'.\"...,\u00a0)\u00a0=\u00a033\nIt was looking for mind.dat in only one directory. Clearly, mind.dat isn't in /usr/share. Now we can try to locate mind.dat and move it into /usr/share, or better, create a symbolic link.\nThis method works for libraries too. Suppose the library libmp3.so.2 is in /usr/local/include but your new game \"Kill-Metallica\" can't find it. You can use strace to determine where Kill-Metallica was looking for the library and make a symlink from /usr/local/include/libmp3.so.2 to wherever Kill-Metallica was looking for the library file.\nstrace is a very powerful utility. When diagnosing why things aren't being found, it's your best ally, and is even faster than looking at source code. As a last note, you can't look up information in source code of commercial games from Lokisoft or Tribsoft. But you can still use strace with them!\n6.8. Hosed consoles\nSometimes a game will exit abnormally and your console will get `hosed'. There are a few definitions of a hosed console. The text characters could look like gibberish. Your normally nice black screen could look like a quasi-graphics screen. When you press ENTER, a newline doesn't get echo'ed to the screen. Sometimes, certain keys of the keyboard won't respond. Logging out and back in don't always work, but there are a few things that might:\nIf you don't see any character on the screen as you type in, your terminal settings may be wrong. Try \"stty echo\". This should let input characters echo again.\nAt the prompt, type \"reset\". This should clear up many problems, including consoles hosed by an SVGAlib or ncurses based game.\nTry running the game again and normally. Once I had to kill Quake III in a hurry, so I performed a Ctl-Alt-Backspace. The console was hosed with a quasi-graphics screen. Running Quake III and quitting normally fixed the problem.\nThe commands deallocvt and openvt will work for most of the other problems you'll have. deallocvt N kills terminal N entirely, so that Alt-FN doesn't even work anymore. openvt -c N starts it back up.\nIf certain keys on your keyboard don't work, be creative. If you want to reboot but the o'\u00a0key\u00a0doesn't\u00a0work,\u00a0try\u00a0using\u00a0halt.\u00a0One\u00a0method\u00a0I've\u00a0come\u00a0up\u00a0with\u00a0is\u00a0typing\u00a0a\u00a0command\u00a0at\u00a0the\u00a0prompt\u00a0and\u00a0using\u00a0characters\u00a0on\u00a0the\u00a0screen\u00a0with\u00a0mouse\u00a0cut/paste.\u00a0For\u00a0example,\u00a0you\u00a0can\u00a0type\u00a0\"ps\u00a0ax\",\u00a0and\u00a0you're\u00a0sure\u00a0to\u00a0have\u00a0an h', a', l' and a `t' somewhere on the screen. You can use the mouse to cut and paste the word \"halt\".\nThe most regrettable option is a reboot. If you can, an orderly shutdown is preferable; use \"halt\" or \"shutdown\". If you can't, ssh in from a another machine. That sometimes works when your console is very badly hosed. In the worst case scenario, hit the reset or power switch.\nNote that if you use a journalling filesystem like ext3, reiserfs or xfs, hitting the power switch isn't all that bad. You're still supposed to shutdown in an orderly manner, but the filesystem integrity will be maintained. You won't normally see an fsck for the partitions that use the journalling filesystem.\n6.9. Locked System\nWhen a computer \"locks\", also called \"hung\", the keyboard and mouse become completely unresponsive. This is a direct consequence of a bug in the Linux kernel. While Linux is known for stability, these things do happen, especiallly for gaming which entails highly synchronized hardware events which occur very fast, even to a computer. When a computer locks, it can be a \"hard lock\", meaning the kernel has completely stopped functioning. This often indicates misbehaving or faulty hardware. There's no recovery from this kind of lock other than pressing the reset or power button. The lock can also be a \"soft lock\", meaning that the kernel is still functioning in some capacity. It's possible to recover from this gracefully.\nThe first thing you should try is to hit control-alt-backspace which kills X. If you gain control of your system, the kernel wasn't really locked in the first place. If this didn't work after a few seconds, you'll definitely want to reboot the system using the following instructions.\nUse control-alt-delete to reboot the system. You'll know this worked if you hear the computer beep after a few seconds (this is BIOS saying \"I'm OK\" during a power on cycle).\nLog into another system and ssh into the hung system. If you can ssh in, reboot or halt the system.\nIf you can't ssh into the system, you'll need to use the \"magic SysRq key\" which is documented in /usr/src/linux/Documentation/sysrq.txt. Here's a summary for the x86 architecture (see the documentation for other architectures). Note if your keyboard doesn't have a SysRq key, use the PrintScreen key:\nHit alt-SysRq-s. This will attempt to sync your mounted filesystems so that changes to files get flushed to disk. You may hear disk activity. If you're looking at a console, the system should print the devices which were flushed.\nA few seconds later, hit alt-SysRq-u. This will attempt to remount all your mounted filesystems as read-only). You should hear disk activity. If you're looking at a console, the system will print the devices which were remounted.\nA few seconds later, use alt-SysRq-b to reboot the system.\nYou can hit alt-SysRq-h for a very terse help screen.\nTo use the magic SysRq key, your kernel needs to have been compiled with magic SysRq support. You'll find this option under \"Kernel\u00a0Hacking\u00a0|\u00a0Kernel\u00a0Debugging\u00a0|\u00a0Magic\u00a0SysRq\u00a0key\" in whatever kernel config menu you like to use. If the magic SysRq key sequence doesn't shut your system down gracefully, your kernel has crashed hard and you'll need to use the reset or power button to recover.\n7. Video Cards\n7.1. History\nOnce upon a time, a company in San Jose, California named 3dfx Interactive was king of the gaming video card market. In October 1996 they released the Voodoo I, which was a phenomenal success. It was the first hardware accelerated card, but only rendered 3D; it had to be piggybacked with a 2D video card. The idea was that 2D rendering was handled by a high quality 2D video card (Matrox was immensely popular at the time) but 3D information (see Glide2, Section 3.1 ) would be passed to the Voodoo I and rendered, using the Voodoo's fast hardware to perform the necessary graphics calculations. They released the Voodoo Rush in April 1996. It should've been a more powerful card, with a 50MHz GPU and 8MB of RAM. Even better, it was their first combined 2D/3D card, meaning that it freed up a valuable PCI slot (most PC's only had a couple of PCI slots back then) but the Rush wasn't as popular. 3dfx removed the multi-texturing unit from the Rush, and it was outperformed by the Voodoo I. At the time, ATI had their Rage series and nVidia had their Riva 128, but the Voodoo I blew them all away.\nThis was a good time for Linux. id Software's open sourced the Doom codebase and ported Quake I to Linux (December 1996). We were getting our first tastes of real commercial gaming. Life was simple: you purchased a Voodoo. And it felt good, because 3dfx open sourced their drivers. The king of video cards worked with Linux developers. Not only did we have the best video cards, but the drivers were all open source.\nIn March 1998, 3dfx released their Voodoo II, with its 3.6GB/sec memory bandwith, 12MB of video memory and 90MHz core. It supported resolutions up to 1024x768. This was 3dfx in its heyday. Like the Voodoo I, the Voodoo II was a 3D only card, and piggy backed with a 2D video card. The Voodoo Banshee was released in September 1998 as a combined 2D/3D card, like the Rush. Despite the faster 100MHz core, the Banshee was outperformed by the Voodoo II because its multi-texturing unit was removed, like with the Rush. And again like the Rush, it wasn't popular. But 3dfx reigned supreme, and nobody could touch them.\nIn April 1999, the Voodoo III was released. There were a number of Voodoo III's, ranging from a 143MHz core speed to 183MHz. There were TV-out versions. There were PCI and AGP versions (it was the first AGP video card). It was another success, but 3dfx began to lose ground to nVidia, which released their TNT 2. The TNT 2 outperformed the Voodoo II, and accelerated 3D graphics at full 32 bit color, while the Voodoo's were stuck at 16 bit color. But life was still good for Linux. We had a card that was almost neck-to-neck with nVidia, our drivers were open source, and in December 1999, id Software gave us a huge gift: they open sourced the Quake I codebase.\nThen nVidia released the GeForce 256 in October 1999. 3dfx's Voodoo IV, its direct competitor, was about a year late which is very bad when you're competing for a bleeding edge market. While nVidia was putting real R&D into their cards, 3dfx was simply adding more and faster RAM. The Voodoo IV and V rendered in full 32bpp color, had great AA support ( Section 7.4.3 ), featured a 2nd GPU, more memory, and was arguably the king of of video cards. However, 3dfx's late release of the Voodoo IV and V coupled with the fact that the GeForce could be had for half the price meant that 3dfx was sinking fast. For Linux, the newest Voodoo's could only accelerate at 16 and 24 bit color. Worse still, the Voodoo V's 2nd GPU was unused by the Linux driver (and to this day, the Voodoo V is functionally equivalent to the single GPU Voodoo IV on Linux). Most Windows users were switching to nVidia, and despite the fact that the nVidia drivers were proprietary, even Linux users began to jump onto the nVidia bandwagon. VA Linux, the largest Linux server vendor, put nVidia into their machines.\nThen in April 2000, 3dfx was attacked on a different front: ATI started releasing their first generation Radeons. Until this point, ATI had always been an innovative (they developed their own 3D acceleration chips in 1996, about the same time as 3dfx), but sleepy graphics chipset manufacturer. The Radeons were their first 3D accelerated card that gamers took any real serious interest in. Their Radeons trounced both nVidia and 3dfx. They worked with Linux developers, open sourced all their drivers and were hailed as the great hope for Linux gaming. nVidia came back with fists swinging, and this was all too much for 3dfx. Between losing the benchmark wars to the GeForce and Radeon, their lateness with new cards and high prices, 3dfx lost its market share and didn't have the funds to stay into business. On April 18 2001, they sold most of their assets and technology to nVidia, and in October 2002, they finally declared bankruptcy.\nThe demise of 3dfx was quite sudden and a slap in the face to the open source community. I still remember my friend Gabe Rosa emailing me with just \"Look\u00a0at\u00a0/.\" and seeing the news. It was the 2nd worst day for Linux gaming (the 1st being the demise of Loki). And it was also a shame. 3dfx was getting ready to release a new Voodoo V featuring 4 GPU's which would've trounced the ATI and nVidia offerings, as well as a new card code named \"Rampage\" which reportedly would've put them firmly back as the king of the hill. There are reports that the Rampage's technology (which was sold to nVidia) went into the GeForce 5900. Not too shabby for 3 year old technology!\nAt first, things were still simple. Linux gamers would either keep their open source Voodoos, get an open source Radeon or a closed source GeForce . However, with bigger and better games on the horizon, it was only a matter of time before the Voodoos would no longer be a viable graphics card for modern gaming. People were still using Voodoo's, but they were essentially out of the game at this point.\nATI started to release a tremendous number of versions of each video card, and keeping up with them and their terminology started to become very difficult. ATI, together with nVidia, played king of hill. Their products have been neck to neck ever since, with GeForce taking the lead a bit more times than the Radeon. But the Radeon's drivers were open source, so many Linux users stuck by them. Then things got even more complicated.\nATI started becoming more and more reluctant to open source drivers for their new releases, and suddenly, it wasn't clear who the \"good guy\" was anymore. nVidia's party line was they license some of their GL code from another company, and is thus non-releasable. Presumably, ATI doesn't want to release drivers to keep their trade secrets, well, a secret. And it gets worse. The ATI Linux drivers have been plagued by extremely poor performance. Even when an ATI offering is better than the current GeForce offering for Windows, the card is always trounced by GeForce on Linux. Because of the ATI Linux driver woes, Linux users cannot use MS Windows based benchmarks or card stats. They simply don't apply to us. And that's pretty much where we are right now.\nAs a last note, the only systematic Linux video card benchmarking effort I'm aware of was done, unfortunately, in March 2001, between a Radeon 32 DDR and a GeForce 2. You can read it for yourself at http://www.linuxhardware.org/features/01/03/19/0357219.shtml , but conclusion is that the GeForce 2 firmly and soundly trounced the Radeon 32 DDR.\n7.2. Current Status (1 March 2004)\nnVidia's latest offering is the GeForce 5900, based on the NV35 chipset. It's well supported by Linux with high quality but proprietary drivers. nVidia uses a convenient combined driver architecture; their driver will support the TNT 2 all the way up to the GeForce 5900. Although their drivers are closed source, as a company, nVidia has been supportive and good to Linux users.\nATI's has worked with Linux developers for their Radeons up to and including the Radeon 9200, which have 2D and 3D support in XFree86. I'm not entirely sure of the quality of these open source drivers, however, Soldier of Fortune I and Heavy Metal still have opaque texture problems under first generation Radeons. Beyond the 9200, you need to use ATI's binary only proprietary drivers, available in rpm format from ATI's website. It's claimed that these drivers are piss poor; a friend of mine claims his GeForce 4400 outperforms his Radeon 9700 pro. That's shameful.\nOn paper, and in the Windows benchmarks, the Radeon 9800 trounces the ill-conceived GeForce 5800 and slightly edges out the GeForce 5900. On paper, it's simply the more impressive card. But again, the driver issue makes this information unusable for us. If you have your heart set to buy the best card for Linux, you'll want to go with the GeForce 5900.\n7.2.1. SVGAlib Support\nAs of June 2002, SVGAlib support Radeon cards is shaky. Developers have reported that SVGAlib works on the Radeon 7500, Radeon QD (64MB DDR model) but has problems on the Radeon VE.\nI have no information about SVGAlib and the GeForce cards.\n7.3. Which Video Card Should I Buy? (1 March 2004)\nThe answer was very difficult last year, but here's my take on it these days:\nAll GeForce cards require a proprietary driver which will \"taint\" your kernel. However, all ATI cards beyond the Radeon 9200 also require a proprietary driver that will \"taint\" your kernel as well.\nnVidia has proven that they care enough about Linux to write and maintain current and very high quality drivers for Linux. Even when ATI open sourced its video card driver, they played the \"we'll make Linux developers write our drivers for us\" game. Their current proprietary drivers are below par.\nThe current Radeon 9800 barely beats out the GeForce 5900 in benchmarks and card specs, but Linux users won't benefit from this because of driver issues..\nATI has a very long history of dropping support for hardware as fast as they can get away with it.\nOn MS Windows, when the GeForce beat out its main competing Radeon, the review claimed that the Radeon generally had better visuals. I have no idea how this translates to Linux.\nDon't get the GeForce 5800. Card reviews claim that it has some serious heat, noise, and dust issues. It's informally called the \"dust buster\" because of noise its fan makes.\nIf you absolutely only want open source drivers on your system, the Radeon 9200 is the best card you can buy.\nIf you have a Linux/Windows dual boot, consider either the Radeon 9800 or the GeForce 5900. The Radeon will be slightly stronger on Windows. The GeForce will be stronger on Linux.\nIf you have a Linux only system, the GeForce 5900 is your best bet. As of today, the 256MB version comes in at a whopping $350, however, the 128MB version is more reasonable.\n7.4. Definitions: Video Card and 3D Terminology\nWe'll cover video card and 3D graphics terminology. This material isn't crucial to actually getting a game working, but may help in deciding what hardware and software options are best for you.\n7.4.1. Textures\nA rendered scene is basically made up of polygons and lines. A texture is a 2D image (usually a bitmap) covering the polygons of a 3D world. Think of it as a coat of paint for the polygons.\n7.4.2. T&amp;L: Transform and Lighting\nThe T&L is the process of translating all the 3D world information (position, distance, and light sources) into the 2D image that is actually displayed on screen.\n7.4.3. AA: Anti Aliasing\nAnti aliasing is the smoothing of jagged edges along a rendered curve or polygon. Pixels are rectangular objects, so drawing an angled line or curve with them results in a 'stair step' effect, also called the 'jaggies'. This is when pixels make, what should be a smooth curve or line, jagged. AA uses CPU intensive filtering to smooth out these jagged edges. This improves a game's visuals, but can also dramatically degrade performance.\nAA is used in a number of situations. For instance, when you magnify a picture, you'll notice lines that were once smooth become jagged (try it with The Gimp). Font rendering is another big application for AA.\nAA can be done either by the application itself (as with The Gimp or the XFree86 font system) or by hardware, if your video card supports it. Since AA is CPU intensive, it's more desirable to perform it in hardware, but if we're talking about semi-static applications, like The Gimp, this really isn't an issue. For dynamic situations, like games, doing AA in hardware can be crucial.\n7.4.4. FSAA: Full Screen Anti-Aliasing\nFSAA usually involves drawing a magnified version of the entire screen in a separate framebuffer, performing AA on the entire image and rescaling it back to the normal resolution. As you can imagine, this is extremely CPU intensive. You will never see non hardware accelerated FSAA.\n7.4.5. Mip Mapping\nMip mapping is a technique where several scaled copies of the same texture are stored in the video card memory to represent the texture at different distances. When the texture is far away a smaller version of the texture (mip map) is used. When the texture is near, a bigger one is used. Mip mapping can be used regardless of filtering method ( Section 7.4.6 ). Mip mapping reduces memory bandwidth requirements since the images are in hardware, but it also offers better quality in the rendered image.\n7.4.6. Texture Filtering\nTexture filtering is the fundamental feature required to present sweet 3D graphics. It's used for a number of purposes, like making adjacent textures blend smoothly and making textures viewed from an angle (think of looking at a billboard from an extreme angle) look realistic. There are several common texture filtering techniques including point-sampling, bilinear, trilinear and anisotropic filtering.\nWhen I talk about 'performance hits', keep in mind that the performance hit depends on what resolution you're running at. For instance, at a low resolution you may get only a very slight hit by using trilinear filtering instead of bilinear filtering. But at high resolutions, the performance hit may be enormous. Also, I'm not aware of any card that uses anisotropic texture filtering. TNT drivers claim they do, but I've read that these drivers still use trilinear filtering when actually rendering an image to the screen.\n7.4.6.1. Point Sampling Texture Filtering\nPoint sampling is rare these days, but if you run a game with 'software rendering' (which you'd need to do if you run a 3D accelerated game without a 3D accelerated board) you're likely to see it used.\n7.4.6.2. Bilinear Texture Filtering\nBilinear filtering is a computationally cheap but low quality texture filtering. It approximates the gaps between textures by sampling the color of the four closest (above, below, left and right) texels. All modern 3D accelerated video cards can do bilinear filtering in hardware with no performance hit.\n7.4.6.3. Trilinear Texture Filtering\nTrilinear filtering is a high quality bilinear filter which uses the four closest pixels in the second most suitable mip map to produce smoother transitions between mip map levels. Trilinear filtering samples eight pixels and interpolates them before rendering. Trilinear filtering always uses mip mapping. Trilinear filtering eliminates the banding effect that appears between adjacent mip map levels. Most modern 3D accelerated video cards can do trilinear filtering in hardware with no performance hit.\n7.4.6.4. Anisotropic Texture Filtering\nAnisotropic filtering is the best but most CPU intensive of the three common texture filtering methods. Trilinear filtering is capable of producing fine visuals, but it only samples from a square area which in some cases is not the ideal method. Anisotropic (meaning 'from any direction') samples from more than 8 pixels. The number of sampled pixels and which sampled pixels it uses depends on the viewing angle of the surface relative to your screen. It shines when viewing alphanumeric characters at an angle.\n7.4.7. Z Buffering\nA Z buffer is a portion of RAM which represents the distance between the viewer (you) and each pixel of an object. Many modern 3D accelerated cards have a Z buffer in their video RAM, which speeds things up considerably, but Z buffering can also be done by the application's rendering engine. However, this sort of thing clearly should be done in hardware wherever possible.\nEvery object has a stacking order, like a deck of cards. When objects are rendered into a 2D frame buffer, the rendering engine removes hidden surfaces by using the Z buffer. There are two approaches to this. Dumb engines draw far objects first and close objects last, obscuring objects below them in the Z buffer. Smart engines calculate what portions of objects will be obscured by objects above them and simply not render the portions that you won't see anyhow. For complicated textures this is a huge savings in processor work.\n8. Sound\n8.1. Which sound card is best?\nBy the word \"best\" I mean best for gaming. Gamers want high quality sound for our games with the least amount of tinkering. On the other hand, a musician would have a very different concept of what \"best sound card\" would mean. If you're a musician, you might want to check out the Linux Audio Quality HOWTO .\nNow that Linux is beginning to mature, this question isn't as important as it used to be. Once upon a time, soundcards without onboard MIDI chips (most PCI sound cards) didn't do MIDI. This was mostly a problem for things like xdoom or lxdoom using musserv. These days we have MIDI emulators like Timidity and libraries like SDL which don't require hardware MIDI support. Frankly, I've had many cards and I can't tell the difference between any of them for gaming. If you want to do things like convert a record LP to digital format, then your choice of a soundcard with a professional grade A/D converter is absolutely crucial. For this HOWTO, we'll assume that you're more of a gamer than a studio recording engineer.\nYour decision should be based on what will be the easiest to configure. If you already have a card and it works well, that's good enough. If you're in the market to buy a sound card, get something that will take you a second to configure. PCI cards are much easier to deal with than ISA since you don't need to tell their drivers about which system resources (IRQ, DMA, I/O addresses) to use. Some ISA cards ARE plug-n-play, like the Creative AWE-64, and the Linux kernel has come a long way in auto configuring them.\nMy personal recommendation is any card which has the es1370 or es1371 chip, which uses the es1370 and es1371 sound drivers on Linux. These cards include the older Ensoniq es1370 and newer Creative PCI-128. These cards are extremely cheap and trivial to get working under Linux.\nI used to be a fan of the Creative Soundblaster AWE 32, AWE 64 and AWE 64 gold soundcards. These ISA PnP cards are well supported by both OSS and Alsa. They all use the same E-mu 8000 synthesis chip which enables them to play 32 voices simultaneously (they have 32 \"channels\"). A few notes: First, the Soundblaster AWE HOWTO is very out of date. Second, the AWE 64 and AWE 64 gold can play 64 voices simultaneously, but this is done in software. Creative never released a Linux driver for these cards (and they never released programming information to Linux developers), so Linux users cannot use the extra 32 channels on the AWE 64 and AWE 64 gold. As far Linux users are concerned, all three cards are completely identical (although the AWE 64 gold has gold plated connectors, which are better for sound quality than the more common steel connectors).\nThe Creative Soundblaster Live! is an extremely popular PCI sound card these days. I've never owned one, so I cannot comment here. However, there have been numerous reports about serious problems with the Live! and AMD motherboards that use the 686b southbridge. A google search should turn up alot of information on this problem.\nA more relevent issue is speakers, but even here the difference isn't huge. I've had expensive Altec Lansing speakers perform only slightly better than el-cheapo speakers. You get what you pay for with speakers, but don't expect a huge difference. You'll want to get something with a separate sub-woofer; this does make a difference at a cost of extra power and connector wires.\n8.2. Why isn't my sound working?\nFirst of all, it's probably not the game, it's probably your setup. AFAIK, there are 3 options to getting a sound card configured under Linux: the free OSS sound drivers that come with the Linux kernel, the Alsa drivers and the commercial OSS sound drivers. Personally, I prefer the free OSS drivers, but many people swear by Alsa. The commercial OSS drivers are good when you're having trouble getting your sound card to work by free methods. Don't discount them; they're very cheap (like 10 or 20 bucks), support bleeding edge sound cards and take a lot of guesswork out of the configuring process.\nThere are 5 things that can go wrong with your sound system:\nShared interrupt\nSomething's already accessing the sound card\nYou're using the wrong driver\nA permissions problem\n8.2.1. Shared interrupt\nThe first thing to do is to figure out if you have an IRQ conflict. ISA cards can't share interrupts. PCI cards can share interrupts, but certain types of high bandwidth cards simply don't like to share, including network and sound cards. To find out whether you have a conflict, do a '''cat\u00a0/proc/interrupts'''. Output on my system is:\n$\u00a0cat\u00a0/proc/interrupts\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CPU0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CPU1\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00:\u00a0\u00a0\u00a024185341\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0timer\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01:\u00a0\u00a0\u00a0\u00a0\u00a0224714\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0keyboard\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0cascade\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05:\u00a0\u00a0\u00a0\u00a02478476\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0soundblaster\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a05:\u00a0\u00a0\u00a0\u00a0\u00a0325924\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0eth0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a011:\u00a0\u00a0\u00a0\u00a0\u00a0131326\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0aic7xxx\u00a0\u00a0\u00a0\u00a0\u00a0\u00a012:\u00a0\u00a0\u00a0\u00a02457456\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0PS/2\u00a0Mouse\u00a0\u00a0\u00a0\u00a0\u00a0\u00a014:\u00a0\u00a0\u00a0\u00a0\u00a0556955\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0XT-PIC\u00a0\u00a0ide0\u00a0\u00a0\u00a0\u00a0\u00a0NMI:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00\u00a0\u00a0\u00a0\u00a0\u00a0LOC:\u00a0\u00a0\u00a024186046\u00a0\u00a0\u00a024186026\u00a0\u00a0\u00a0\u00a0\u00a0ERR:\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01353\nThe second column is there because I have 2 CPU's in this machine; if you have one CPU (called UP, or uniprocessor), you'll have only 1 CPU column. The numbers on the left are the assigned IRQ's and the strings to the right indicate what device was assigned that IRQ. You can see I have an IRQ conflict between the soundcard (soundblaster) and the network card (eth0). They both share IRQ 5. Actually, I cooked this example up because I wanted to show you what an IRQ conflict looks like. But if I did have this conflict, neither my network nor my sound would work well (or at all!).\nIf my sound card is PCI, the preferred way of fixing this would be to simply move one of the cards to a different slot and hope the BIOS sorts things out. A more advanced way of fixing this would be to go into BIOS and assign IRQ's to specific slots. Modern BIOS'es can do this.\n8.2.2. Misconfigured driver\nSometimes, a card is hardwired to use a certain IRQ. You'll see this on ISA cards only. Alternatively, some ISA cards can be set to use a specific IRQ using jumpers on the card itself. With these types of cards, you need to pass the correct IRQ and memory access, \"I/O port\", to the driver.\nThis is a sound card specific issue, and beyond the scope of this HOWTO.\n8.2.3. Something is already accessing your sound card\nPerhaps an application is already accessing your soundcard. For example, maybe you have an MP3 player that's paused? If something is already accessing your card, other applications won't be able to. Even though it was written to share the card between applications, I've found that esd (the enlightenment sound daemon) sometimes doesn't work correctly. The best tool to use here is lsof, which shows which processes are accessing a file. Your sound card is represented by /dev/dsp. Right now, I'm listening to an MP3 (not a Metallica MP3, of course...) with mp3blaster.\n#\u00a0lsof\u00a0/dev/dsp\u00a0\u00a0\u00a0\u00a0\u00a0COMMAND\u00a0\u00a0\u00a0\u00a0PID\u00a0USER\u00a0\u00a0\u00a0FD\u00a0\u00a0\u00a0TYPE\u00a0DEVICE\u00a0SIZE\u00a0\u00a0\u00a0NODE\u00a0NAME\u00a0\u00a0\u00a0\u00a0\u00a0mp3blaste\u00a01108\u00a0\u00a0\u00a0\u00a0p\u00a0\u00a0\u00a0\u00a06w\u00a0\u00a0\u00a0CHR\u00a0\u00a0\u00a014,3\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0662302\u00a0/dev/dsp\nfuser is similar; but it lets you send a signal to any process accessing the device file.\n#\u00a0fuser\u00a0-vk\u00a0/dev/dsp\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0USER\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0PID\u00a0ACCESS\u00a0COMMAND\u00a0\u00a0\u00a0\u00a0\u00a0/dev/dsp\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0root\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01225\u00a0f....\u00a0\u00a0mp3blaster\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0root\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a01282\u00a0f....\u00a0\u00a0mp3blaster\nAfter issuing this command, mp3blaster was killed with SIGKILL. See the man pages for lsof and fuser; they're very useful. Oh, you'll want to run them as root since you'll be asking for information from processes that may be owned by root.\n8.2.4. You're using the wrong driver (or no driver)\nThere are only two ways to configure your card:\nSupport must be compiled directly into the kernel\nYou must have the correct driver loaded into memory\nYou can find out which driver your sound card is using by doing \"lsmod\" or looking at the output of \"dmesg\". Since sound is crucial for me, I always compile sound into my kernels. If you don't have a driver loaded, you need to figure out what's been compiled into your kernel. That's not so straight forward. Your best bet is to compile your kernel. BTW, let me say that compiling your own kernel is the first step towards proficiency with Linux. It's painful the first time you do it, but once you do it correctly, it becomes very easy down the right, especially if you keep all your old .config files and make use of things like \"make oldconfig\". See the Kernel HOWTO for details.\nIf you haven't compiled the kernel yourself, there is an overwhelmingly good chance that your system is set up to load sound drivers as modules. That's the way distros do things. Have everything under the sun compiled as a module and try to load them all. So if you don't see your sound card's driver with lsmod, your card probably isn't configured yet.\n8.2.5. Permissions Problem\nIf the sound card works when you're root but not any other user, you probably have a permissions problem. If this is the case, as root, look at the group owner of the sound card using '''ls\u00a0-l\u00a0/dev/dsp'''; it'll probably be audio. Then, as root, add your non-root user to the audio group in /etc/group. For example, I added the users p and wellspring to group audio on my system:\naudio:x:29:p,wellspring\nDon't forget to use grpconv if you use shadow passwords (which should be the case on most recent distributions) in order to maintain a consistent group configuration. Then log out and log back in as the non-root user. Your sound card should work. Thanks to James Barton for reminding me to add this to the howto.\n9. Miscellaneous Problems\n9.1. Hardware Acceleration Problems\nXFree86 4.x provides a more centralized and self-contained approach to video. Much of the funkyness like kernel modules for non-root access of video boards is, thankfully, gone.\n9.1.1. Hardware acceleration isn't working at all\nIf you're getting like 1 fps, then your system isn't using hardware 3D acceleration. There's one of two things that can be going on.\nYour 3D system is misconfigured (more likely)\nGame X is misconfigured (less likely)\nThe first step is to figure out which one is happening.\nIf you have X 4.0 (X 3.* users procede to step 2), look at the output of '''X\u00a0-probeonly'''. You'll see:||<tablestyle=\"width:90%; background-color:#E0E0E0\"> (II)\u00a0XXXXXX:\u00a0direct\u00a0rendering\u00a0enabled || or||<tablestyle=\"width:90%; background-color:#E0E0E0\"> (II)\u00a0XXXXXX:\u00a0direct\u00a0rendering\u00a0disabled || where XXXXXXX depends on which video card you have. If direct rendering is disabled, then your X configuration is definitely faulty. Your game is not at fault. You need to figure out why DRI is disabled. The most important tool for you to use at this point is the `DRI Users Guide'. It is an excellently written document that gives you step by step information on how to get DRI set up correctly on your machine. A copy is kept at http://www.xfree86.org/4.0/DRI.html.Note that if you pass this test, your system is CAPABLE of direct rendering. Your libraries can still be wrong. So procede to step 2.\nThere is a program called glxgears which comes with the \"mesademos\" package. You can get mesademos with Debian ( apt-get install mesademos) or you can hunt for the rpm on http://www.rpmfind.net . You can also download and compile the source yourself from the mesa homepage.Running glxgears will show some gears turning. The xterm from which you run glxgears will display \"X frames in Y seconds = X/Y FPS\". You can compare your system to the list of benchmarks below.||<tablestyle=\"width:90%; background-color:#E0E0E0\"> CPU\u00a0TYPE\u00a0\u00a0\u00a0\u00a0\u00a0VIDEO\u00a0CARD\u00a0\u00a0\u00a0\u00a0\u00a0X\u00a0VERSION\u00a0\u00a0\u00a0\u00a0AVERAGE\u00a0FPS || Compiling Mesa and DRI modules yourself can increase your FPS by 15 FPS; quite a performance boost! So if your number is, say, about 20 FPS slower than a comparable machine, chances are that glxgears is falling back on software rendering. In other words, your graphics card isn't 3D accelerating graphics.More important than FPS is having a constant FPS for small and large windows. If hardware acceleration is working, the FPS for glxgears should be nearly independent of window size. If it's not, then you're not getting hardware acceleration.\n9.2. Hardware acceleration works only for the root user\n9.2.1. XFree86 4.x\nIf the following lines aren't present in your XF86Config-4 file, put them in:\nSection\u00a0\"DRI\"\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Mode\u00a00666\u00a0\u00a0\u00a0\u00a0\u00a0EndSection\nThis allows all non-root users to use DRI. For the paranoid, it's possible to restrict DRI to only a few non-root users. See the DRI User Guide.\n9.2.2. XFree86 3.x\n9.2.2.1. Voodoo cards\nVoodoo card hardware acceleration only takes place ONLY at 16bpp color and fails silently when starting X in another color depth.\nAlso, Voodoo cards need the 3dfx.o kernel module and a /dev/3dfx device file (major 107, minor 0) for non-root hardware acceleration. Neither the module nor the device file are used under XFree86 4.x.\n10. Emulation and Virtual Machines\nLinux gets ragged on a lot because we don't have the wealth of games that other platforms have. Frankly, there's enough games for me, although it would be really nice to have some of the bleeding edge games and classics like Half-life and Carmageddon. Fortunately, we have more emulators than you can shake a stick at. Although playing an emulated game is sometimes not quite as fun as playing it on the native machine, and getting some of the emulators to work well can be a difficult task, they're here, and there's alot of them!\n10.1. What is a virtual machine?\nA \"real computer\" provides an operating system many things, including a CPU, I/O channels, memory, a BIOS to provide low level access to motherboard and I/O resources, etc. When an operating system wants to write to a hard drive, it communicates through a device driver that interfaces directly with the hardware device memory.\nHowever, it's possible to give a program all the hardware resources it needs. When it wants to access a hard drive, give it some memory to write to. When it wants to set an IRQ, give it some bogus instructions that lets it think it set an IRQ. If you do this correctly, then in principle, there's no way for the poor application to know whether it's really accessing hardware or tricked by being given resources which simulate hardware. A virtual machine is the environment which tricks applications into believing they're running on a real computer. It provides all the services that a real computer would provide.\nVM's were used initially in the 1960's to emulate time shared operating systems, but these days we use them to run software which was written for foreign operating systems, or more commonly, an entire operating system. Because of the nature of the VM, the foreign OS can't tell the difference between operating in a VM or in a \"real\" machine.\n10.2. Apple 8-bit\nAll the 8-bit Apple ][ emulators require a copy of the original ROM, for whichever system you want to emulate, in a file. If you search hard enough, you can find file copies of the ROMs for the Apple ][, ][+, ][e, ][c and //gs. They are still copyrighted by Apple, and you can only use them legally if you actually own one of these computers.\n10.2.1. KEGS\nKEGS is an Apple II emulator written by Kent Dickey &lt;[[mailto:kentd(at)cup(dot)hp(dot)com|kentd(at)cup(dot)hp(dot)com]]&gt; which was originally written for HP-UX, but improved and customized for Linux. It runs under X at any color depth, and supports changeable memory sizes, joysticks, and sound. KEGS boots all Apple II variants, and supports all of the Apple ]['s graphics modes. I can't find a working homepage for this application.\n10.2.2. apple2 and xapple2\nThe SVGAlib based apple2 and X based xapple2 can emulate any Apple ][ variant except for the //gs. The interface is a bit funky, but usable. Configuration is also a bit funky; this emulator would benefit from an SVGA or X based configuration tool. It supports the undocumented portion of the 6502 instruction set which some games rely on. apple2 is currently being maintained by Michael Deutschmann &lt;[[mailto:michael(at)talamasca(dot)ocis(dot)net|michael(at)talamasca(dot)ocis(dot)net]]&gt; and seems to be developed at a slow but constant pace. I don't think this application has a homepage.\n10.3. DOS\n10.3.1. dosemu\ndosemu < http://www.dosemu.org&gt; is the canonical DOS emulator on Linux. When you think of DOS, don't think of things like PROCOM PLUS OR OTHER PROGRA~1 WHICH HAVE SHORT NAMES AND ARE IN ALL CAPS. There are some real classics that were written for DOS like Carmageddon, Redneck Rampage and Tomb Raider. dosemu can run these. Unfortunately, it can take alot of effort to get dosemu to work, and of Jan 2002, the sound code is somewhat broken. Not a big deal when you're trying to run Wordperfect or an old database application. It's an absolute show stopper for gaming. Getting dosemu to work well is not easy, but unfortunately, for DOS games it's the best avenue. Good luck. If you have success using dosemu, I would like to hear from you.\n10.4. Win16\n10.4.1. Wabi\nWabi is a commercial Win16 emulator. That is, it'll run Windows 16-bit applications from a Windows 3.1, Windows 3.11 or Windows for Workgroups 3.11 environment. Wabi was originally created by SCO Unix a long time ago and then was purchased by Caldera sometime in mid year 2001.\nWabi is fast and does a good job for what it does, although I've heard it said that wabi for Solaris is more stable than Linux. It might be useful for playing older Win16 games, but there are three problems:\nYou must have a licensed copy of Windows 3.1/3.11 or WfW 3.11.\nWabi is awfully expensive for what it does.\nWabi doesn't work under 32bpp or 24bpp color.\nWabi does NOT do DOS itself, but it looks like it can use a DOS emulator as a backend for running DOS programs. There was talk about Wabi 3.0 which would've done Win32 emulation, but AFAIK, this project was shelved indefinitely. I think Wabi will run under Linux on all architectures (can someone verify this?)\n10.5. Win32\n10.5.1. wine\nWine < http://www.winehq.com&gt; , which bears the GNUish acronym \"Wine Is Not An Emulator\" is a non-commercial implementation of the Win32 API. The reason why it's not an emulator is subtle and not of much interest to most non computer scientists, so we'll call it an emulator here (it really does run-time translation of calls to the Win32 API to POSIX/X11 calls). Wine has come a long way, and is capable of emulating many important programs, which is great news for Linux users who want this sort of stuff.\nWine does not provide the DOS API, so you can't use it to run DOS applications. For that, you should look at dosemu ( Section 10.3.1 ). Wine has never been too good at implementing DirectX, although a number of games are known to work under wine. For gaming you might want to look at winex ( Section 10.5.3 ).\nIn addition to run-time translation of the Win32 API to POSIX/X11 (it runs Windows applications on Linux), wine also does compile-time tranlation of the Win32 API to POSIX/X11 (it compiles Windows application source code on Linux). In this sense, wine is a Windows-to-Linux porting utility. The x86 architecture isn't required, but is recommended since it allows actual x86 binary execution as well as direct DLL usage).\nYou can use wine with\u00a0Windows',\u00a0which\u00a0means\u00a0that\u00a0wine\u00a0uses\u00a0libraries\u00a0that\u00a0actually\u00a0come\u00a0with\u00a0Microsoft\u00a0Windows\u00a0itself.\u00a0This\u00a0is\u00a0legal\u00a0only\u00a0if\u00a0you\u00a0own\u00a0a\u00a0copy\u00a0of\u00a0Windows\u00a0which\u00a0isn't\u00a0currently\u00a0being\u00a0used\u00a0on\u00a0a\u00a0computer.\u00a0It's\u00a0said\u00a0that\u00a0wine\u00a0has\u00a0the\u00a0best\u00a0success\u00a0when\u00a0run\u00a0with\u00a0Windows.\u00a0You\u00a0can\u00a0also\u00a0run\u00a0wine\u00a0without\u00a0Windows.\u00a0The\u00a0people\u00a0at\u00a0[[http://www.winehq.com|winehq]]\u00a0are\u00a0writing\u00a0their\u00a0own\u00a0set\u00a0of\u00a0libraries\u00a0called libwine` which implements the Win32 API with no Microsoft code at all.\nWine was originally licenced under the MIT/X11 license, so it could be used for both commercial and non-commercial purposes. In mid 2002, parts of wine were re-licensed under the LGPL so that it could only be used for non-commercial puposes. This presents a problem for companies like Transgaming ( Section 10.5.3 ) and prompted a fork of wine called ReWind ( Section 10.5.2 ).\n10.5.2. rewind\nRewind < http://rewind.sourceforge.net/&gt; was started by Eric Pouech (a wine developer) and Ove K\u00e5ven (a winex developer) in response to wine's license change ). It started out life as a snapshot of the last version of wine which was completely licensed under the MIT/X11 license. The aim is to keep rewind MIT/X11 based so that companies like Transgaming can offer wine based products.\n10.5.3. winex\nWinex is released by a company called Transgaming < http://www.transgaming.com&gt; . The developers take wine (see Section 10.5.1 ) and add DirectX / DirectDraw support. Although winex is commercial, they have an interesting business model.\nThe end user (you) can download the source code for free. However, for 5 US dollars per month, you can become a subscriber of Transgaming. Being a subscriber of Transgaming gives three major benefits:\nSubscribers can download convenient packaged versions of winex in deb, rpm or tar.gz format whenever they want, including updates. They have also more functionality than the publicly available tarball: the latter is an older version which lacks some of the newest features, like support for copy protected programs.\nThere are monthly polls where subscribed users can take votes on what they want winex developers to work on. For instance, they can vote for things like \"Improve support for copy protected programs\", \"Better Installshield support\" or \"Improve DirectX 8.0 support\". As far as I can see, the developers really do listen to the subscriber polls.\nThe Transgaming website has a few user support forums. On one hand, they use the most godawful, horrible, confusing, wasteful, moronic format I've ever seen and I hope to god I never see a forum with a format as bad as Transgaming's. On the other hand, you can ask for help and the developers are VERY good about getting around to your answer; their vigilance is quite impressive. Non-subscribers can browse the forums, but only subscribers can post (and therefore, ask for support).\nThe developers of winex were going to release their Installshield, DirectX and DirectDraw enhancements to wine \"every so often\". In return, as wine maturation improved, the winex developers were going to take the new versions of wine and use them for winex. However, since the birth of Transgaming, parts of wine have been re-licensed under the more restrictive GNU LGPL license ( Section 10.5.1 ). This basically means that versions of wine that are released past the date of the re-licensing can no longer be used by winex. Therefore, winex will now be based on rewind ( Section 10.5.2 ).\n10.5.4. Win4Lin\nWin4Lin < http://www.netraverse.com&gt; is a commercial product by Netraverse. Like vmware ( Section 10.5.5 ) it uses the virtual machine approach to running Windows applications, so you'll get a big window from which you can boot Windows and run all kinds of Windows applications. Unlike vmware, Win4Lin only does Windows 95/98/ME, but this turns out to be better for gamers. Because Win4Lin concentrates on these operating systems, reports say that it's faster and does a better job at running games under these operating system than vmware. It's also much cheaper than vmware. The most recent version of Win4Lin as of June 2003 is 5.0. It suffers nevertheless from some limitations:\nIt does not support DirectX or DirectDraw , while vmware has \"limited\" support for DirectX.\nIt only supports serial and parallel devices. This is important for people who use USB joysticks. Note that vmware supports up to 2 USB devices.\nAs of June 2003, expect to pay $89.99 without printed docs and $99.99 with printed docs. In addition, there isn't an evaluation copy available, although you get a 30 day money back guarantee. However, since it's commercial you do get tech support. vmware is considerably more expensive.\nLike vmware, you're required to have a licensed copy of Win95 or Win98. Win4Lin cannot use an existing Windows installation the way wine can.\nIt only runs on x86 architectures.\n10.5.5. VMWare\nVMWare is a virtual machine that runs multiple operating systems simultaneously on a standard PC: supported OSes include Microsoft ones, Linux, Novell Netware and FreeBSD. You can among others use it to run a MS Windows OS and launch your favourite game there. You can even run another Linux under Linux; useful is you want to test another distro for instance. Amazing! Now for the bad sides. You should definitely have a good configuration in order to run it; they claim the minimum is a 500MHz x86 CPU with 128MB RAM, but a faster processor and at least 256MB RAM seem to be the bare minimum if you want reasonable performance. Not all Linux distributions are supported: newest RedHat 's, Mandrake's and Suse's are, but you're out of luck if you have an other version and/or distribution (like Debian). Moreover, vmware has only limited support for DirectX, and you might not be able to play recent games.\nSee http://www.vmware.com for more information. It's not very cheap (about 300$ for the Workstation version), but you can get a 30 day evaluation copy.\n10.5.6. What should I choose?\nFirst of all, you should try an emulator. Although some games may work with wine , you'll probably get the most success with winex : its DirectX support is constantly improving. As of version 3.1, the DirectX 8 support is nearly complete, but this may not be the case with older DirectX versions (are consequently older games).\nYou might also try a virtual machine like Win4Lin or VMWare instead of an emulator. If your goal is to run Win95/98/ME applications on Linux, without USB and on the x86 architecture, Win4Lin 's cost and focus on Win95 type OS's make it a better choice than vmware. However, if you must have USB support or run Linux on a platform other than x86, vmware is your only option.\nNow if your goal is to run Win95 type OS games under Linux, Win4Lin almost seems better than vmware. The show-stopper is the fact that vmware has limited DirectX support while Win4Lin has none. This fact alone makes both Win4Lin and vmware unsuitable for most hardcore gaming purposes. But if you're going to give it a try, you're more likely to have success with vmware.\n11. Interpreters\n11.1. SCUMM Engine (LucasArts)\nLucasarts wrote an engine for point and click adventures named SCUMM (Script Creation Utility for Maniac Mansion). They wrote many graphical adventures using SCUMM, like their famous Monkey Island series (all three). Ludvig Strigeus &lt;[[mailto:strigeus(at)users(dot)sourceforge(dot)net|strigeus(at)users(dot)sourceforge(dot)net]]&gt; was able to reverse engineer the SCUMM format and write an interpreter for SCUMM based games that compiles under Linux and Win32 named scummvm < http://scummvm.sourceforge.net/&gt; . Their website is very good, and chock full of any kind of information about SCUMM and playing these games under scummvm.\nA compatibility page is maintained at the scummvm website. FWIW, I've been able to finish many of the games that are listed as 90% done with no problems. scummvm is rock solid, and allows you to purchase SCUMM based Lucas Arts games, copy the data files to your hard drive and play them under Linux. As of February 2002, I've been following their cvs, and this project is undergoing constant development. Kudos to the scummvm team.\n11.2. AGI: Adventure Gaming Interface (Sierra)\nThe older Sierra DOS graphical adventure games used a scripting language named AGI (Adventure Gaming Interface). Some examples of games written in AGI would be Leisure Suit Larry I (EGA), Space Quest I and II, King's Quest II, Mixed-Up Mother Goose and others. These games can be played using sarienon> < http://sarien.sourceforge.net&gt; , an open source interpreter for AGI games.\nSarien was written in SDL, so it should run on any platform that can compile SDL programs. In addition, there are versions for DOS, Strong-Arm based pda's, QNS (holy cow! embedded gaming!), MIPS based systems and SH3/4 based Pocket PC's. The developers are clearly out of their minds (in a good way!). Sarien also has numerous enhancements not found in the original games, like a Quake style pull-down console, picture and dictionary viewer, enhanced sound and support for AGDS, a Russian AGI clone. Sarien is under development and the developers have been very good about documenting the Sarien internals if anyone wants to get involved in hacking it.\n11.3. SCI: SCript Interpreter or Sierra Creative Interpreter (Sierra)\nThe newer Sierra graphical adventure games (we're talking about the late 80's here) used an interpreter named SCI. There were many versions of SCI since Sierra was constantly improving its engine. The original SCI games were DOS based, but Sierra eventually started releasing Win32 SCI based games. Some examples of games written with SCI are Leisure Suit Larry 1 (VGA), Leisure Suit Larry 2-7, Space Quest 3-6, King's Quest 4-6, Quest For Glory 1-4 and many others. Compared with AGI games, SCI adventures have better music support, a more complex engine and loads of bells and whistles.\nMany SCI based games (games written in SCI0) can be played using freesci, available at http://freesci.linuxgames.com . Like Sarien, FreeSCI has many graphics targets including SDL, xlib and GGI, so this program can compile and run under an incredible number of platforms. The developers have done a fantastic job of documenting and FAQing their application.\n11.4. Infocom Adventures (Infocom, Activision)\nThe Z-machine is a well documented < http://www.gnelson.demon.co.uk/zspec/index.html&gt; virtual machine designed by Infocom to run their interactive fiction games. This allowed them to write game data files in a cross platform manner, since only the engine itself, the Z-machine, would be platform dependent. Z-machine went through a number of revisions during the lifetime of Infocom, and two further revisions (V7 and V8 created by Graham Nelson) after the Infocom's demise. The later versions even supported limited sound and graphics!\nOne of the most popular Z-machine interpreters is Frotz < http://www.cs.csubak.edu/~dgriffi/proj/frotz/&gt; . This excellently done page has many nice links for interactive fiction fans. Frotz is GPL, runs all versions of Z-machine and will compile on most versions of Unix. Frotz has spawned many forks, like a version for PalmOS and Linux based PDA's.\njzip < http://jzip.sourceforge.net/&gt; is another very popular Z-machine interpreter that will run V1-V5 and V8 Z-machine data files. jzip is very portable; it compiles on all Unices, OS/2, Atari ST and DOS.\nThere are actually many other Z-machine interpreters like nitfol and rezrov (written in Perl!). Each interpreter has its own set of strengths, and you can find links to them on the home pages for Frotz and jzip.\n11.5. Scott Adams Adventures (Adventure International)\nScott Adams is, arguably, the father of interactive fiction. Although he himself was inspired by the first piece of interactive fiction, Adventure, Scott brought adventuring to the masses. His games were available for Atari, Apple 2, Commodore, Sorcerer, TI, and CPM. His company, Adventure International, released a number of much loved games between 1978 and 1984 before folding. He recently released a new game (a Linux version is not available) but since the decline of adventuring, he has pretty much kept out of the gaming industry.\nAlan Cox wrote scottfree, a Scott Adams adventure game file interpreter for Unix. Using scottfree and any of the Scott Adams data files which can be downloaded from Scott's website < http://www.msadams.com/&gt; you can enjoy these classics.\n11.6. Ultima Underworld: The Stygian Abyss (Origin, Blue Sky Productions)\nThe Underworld Adventures project < http://uwadv.sourceforge.net/&gt; is an effort to port the 1992 classic, Ultima Underworld: The Stygian Abyss, to modern operating systems like Linux, MacOS X, and Windows. It uses OpenGL for 3D graphics, SDL for platform specific tasks and is released under the GNU GPL. Underworld Adventures provides an impressive graphics system which uses the original game files, so you'll need the original game disk to play.\nUnderworld Adventures also provides a bunch of tools for you to display the level maps, tools for examining uw1 conversation scripts and more.\n11.7. Ultima 7 (Origin, Electronic Arts)\nUltima 7 is actually 2 games: part I (The Black Gate) and part II (Serpent Island) which uses a slightly enhanced version of The Black Gate's engine. In addition, an addon disk was released to both part I (The Forge Of Virtue) and part II (The Silver Seed).\nA team of people developed Exult < http://exult.sourceforge.net/&gt; which is an open source interpreter that will run both parts of Ultima 7 and their addon disks. Exult is written in C++ using SDL, so it will compile on any platform that can compile SDL programs. It also features some enhancements over the original versions of the Ultima VII engine. You'll need to purchase a copy of Ultima 7 to play. The developers have no plans on extending Exult to interpret the other Ultimas since the engines changed so radically between releases.\nThe Exult team has also been hard at work creating a map editor, Exult Studio, and a script compiler that will let users create their own RPG in the Ultima style.\n11.8. System Shock (Electronic Arts, Origin)\nSystem Shock is a classic first person shooter/adventure from 1994, which puts it as a contemporary of Doom. However, its engine is much more feature rich than the original Doom: for example, System Shock had 3D sprites, free look and a facility to have objects on top of each other, giving the illusion of a full 3D map, like Quake. Game reviewers agree that this game has the features of Quake with a story-line more compelling than Half-life. The System Shock engine was optimized for sophistication, while Doom's engine was optimized for throwing lots of monsters at you; a completely different appoach. Quite impressive for such an old game!\nThe System Shock Hack Project < http://madeira.physiol.ucl.ac.uk/tsshp/sshock.html&gt; is an attempt to update the game for modern operating systems. The project uses SDL and is released under the modified BSD license. While you need the original game files to play SSHP, it should work with the System Shock demo, which is freely available.\n12. Websites And Resources\n12.1. Meta gaming websites\nThese are some resources for Linux gamers no matter what kind of game you enjoy to play.\nThe Linux Game Tome: http://www.happypenguin.org :: About the games themselves. Linuxgames :: Linux gaming newshttp://www.holarse.net:: Linux meta gaming site for German speaking folk. Mobygames :: A database of all known computer games. It's very complete and is one of my favorite sites.\n12.2. Commercial Linux Game Resources\n12.2.1. Where to buy commercial games\nebgames < http://www.ebgames.com&gt; no longer officially sells Linux software. They stopped selling Linux games and distributions at around the same time Loki Software declared bankruptcy, which is a shame because they had the lowest prices on Linux games I've ever seen. However, occasionally, they'll have things like Code Warrior or Redhat Linux on sale.\nTux Games: http://www.tuxgames.com :: Your one stop shop for buying any commercial Linux game (software vendors like Tribsoft and Loki have online shops at their websites too).\n12.2.2. Who Used To Release Games For Linux\nThese are companies that used to release games for Linux but for whatever reasons aren't actively involved in Linux games anymore.\nLoki Software: http://www.lokigames.com :: As the company that brought CTP and Quake3 to Linux, Loki was the father of Linux gaming. They were one of the first and had, by far, the most titles (I own ALL of them). Loki ported games to Linux, mostly using the SDL library. Loki's death in January 2002 was the biggest setback Linux has ever had in its attempt to capture the general desktop market. Linuxgames.com has a nice Loki timeline at http://www.linuxgames.com/articles/lokitimelineTribsoft : http://www.tribsoft.com :: Tribsoft released Jagged Alliance 2, an excellent rpg/strat which claimed 2+ weeks of my life. There were slated to release Europai Universalis, Majesty and Unfinished Business. However, as of 3Jan01, Mathieu Pinard of Tribsoft said that he was taking a break and Tribsoft would no longer release games for awhile. He'll still support JA2 but don't expect patches or updates.MP Entertainment: http://www.hopkinsfbi.com :: MP Entertainment released Hopkins FBI, my favorite game ever released for Linux. More violent than Quake. More nudity than Hustler. More camp than Liberace . It's a comic book on your monitor. They were slated to release Hopkins FBI II and a few other titles, but it's been a few years since the announcements with no sign that the games are coming. They've ignored all my attempts at finding out more information, so I have to conclude that MP Entertainment is in the same status as Tribsoft. You can still purchase or download a demo of Hopkins FBI from their website. If anyone has more information on this company or the author of Hopkins FBI, please contact me.Phantom EFX: http://www.phantomefx.com :: They offer Reel Deal Slots, which is very nicely done! I'm not much for card/gambling games, but this game is impressive! Because their Linux guy quit the company, Reel Deal Slots is their first, and so far, last release for Linux.\n12.3. Other Resources\nThis section has URL's that should be mentioned but didn't have a separate section within the howto, so I list them here as a kind of appendix.\nLinux Game Publishing: http://www.linuxgamepublishing.com :: Linux Publishing doesn't sell directly to the public, but provides professional game publishing to authors of publishing. I think this means disk copying, packaging and selling to retailers.XFree86 Homesite: http://www.xfree86.org :: XFree86 home pageLinux Game Development Center: http://lgdc.sunsite.dk/index.html :: This is the canonical website for people who want to program games under Linux. It's a clearing house of information that contains well written articles on all aspects of game programming (not necessarily Linux specific), links to important game programming resources, interviews, reviews, polls and lots of other stuff. It's hard to imagine a better website on the subject.Linux Gamers' FAQ: http://www.icculus.org/lgfaq/ :: Despite the astounding fact that the Linux Gamers' FAQ doesn't mention the Linux Gamers' HOWTO as a resource anywhere in their text, I regard the FAQ as a good companion to this HOWTO. I've tried to keep game specific information in this HOWTO at a minimum. The FAQ takes the opposite approach; they mainly focus on the games themselves, including game specific problems and where to get Linux games in the first place. The FAQ and HOWTO are complementary in this regard, and I've tried to not reproduce their content. Despite the authors being a bit surly, their effort with the FAQ is very good. If you want a general source of information on game specific questions, the FAQ is a fantastic place to start with. In addition, the FAQ keeps a fairly large database of Linux Games.Linux Audio Quality HOWTO: http://www.linuxdj.com/audio/quality/ :: This HOWTO is mainly of interest to musicians who want professional or semi professional sound cards for the recording and making of music on a computer. The information is very detailed, and perhaps overkill for gamers.\nLinux-Gamers-HOWTO (last edited 2009-04-23 08:39:40 by jdd )\nImmutable Page\n"}, {"score": 221.03491, "uuid": "a5d0d581-98e6-5bc4-a025-e391ae401c36", "index": "cw12", "trec_id": "clueweb12-0800wb-30-18549", "target_hostname": "aruiz.synaptia.net", "target_uri": "http://aruiz.synaptia.net/siliconisland/page/13/", "page_rank": 1.1760092e-09, "spam_rank": 69, "title": "Silicon Island", "snippet": "Alexander Larsson <em>is</em> working on GVFS, a new API for accessing files and perform IO operations, that whips gnome-vfs&#x27; ass <em>in</em> <em>terms</em> <em>of</em> simplicity and <em>portability</em>. Kudos <em>to</em> Alex for this work.", "explanation": null, "document": "Indiana thoughts and ideas\nI do think that Indiana is a good idea. The reason because I think this is because I'm a strongly community guy, and I do think that a good healthy and friendly community is the most important assent to any free software project. And I do think that Indiana is probably the best effort to achieve that inside the OpenSolaris community. It tries to adress some issues and it has a name, an identity and a direction.\nThis excites me because I would like to see the days when hostility between OpenSolaris and the Linux community is over (at the same time I also think that the GPLv3 would be a huge step), but at the same time, making people from the most adopted UNIX-like operating system out there comfortable on OpenSolaris would be a huge step (for both projects and the whole free software community). Lots of old-school Solaris users are afraid of a GNU/OpenSolaris thing, and neither Indiana is a GNU/OpenSolaris effort nor all GNU tools are bad as evil. But a nice text help when you use \"top\" trying to help users to gather the same information they expect (something like what Ubuntu does now when you type a missing command) would help a lot of people.\nAnd the same time, it tries to let others people to make their own flavors of OpenSolaris with a low entry barrier. This is another huge point in my opinion. The easier people is able to adapt OpenSolaris for their needs, the most problems it solves, and the most adoption it gets. There are also people complaining about having too many distributions would be harmful for OpenSolaris because people wouldn't know which one to choose.\nOpenSource is all about free of choice. And sure, choice have a pay, but from the mid 90's we all know what the lack of choice have done to this industry. Poeple out there have really different ways of thinking, and really different problems, let them choose. And the most important thing, make easy fo r them to work on building their own tools from yours one.\nAll this thing of a more affordable OpenSolaris excites me, and what do I do when I excited about something? I just draw about it. Since this is a community effort, I won't wait to anyone in Sun marketing to make a logo (sorry guys :P), so I've done my own:\nIndiana was the name's of Indiana Jones' dog, and if I remember correctly, it was a Husky. The stripes is about american indian make up stripes. And the green letters, are a quite obvious easter egg. I think it needs more work, but depending on the feedback and the acceptance, I would work more on it and I will propose it as an official logo. By the way, Inkscape Powered!\nP.S. Ian , you should be proud, this is the second official project with your name in it, let's hope this one is at least as successful as the first one ;)\n"}, {"score": 191.74092, "uuid": "97a4bc3a-79de-594c-b1a2-52cd8855ffda", "index": "cw12", "trec_id": "clueweb12-0714wb-13-25819", "target_hostname": "devmaster.net", "target_uri": "http://devmaster.net/devdb/engines/jmonkeyengine", "page_rank": 1.5571391e-09, "spam_rank": 75, "title": "jMonkeyEngine (engine) | Devmaster", "snippet": "Btw. the last developer created a new engine called &quot;ardor3d&quot; which shall be cleaner and <em>better</em> (and <em>of</em> course it sounds much <em>better</em> <em>than</em> &quot;MonkeyEngine&quot; ;-) ) <em>than</em> jME. I tried it out some time ago and <em>in</em> fact many things are made easier e.g. mousepicking.", "explanation": null, "document": "Getting better each day\nDisadvantages:\nThe only disadvantage is that it might take a little bit of time to piece the tutorials together to form your first game - but the community is always there!\nSo grab this engine and start creating games. Your imagination is the only limit!\n1 of 1 people found this review helpful. Did you? Yes No\nBest 3D Java Engine\nFeb 24, 2012 at 22:11 by InShadow\nI have been using this engine for hobby projects for more than 3 years, since jME2. I can say that its definitely the best engine for 3D graphics programming in Java. It matured over years a lot and is now a really modern engine, almost capable of standing aside the big ones. :) Ok maybe it doesn't have all the tools and features, but community is awesome, development of your own game is fast and easy and anyone has the opportunity to improve the engine and introduce its own ideas.\nWell, check the showcase. ;)\n0 of 0 people found this review helpful. Did you? Yes No\nDecent engine\nJun 16, 2009 at 13:23 by Guest\nI've been using this engine for about 8 months - very intense.\nWhat I found out is, that this engine has many features, is fast and very stable.\nThis engine is very good to start with if you have zero 3D programming experience, because there are many tutorials of code samples which show you how to get started with basic examples.\nFurthermore there are tons of sample codes which show you the engine's features and graphics capabilites. You can easily learn by watching through the (mostly small samplecodes) and adapt them to your own projects!\nThere are also some negative aspects as well which are:\nThe community was left alone by the last active developers in autumn 2008. Since then I didn't see much innovations going on anymore. To be realistic: I call it dead.\nIf you are asking for new features there is no one who will implement that. The community which is left alone suggests you to implement missing features yourself. But to be honest: many people (including me) are not that good in 3D programming to implement effects like real time shadows, per-pixel-lighting, HDR etc. It is easier to use an engine, than to implement new graphical features or special effects. And since there is no developer anymore, nobody will care about it in decent time, maybe never ever.\nThis is the worst thing that can happen to an OpenSource Engine and it did happen to jME.\nBesides the support is good when it comes to easy problems, but again: if the difficulty gets higher, nobody can help you anymore.\nIf you are planning to create a commercial game, I would say that jME is definitely able to take the plunge, because it is fast, stable, offers a lot of features and also platform independent.\nBut if you really want to create a serious game project you need to create everything by yourself. And by everything I mean EVERYTHING.\nThere is not even a useful World Editor around for the engine and if you ever tried to program a world editor, you will experience that it eats up a lot of time.\nIn fact there is a World Editor which is called MonkeyWorld3D. I appreciate the effort of the team who created it, but the Editor is slow, buggy and inconvenient to use. Also many features are missing. I really cannot recommend it. Also most people of the community seem to feel the same, since no one touches this editor and instead tries to create his own version of an editor.\nI did not only use the engine itself, but also the 3D GUI ilibrary like FengGUI and the jME Physics library. Both are NOT included in jME. They are 3rd party libraries, however they are very compatible.\nFengGUI is very good and should get most game graphical user interfaces working.\nThe physics library is also very good with a downside however. If you do some playing with boxes and balls the fun is on your side, but if you try to create a physics-based charactermodel you will most likely NOT succeed or you will bite your teeth out to achieve that.\njME is like a sandbox. You can create the Eiffel-Tower out of it, but you must do everything yourself. It is very good when you are starting from zero, because you have the feeling everything is under control. But if you are looking for something that will ease up your work in progress this engine does not offer the features.\nAll in all I can recommend the engine for beginners, but for serious projects you might turn to another game engine. Btw. the last developer created a new engine called \"ardor3d\" which shall be cleaner and better (and of course it sounds much better than \"MonkeyEngine\" ;-) ) than jME. I tried it out some time ago and in fact many things are made easier e.g. mousepicking. Also it includes every feature from jME and is developed actively.\nSadly, there are much less sample codes for learning purpose than in jME which will make it harder for beginners. But maybe this will change in future.\nI am not sure but I think the physics & fenggui are not be compatible to that anymore. Hopefully this will change too.\n0 of 0 people found this review helpful. Did you? Yes No\nSeems to follow the same'ol J3d pattern\nMay 27, 2009 at 22:24 by temporaryuser\nI am not so much reviewing this engine as pointing out the obvious. Hockey challenge (active a few years ago?), no sign of it today. Tech showcases of it seem amateur, and unambitious (also a Java pattern), and not to mention it's based on Java. Sun microsystems have mis-managed Java from the beginning. I believe Java should deliver clean, fast code to power feature rich engines and games but just doesn't, even now, years after all the jME flurry and a decade after the release of Java itself - clearly not a good sign. I have to bow down and confess that I may have been wrong about Java - it's just not likely to be used for anything of consequence in gaming. (hope I'm wrong, really do)\nAnd with Sun's mis-management, I wouldn't be surprised if they get a good thing going with the engine, and then a year later..game no longer works due to deprecated API or some other Java screw up. A real shame. But, the guys behind jME are I'm sure really competent. At least they should find new jobs in Java programming, and/or engine design/coding etc. A straight average.\n0 of 0 people found this review helpful. Did you? Yes No\nGreat Engine\nOct 01, 2008 at 17:41 by Jedimace1\nProves that the \"Java is slow\" idea is completely wrong! This is a very stable engine in development with the best, supportive community I have ever come across. This is a much better engine then many I have seen, beating a lot of them in performance(even faster then Torque, I have run both on the same computer), support, ease of use, and features. It has some of the best water effects I have seen, and it is all very easy to use and completely functional.\n0 of 0 people found this review helpful. Did you? Yes No\nDamn good and getting better\nApr 10, 2008 at 01:54 by Cyberqat\nJME is a very solid scene graph engine built ontop of Cas's LWJGL. The result is light weight, fast and modern with all the productivity advantages of java. It is currently being used by a number of commercial projects, both inside and outside of the game industry, that contribute valuable resources back to the project.\nAnother poster suggested wrapping other C engines calls with JNI java wrappers. This is a very bad idea, as anyone who has done high performance Java coding can tell you. JNI is no automatic panacea Crossing the JNI boundaries has costs. You want to as little of that as possible. LWJGL makes use of Java native direct byte buffers to allow it to do all its work in C space rather then Java heap and make the least number of calls across the boundaries. JME builds ontop of that solid, high speed implementation adding a very well designed and functional scene graph.\nIt is important to understand what JME *isn't*. The poster also mentioned Torque. Torque is a complete game engine, not a scene graph engine. If what you are looking for is high level tools then you want to look higher then JME.\nIf your looking for professional support, you also may want to look at professional (costly) engines. The JME community is very active and Josh and Mark are very helpful, but it is very much an open source community that operates on a traditional open source model. If you need to fix something, they may give you some pointers to where to look, but if its important to you that it be fixed now be ready to do it yourself. The flip side is that the code quality is excellent to work with and there a great deal of satisfaction in being able to contribute fixes or extensions back to the group.\nThe only two things I can say negatively about are:\n(1) The engine is currently mono-threaded.\n(2) The Java docs are not always complete.\nNumber one I know is being worked on right now. Number two I'm not sure about.\nIn short, if you want to build your own game engine then JME is a great labor saving place to start. The community is very active and the code first rate.\n0 of 0 people found this review helpful. Did you? Yes No\njME isn't all that\nFeb 29, 2008 at 06:37 by mr_guy\nI would assume that the glowing reviews come from people who have either not used another game engine, or who are so desperate for anything Java, that they're willing to put up with any crap, as long as they can (slowly) render a model to the screen.\nI've used it, and it does not hold up to engines like Ogre3D, or OpenSceneGraph, or even Torque Game Engine. Some problems:\n1) There is no way to get skinned animation into the engine. The developers apparently have a COLLADA exporter script that they use internally, but have not released. Regular COLLDA animations are not recognized by the importer.\n2) The other importers are all crappy. It seems par for the course that they only support a single mesh, or a single texture, or no animation, or all three.\n3) The internal data structures in jME show no understanding of rendering hardware. Colors are expanded to 16 bytes. Vertices are stored with one vertex buffer per channel, not as interleaved data. Each separate subset of a mesh is stored as a totally separate mesh, with separate buffers. The list goes on.\n4) Originally, jME didn't even support instancing of meshes. Each tree in a forest would have its own multiple vertex buffers. To support instancing, they added a special \"instancing node\" which gets passed the regular mesh scene graph node. This example shows that the implementation is made by people who haven't done scene graphs before, and there are lots more.\n5) The community likes patting itself on the back, but more importantly, it doesn't make any distinction between \"good\" or \"bad.\" Even if code is totally broken and doesn't do anything near what it's supposed to do, you'll be hard pressed to get a \"oh, that's bad\" out of them. And even some basic things, like matrices and quaternions, have bugs in them.\n6) The design of the scene graph is taken from Dave Eberly's \"Wild Magic\" books -- version 2. Dave himself is up to version 4. However, where Dave has good implementation (even if I don't like his design), jME hasn't, and it hasn't kept up to date with the many improvements that have happend in versions 3 and 4.\nSo, it may be true that jME is the best open engine that is out there for Java. That means that 3D games using an open Java engine are in a pretty poor state. You'll be better off wrapping something real, even if you have to write your own JNI bindings. (The Multiverse people wrapping Ogre3D come to mind as an alternative)\nIf your goal is just a good game engine, and you don't require Java, run as far away as you can -- it's not worth the time spent trying to understand how limited this engine is. Or prepare to spend significant effort to bring it up to snuff -- which probably is easier than starting your own from scratch, if that's the alternative.\n0 of 0 people found this review helpful. Did you? Yes No\nWhy I love jME and how I came to it\nJun 12, 2007 at 00:56 by paranoid\nHi fellow coders,\nI have a long background in testing 3d Frameworks... ( who here hasn't :-) )\nObviously I started my own with 2D calls, then I wrote some Quake3 mods, then opengl, then\nI took a major leap and bought the torque engine from garagegames.\nMan that was a fun time, that \u201cframework\u201d is really complete as the code comes from a real game ( StarSiege Tribes ), complete with ingame level editor, gui, 3d sound and prize winning network support ( now free ). But I soon had to find out, that you could only go so far with its scripting language and its c++ code, although probably very clean and good, just scared the hell out of me...\n( Free tip to garagegames to reign the world, reimplement the scripting language in java ! )\nThen I tried irrlicht ( with its NET plugin and Delpi.NET which was even kind of cool... just very basic and not a complete gaming framework ), then ogre3d, then openscenegraph and then even some more things google spits out...\nMeanwhile I always played with Java and its 2D calls, as I love Java.\nSo I decided to give Java3D a try, but boy was that painful and I gave up for a while.\nYears later I stumbled across Jake2 ( awesome Java port of Quake2 )\nwhich started my fire again.\nSo Java is capable of high performance 3D after all. :-)\nI again looked for news around Java3D and found the very impressive FlyingGuns...\nLooking for books about java and gaming I found a great book from Andrew Davison\n( Killer Game Programming in Java - http://fivedots.coe.psu.ac.th/~ad/jg/ )\nBut after reading most of it I realized, he does a good job of overcoming the limitations of Java3D but not good enough for me...\nAs Java3D is really \"only\" a scene graph framework written in Java... and not a very fast one... ( although pretty ok, if you look at Flying Guns )\nMost of all, the slow \"collision detection\" turned me off...\n( Andrew Davison had tried to overcome the limitations with a 1 second taking background thread, man was that ugly... )\nThen I looked at xith3d, but that is mostly the same framework, just faster...\nAnd still missing good collision detection ( AFAIK )\nI realized what I really was looking for, was a modding framework, something like quake3 just not so fps/bsp-level orientated and with much less c code\nIn the java gaming and xith forums I had always seen references to jME, but I never looked at the examples before...\n3 Month ago I did, and boy was I impressed !!!\n( just give jmetest.effects.water.TestProjectedWater a try !!! )\nThe framework is not only powerful and feature rich but truly easy to use !\nThe learning curve is as good as it gets, due to the easy transition from SimpleGame to StandardGame ( if you understand not to overwrite initSystem and forget to call the super implementation as I did at first... )\nThe tutorials are very good to understand, because they can be very short, due to the fact that jME is so powerful with so few lines...\nThe flag rush tutorial especially stands out ( hehe, no wonder, as it comes very close to my BattleZone clone project ).\nThanks mojomonkey !!!\nThe test package covers many real world game application needs:\n-game state changes ( swing, menus, loader, ... )\n-Swing GUI menu support ( This one is one of my favorites )\n-hw/sw mouse\n-all the different InputHandler (they rock and one can learn alot about camera translation and rotation )\n-3d audio\n"}, {"score": 170.98567, "uuid": "6d54c0c5-48c4-5f2a-8d8a-ebc35f820217", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25752", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/hoops-exchange", "page_rank": 1.2225867e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 170.59125, "uuid": "4dc531ef-5d37-5b6d-8f53-3f9863a08ca3", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25753", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/hoops-visualize", "page_rank": 1.2398711e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 170.50525, "uuid": "2dc6860d-a2bb-5d55-9cf0-1a3a0b2cd4d2", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25749", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/autodesk-autocad-oem", "page_rank": 1.2051827e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.9912, "uuid": "f24928aa-176a-5cd9-a664-bf6f7fdb3f70", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25750", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/autodesk-inventor-oem", "page_rank": 1.2051827e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.88141, "uuid": "86ceafbc-b25d-5c2e-8178-68f5399400fa", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25751", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/autodesk-realdwg", "page_rank": 1.2225867e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}], [{"score": 169.86072, "uuid": "aba93de8-dcb2-54c9-9031-49cc203b6726", "index": "cw12", "trec_id": "clueweb12-0304wb-93-00469", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/hoops-publish", "page_rank": 1.2432905e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.82007, "uuid": "4b4764c8-e6a6-5b70-845a-91f9ac22f718", "index": "cw12", "trec_id": "clueweb12-0305wb-08-27308", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/adobe-pdf-library", "page_rank": 1.2051827e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.76233, "uuid": "a60326d3-7ebb-5619-9c1e-94f5928d2934", "index": "cw12", "trec_id": "clueweb12-0304wb-93-00468", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/acrobat-pro-bundle", "page_rank": 1.2086148e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.7613, "uuid": "ee9f030c-e133-59b9-a249-3d391bf9b281", "index": "cw12", "trec_id": "clueweb12-0305wb-18-25754", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/adobe-pdf-library-sdk/parasolid", "page_rank": 1.2051827e-09, "spam_rank": 95, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 169.71846, "uuid": "fe3e2151-dedc-511f-a86b-e04c1f3794e4", "index": "cw12", "trec_id": "clueweb12-0302wb-97-05143", "target_hostname": "www.techsoft3d.com", "target_uri": "http://www.techsoft3d.com/our-products/realdwg", "page_rank": 1.1791523e-09, "spam_rank": 94, "title": "Acrobat Pro Bundle | Tech Soft 3D", "snippet": "It fully leverages the latest GPU innovations via both <em>OpenGL</em> and <em>Direct3D</em> <em>to</em> deliver best-<em>in</em>-class performance and visual fidelity.", "explanation": null, "document": "Product Options\nBuild custom applications using Autodesk\u00ae Inventor\u00ae OEM to accelerate your engineering development project using a world-class OEM software platform.\nInventor OEM combines an intuitive 3D mechanical design environment for creating parts and assemblies with specialized design tools that enable engineers to focus on design function, not geometry creation. The software can drive the automatic design and creation of intelligent components, such as plastic parts, steel frames, rotating machinery, tube and pipe runs and electrical cable and wire harnesses.\nThe inclusion of user-friendly tools for rules-based design automation make it easier for design professionals to capture design intent and automate common tasks by creating parts that can embed higher levels of design intelligence directly into an Inventor digital prototype.\nAutodesk Inventor OEM is a development platform that allows you to create a stand-alone application built on Autodesk Inventor technology. The benefit of using Inventor OEM over writing an application that runs in Inventor is that you can package your application with Inventor OEM and deliver it as your own application. Your customers don't need to know that it is based on Inventor since it is installed using your installer, licensed with your licensing, and is branded as your product (application name, splash screen, and various other icons), save the \"Powered By Autodesk Inventor\" graphic in the zero-document state.\nYou can choose to include Inventor commands as-is or create your own commands. To create a custom application using Inventor OEM use the Inventor API and supply your functionality through an add-in.\nAutodesk Inventor OEM is essentially Inventor with additional capabilities as detailed below:\nIt is modular. Your application might only need to use the 'part function'. With Inventor OEM you can choose which components to install; 'part' only, 'part' and 'assembly', or 'part', 'assembly', and 'drawing' for example.\nThe branding is configurable so you can define your own application name, splash screen, application icons, executable name, etc.\nIt is independent of Inventor with regards to shared files and registry entries. This means it can be installed on a machine that has Inventor or another OEM application.\nIt is independent of Autodesk licensing, allowing you to control the licensing.\nSketching\nEvaluate different design ideas before creating detailed part and assembly models. Using the Inventor OEM sketch environment, you can quickly capture design ideas as versatile 2D layouts. Combining the power of constraints with easy-to-use tools for modifying sketches lets you try different design concepts and control color and line style, allowing you to find the best way to convey your design ideas.\nAdvanced Shape Description\nCreate a wide range of complex geometries by easily combining solids and surfaces. Inventor OEM gives you precise control of shape characteristics such as tangency and continuity. Advanced modeling tools include Loft to a Point, N-Sided Patch, Sweep Normal to Surface, Area Loft, Centerline Loft, G2 Continuous Fillets, Full Round Fillets, and Face-to-Face Fillets\nSculpt Tool\nQuickly and easily modify shape details using surfaces from Inventor OEM or by incorporating imported surfaces. Construct 3D part geometry from a closed set of surfaces, and incorporate imported surface data into the model using the Sculpt tool to modify existing parts by adding or removing material.\nAssembly Design\nQuickly assemble individual parts and subassemblies to define the complete product structure. Verify that your product can be assembled. Insert and position new components in the assembly, using constraints to capture the positional relationships that define fixed and moving components.\nLarge Assembly Performance\nRealize the benefits of 3D design when developing very large assemblies. Native shrinkwrap gives you the ability to manage large assemblies by converting sub-assemblies into simplified part models or lightweight surface models. With level of detail (LOD) representations, you can switch between full and lightweight representations to control memory consumption and increase performance. A large assembly \u201ccapacity meter\u201d shows you how much memory is available.\nAssembly Configurations\nEasily design and document product families using assembly configurations to define variations from a master assembly. Exclude or substitute individual components and make changes to dimension and constraint values. Document the whole part or assembly configuration using the Table tool, which automatically creates the parameter table in a 2D drawing.\nPlastic Part Design\nFunctional plastic features, rule-based fillets and powerful multi-body workflows simplify the design of high-quality molded part models.\nMolded Part Definition\nMake sure molded parts meet aesthetic guidelines for the position of parting lines while supporting cost-effective manufacturing requirements. Divide the 3D component to define the molded parts, using tools to identify silhouette curves for optimum parting plane geometry and multibody operations that make it easy to split the part into separate bodies.\nSheet Metal Styles\nGenerate flat patterns that accurately reflect your manufacturing capabilities. Control sheet metal unfolding with styles that define the material thickness, bend rules, and corner reliefs. To control the unfolding geometry, Inventor software supports linear unfolding, custom unfold equations, and custom bend tables.\nInventor OEM includes the iLogic\u2122 module, which extends and enhances the parametric design capabilities of Inventor OEM, automates tedious design tasks, and adds higher levels of design intelligence to the production of digital prototypes. With easy-to-use authoring capabilities and an intuitive user interface, Inventor OEM iLogic integrates seamlessly with Inventor OEM.\nUsing Inventor iLogic you can:\nCreate smart parts and assemblies that define multiple product configurations and make automatic updates in real-time based on logical relationships between design parameters such as mass, volume, dimensional values, material types, feature and component activation or suppression, patterns, and more.\nSimplify rules-based design with easy-to-use, clickable tools that any Inventor user working at the individual and engineering workgroup level can use \u2013 even those with little or no programming experience.\nAutomate tedious design tasks by adding higher than ever before levels of intelligence to your digital prototypes.\nA rules drive\u200bn design solution\nThe iLogic module allows designers and engineers to capture and embed engineering and product knowledge directly into virtual models.\u00a0iLogic introduces a design for reuse and automation methodology that is the next logical step in parametric modeling.\u00a0Whereas parametric design allows the capturing of design intent, iLogic design in Inventor OEM allows the capture of design intelligence and offers the possibility for custom design of standard parts.\niLogic Highlights\nUses the power of Autodesk Inventor to capture initial parametric design intent. iLogic is used to define the product behaviors, using logimetric rules, that result from changing the design input values.\nProvides easy access to powerful design automation functions through a simple, user-friendly interface designed for users with little or no programming experience.\nLets users add knowledge to existing designs with full support for iparts and iassemblies. Rules can be added to any Inventor part or assembly model transforming it into a reusable knowledge asset.\nExtends Inventor\u2019s parameter types to include Boolean, string and multi-value lists.\nDefines product behavior based on true or false input or property values, such as Material type, Mass or even custom properties.\nAllows design and engineering knowledge to be defined and stored as iLogic Rule objects that are embedded directly into the models. With iLogic there are no new documents to manage!\nIntroduces a new way of capturing design intent that goes far beyond what can be achieved with only parametric design capability.\niLogic enables a rules-driven design for Inventor OEM by equipping CAD designers and CAD engineers with an easy-to-use solution seamlessly integrated into Inventor OEM.\nFor each Tech Soft 3D product, licensing and license fees are designed to provide excellent value, helping developers spend their R&D funds efficiently and quickly deliver successful products to market. Specific license fees vary depending on the Tech Soft 3D products and modules required, the level of service and support desired, end-user seat volumes, operating business model, etc.\nWe would be glad to arrange a consultation with a member of our Business Development team to review your specific project and provide detailed licensing information based on your own requirements. To arrange your consultation please contact us today.\nDon't just take our word for it...\nTo help you explore the features of Inventor OEM and review the benefits of building your application on the Inventor platform, you can apply for a FREE 60-day software evaluation from Tech Soft 3D.\nWith full access to the API libraries, documentation, tutorials and sample code, Tech Soft 3D Consulting Engineers will guide your team help you discover how our toolkits can meet your requirements.\nPlatform Products Autodesk AutoCAD OEM\n"}, {"score": 165.4558, "uuid": "d5a54b37-7c17-51bf-8482-8c22a796e6f5", "index": "cw12", "trec_id": "clueweb12-0600wb-80-28389", "target_hostname": "www.opengl.org", "target_uri": "http://www.opengl.org/registry/specs/ARB/uniform_buffer_object.txt", "page_rank": 1.712426e-09, "spam_rank": 74, "title": "Name ARB_uniform_buffer_object Name Strings", "snippet": "It <em>is</em> more efficient <em>to</em> manage program resources using indices and <em>is</em> <em>better</em> <em>in</em> <em>terms</em> <em>of</em> locality <em>of</em> reference <em>to</em> make &#x27;active&#x27; declarations <em>in</em> program text. We should consider whether we might want <em>to</em> add this back <em>in</em> <em>in</em> a future extension.", "explanation": null, "document": ") are treated as an array of\nfloating-point row vectors, each consisting of\ncomponents. The row vectors will be stored in order, with row zero at the lowest offset. The difference in offsets between consecutive rows of the matrix will be referred to as the row stride, and is constant across the matrix. The row stride, UNIFORM_MATRIX_STRIDE, is an implementation-dependent value and may be queried after a program is linked. - Arrays of scalars, vectors, and matrices are stored in memory by element order, with array member zero at the lowest offset. The difference in offsets between each pair of elements in the array in basic machine units is referred to as the array stride, and is constant across the entire array. The array stride, UNIFORM_ARRAY_STRIDE, is an implementation-dependent value and may be queried after a program is linked. Sub-section 2.15.3.1.2 - Standard Uniform Block Layout By default, uniforms contained within a uniform block are extracted from buffer storage in an implementation-dependent manner. Applications may query the offsets assigned to uniforms inside uniform blocks with query functions provided by the GL. The \"layout\" qualifier provides shaders with control of the layout of uniforms within a uniform block. When the \"std140\" layout is specified, the offset of each uniform in a uniform block can be derived from the definition of the uniform block by applying the set of rules described below. If a uniform block is declared in multiple shaders linked together into a single program, the link will fail unless the uniform block declaration, including layout qualifier, are identical in all such shaders. When using the \"std140\" storage layout, structures will be laid out in buffer storage with its members stored in monotonically increasing order based on their location in the declaration. A structure and each structure member have a base offset and a base alignment, from which an aligned offset is computed by rounding the base offset up to a multiple of the base alignment. The base offset of the first member of a structure is taken from the aligned offset of the structure itself. The base offset of all other structure members is derived by taking the offset of the last basic machine unit consumed by the previous member and adding one. Each structure member is stored in memory at its aligned offset. The members of a top-level uniform block are laid out in buffer storage by treating the uniform block as a structure with a base offset of zero. (1) If the member is a scalar consuming\nbasic machine units, the base alignment is\n. (2) If the member is a two- or four-component vector with components consuming\nbasic machine units, the base alignment is 2\nor 4\n, respectively. (3) If the member is a three-component vector with components consuming\nbasic machine units, the base alignment is 4\n. (4) If the member is an array of scalars or vectors, the base alignment and array stride are set to match the base alignment of a single array element, according to rules (1), (2), and (3), and rounded up to the base alignment of a vec4. The array may have padding at the end; the base offset of the member following the array is rounded up to the next multiple of the base alignment. (5) If the member is a column-major matrix with\ncolumns and\nrows, the matrix is stored identically to an array of\ncolumn vectors with\ncomponents each, according to rule (4). (6) If the member is an array of\ncolumn-major matrices with\nrows, the matrix is stored identically to a row of\ncolumn vectors with\ncomponents each, according to rule (4). (7) If the member is a row-major matrix with\ncolumns and\nrows, the matrix is stored identically to an array of\nrow vectors with\ncomponents each, according to rule (4). (8) If the member is an array of\nrow-major matrices with\nrows, the matrix is stored identically to a row of\nrow vectors with\ncomponents each, according to rule (4). (9) If the member is a structure, the base alignment of the structure is\n, where\nis the largest base alignment value of any of its members, and rounded up to the base alignment of a vec4. The individual members of this sub-structure are then assigned offsets by applying this set of rules recursively, where the base offset of the first member of the sub-structure is equal to the aligned offset of the structure. The structure may have padding at the end; the base offset of the member following the sub-structure is rounded up to the next multiple of the base alignment of the structure. (10) If the member is an array of\nstructures, the\nelements of the array are laid out in order, according to rule (9). For uniform blocks laid out according to these rules, the minimum buffer object size returned by the UNIFORM_BLOCK_DATA_SIZE query is derived by taking the offset of the last basic machine unit consumed by the last uniform of the uniform block (including any end-of-array or end-of-structure padding), adding one, and rounding up to the next multiple of the base alignment required for a vec4. Sub-section 2.15.3.2 - Uniform Buffer Object Bindings The value an active uniform inside a named uniform block is extracted from the data store of a buffer object bound to one of an array of uniform buffer binding points. The number of binding points can be queried using GetIntegerv with the constant MAX_UNIFORM_BUFFER_BINDINGS. Buffer objects are bound to uniform block binding points by calling one of the commands void BindBufferRange(enum target, uint index, uint buffer, intptr offset, sizeiptr size); void BindBufferBase(enum target, uint index, uint buffer); with\nset to UNIFORM_BUFFER. There is an array of buffer object binding points with which uniform blocks can be associated via UniformBlockBinding, plus a single general binding point that can be used by other buffer object manipulation functions (e.g. BindBuffer, MapBuffer). Both commands bind the buffer object named by\nto the general binding point, and additionally bind the buffer object to the binding point in the array given by\n. The error INVALID_VALUE is generated if\nis greater than or equal to the value of MAX_UNIFORM_BUFFER_BINDINGS. For BindBufferRange,\nspecifies a starting offset into the buffer object\n, and\nspecifies the amount of data that can be read from the buffer object while used as the storage for a uniform block. Both\nand\nare in basic machine units. The error INVALID_VALUE is generated if the value of\nis less than or equal to zero, if\nis greater than the value of BUFFER_SIZE, or if\nis not a multiple of the implementation-dependent required alignment (UNIFORM_BUFFER_OFFSET_ALIGNMENT). BindBufferBase is equivalent to calling BindBufferRange with\nzero and\nequal to the size of\n. Each of a program's active uniform blocks has a corresponding uniform buffer object binding point. This binding point can be assigned by calling: void UniformBlockBinding(uint program, uint uniformBlockIndex, uint uniformBlockBinding);\nis a name of a program object for which the command LinkProgram has been issued in the past.\nmust be an active uniform block index of the program\n. Otherwise, INVALID_VALUE is generated.\nmust be less than MAX_UNIFORM_BUFFER_BINDINGS. Otherwise, INVALID_VALUE is generated. If successful, UniformBlockBinding specifies that\nwill use the data store of the buffer object bound to the binding point\nto extract the values of the uniforms in the uniform block identified by\n. The results of Begin or commands that perform an implicit Begin are undefined when an active uniform block of the active program is assigned a uniform buffer binding point where the\nparameter to BindBufferRange is less than the value of UNIFORM_BLOCK_DATA_SIZE for that uniform block, or when no buffer object is bound to that binding point, and may result in GL interruption or termination. When executing shaders that access uniform blocks, the binding point corresponding to each active uniform block must be populated with a buffer object with a size no smaller than the minimum required size of the uniform block (UNIFORM_BLOCK_DATA_SIZE). For binding points populated by BindBufferRange, the size in question is the value of the\nparameter. If any active uniform block is not backed by a sufficiently large buffer object, the results of shader execution are undefined, and may result in GL interruption or termination. Shaders may be executed to process the primitives and vertices specified between Begin and End commands or by Draw* or MultiDraw* commands (see section 2.8). Shaders may also be executed as a result of DrawPixels, Bitmap, or RasterPos* commands. When a program object is linked or re-linked, the uniform buffer object binding point assigned to each of its active uniform blocks is reset to zero. Additions to Chapter 3 - Rasterization 3.11.1 Shader Variables, p. 196 Replace the second two sentences with: The amount of storage available for fragment shader uniform variables in the default uniform block is specified by the value of the implementation- dependent constant MAX_FRAGMENT_UNIFORM_COMPONENTS. The total amount of combined storage available for fragment shader uniform variables in all uniform blocks (including the default uniform block) is specified by the value of the implementation-dependent constant MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS. These values represent the numbers of individual floating-point, integer, or boolean values that can be held in uniform variable storage for a fragment shader. Additions to Chapter 4 - Per-Fragment Operations and the Framebuffer None Additions to Chapter 5 - State and State Requests 5.4 Display Lists, p. 244 Add the following language to the list of commands excluded from display list compilation: \"Buffer objects: BindBufferRange, BindBufferBase\" Additions to Chapter 6 - State and State Requests 6.1.1 Simple Queries, p. 247 Add the following paragraph: Indexed simple state variables are queried with the command void GetIntegeri_v(enum target, uint index, int* data);\nis the name of the indexed state and\nis the index of the particular element being queried.\nis a pointer to a scalar or array of the indicated type in which to place the returned data. An INVALID_VALUE error is generated if\nis outside the valid range for the indexed state\n. 6.1.13 Buffer Object Queries, p. 260 Add after description of GetBufferPointerv: To query which buffer objects are bound to the array of uniform buffer binding points and will be used as the storage for active uniform blocks, call GetIntegeri_v with\nset to UNIFORM_BUFFER_BINDING.\nmust be in the range zero to the value of MAX_UNIFORM_BUFFER_BINDINGS - 1. The name of the buffer object bound to\nis returned in\n. If no buffer object is bound for\n, zero is returned in\n. To query the starting offset or size of the range of each buffer object binding used for uniform buffers, call GetIntegeri_v with\nset to UNIFORM_BUFFER_START or UNIFORM_BUFFER_SIZE respectively.\nmust be in the range zero to the value of MAX_UNIFORM_BUFFER_BINDINGS - 1. If the parameter (starting offset or size) was not specified when the buffer object was bound, or if no buffer object is bound to\n, zero is returned. 6.1.14 Shader and Program Queries Pg 261, continuation of paragraph defining \"GetProgramiv\" If\nis ACTIVE_UNIFORM_BLOCKS the number of uniform blocks for\ncontaining active uniforms is returned. If\nis ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH, the length of the longest active uniform block name, including the null terminator, is returned. Pg 263, replace GetUniform{f|i}v description with: ... return the value or values of the uniform at location\nof the default uniform block for program object\n... OpenGL Shading Language Spec v1.20.8 Updates Including the following line in a shader can be used to control the language features described in this extension: #extension GL_ARB_uniform_buffer_object :\nwhere\nis as specified in section 3.3. A new preprocessor #define is added to the OpenGL Shading Language: #define GL_ARB_uniform_buffer_object 1 Add two new sections: 4.3.5.1 Uniform Blocks Variable declarations at global scope can be grouped into a named block to provide coarser granularity for manipulation, sharing, or backing than is achievable with individual declarations. This is currently only allowed for uniform variables grouped into uniform blocks. All other uses are reserved. The application backs a uniform block with a buffer. This allows application access to a set of uniform variables through a single buffer. The application will need to query the offsets of the variables within the block or follow standard rules for block layout in order to know how to layout the contents of a buffer used to back the block. A uniform block (rather than a uniform variable) is created by the uniform keyword, followed by a block name, followed by an open curly brace ( { ) as follows: uniform-block : layout-qualifieropt uniform block-name { member-list } ; layout-qualifier : layout ( layout-qualifier-id-list ) member-list : member-declaration member-declaration member-list member-declaration : layout-qualifieropt uniformopt basic-type declarators ; Where declarators are the same as for other uniform variable declarations, except initializers are not allowed. Layout qualifiers are defined in the next section. For example, uniform Transform { mat4 ModelViewMatrix; mat4 ModelViewProjectionMatrix; uniform mat3 NormalMatrix; // reuse of uniform is optional float Deformation; }; The above establishes a uniform block named \"Transform\" with four uniforms grouped inside it. The names declared inside the block are accessed as if they were declared outside the block. In no way does the shader ever access block members through any use of block-name. Uniform block names and variable names declared within uniform blocks are scoped at the program level. Matching block names from multiple compilation units in the same program must match in terms of having the same number of declarations with the same sequence of types and the same sequence of member names, as well as having the same member-wise layout qualification (see next section). Any mismatch will generate a link error. Sampler types are not allowed inside of uniform blocks. All other types, arrays, and structures allowed for uniforms are allowed within a uniform block. There is an implementation-dependent limit on the number of uniform blocks that can be used per stage. If this limit is exceeded, it will cause a link error. 4.3.5.2 Uniform Block Layout Qualifiers The layout-qualifier-id-list for uniform blocks is a comma separated list of the following qualifiers: shared (default) packed std140 row_major column_major (default) These qualifiers are identifiers, not keywords. None of these have any semantic affect at all on the usage of the variables being declared; they only describe how data is laid out in memory. For example, matrix semantics are always column-based, as described in the rest of this specification, no matter what layout qualifiers are being used. Uniform block layout qualifiers can be declared at global scope, on a single uniform block, or on a single block member. At global scope, it is an error to use layout qualifiers to declare a variable. Instead, at global scope, layout qualifiers apply just to the keyword uniform and establish default qualification for subsequent blocks: layout-defaults : layout-qualifier uniform ; When this is done, the previous default qualification is first inherited and then overridden as per the override rules listed below for each qualifier listed in the declaration. The result becomes the new default qualification scoped to subsequent uniform block definitions. Layout defaults can only be specified at global scope. The initial state of compilation is as if the following were declared: layout(shared, column_major) uniform; Explicitly declaring this in a shader will return defaults back to their initial state. Uniform blocks can be declared with optional layout qualifiers, and so can their individual member declarations. Such block layout qualification is scoped only to the content of the block. As with global layout declarations, block layout qualification first inherits from the current default qualification and then overrides it. Similarly, individual member layout qualification is scoped just to the member declaration, and inherits from and overrides the block's qualification. The shared qualifier overrides only the std140 and packed qualifiers; other qualifiers are inherited. The compiler/linker will ensure that multiple programs and programmable stages containing this definition will share the same memory layout for this block, as long as they also matched in their row_major and/or column_major qualifications. This allows use of the same buffer to back the same block definition across different programs. The packed qualifier overrides only std140 and shared; other qualifiers are inherited. When packed is used, no shareable layout is guaranteed. The compiler and linker can optimize memory use based on what variables actively get used and on other criteria. Offsets must be queried, as there is no other way of guaranteeing where (and which) variables reside within the block. Attempts to share a packed uniform block across programs or stages will generally fail. However, implementations may aid application management of packed blocks by using canonical layouts for packed blocks. The std140 qualifier overrides only the packed and shared qualifiers; other qualifiers are inherited. The layout is explicitly determined by this, as described in the API specification section 2.15.3.1.2. Hence, as in shared above, the resulting layout is shareable across programs. Layout qualifiers on member declarations cannot use the shared, packed, or std140 qualifiers. These can only be used at global scope or on a block declaration. The row_major qualifier overrides only the column_major qualifier; other qualifiers are inherited. It only affects the layout of matrices. Elements within a matrix row will be contiguous in memory. The column_major qualifier overrides only the row_major qualifier; other qualifiers are inherited. It only affects the layout of matrices. Elements within a matrix column will be contiguous in memory. When multiple arguments are listed in a layout declaration, the affect will be the same as if they were declared one at a time, in order from left to right, each in turn inheriting from and overriding the result from the previous qualification. For example layout(row_major, column_major) results in the qualification being column_major. Other examples: layout(shared, row_major) uniform; // default is now shared & row_major layout(std140) uniform Transform { // layout of this block is std140 mat4 M1; // row_major layout(column_major) mat4 M2; // column major mat3 N1; // row_major }; uniform T2 { // layout of this block is shared ... }; layout(column_major) uniform T3 { // shared and column_major mat4 M3; // column_major layout(row_major) mat4 m4; // row major mat3 N2; // column_major }; Interactions with OpenGL 3.0 If OpenGL 3.0 is supported, the introduction of BindBufferBase and BindBufferRange can be ignored, though the uniform buffer object language herein will need to be merged with the transform feedback language in GL 3.0. If OpenGL 3.0 is supported, the introduction of GetIntegeri_v can be ignored. If OpenGL 3.0 is supported, change: \"When a program is successfully linked, all active uniforms belonging to the program object's default uniform block are initialized to zero (FALSE for booleans). A successful link will also generate a location for each active uniform in the default uniform block. The values of active uniforms in the default uniform block can be changed using this location and the appropriate Uniform* command (see below).\" to \"When a program is successfully linked, all active uniforms belonging to the program object's default uniform block are initialized as defined by the version of the OpenGL Shading Language used to compile the program. A successful link will also generate a location for each active uniform in the default uniform block. The values of active uniforms in the default uniform block can be changed using this location and the appropriate Uniform* command (see below).\" If OpenGL 3.0 is supported, replace \"Begin or commands that perform an implicit Begin\" with \"Draw* commands.\" If OpenGL 3.0 is supported, UNIFORM_BUFFER is a valid target for new buffer-related API, e.g. MapBufferRange. Interactions with EXT_gpu_shader4 If EXT_gpu_shader4 is not supported, then all of the types in table 2.utype with extension suffixes should be omitted. Interactions with ARB_texture_rectangle If ARB_texture_rectangle is not available, then all of the types in table 2.utype with RECT in their names should be omitted. Interactions with EXT_texture_array If EXT_texture_array is not available, then all of the types in table 2.utype with ARRAY in their names should be omitted. Interactions with EXT_texture_buffer_object If EXT_texture_buffer_object is not available, then all of the types in table 2.utype with BUFFER in their names should be omitted. Interactions with EXT_texture_integer If EXT_texture_integer is not available, then all of the types in table 2.utype with UNSIGNED_INT or INT_SAMPLER in their names should be omitted. Interactions with ARB_geometry_shader4 If ARB_geometry_shader4 is not supported, omit all mentions of the geometry shader stage, including MAX_GEOMETRY_UNIFORM_BUFFERS and UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER. The minimum value of MAX_COMBINED_UNIFORM_BLOCKS and MAX_UNIFORM_BUFFER_BINDINGS changes from 36 to 24. Language describing MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS can be found in the ARB_geometry_shader4 specification. Errors The error INVALID_OPERATION is generated by BindBufferRange and BindBufferBase if\nis not the name of a valid buffer object. The error INVALID_VALUE is generated by GetUniformIndices, GetActiveUniformsiv, GetActiveUniformName, GetUniformBlockIndex, GetActiveUniformBlockiv, GetActiveUniformBlockName, and UniformBlockBinding if\nis not a value generated by GL. The error INVALID_VALUE is generated by GetUniformIndices and GetActiveUniformsiv if\nis less than zero. The error INVALID_VALUE is generated by GetActiveUniformName and GetActiveUniformBlockName if\nis less than zero. The error INVALID_VALUE is generated by BindBufferRange if\nis less than zero. The error INVALID_VALUE is generated by GetActiveUniformName if\nis greater than or equal to ACTIVE_UNIFORMS. The error INVALID_VALUE is generated by GetActiveUniformsiv if any of the indices in\nis greater than or equal to ACTIVE_UNIFORMS. The error INVALID_VALUE is generated by GetActiveUniformBlockiv, GetActiveUniformBlockName, and UniformBlockBinding if\nis greater than or equal to ACTIVE_UNIFORM_BLOCKS. The error INVALID_VALUE is generated by UniformBlockBinding if\nis greater than or equal to MAX_UNIFORM_BUFFER_BINDINGS. The error INVALID_VALUE is generated by BindBufferRange and BindBufferBase if\nis greater than or equal to MAX_UNIFORM_BUFFER_BINDINGS. The error INVALID_VALUE is generated by BindBufferRange if\nis not a multiple of UNIFORM_BUFFER_OFFSET_ALIGNMENT basic machine units. The error INVALID_ENUM is generated by GetActiveUniformsiv and GetActiveUniformBlockiv if\nis not one of the accepted values. The error INVALID_ENUM is generated by BindBufferRange and BindBufferBase if\nis not an accepted indexable buffer object target. New State Initial Get Value Type Get Command Value Description Sec Attribute -------------------------- ---- ----------- ----- ------------------------- ----- --------- UNIFORM_BUFFER_BINDING Z+ GetIntegerv 0 Uniform buffer object 2.15.3 - bound to the context for buffer object manipulation. UNIFORM_BUFFER_BINDING nxZ+ GetIntegeri_v 0 Uniform buffer object 2.15.3 - bound to the specified context binding point ACTIVE_UNIFORM_BLOCKS Z+ GetProgramiv 0 Number of active 2.15.3 - uniform blocks in a program ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH Z+ GetProgramiv 0 Length of longest active 2.15.3 - uniform block name UNIFORM_TYPE 0*xZ_27 GetActiveUniformsiv - Type of active uniform 2.15.3 - UNIFORM_SIZE 0*xZ+ GetActiveUniformsiv - Size of active uniform 2.15.3 - UNIFORM_NAME_LENGTH 0*xZ+ GetActiveUniformsiv - Uniform name length 2.15.3 - UNIFORM_BLOCK_INDEX 0*xZ GetActiveUniformsiv - Uniform block index 2.15.3 - UNIFORM_OFFSET 0*xZ GetActiveUniformsiv - Uniform buffer offset 2.15.3 - UNIFORM_ARRAY_STRIDE 0*xZ GetActiveUniformsiv - Uniform buffer array 2.15.3 - stride UNIFORM_MATRIX_STRIDE 0*xZ GetActiveUniformsiv - Uniform buffer intra- 2.15.3 - matrix stride UNIFORM_IS_ROW_MAJOR 0*xZ+ GetActiveUniformsiv - Whether uniform is a 2.15.3 - row-major matrix UNIFORM_BLOCK_BINDING 0*xZ+ GetActiveUniformBlockiv 0 Uniform buffer binding 2.15.3 - points associated with the specified uniform block UNIFORM_BLOCK_DATA_SIZE 0*xZ+ GetActiveUniformBlockiv - Size of the storage 2.15.3 - needed to hold this uniform block's data UNIFORM_BLOCK_ACTIVE_UNIFORMS 0*xZ+ GetActiveUniformBlockiv - Count of active 2.15.3 - uniforms in the specified uniform block UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES 0*xnxZ+ GetActiveUniformBlockiv - Array of active 2.15.3 - uniform indices of the specified uniform block UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER 0*xB GetActiveUniformBlockiv 0 TRUE if uniform block 2.15.3 - is actively referenced by the vertex shader UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER 0*xB GetActiveUniformBlockiv 0 TRUE if uniform block 2.15.3 - is actively referenced by the geometry shader UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER 0*xB GetActiveUniformBlockiv 0 TRUE if uniform block 2.15.3 - is actively referenced by the fragment shader New Implementation Dependent State Minimum Get Value Type Get Command Value Description Sec Attribute -------------------------------- -- ----------- ----- ------------------------- ----- ---------- MAX_VERTEX_UNIFORM_BLOCKS Z+ GetIntegerv 12 Maximum number of vertex 2.15.3 - uniform buffers per program MAX_FRAGMENT_UNIFORM_BLOCKS Z+ GetIntegerv 12 Maximum number of fragment 2.15.3 - uniform buffers per program MAX_GEOMETRY_UNIFORM_BLOCKS Z+ GetIntegerv 12 Maximum number of geometry 2.15.3 - uniform buffers per program MAX_COMBINED_UNIFORM_BLOCKS Z+ GetIntegerv 36 Maximum number of uniform 2.15.3 - buffers per program MAX_UNIFORM_BUFFER_BINDINGS Z+ GetIntegerv 36 Maximum number of uniform 2.15.3 - buffer binding points on the context MAX_UNIFORM_BLOCK_SIZE Z+ GetIntegerv 16384 Max size in basic machine 2.15.3 - units of a uniform block MAX_VERTEX_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for vertex 2.15.3 - shader uniform variables in default uniform block MAX_FRAGMENT_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for fragment 2.15.3 - shader uniform variables in default uniform block MAX_GEOMETRY_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for geometry 2.15.3 - shader uniform variables in default uniform block MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for vertex 2.15.3 - shader uniform variables in all uniform blocks (including default) MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for fragment 2.15.3 - shader uniform variables in all uniform blocks (including default) MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS Z+ GetIntegerv * Number of words for geometry 2.15.3 - shader uniform variables in all uniform blocks (including default) UNIFORM_BUFFER_OFFSET_ALIGNMENT Z+ GetIntegerv 1 Minimum required alignment 2.15.3 - for uniform buffer sizes and offsets * Minimum value for OpenGL 3.1 is (MAX_\n_UNIFORM_BLOCKS * MAX_UNIFORM_BLOCK_SIZE) + MAX_\n_UNIFORM_COMPONENTS. Minimum value prior to OpenGL 3.1 is MAX_\n_UNIFORM_COMPONENTS. Sample Code //////////////////////////////////////////////////////////////////////////// Example: Full code of a simple use case: updating a group of variables in a real shader. //////////////////////////////////////////////////////////////////////////// //Platform-specific includes go here #define glError() { \\ GLenum err = glGetError(); \\ while (err != GL_NO_ERROR) { \\ printf(\"glError: %s caught at %s:%u\", \\ (char*)gluErrorString(err), __FILE__, __LINE__); \\ err = glGetError(); \\ exit(-1); \\ } \\ } // globals int initialized = 0; int width=640; int height=480; GLfloat wf,hf; //uniform names GLchar* names[] = { \"SurfaceColor\", \"WarmColor\", \"CoolColor\", \"DiffuseWarm\", \"DiffuseCool\" }; GLuint buffer_id, uniformBlockIndex, index, vshad_id, fshad_id, prog_id; GLsizei uniformBlockSize; GLint singleSize, offset; GLfloat colors[] = { 0.45,0.45,1,1, 0.45,0.45,1,1, 0.75,0.75,0.75,1, 0.0,0.0,1.0,1, 0.0,1.0,0.0,1, }; void reshape(int w, int h) { width = w; height = h; wf = (GLfloat) width; hf = (GLfloat) height; glMatrixMode(GL_PROJECTION); glLoadIdentity(); gluPerspective(60.0, wf/hf, 0.1, 100.0); } void init_opengl() { reshape(width, height); //load_shader and link_program are utility functions omitted here vshad_id = load_shader(GL_VERTEX_SHADER, \"gooch.vs\"); fshad_id = load_shader(GL_FRAGMENT_SHADER, \"gooch.fs\"); prog_id = glCreateProgram(); glAttachShader(prog_id, vshad_id); glAttachShader(prog_id, fshad_id); link_program(prog_id); //Update the uniforms using ARB_uniform_buffer_object glGenBuffers(1, &buffer_id); //There's only one uniform block here, the 'colors0' uniform block. //It contains the color info for the gooch shader. uniformBlockIndex = glGetUniformBlockIndex(prog_id, \"colors0\"); //We need to get the uniform block's size in order to back it with the //appropriate buffer glGetActiveUniformBlockiv(prog_id, uniformBlockIndex, GL_UNIFORM_BLOCK_DATA_SIZE, &uniformBlockSize); glError(); //Create UBO. glBindBuffer(GL_UNIFORM_BUFFER, buffer_id); glBufferData(GL_UNIFORM_BUFFER, uniformBlockSize, NULL, GL_DYNAMIC_DRAW); //Now we attach the buffer to UBO binding point 0... glBindBufferBase(GL_UNIFORM_BUFFER, 0, buffer_id); //And associate the uniform block to this binding point. glUniformBlockBinding(prog_id, uniformBlockIndex, 0); glError(); //To update a single uniform in a uniform block, we need to get its //offset into the buffer. glGetUniformIndices(prog_id, 1, &names[2], &index); glGetActiveUniformsiv(prog_id, 1, &index, GL_UNIFORM_OFFSET, &offset); glGetActiveUniformsiv(prog_id, 1, &index, GL_UNIFORM_SIZE, &singleSize); glError(); glViewport(0, 0, width, height); } void render() { glClearColor(0.0, 0.0, 0.0, 0.0); glClear(GL_DEPTH_BUFFER_BIT|GL_COLOR_BUFFER_BIT); glUseProgram(prog_id); glEnable(GL_DEPTH_TEST); glMatrixMode(GL_MODELVIEW); glLoadIdentity(); glTranslatef(0, 0, -4); glColor3f(1.0, 1.0, 1.0); glBindBuffer(GL_UNIFORM_BUFFER, buffer_id); //We can use BufferData to upload our data to the shader, //since we know it's in the std140 layout glBufferData(GL_UNIFORM_BUFFER, 80, colors, GL_DYNAMIC_DRAW); //With a non-standard layout, we'd use BufferSubData for each uniform. glBufferSubData(GL_UNIFORM_BUFFER_EXT, offset, singleSize, &colors[8]); //the teapot winds backwards glFrontFace(GL_CW); glutSolidTeapot(1.33); glFrontFace(GL_CCW); glutSwapBuffers(); } void display() { if(!initialized) { init_opengl(); initialized = 1; } render(); } int main (int argc, const char** argv) { //GLUT initialization goes here } // Vertex shader for Gooch shading // Author: Randi Rost // Copyright (c) 2002-2006 3Dlabs Inc. Ltd. // See 3Dlabs-License.txt for license information vec3 LightPosition = vec3(0.0, 10.0, 4.0); varying float NdotL; varying vec3 ReflectVec; varying vec3 ViewVec; void main(void) { vec3 ecPos = vec3 (gl_ModelViewMatrix * gl_Vertex); vec3 tnorm = normalize(gl_NormalMatrix * gl_Normal); vec3 lightVec = normalize(LightPosition - ecPos); ReflectVec = normalize(reflect(-lightVec, tnorm)); ViewVec = normalize(-ecPos); NdotL = (dot(lightVec, tnorm) + 1.0) * 0.5; gl_Position = ftransform(); } // Fragment shader for Gooch shading, adapted for ARB_uniform_buffer_object #extension GL_ARB_uniform_buffer_object : enable layout(std140) uniform colors0 { float DiffuseCool; float DiffuseWarm; vec3 SurfaceColor; vec3 WarmColor; vec3 CoolColor; }; varying float NdotL; varying vec3 ReflectVec; varying vec3 ViewVec; void main (void) { vec3 kcool = min(CoolColor + DiffuseCool * SurfaceColor, 1.0); vec3 kwarm = min(WarmColor + DiffuseWarm * SurfaceColor, 1.0); vec3 kfinal = mix(kcool, kwarm, NdotL); vec3 nreflect = normalize(ReflectVec); vec3 nview = normalize(ViewVec); float spec = max(dot(nreflect, nview), 0.0); spec = pow(spec, 32.0); gl_FragColor = vec4 (min(kfinal + spec, 1.0), 1.0); } Examples The following example illustrates the rules specified by the \"std140\" layout. layout(std140) uniform Example { // Base types below consume 4 basic machine units // // base base align // rule align off. off. bytes used // ---- ------ ---- ---- ----------------------- float a; // 1 4 0 0 0..3 vec2 b; // 2 8 4 8 8..15 vec3 c; // 3 16 16 16 16..27 struct { // 9 16 28 32 (align begin) int d; // 1 4 32 32 32..35 bvec2 e; // 2 8 36 40 40..47 } f; // 9 16 48 48 (pad end) float g; // 1 4 48 48 48..51 float h[2]; // 4 16 52 64 64..67 (h[0]) // 80 80..83 (h[1]) // 4 16 84 96 (pad end of h) mat2x3 i; // 5/4 16 96 96 96..107 (i, column 0) // 112 112..123 (i, column 1) // 5/4 16 124 128 (pad end of i) struct { // 10 16 128 128 (align begin) uvec3 j; // 3 16 128 128 128..139 (o[0].j) vec2 k; // 2 8 140 144 144..151 (o[0].k) float l[2]; // 4 16 152 160 160..163 (o[0].l[0]) // 176 176..179 (o[0].l[1]) // 4 16 180 192 (pad end of o[0].l) vec2 m; // 2 8 192 192 192..199 (o[0].m) mat3 n[2]; // 6/4 16 200 208 208..219 (o[0].n[0], column 0) // 224 224..235 (o[0].n[0], column 1) // 240 240..251 (o[0].n[0], column 2) // 256 256..267 (o[0].n[1], column 0) // 272 272..283 (o[0].n[1], column 1) // 288 288..299 (o[0].n[1], column 2) // 6/4 16 300 304 (pad end of o[0].n) // 9 16 304 304 (pad end of o[0]) // 3 16 304 304 304..315 (o[1].j) // 2 8 316 320 320..327 (o[1].k) // 4 16 328 336 336..347 (o[1].l[0]) // 352 352..355 (o[1].l[1]) // 4 16 356 368 (pad end of o[1].l) // 2 8 368 368 368..375 (o[1].m) // 6/4 16 376 384 384..395 (o[1].n[0], column 0) // 400 400..411 (o[1].n[0], column 1) // 416 416..427 (o[1].n[0], column 2) // 432 432..443 (o[1].n[1], column 0) // 448 448..459 (o[1].n[1], column 1) // 464 464..475 (o[1].n[1], column 2) // 6/4 16 476 480 (pad end of o[1].n) // 9 16 480 480 (pad end of o[1]) } o[2]; }; Issues (1) How are offsets to elements in a uniform buffer correlated to uniform locations? Resolved: Traditional uniform locations were used in the glUniform API to access the private uniform storage. This API does not allow the use of glUniform to update uniforms stored in uniform blocks. Instead it uses the various means to update buffer objects, and exposes the byte offsets of the uniforms in the buffer object. So, in short, uniform locations and uniform offsets are similar concepts but unrelated. (2) Should uniforms declared bindable be excluded from a uniform buffer? Resolved: No, however, if a bindable uniform is declared inside a named uniform uniform block, the bindable declaration and all associated behavior of the bindable uniform extension will be superceded by the mechanisms defined in this extension to obtain information about the location of uniforms and to update the values of those uniforms. In other words, if the bindable modifier is used on a uniform declared within a named uniform block, it will be ignored. (3) Are there restrictions on the data types or the order in which uniforms are declared that are to be included as part of the uniform buffer? Resolved: The only restriction is that sampler uniforms can not be stored in a uniform buffer object. All other uniform types can be stored in a uniform block. (4) Should a uniform buffer be split into multiple uniform buffers on a per data type basis to simplify the buffer offset interface ? Resolved: No. This violates the intended \"generic data store\" convention of buffer objects. Users of this extension are free to group their uniform definitions on a per data-type basis in this manner and, indeed, it may, on some implementations, result in a more efficient uniform update model. (5) Should uniform buffers be scoped per shader (program stage) rather than per program (as in GLSL) ? Resolved: No, this extension does not change the per-program scope of uniforms. Uniforms in a uniform block, like traditional GLSL uniforms, are global to a program object. It's tricky because allowing uniforms to have per-stage scope exposes both a feature and the possibility for an application programming error. feature: an application that wants to use a uniform \"foo\" in two stages and wants uniform \"foo\" has different layouts and/or values in each stage (or possibly simply does not care if they do) vs. error: an application that wants to use a uniform \"foo\" in two stages and does not want them to have different values, but *accidentally* defines \"foo\" in each stage differently or binds different uniform buffers to each stage. Rather than enable this feature (and simultaneously add possibility for error) in this extension, we defer the choice to a future extension. Note however, some of the motivation for a per-stage scope for uniform names comes from a broader desire to augment the GLSL API with a set of per-stage program objects that do not need to be linked at all. This is possibly a valuable addition to the GL API, but is left to be defined by an additional extension. Such a future extension could, if desired, add syntax to the GLSL to allow any uniform (uniform block or default) to be defined with \"per-stage\" scope in a more comprehensive way. (6) Should AttachUniformBuffer take a\nargument? This issue is moot. Earlier versions of this extension included the additional ability to attach a uniform buffer object directly to a progam's uniform blocks instead of going through the per-context uniform buffer binding points. This feature has been deferred, possibly to be added in a future extension. If this routine were to be added and does not take a program argument, then it should work on the currently bound program object, and its name should be changed to ProgramUniformBuffer, to conform to precedent set by FramebufferTexture, et. all. Alternately, if AttachUniformBuffer requires a program argument, it would be for consistency with existing C API to GLSL (i.e., those that attach shaders to program objects and query program objects for information). RESOLUTION: RESOLVED, moot. (7) Should uniforms in a uniform block be identified by location or string? Resolved: By string and also by index (but not location). Name strings will be used to identify uniforms much as they are today. Uniform indices were available before for referring to uniforms because they provide a more efficient update mechanism to specify uniforms. Uniform block indices have been used in this extension for the same reason. The location API not used by this extension and is only relevant for the glUniform* API. RESOLUTION: RESOLVED, moot. (8) What is the order of operations under which a uniform buffer association is made with a program (or shader)? It is known that at very least, that the uniform buffer offsets and strides will be known at link time. Does the uniform buffer need to be attached to the program prior to linking in order to keep these offsets constant or can a uniform buffer be bound to a program at any time post-link effectively acting as substitute storage for the uniform data? RESOLVED: Uniform buffer objects are bound to the context's uniform buffer binding points, and this can happen at any time. However, the association of a program's uniform block to the context's uniform buffer binding points can only happen after linking because only then are uniform block indices known. (9) Can the existing Uniform API be used to update values in a uniform buffer? Resolved: No. The Uniform* API won't update values in a uniform buffer, which is reinforced by the fact that uniform block uniforms do not have a location. (10) When is the size of a uniform block's storage known? Resolved: Only after linking. Once a program is linked, the storage needed for a given uniform block can be determined by querying for UNIFORM_BLOCK_DATA_SIZE. If a uniform block needs more storage than the buffer object bound to the associated uniform buffer binding point can provide, results are undefined. This is no different than fetching off the end of an array. (11) Is it an error to call AttachUniformBuffer prior to linking the program designated by\n? Resolved. This issue is moot because the AttachUniformBuffer was removed/deferred to a future extension. But if this API were added, then yes. INVALID_VALUE is generated if AttachUniformBuffer is used to attach a buffer to an invalid uniform block index. Prior to linking, there are no uniform block indices. (12) Some hardware does not support some of the GLSL data types natively (bools or ints perhaps). What limitations do we have in exposing the raw uniform data storage via the buffer object API ? Resolved: None, but note that some implementations without native support for these data types may have to copy the data in these data types into some more native data types. Also, queries are provided to expose the layout of the buffer objects to allow the buffers to be packed properly. (13) Are there expected limitations for dead uniform elimination using this extension? Resolved: yes. For starters, when using the \"std140\" layout, an implementation may not alter the storage layout in any way. This limitation includes dead uniform elimination. The standard layout must remain unchanged because an application will depend on it rather than querying for uniform offsets/strides. When using the \"shared\" layout, dead uniform elimination is again excluded because different uniforms could be eliminated based on different shaders' uniform usage. In order to preserve shareability of the uniform blocks, the full contingent of uniforms must remain. For the \"packed\" layout, an implementation may take the liberty of eliminating uniforms and uniform blocks that are not used by the paired shaders. Here, limitations exist only for arrays. Dead elements may be stripped from the end of an array that is never dynamically dereferenced. An application must query UNIFORM_SIZE before loading array data into the uniform buffer to ensure that trailing elements exist. Issue (24) deals with stripping leading elements from an array, and issue (25) deals with stripping arbitrary elements from an array, both of which are currently disallowed. Note that the default uniform block always exists even if it is empty. (14) Is it necessary to provide array uniform element offsets into a uniform buffer object? If so, this suggests string parsing of things such as \"myuniform[12]\". If not, this assumes array strides be guaranteed based on array data type for all hw platforms? Resolved: No. The stride is provided explictly by querying UNIFORM_ARRAY_STRIDE with GetActiveUniformsiv. (15) How are the values from static initializer values propagated to a buffer object once it is attached? Resolved: Static initialization values declared in a shader mapped to a uniform buffer are disallowed by the grammar and must be established through writes to the uniform buffer. (16) Is GetUniformBlockIndex needed? This information can be obtained (in reverse mapping) from GetActiveUniformBlock. Resolved: Yes. GetUniformBlockIndex allows the uniform block database to be queried in the most natural manner: step 1) do the expensive conversion from a uniform block name to a uniform block index, step 2) use the uniform block index to obtain all other uniform block data, which is a simple array dereference, not a search. (17) is GetUniformIndex needed? This information can be obtained (in reverse mapping) from GetActiveUniform. Resolved: Yes. See issue (16). (18) Should we add a separate function GetActiveUniformBlockBufferSize instead of using GetActiveUniformBlock to return everything. Resolved: No. This issue became moot when the more general function GetActiveUniformBlockiv was added. (19) Should we provide a mechanism for iterating over the uniforms in a particular uniform block? Resolved: Yes. This is provided by querying UNIFORM_BLOCK_ACTIVE_UNIFORMS with GetActiveUniformBlockiv. (20) Should we provide a means for the application to query the desired storage format for integers, booleans, and matrices, or should we specify a format and force non-conforming implementations to do a conversion? RESOLUTION: No queries will be introduced. Implementations that cannot handle the prescribed storage formats must convert as necessary. See also issue (48) (21) Should we delete the integer and boolean storage types in favor of implementation repacking of the data when the hardware doesn't support it? RESOLUTION: RESOLVED, no. Hardware that doesn't support the types must repack the uniform data if needed. This is true for all layout options. (22) How does the program notice new changes to the uniform buffer object? Should we add a new \"UpdateUniforms()\" call or use AttachUniformBuffer(), or UseProgram() to realize changes. RESOLUTION: Following the \"standard\" way in which object changes are noticed, the buffer object in question must be re-bound or re-attached if the changes to the buffer object come from another context. If the changes come from this context, then the intent is to follow the general object model decision here that governs how child/container object state changes are made. [Currently, this means that changes by this context will be noticed at next draw time, at the latest]. (23) The naming convention choosen for GetActiveUniformsiv and GetActivePartitionsiv is not a simple matter. First, considering that the list of uniforms passed into these routines must be active uniform indices, and is an error if not, suggests that the name \"Active\" in these function calls is redundant. GLSL established a precedent of using \"Active\" in the names of functions that require their uniform parameters to consist solely of active uniforms. For these routines, it is an error to include an inactive uniform as one of their input parameters. Consistency with this GLSL precedent is the reason we've choosen to include \"Active\" in these routine names. Second, note that GetActiveUniformsiv does not \"get active uniforms\" and GetActiveUniformBlocksiv does not \"get active uniform blocks\". There is a compelling argument therefore that these names are counterintuitive. In reality, these routines return parameters of active uniforms and active uniform blocks rather than the uniforms or uniform blocks themselves. Again, looking back at GLSL precedent note the conventions used for both GetProgramiv and GetShaderiv. Both of these routines have a\nargument and both of these routines are in fact returning parameters of programs and shaders respectively however \"Parameters\" was not included in the name. Further challenging this second point are two other considerations. First, the GL spec prior to GLSL does in fact use \"Parameters\" in the name of functions that match this pattern. Second, this spec itself includes the name of the output parameter in the name (specifically calls to get Indices and Names). In the end, because this specification has to work within the GLSL framework, it was decided that this precendent should prevail over all others. Therefore, these routines will not include \"Parameters\" in their names. Resolved: See above. (24) Do we need to be able to query UNIFORM_START to get the index of the first active element of an array? An application must query UNIFORM_SIZE to find the extent of an array at runtime because the GLSL compiler may have eliminated elements from the end of a static array during dead code elimination. If the application is not required to similarly query UNIFORM_START, the compiler must be prevented from eliminating elements from the start of an array. For example, if an application declares \"uniform float myFloat[10];\" and accesses only the single element myFloat[7] in the shader text, the compiler may eliminate elements 8-9 only. Querying UNIFORM_SIZE will give 8, and UNIFORM_OFFSET will give the offset of element 0. If we add UNIFORM_START, in this example, querying UNIFORM_SIZE will give 1, UNIFORM_START will give 7, and UNIFORM_OFFSET will give the offset of element 7 in the uniform buffer. Purely for symmetry, it seems that the compiler should be as free to strip leading elements as it is to strip trailing elements. After additional discussions, however, the working group decided not to introduce this complexity. This feature could be layered as an additional extension if desired. RESOLUTION: RESOLVED (25) Following issue (24), should we provide a mechanism to allow the compiler to strip *any* dead elements from a uniform array without restriction, not just leading and trailing elements? Resolved: No. Too cumbersome for the application to use. (26) Should we make any guarantees about the ordering of uniforms in the active uniform array, relative to their uniform block number? It might be useful to guarantee that the ordering of the uniforms in the active uniform array is such that all uniforms in a single uniform block form a contiguous subrange of the active uniform array. On the other hand, just knowing the order is probably not enough since you need to know offsets/strides, packing, etc. This extension provides uniform block-based uniform updates. This level of organization is efficient and requires no further augmentation as this issue suggests. RESOLUTION: RESOLVED, no (27) What is the difference between MAX_LOGICAL_UNIFORM_BUFFERS and MAX_COMBINED_UNIFORM_BUFFERS? MAX_LOGICAL_UNIFORM_BUFFERS is the maximum number of uniform buffer binding points on the context. MAX_COMBINED_UNIFORM_BUFFERS is the maximum number of uniform buffers that any one program can use at one time. Note, see issue (46) for a related issue with textures. RESOLUTION: RESOLVED (28) Should we have versions of GetActiveUniforms and GetActiveUniformBlocks that return intptr types so a cast is not required. No. Another extension can add them, and they have no real utility at this time except causing the app to allocate twice as much storage to store values that can't exceed 32 bits. RESOLUTION: RESOLVED, No. (29) Transform feedback writes primitive information to a buffer object tightly arranged and in accordance with the size of the attributes designated for transform feedback (or varyings thereof). If uniform buffers are to leverage data supplied from the transform feedback operation, yet uniforms are not guaranteed to be tightly packed, how can one reasonably use transform feedback to populate uniform buffers? DISCUSSION: As it stands, existing implementations pack uniform definitions on 16 byte boundaries, 4 byte boundaries or are tightly packed. If this is known for a given implementation, uniform declarations could of course be made such that they lined up on these boundaries. However, without a dedicated queryable interface in the GL C API, there is no way to guarantee the portability of this logic. RESOLUTION: resolved, compatibility with XFB output is only guaranteed for vec4 types in a \"std140\" layout uniform block: In order to facilitate the read-only nature of uniform and transform feedback data formatting, we've added to this specification a uniform buffer \"std140\" layout qualifier guarantee of vec4 types being tightly packed. This layout guarantee will provide portability of applications that wish to use transform feedback in conjunction with uniform buffers as they can simply rely on this data arrangement, declaring their uniforms accordingly, to allow ARB_uniform_buffer_object and EXT_transform_feedback to interoperate. (30) Should the \"active\" keyword in shader text be declared per uniform or per uniform block ? Note, this issue is mostly moot, as we've decided to use a different syntax in the GLSL. Earlier versions of this spec leveraged the concept of 'active' uniforms from GLSL that were defined with the initial GLSL API. The discussion that follows pertains to a feature where the user can declare uniforms and uniform blocks as active explicitly. DISCUSSION: Declaring a uniform active has the advantages of simplicity and little additional spec language to describe behavior. When a uniform is declared active, all of its members are considered active (for structs and arrays) and therefore the arrangement of the data in that uniform can be guaranteed to be consistent. Consistency of this uniform data arrangement can be used to share the uniform across muliple programs without worrying about dead code elimination changing the offsets and strides of uniform data. Declaring uniform blocks active has some of the advantages that were primary motivating factors for this specficiation being written. Namely, that uniforms did not have to be aggregated into structures in order to update them efficiently. In this case, uniforms don't have to be aggregated into structs in order to share them easily. Another advantage is the logical distinction of a group of shared uniforms that is analogous to how the uniform buffer object, also a shared entity, that backs them. If a uniform uniform block is declared active, all uniforms therein are considered active. It is presumed under this model, that an advisable usage pattern would be to gather the declaration of shared uniforms of multiple shaders into an atomic shader source call. Then each individual shader would carry declarations of uniforms unique to themselves. GLSL allows piecewise declaration of uniforms in multiple modules in a program. Piecewise declaration of shared uniform blocks carries with it some difficulties because missing pieces can change the layout of the uniform block. A) Should we disallow piecewise construction of uniform blocks declared active by setting a compile time error if this is attempted ? RESOLVED: Yes, piecewise construction of uniform blocks will be allowed. Proposal for active uniform block demarcation: Active uniform blocks are declared as followed: active uniform block foo; uniform\na; uniform\nb; uniform\nc; uniform block; The first uniform block delimiter names the uniform block. The second uniform block, with no name argument, terminates the \"foo\" uniform block and indicates that any subsequent uniform definition will be part of the default uniform block. Subsequent declarations referring to uniform block \"foo\" augment the contents of the uniform block. These subsequent declarations, of course, can appear within the same shader or within other shader sources in the same program. This aggregation mechanism, and the use of piece-wise definitions of uniform blocks, has sharing implications. Considering the following example: ***************************** PROGRAM A Text: active uniform block foo; uniform\na; uniform\nb; uniform block; ***************************** PROGRAM B Text: active uniform block foo; uniform\nb; uniform\na; uniform block; ... some place later in the program text active uniform block foo; uniform\ne; uniform\nd; uniform block; ***************************** Both the order and the number of uniforms in the aggregate definition of 'foo' in program B must be considered for sharing the uniform buffer backing A & B corresponding to uniform block 'foo'. First, order. To avoid potential confusion with order of declarations of uniforms, all uniforms declared in a uniform block will be sorted in an implementation defined manner. By doing so, the implementation will allow sharing of uniform buffers with identical uniform declarations by name, type and number, but arranged in different orders. Second, mismatches in declarations of uniforms within 'foo' between two different programs. Because uniforms are sorted, partial matches of uniform declarations within uniform blocks are not guaranteed to have the same offsets when the buffer is bound to different programs. In our example, there are no guarantees that the offset of uniform 'a' and the offset of uniform 'b' would be the same in uniform block foo of program 'A' when compared to program 'B'. Applications must therefore use care when attempting to share uniform buffers between multiple programs because any mismatch in uniform name or type or the number of uniforms themselves between uniform block declarations will result in offsets without correlation and application errors should be expected if any assumptions about these offsets is made otherwise. This sharing behavior if of particular significance when defining shaders as it suggests that the shaders themselves, if they choose to define uniform blocks piecewise across given program text. This sharing model suggests defining all uniform uniform blocks that are expected to be shared as standalone shader text definitions to logically segragate them from uniform block declarations that can be changed in a piecewise fashion. In this manner, the logically separated shared uniform uniform block can be handled as a distinct ShaderSource call and effectively act as a header file where the uniform block definition is guaranteed to be the same when used in multiple programs thus allowing sharing and consistent offsets. RESOLUTION: RESOLVED Partitions, uniforms, and varyings can all have the \"active\" keyword applied to them. See rules q - t in the rules and concepts list following the opening summary to this spec. The resolution of issue (34) to use struct-like syntax for uniform block definition closes the issue on piecewise definition of uniform blocks discussed above. (31) ActiveVaryingNV() uses the GL C API to declare a varying active in contrast to declaring uniforms/uniform uniform blocks active as suggested in this specification. Is this inconsistency a concern ? RESOLUTION: RESOLVED, moot. Earlier versions of this spec declared uniforms and uniform blocks as active, and optionally extended this to varyings as well. Later versions of this spec deferred this concept out of the extension. The declaring a varying as active via function call requires that this call is made prior to link time and that it identifies the varying using a name string. It is more efficient to manage program resources using indices and is better in terms of locality of reference to make 'active' declarations in program text. We should consider whether we might want to add this back in in a future extension. (32) GetVaryingLocationNV() returns -1 if the designated name doesn't exist. Should we return -1 rather than a special purposed token if a uniform name doesn't exist to follow this precedent ? RESOLUTION: RESOLVED This specification uses indices which are unsigned integers and therefore our unsigned value of 0xFFFFFFFF is not called \"-1\" but acts effectively the same on platforms where GLint is 32-bit twos-complement. Also note, uniform (and varying locations) are signed which allows them to use -1 as a signifier, but uniform (and uniform block) indices are unsigned because they are used to iterate through uniforms (and uniform blocks). (33) Which uniform buffer object commands must be excluded from display lists? RESOLUTION: Resolved When used with 3.1 (where display lists have been removed altogether) obviously, this question is moot. For GL 2.0/3.0, this should be resolved with the following precedents: BindUniformBlock should follow the precedent of BindBufferRange and BindBufferOffset which does not get included in display lists UniformBlockBinding should follow the precedent of glUniform (for setting samplers) which *does* get included in display lists. Note, the GL 2.1 spec says (p.244, section 5.4) that \"GL commands that source data from buffer objects dereference the buffer object data in question at display list compile time, rather than encoding the buffer ID and buffer offset into the display list. Only GL commands that are executed immediately, rather than being compiled into a display list, are permitted to use a buffer object as a data sink.\" The same rules would affect uniform blocks sourcing data from buffer objects. So this basically means that only BindUniformBlock is excluded, (since all queries are already excluded), however see issue (55). Since we use the BindBufferOffset/BindBufferRange API introduced by OpenGL 3.0, and those routines are already excluded, there's no additions to the display list exclusion list needed. (34) What should the syntax of uniform block demarcation be ? DISCUSSION: The two following syntaxes were considered: uniform block foo; uniform\na; uniform\nb; uniform block; In this example, the \"uniform block\" keyword both opens and closes the uniform block. Second, a struct-like syntax: uniform myUniformBlock { int a; vec4 b; }; and packed uniform myUniformBlock { int a; vec4 b; }; where \"packed\" means that the uniform block might be optimized by the compiler to eliminate/re-order uniforms. This is functionally equivalent to the current uniform block syntax in this spec. RESOLUTION: RESOLVED, using the \"struct-like\" syntax above. (35) Should UBOs be bound to context binding points rather than to programs themselves ? DISCUSSION: Attaching UBOs to programs versus the context has the following advantages: UBOs and programs have natural encapsulation boundaries that fit with the conventions of object-oriented design programming. Alternately, binding UBOs to the context has the following advantages: Migration to the possible program environment object design expected in future versions of OpenGL will be handled more easily and won't require a semantics change because these context bindings will all be moved collectively to the PEO and UBO attachments will not have to be handled as a \"special case\" item. If we support per-context per-stage bindings, then we'll need the following additions to this extension: - a set number of binding points on the context for each stage (vertex/fragment/geometry) VERTEX_SHADER_BINDING_0..n GEOMETRY_SHADER_BINDING_0..n FRAGMENT_SHADER_BINDING_0..n or alternately, a unified set of per context bindings SHADER_BINDING_0..n - a new routine to bind a UBO to a per-stage context binding point BindUniformBuffer(enum target, uint uniformBlockIndex, uint buffer); - a new routine that defines the mapping of a uniform block name string to a per-stage binding point index void UniformBlockBinding(uint program, uint unit, const char* name); RESOLUTION: RESOLVED, Note per-context and per-program bindings serve two distinct use cases. Per-context: assumes that there is generally many to one mapping between programs and given set of uniform buffers. Per-program: assumes that there is a one to one mapping between programs and a given set of uniform buffers. The original ARB \"assembly-language\" programming extensions serviced both use cases (with \"program locals\" and \"program environment\" parameters). The GLSL programming API dropped the \"program environment\" / per-context storage of uniforms in favor of per-program only storage for uniforms. This API currently supports only the context binding model, but a future extension could add the per-program-object bindings if desired. (36) How is the query for MAX_{FRAGMENT|VERTEX}_UNIFORM_COMPONENTS affected by UBOs? DISCUSSION: MAX_{FRAGMENT|VERTEX}_UNIFORM_COMPONENTS traditionally referred to the limited amount of dedicated (often register based, sometimes per-stage) uniform storage. For implementations that support directly reading uniforms from arbitrary memory, the limit on uniform storage is generally not quantified by a single number of uniforms. Instead it is quantified by two numbers: the number of separate buffers that can be read at one time (per stage), and the sizes of one of those buffers. On the other hand for implementations that wish to support this extension but that still have this limited amount of dedicated uniform storage this single MAX_{FRAGMENT|VERTEX}_UNIFORM_COMPONENTS value is still valid. RESOLUTION: Resolved, as follows: We added a new set of integer implementation-dependent queries, named MAX_COMBINED_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_COMPONENTS. These would indicate the maximum total number of uniforms available between the default uniform block and all uniform blocks. For this ARB version of the extension, the minimum maximum would be MAX_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_COMPONENTS. For the 3.1 core version, the minimum maximum would be larger: MAX_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_BLOCKS * MAX_UNIFORM_BLOCK_SIZE + MAX_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_COMPONENTS. (37) Do we need MAX_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_BUFFERS or can we merge these into a single value MAX_UNIFORM_BUFFERS that is the same for the 3 stages? DISCUSSION: 3 separate queries is needed only if we think implementations would have different values for each stage. RESOLUTION: currently 3 queries, plus a \"combined\" query. (38) What's the deal with UniformBlockBinding()? How does it work? What is it for? DISCUSSION: UniformBlockBinding can be defined in two different ways, depending on the precedent we'd like to use. It can either be similar to a uniform sampler (i.e., an indirection table that can choose a particular buffer to use after linking), or an attribute location (i.e., an indirection table that can choose a particular buffer to use PRIOR to linking). The current API chooses the former precedent (i.e., uniform samplers), and as a result, UniformBlockBinding can be called (in fact, must be called) after linking the program. If we desired to change this behavior, we'd need to modify UniformBlockBinding to take a uniform block *name* intead of *index*, because a uniform block index is only defined post-link. This is workable, but slightly less flexible for the developer, at the cost of an indirection. RESOLUTION: Use the \"sampler\" precedent, UniformBlockBinding is called post link. (39) Does the matrix packing need to be \"per program\" state or \"per implementation\" state? DISCUSSION: Is the choice of matrix packing really \"per program\"? If not, should we just use the per-context queries for this information? The former might be useful if we intend to expose some kind of per-program packing control in the shading language or API. If we don't, then the latter might be simpler. Or do we think we might go further and make this per-uniform state in the future? if so, then the current per-program query is also insufficient. After discussion with the working group, queries for matrix (and all other uniform layout) will be per-uniform, not per program, so these routines have been removed. RESOLUTION: Resolved, this issue is moot. (40) Are uniform block indices assumed to be \"tightly packed\"? Yes, an implementation will assign consecutive indices to active uniform blocks, starting with zero. Note that there is no prescribed ordering in which indices must be assigned. In other words, which uniform block indices are assigned to which uniform blocks is an implementation choice. An application must call GetUniformBlockIndex to find the mapping. RESOLUTION: Resolved, yes. (41) Is \"uniform block\" the right name? The GLSL group considered many names here: \"uniform blocks\", \"commons\", \"uniform groups\", etc. Regardless of what the GLSL calls these groupings, we need *some name* that we can describe in the API spec and in the API names. Currently we use \"uniform block\" for this, and the API seems to make sense, but could change if someone has a better name. RESOLUTION: RESOLVED, yes. (42) Should there be an \"offset\" for the base of the ubo so that an application can use collections uniforms within a buffer object? DISCUSSION: If we do this, we'd need an additional/augmented version of BindUniformBuffer that takes an offset, and a queriable required alignment for the offset. See also issue 55. Currently, we do now support this offset (via BindBufferRange) and an alignment query (UNIFORM_BUFFER_OFFSET_ALIGNMENT). The offset is per-context binding point state. We probably want to pick up UNIFORM_BUFFER_START and UNIFORM_BUFFER_SIZE queries, too. See issue (65) to track whether we add these. RESOLUTION: Resolved, there should be an offset for the base of a uniform block within a UBO. If an implementation can not support non-zero offsets, they can set UNIFORM_BUFFER_OFFSET_ALIGNMENT to a sufficiently large value. (43) Do we need the versions of the uniform queries that query the GL for the properties/names of multiple uniforms at one time? Or can we simplify those apis to only query for the property/name of one uniform at a time? DISCUSSION: The multiquery apis are useful for getting lists of uniform data at once, but are more complicated (require arrays of pointers to output values). Do we need these? RESOLUTION: Resolved, we'll replace GetActiveUniformNames with GetActiveUniformName, but keep the rest which have solid use cases. (44) What is the default value for UNIFORM_BLOCK_BINDING? Having the default values be set equal to the uniform block index at link time would be convenient. This would make it unnecessary for apps to call glUniformBlockBinding unless they wanted a non-default mapping. After some discussion, using texture samplers as precedent, then the default value should be zero. RESOLUTION. Resolved, default value is zero. (45) What is the default value of UNIFORM_BLOCK_BUFFER_BINDING? This is moot without the AttachUniformBuffer API. This was the query for the uniform buffer object bound directly to a uniform block in the program object. If we add this API in a future extension, it seems it should be zero. We would need for the spec to state the precedence of program attachments over context attachments. I.e., if the value of UNIFORM_BLOCK_BUFFER_BINDING is non-zero, then the backing for that uniform block comes from the specified uniform block uniform buffer binding, otherwise it comes from the unit binding, and hence from the context that is currently using the program. RESOLUTION. RESOLVED, moot. (46) How do the logical/combined maximums for UBOs and textures relate to each other? Textures have these queries: MAX_TEXTURE_IMAGE_UNITS maximum textures that can be used by the fragment stage. MAX_COMBINED_TEXTURE_IMAGE_UNITS maximum textures that can be used by all program stages at once. Ideally, MAX_TEXTURE_IMAGE_UNITS would be called \"MAX_FRAGMENT_TEXTURE_IMAGE_UNITS\" Also, most implementations use MAX_TEXTURE_IMAGE_UNITS to define the number of per-context binding points for textures, though technically, there's no requirement that the number of context binding points is equal to the number of fragment textures. For instance, if an implementation had the ability to use more vertex or geometry textures than fragment textures, then this scheme would break down because there would not be enough context binding points for these other stages. This spec tries to avoid this problem with the following queries: MAX_VERTEX_UNIFORM_BLOCKS MAX_GEOMETRY_UNIFORM_BLOCKS MAX_FRAGMENT_UNIFORM_BLOCKS MAX_COMBINED_UNIFORM_BLOCKS (much like \"combined\" for textures) MAX_UNIFORM_BUFFER_BINDINGS (# UBO binding points on context) For symmetry, we'd recommend that we make a similar update to textures in the 3.1 spec: MAX_FRAGMENT_SAMPLERS (= old MAX_TEXTURE_IMAGE_UNITS) MAX_GEOMETRY_SAMPLERS (= old MAX_GEOMETRY_TEXTURE_IMAGE_UNITS) MAX_VERTEX_SAMPLERS (= old MAX_VERTEX_TEXTURE_IMAGE_UNITS) MAX_COMBINED_SAMPLERS (= old MAX_COMBINED_TEXTURE_IMAGE_UNITS) MAX_TEXTURE_IMAGE_BINDINGS (# texture binding points on context) RESOLUTION: Resolved. The texture token name changes should be made in the 3.1 API spec, deprecating the old names. (47) Is using a keyword to specify packed/shared/std140 the best way to manage uniform block packing? What do they mean anyway? DISCUSSION: There are 3 use cases of interest: \"packed\" - implementation may optimize the layout to remove inactive uniforms and otherwise restructure the layout for efficiency. - application must query the GL for the uniform block layout \"shared\" - implementation may optimize the layout but must use the same layout across shaders so that the resulting layout can be shared by multiple shaders - application must query the GL for the uniform block layout \"std140\": - implementation must use a pre-determined layout, defined in this specification. - application need not query the implementation for layout information as it can be determined by reading the shader and the specification Other options considered included: - an API in the GL - a #pragma in the GLSL - gcc style __attribute__ tokens - others? RESOLUTION: resolved, we use a layout qualifier construct which includes identifiers for \"packed\", \"std140\", and \"shared\" which is the intial default. These qualifiers can be used either within a uniform block declaration, or at global scope causing subsequent uniform blocks with unspecified layouts to adopt a new default layout. (48) What is the \"std140\" packing layout? This extension is supposed to define a standard packing layout that applications can choose to use and know the uniform block data layout within the uniform buffer without querying the implementation. The user would need to opt-in to this layout. We need to define what this layout looks like. See also issue (20). RESOLUTION: resolved, standard layout is now in 2.15.3.1.2. (49) Will storage of int/ivec*/uint/uvec*/float/vec* be guaranteed to match the GLint, GLuint, and GLfloat types of the CPU's implementation? What if the CPU and GPU differ? What about indirect renderers? See also issues (20) and (48) RESOLVED: We've never figured out how to properly handle other buffer object extensions (e.g., VBO) in conjunction with indirect rendering with data type differences. This feature should continue that fine (?) tradition. Ignoring indirect rendering, if the native data types of the GLSL executable's processor differs from the client's representation, data should still be extracted from buffer objects using the client's representation. Mechanisms that could be used to accomplish this include: * having the driver making a copy of the buffer object for internal use, doing conversion during the copy; * having the GLSL executable's processor automatically convert data types as they are fetched; or * generating code to be executed by the GLSL executable's processor to manually perform data type conversions. If dealing with data type mismatches turns out to be a problem on some implementations, it might be possible to provide an extension where applications to avoid conversion overhead by storing data using the native data type of the GPU, instead of the CPU. (50) This extension needs to be sanitized to be written against the 2.1 and 3.0 core specs. What are the differences? Aside from the sanity checking for using the right section numbers and such, there are two other changes: 1) GetIntegeri_v doesn't exist in 2.0 so needs to be added by this extension for the 2.0 version 2) The \"max components\" query needs different behavior for a 2.1 vs. a 3.0/3.1 implementation. See issue (36) RESOLUTION: Resolved, interactions section added which details the differences when OpenGL 3.0 is supported. Spec is written against OpenGL 2.1, so that's where the section numbers come from. (51) Do we need to name the default uniform block with index 0 and name \"\"? This is done for symmetry and to allow iterating through all uniform blocks, including the default, and treat them similarly. On the other hand, it's a little weird since the default partition can not be used with a buffer object. On the third hand, maybe some day we will allow that. As a side note, if we go with a name, should it be \"\", or perhaps \"gl_DefaultUniformBlock\" or something like that. RESOLUTION: Resolved, do not reserve block number 0 for the default uniform block. The default uniform block no longer needs a name. If the uniform block index is queried for a uniform that is associated with the default uniform block, -1 is returned. (52) The current extension spec seems to specify \"uint\" indices, but the values in the queries such as GetActiveUniformBlockiv are returned as \"int\" values. Should we fix this? Need to double check the APIs to see if we'd have to duplicate some or all of the queries to make them type safe for signed vs. unsigned ints. RESOLUTION: resolved, No. There are a few other places in the GL query APIs that already suffer from this problem. (53) What are the UNIFORM_BLOCK_REFERENCED_BY_*_SHADER queries used for? The total number of uniform blocks in each stage may be subject to a per-stage limit on some implementations. These queries allow the user to query the program's uniform blocks to see which are used for each stage. RESOLUTION: resolved (54) How do the APIs that use uniform locations relate to the uniforms in named uniform blocks? And how do the APIs introduced by this extension relate to uniforms in the default uniform block? Basically, locations can't be used with uniforms in a uniform block, so that rules out any queries that require locations. However, the query APIs introduced by this extension can be used with all uniforms, including those in a default uniform block. RESOLUTION: resolved (55) Should we use the BindBufferBase/BindBufferRange APIs that were introduced in GL 3.0 instead of BindUniformBuffer? As defined, they'd work fine. One side issue: should the \"offset\" be part of the context binding? or should the uniform blocks get to each select their own offset within a single context binding? If implementations can support the latter, it may allow applications to get by with fewer context bindings. If not, then we should replace BindUniformBuffer with these routines, but for the 2.0 extension version we'd still need to add those routines and duplicate their spec language in this spec. See issue 42 for the resolution of this side issue. RESOLUTION: resolved, yes we should use BindBufferBase/Range. (56) Can a mapping from uniform block to uniform buffer object be queried? On one hand, it seems like GetActiveUniformBlock could handle it. On the other hand, this linking is indirect: a uniform block selects a binding point, and a binding point binds a UBO. The GL *could* do the indirect lookup for you, but the data would only be valid until you changed the unit binding, so it's a little fragile for the implementation to provide this query. RESOLUTION: Resolved, not needed, the user can do this. (57) Should we have MAX_UNIFORM_BUFFER_SIZE or a max size on uniform block data instead? The uniform buffer could be larger than the amount of uniform block(s) data inside it. Also see issue (36). RESOLUTION: Resolved, name is MAX_UNIFORM_BLOCK_SIZE. (58) Is there any expectation that uniforms stay in the order declared for the packed/shared layouts? This might make sharing easier, but is not clear if it's worth it / overly constraining. RESOLUTION: resolved, yes, names/types must retain declaration order (59) Do we need the glsl syntax for declaring arrays of uniform blocks? Deferred this feature to a future extension. RESOLUTION, resolved (60) When using this extension with OpenGL 2.1/3.0, do we require that uniform buffer object names must be generated with glGenBuffers to be used with these new entry points? For OpenGL 3.1 core, there is a blanket requirement to call glGen for object names. For OpenGL 2.x, there is not a requirement to call glGen but in 3.0, user-generated names have been deprecated. For 3.0, we added two new object types (FBO/VAO) that required the user to call glGen, but existing object types (textures/renderbuffers/buffer objects) could be used without calling glGen. We need to decide what to do with this when exporting this extension on 2.1 and 3.0. RESOLUTION: Resolved, this extension does not govern the creation of buffer objects. That's done by BindBuffer, which is not altered by this spec, so on 2.1 and 3.0 you'd be able to use any name, whereas on 3.1 you'd be required to call GenBuffers. (61) Do we need \"instance name\" syntax? RESOLUTION: resolved, deferred for now (62) Why don't the new tokens and entry points in this extension have \"ARB\" suffixes like other ARB extensions? RESOLVED: Unlike a normal ARB extension, this is a strict subset of functionality already approved in OpenGL 3.1. This extension exists only to support that functionality on older hardware that cannot implement a full OpenGL 3.1 driver. Since there are no possible behavior changes between the ARB extension and core features, source code compatibility is improved by not using suffixes on the extension. (63) Should we introduce a query of a program's longest uniform name length, similar to the ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH query of a program's longest uniform block name? RESOLUTION: Resolved, no. ACTIVE_UNIFORM_MAX_LENGTH serves this purpose well enough. No great need for a per uniform block query of the same. (64) What should the UNIFORM_OFFSET query return for uniforms that are associated with the default uniform block? Same for strides? RESOLUTION: Resolved, spec'd to return -1 in these cases. (65) Should we add queries for the base offset and size of the uniform buffer bound to a binding point? What should the names be? DISCUSSION: This would be analogous to the similar transform feedback queries. Names could be UNIFORM_BUFFER_START and UNIFORM_BUFFER_SIZE. RESOLUTION: Resolved, yes. (66) Should we provide some mechanism allow applications to annotate their uniform declarations to specify an offset by hand? Direct3D 10 does. An example of the D3D syntax: cbuffer D3DExample { float4 a : packoffset(c0); // bytes 0-15 float3 b : packoffset(c16); // bytes 256-267 (c0-c15 are all vec4s) float1 c : packoffset(c1.y); // bytes 20-23 } If so, how would we handle a mixed declaration that includes some uniforms with annotations and others without? RESOLVED: An annotation mechanism would be useful for fine-grained application control, but we will defer this. (67) Should we provide a mechanism to expose both row-major and column-major storage of matrices? If no controls are provided in GLSL 1.40, the default resolution for the UBO layout documentation would be to treat all matrices as column-major. We will also need to pick a default orientation for matrices with that use no GLSL language mechanism to declare orientation. Either way, the UBO GL API should provide a GetActiveUniform query to determine if an active matrix is stored in row- or column-major order. RECOMMENDATION: Provide a should have a type modifier for matrix declarations, for example: row_major mat4 matrix1; column_major mat4 matrix2; It may be desirable to have a global control (e.g., a #pragma) to specify that all matrices are row- or column-major. RESOLVED: Yes, we should provide this control. It is now available in the form of uniform block layout qualifiers. The identifiers \"row_major\" and \"column_major\" are allowed, with the latter serving as the initial default. These qualifiers can be specified on a per- matrix basis, a per-uniform block basis (affecting all matrices within the uniform block that have unspecified orders), or globally. In the latter case, all subsequent matrices with unspecified order will adopt a new default order. (68) Should the buffer layout be expressed in terms of standard GL types? For example, should the storage for a \"vec3\" be equivalent to \"GLfloat [3]\"? RESOLVED: Yes. One other alternative would be to specify exact type (e.g., \"32-bit floats using IEEE 754 encoding\", \"32-bit two's complement integers\", etc...). These choices will be roughly equivalent in practice, and it's probably better to use standard GL types. (69) Do we need to pad the end of structures and/or arrays using the standard packing rules? Or should we be able to squeeze data types with small alignment requirements in the \"holes\" left at the end of structures or arrays with larger alignment requirements? uniform ExamplePad { // with without // padding padding comments // ------- ------- ------------------------ struct { // vec3 a; // 0..11 0..11 } b; // add 4B of padding? float c; // 16..19 12..15 vec3 d[2]; // 32..43 16..27 align to 16B due to vec3 // 48..59 32..43 add 4B of padding? float e; // 64..67 44..47 struct { // align to 16B due to\nvec4 f; // 80..95 48..63 ivec2 g; // 96..103 64..71 } h; // add 8B of padding? uint i; // 112..115 72..75 } The strongest argument against padding is compactness. The strongest argument in favor of padding is to have a structure definition that can be matched with a similar structure definition in application code. For example, consider the following GLSL code: uniform Example { vec3 a[10]; float b; }; The standard layout rules suggest that the vec3 members of \"a\" are effectively padded out to vec4's in the array; so the natural C structure would look like: typedef struct { float x, y, z, pad; } vec3InArray; struct Example { vec3InArray a[10]; float b; } The problem is that without padding the end of arrays, the uniform \"b\" will be stored immediately after the last float in a[9], but with the C structure, that word will be consumed by a[9].pad, and \"b\" will be stored one word following. A similar issue arises with structures; common C compilers seem to pad the end of structures to the largest alignment of the atomic types used in the structure. For example, if you have: struct { double a; char b; } c; common compilers will generate code where sizeof(c)==16. We are effectively treating vectors and matrices as atomic types, so it seems to make sense that for GLSL code like: struct { vec4 a; float b; } c; it would follow that sizeof(c)==32. RESOLVED: Yes, we need to pad in support of the reasons above. (70) Should \"bool\" data types be represented as 8-bit quantities (a la GLboolean in most gl.h versions) or 32-bit? RESOLVED: Use 32-bit integers. Using GLboolean (8-bit) would be the closest match to the API types, but some implementations of this standard may prefer 32-bit integers at this point. We don't expect uniform blocks to contain enough bool-typed data where the wasted storage matters significantly. One other option considered was to have an implementation-dependent representation, which could be queried, but requiring applications to query and handle multiple basic data types seemed cumbersome. Even if we did this, we would still want to have a single representation for a fully-defined \"std140\" packing, at least. (71) What happens we are using indirect rendering where the data types used by the client and server differ, due to endianness or some other issues related to basic data type? What happens if the processor running the GLSL executable uses different data type representations than the application? DUPLICATE of issue (49) (72) What parameters should we provide for querying the layout of matrices (and arrays of matrices) in memory? RESOLVED: We expect that matrices will be stored as an array of column vectors or row vectors. There are two possibly independent strides: - bytes between columns/rows within a single matrix - bytes between matrices within an array of matrices The GetActiveUniform*() API for UBO will provide queries for both strides. For single matrices, the stride between columns/rows is the only parameter. Some implementations may provide tightly packed matrices, where a 3x3 column-major matrix might be represented with 9 consecutive floats with a 12-byte (3-float) stride between columns. Others, such as the \"std140\" packing above represents such a matrix as an array of 3 column or row vectors, but pads each row/column for a 16-byte (4-float) stride. For arrays of matrices, two queries would be needed for maximum flexibility. For example, a hypothetical implementation might pack 3x3 arrays tightly as 9 floats, but require that each array in the matrix be aligned on a 16-byte boundary. This would have a column stride of 12B, but would require a matrix stride of 48B, not 3*12=36B. If we didn't care about such implementations, an alternate approach would be to treat an array of N column-major matrices with C columns as though it were an array of N*C column vectors, as in the std140 layout. The stride between matrices would be derived from the stride between columns. Providing multiple queries seems like the safest choice, and doesn't have any significant down-side. The first stride query, between major vectors of a matrix, is UNIFORM_MATRIX_STRIDE. The latter query is actually the same UNIFORM_ARRAY_STRIDE query used for any type of array element. (73) Should GetActiveUniform allow you to query if a matrix is column- or row-major, so an app can determine the layout without knowing how the matrix is declared in the shader? RESOLVED: Yes, UNIFORM_IS_ROW_MAJOR. (74) What's language mechanism should be used for opting into standard layout? At the January 2009 F2F, it was recommended to specify a per-uniform block layout via a language mechanism such as: layout(\n) uniform { ... }; where\nmust be \"std140\" in the current standard. Future extensions and core versions could define additional identifiers (such as \"std140novec4\"). The mechanism could be further extended to include an identifier list if there is ever a need for very fine-grained control. There appears to be a strong desire for a global mechanism that doesn't require individually annotating each and every uniform block. Options considered include the #pragma described above and a GL API call that might set a \"compiler flag\" such as: glProgramParameteri(program, GL_UNIFORM_BLOCK_LAYOUT, GL_LAYOUT_STD140); It was noted that the GL API call, since implementations are permitted to do some or most code generation during glCompileShader(), where a program parameter would not be available. A similar shader parameter call could conceivably be provided. RESOLVED: We've adopted a layout qualifier construct which can be used to specify the \"std140\" standard layout either within a uniform block declaration or at global scope, affecting all subsequently declared uniform blocks with unspecified layout. (75) What is the story behind the \"std140\" packing, and the possible \"std140vec4\" alternative? RESOLVED: The \"std140\" packing is intended to provide a common device-independent layout for uniform blocks that can be supported by all OpenGL 3.1-capable GPUs. Applications using this packing do not need to query the offsets and strides of all its uniforms and can rely on the same packing being used on all OpenGL 3.1 implementations. While some implementations may be able to support a more space-efficient packing, \"std140\" does not attempt to provide any features not available on all platforms. Some of the limitations baked into this packing include: * scalars need to be size-aligned; * vectors are treated as atomic units, and need to be vector-size- aligned; * array elements and structures are aligned/padded to 16-byte boundaries The array/structure restriction is because some implementations treat uniform buffers as arrays of four-component vectors and may not be able to efficiently perform indexed array access with strides less than 16 bytes. The \"std140novec4\" alternate packing illustrates an alternate approach without required 16-byte alignment that might be exposed as a future vendor extension. Future versions of OpenGL/GLSL may choose to provide additional sets of canonical packing rules that may end up being more compact. (76) When using the standard layout, how is UNIFORM_BLOCK_DATA_SIZE determined? RESOLVED: The data size returned by the query is derived by taking the next free byte after all uniform block members (including any specified end-of-array or end-of-structure padding) and rounding up to the next vec4 boundary. It would be equivalent to the offset of a hypothetical vec4 member added to the end of the uniform block. There is no implementation-dependent padding of the uniform block data size when using the standard layout. Revision History (v64, 2011-01-27, jon) - Change return value for start/size queries when no buffer bound from -1 to zero, to match state tables (Bug 7318). (v63, 2011-01-21, pbrown) - Add interaction with ARB_geometry_shader4 to indicate that MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS is defined there. (v62, 2009-03-26, jon) - Remove ARB suffixes for consistency with other extensions simultaneously introduced with new GL core features, intended to enable those features in older drivers. (v61, 2009-02-16, benj) - pickup latest changes to GLSL language (v60, 2009-02-12, benj) - revert the change to silently ignore INVALID_INDEX_ARB within\npassed to GetActiveUniformsivARB - picked up a few proposed language changes from Pat - updated table 2.utype to include types from extensions - added interactions for these extension types - fixed issue (40) resolution (v59, 2009-02-12, benj) - remove INVALID_OPERATION error when\nhas not been linked, and instead just behave appropriately for the case where there are no active uniforms or uniform blocks - added GL 3.0 interaction regarding description of uniform initialization, which is limited to uniforms in the default block (v58, 2009-02-11, jon) - Add some more comments. (v57, 2009-02-11, benj) - restore 80-column width - change _STAGE to _SHADER in UNIFORM_BLOCK_REFERENCED_BY token names - silently ignore INVALID_INDEX_ARB in GetActiveUniformsivARB - clarify that matrices in the default uniform block return 0 for UNIFORM_IS_ROW_MAJOR - Replace Draw* with Begin or commands that perform an implicit Begin since the extension is written against GL 2.1 (v56, 2009-02-11, jon) - Accept some of Pat's edits and remove associated notes/comments. Add my comments on some others. (v55, 2009-02-11, pbrown) - Many edits attempting to make the spec read more clearly. - Added a number of notes and issues in the spec for additional edits. (v54, 2009-02-11, jon) - Note that uniform binding limits change when geometry shaders not supported, and update uniform state variable types. (v53, 2009-02-09, jon) - Restore an error accidentally removed from GetUniformLocation (at least, I think it was accidentaly). (v52, 2009-02-09, jon) - Resolve some issues as recommended by Bruce and leave his comments in for others Benj should look at. - Allow undefined behavior including termination if no buffer is bound backing a uniform block. (v51, 2009-02-08, jon) - Cleanup before core spec integration: - Change definition of INVALID_INDEX_ARB to avoid signed/unsigned conversion questions by making it an unsigned literal (would like to change the name too, it looks too much like an error). - Rephrase some query language for greater consistency with core spec. Duplicated\nerror conditions in each affected call to avoid more state-dependent reading. (v50, 2009-02-08, benj) - resolve last four issues (47), (67), (74), (76) - update the GLSL changes for uniform blocks - update API descriptions to refer to packed/shared/std140 layouts - update the buffer overrun language courtesy of Bruce - rename APPLE to ARB in the issues list - misc. other cleanups (v49, 2009-02-05, benj) - change UBO overrun language to say \"undefined behavior that may lead to GL interruption or termination\" instead of just \"undefined values\" - flesh out Errors section (v48, 2009-02-04, benj) - add query for whether a matrix uniform is row- or column-major - add query for the stride between a matrix uniform's major vectors - apply one description of\nto all uniform query commands - update example code (v47, 2009-02-03, benj) - update packing rules and examples - standardize on \"named\" uniform block instead of \"user-defined\" - refactor UBO spec language so it is blended with old uniform language (v46, 2009-02-03, benj) - update token MAX token names re: issue (46) - rename \"uniform block unit\" to \"uniform buffer binding point\" - updated uniform block binding and uniform buffer binding overview - add queries for uniform buffer start and size re: issue (65) - resolved issues (46), (65), (69) - incorporated many more misc. suggestions from Bruce (v45, 2009-02-02, benj) - rename from APPLE to ARB - assigned token values - misc. suggestions from Bruce, more to come - pull issues over from Pat's packing doc - resolved issues (57), (60), (62), (63), (64), (65) (v44, 2009-01-30, benj) - resolved issues (20), (29), (42) - added MAX_COMBINED_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_COMPONENTS queries with different minimum maxima for before and after GL 3.1, resolving issue (36) - replaced GetActiveUniformNamesAPPLE with GetActiveUniformNameAPPLE, resolving issue (43) - stop reserving uniform block index 0 for the default uniform block, resolving issue (51) - remove language saying uniform buffer range size must be aligned to UNIFORM_BUFFER_OFFSET_ALIGNMENT - make consistent use of \"uniform block unit\" instead of \"uniform buffer unit\" (v43, 2009-01-29, benj) - UNIFORM_BLOCK_NAME_LENGTH changed from 0 to 1 for the default uniform block, since \"\" still has a null terminator - UNIFORM_BLOCK_DATA_SIZE description updated to reflect how offset/stride queries are unnecessary for \"standard\" layout - Add language to GetUniformLocation to say that uniforms in named uniform blocks return -1, and that Uniform* are for loading uniforms of the default uniform block - update discussion of issues (13), (15), (21), (34) to align with current spec - sanitize uniform query descriptions (both pre-existing and new in this extension) to clarify handling of uniforms from default uniform blocks vs. named uniform blocks, resolving issue (54) - rename MAX_UNIFORM_BUFFER_SIZE to MAX_UNIFORM_BLOCK_SIZE per issue (57) - introduce language guaranteeing order of member offsets will match order within declaration per issue (58) - update some section #s (v42, 2009-01-28, benj) - introduce Pat's packing rules, including standard layout, resolving issues (48), (49) - add interactions with extensions and GL 3.0, resolving issue (50) - change names of MAX query names for uniform block per-stage, combined, and binding point limits - introduce BindBufferRange/BindBufferBase in place of BindUniformBufferAPPLE, resolving issue (55) - add missing query language in Chapter 6 - add missing UNIFORM_BUFFER_OFFSET_ALIGNMENT_APPLE from state tables - separate new state from implementation state in state tables - remove instance-name language and arrays of uniform blocks per resolution to issues (59), (61) - fix minor typos and cosmetic issues - reformat some lines to fit in 80 columns - replace tabs with spaces (v41, 2009-01-25, jsandmel) - incorporated resolutions/feedback from Portland F2F - resolved issues (33), (39), (44), (52), (55), (56), (58), (59) - added issue (61) (v40, 2009-01-25, jsandmel) - fixed a few typos noticed by Barthold Lichtenbelt - fixed up some white space in issues list (v39, 2009-01-21, jsandmel) - fixed a few typos noticed by Daniel Koch - added issue (60) (v38, 2009-01-21, jsandmel) - integrated feedback and questions from Bruce Merry - fixed typo in GetUniformIndices (missing const char**) - added length (output) parameter to GetActiveUniformBlockNameAPPLE for symmetry with GetActiveUniform - removed stale matrix packing queries (to be handled more generally with rest of packing language) - fixed wrong error language when validating\narguments to be consistent with generic error language already in GL spec - make GetActiveUniformNamesAPPLE not write NULL to names entries for invalid indices - made\nvalidation the same as GetActiveUniform - added issues (57), (58), (59) (v37, 2009-01-19, jsandmel) - incorporated feedback from Pat Brown - added issues (47) - (56) - added note to interactions section - clarified layouts in overview section - fixed wrong error code in GetActiveUniformBlockivAPPLE - added additional description to parameters in GetActiveUniformNamesAPPLE - added note to GetActiveUniformsivAPPLE to make it more similar to GetActiveUniform wrt to program linking and type/size queries. - added todo for UniformBlockBindingAPPLE to clarify over better based on feedback from pat - increased MAX_UNIFORM_BUFFER_SIZE_APPLE from 64 to 16k - unresolved issue (33) re: display lists (v36, 2009-01-14, jsandmel) - added issue (48) requesting the standard layout and referred to this in various places - added missing UNIFORM_BLOCK_NAME_LENGTH_APPLE state variable - corrected references of GetIndexedIntegerv with GetIntegeri_v - fixed typo in description of UNIFORM_BLOCK_INDEX_APPLE - clarified UNIFORM_OFFSET_APPLE description further - clarified that several constantscan be queried with GetIntegerv - fixed a set of stale references to \"partitions\" (v35, 2009-01-14, jdr) - improved readability of a few areas - fixed a data type typo (v34, 2009-01-12, jsandmel) - added issue (47) and preliminary keyword support for packed, sharable, standard layouts (v33, 2009-01-11, jsandmel) - switched terminology from \"partition\" to \"uniform block\" - switched syntax from 'active' to 'packed', and changed default behavior - changed lots of function names to account for the above - cleaned up overview - dropped language talking about \"binding\" for the uniform block -> uniform block unit association, since it's not an object binding operation - added concept of \"combined\"/\"logical\" binding point max queries - incorporated most recent GLSL syntax from the GLSL working group for uniform blocks - removed the AttachUniformBufferAPPLE for per-program bindings of UBOs (v32, 2008-12-08, jsandmel) - added UNIFORM_BUFFER_OFFSET_ALIGNMENT_APPLE (v31, 2008-12-08, jsandmel) - minor updates to overview (this could still use more editing). (v30, 2008-12-08, jsandmel) - cleaned up function argument names for clarity - reformatted new procedures/tokens section - added concept of uniformBlockBinding (for context bindings) to distinguish from uniformBlockIndex - renamed MAX_VERTEX_UNIFORM_BUFFERS_APPLE -> MAX_VERTEX_UNIFORM_BUFFERS_APPLE and friends. - removed/simplified the unneeded per-stage quries for active partitions (under assumption that partition names are global per program) - de-assigned apple enums for most tokens while we work out the enums - added UNIFORM_BLOCK_REFERENCED_BY_VERTEX_STAGE_APPLE and friends to queries of each partition - clarified/cleaned up overview of uniform partitions - added more detail to each of the function descriptions to clarify how each of the arguments was to be handled - temporarily deleted the Errors section since it was partially stale need to add this back later - removed stale query for UNIFORM_LOCATION_APPLE from state table - cleaned up (most of) issues list with API changes - removed some AMD/NV'isms from the issues language (v29, 2008-11-24, jsandmel) - Added\nargument to query routines to indicate vtx/geom/fragment. - Still need to update sample code for this proposal. - Also need to still specify how uniform scoping works (cross stage or per stage). - Eliminated special \"INVALID_INDEX_APPLE\" value since the rest of the GLSL API uses \"-1\" to mean invalid index, so we use that here too. (v28, 2008-10-08, jsandmel) - Added more discussion to issue (35) regarding context vs. program bindings of UBOs. - Added prototypes for BindUniformBuffer API. - Added issue (36) about maximum uniform component API. - Integrated the proposed API for per-context bindings into issue (35) from NVIDIA's NV_ubo proposal. - Added issue (37) about if we need 3 values for MAX_{VERTEX|GEOMETRY|FRAGMENT}_UNIFORM_BUFFERS_APPLE. (2008-10-08, jdr) Grammar additions. Re-instated piece-wise partition definitions. Elaboration of issue 35. Addition of 36. Readability improvements. (2008-10-07, jdr) 18 in previous check-in -> not true. 18 *is* in this one. Skeltal issue for NV suggested context binding points. (2008-10-06, jdr) Incorporated Nick's and Matt's changes 2, 3, 4, 5, 6, 8, 12, 14, 16, 17, and 18. (2008-08-27, jdr) Additions to contributer list. (2008-07-22, jdr) Changed buffer minimums and contributor list per discussion with NVidia. (2008-06-19, jdr) Added issue 34 and language describing the decision to use struct-like syntax for partition definitions. Added explicit mention that AttachUniformBufferObjectAPPLE() was required after a uniform buffer object has been modified. Fixed examples. (2008-03-18, jdr) Provide resolution and spec language for \"active\" and \"partition\" resolving related issues. Appended \"_object\" to spec name. Added required GLSL v1.20.8 spec language. (2008-03-17, jdr) Removed issue 30 as it was a misread spec. Added resolutions for 29, 31, and 32 - made spec changes accordingly. Added proposal for active partition demarcation and sharing rules. (2008-03-14, jdr) Added issues 29-34 for transform feedback, scoping the \"active\" keyword, and following precedents. (2008-03-13, bb) Fixed incorrect error returns. (2008-03-13, bb) Changed the return value of GetUniformBlockIndexAPPLE to uint. Added INVALID_INDEX. Fixed Example code 2. Cleaned up line breaks. Cleaned up issues. Added issues 24-26. (2008-03-12, jdr) Added state tables and state retrieval segment. (2008-03-12, jdr) Rewrote advanced source example. Made a few minor fixes and additions that writing the example illuminated. (2008-03-11, jdr) After considerable dialog with BB around handling of bulk extraction of uniform meta-data, conclusions of dialog required sweeping changes to spec. Rewrote specification updates section. Added new tokens. Changed New Functions segment. Updated Errors segment. Added issue 23. (2008-03-04, jdr) Rewrote specification updates section. Rewrote error section. (2008-03-03, jdr) Rewrote overview to reflect partitioning. Re-arranged for spec worthiness. Cleaned up new procedures functions and defined aggregate layout function. Revised issues list to reflect partitioning, include more recent discussions, and used current accepted vernacular. (2008-03-03, bb) Resolved issue 19. Changed the return value of GetActivePartitionUniformInfoAPPLE to a void because it does not return locations. (2008-03-03, jdr) Changed to namespace to partitions. Added issues 21 & 22. Added aggregate uniform info query per partition. (2008-03-03, bb) Added separate partition support. Changed extension name to APPLE_uniform_buffer. (2008-02-27, jdr) Dumped program arguments. Changed \"types\" output array to \"sizes\" output array. Added expected scatter/gather logic in the example to advocate efficient schlepping of uniform data into the buffer. (2008-02-26, jdr) Changes to accomodate relative offsets. Revised example source. Error additions. Removed contact information for contributors list. (2008-02-25, jdr) Added source example. (2008-02-21, jdr) Added to issues list, resolutions of all issues excepting 16. Changes per meeting. Additions to procedures and explanations. 2.1 spec integration. Implementation Dependent State. (2008-02-19, jdr) Added to issues list, additions to procedures and explanations, errors. (2008-02-18, jdr) Added to issues list, modifications to procedures and explanations. (2008-02-16, jdr) Added to issues list and procedures. (2008-02-15, jdr) Initial revision, overview.\n"}, {"score": 163.07942, "uuid": "5a295d3d-81b8-52fc-8c2f-decad0977d4a", "index": "cw12", "trec_id": "clueweb12-1808wb-81-06874", "target_hostname": "industriousone.com", "target_uri": "http://industriousone.com/book/export/html/63", "page_rank": 1.1851926e-09, "spam_rank": 68, "title": "User Guide", "snippet": "Here <em>is</em> an option intended <em>to</em> force the use <em>of</em> <em>OpenGL</em> <em>in</em> a 3D application. It serves as a simple flag, and does not take any value. description = &quot;Force the use <em>of</em> <em>OpenGL</em> for rendering, regardless <em>of</em> <em>platform</em>&quot; Note the commas after each key-value pair; this <em>is</em> required Lua syntax for a table.", "explanation": null, "document": "User Guide\nThe official Premake documentation.\u00a9 2002-2010 Jason Perkins and the Premake project.\nThis user guide reflects the current state of the software fairly closely, but may lag in places, or get a little ahead of the official releases in others. When in doubt, feel free to post a question over in the forums . If you spot any problems, or think something is unclear, feel free to leave a comment.\nWhat Is Premake?\nImagine yourself the owner of an open source software project. Your users are asking for a Visual Studio 2008 solution, but you don't have Visual Studio! Or perhaps you are a cross-platform game developer struggling to keep projects, solutions, and makefiles in sync. Its a common problem for open and cross-platform projects: restrict yourself to a single, potentially sub-optimal build tool--driving away potential contributors--or manually maintain two, three, or more sets of build scripts.\nNot working cross-platform? Have you ever been stuck using an old version of Visual Studio because it was too difficult to upgrade the entire team?\nOr maybe you just want an easy way to reconfigure your project for different situations or environments, pulling in different source code or libraries, switches and options.\nEnter Premake\nPremake is a build configuration tool. Describe your C, C++, or C# software project using a simple, easy to read syntax and let Premake generate the project files for:\nMicrosoft Visual Studio 2002-2010, including the Express editions\nVersion 4.1 of Premake added experimental support for cross-compiling , targeting:\n32- and 64-bit builds\nMac OS X 32- and 64-bit universal binaries\nPlaystation 3 (Visual Studio and GNU Make)\nXbox 360 (Visual Studio only)\nPremake allows you to manage your project configuration in one place and still support those pesky IDE-addicted Windows coders and/or cranky Linux command-line junkies. It allows you to generate project files for tools that you do not own. It saves the time that would otherwise be spent manually keeping several different toolsets in sync. And it provides an easy upgrade path as new versions of your favorite tools are released.\nIn addition to these project generation capabilities, Premake also provides a complete Lua scripting environment , enabling the automation of complex configuration tasks, such as setting up new source tree checkouts or creating deployment packages. These scripts will run on any platform, ending batch/shell script duplication.\nPremake is a \"plain old C\" application, distributed as a single executable file. It is small, weighing in at around 200K. It does not require any additional libraries or runtimes to be installed, and should build and run pretty much anywhere. It is currently being tested and used on Windows, Mac OS X, Linux, and other POSIX environments. It uses only a handful of platform dependent routines (directory management, mostly). Adding support for additional toolsets and languages is straightforward. The source code is available under the BSD License . The source code is hosted on BitBucket ; file downloads are hosted on SourceForge .\nBuilding Premake\nLearn how to compile Premake from the source code.If you downloaded a prebuilt binary package you can skip this page, which discusses how to build the Premake source code. Jump ahead to Quick Start to begin learning how to use and develop with Premake.\nGenerating the Project Files\nIf you downloaded one of the official source code release packages , the project files have already been generated for you, and may be found in the build/ directory. Skip ahead to the next section to learn about the important differences between the build configurations.\nPremake's Mercurial repository does not contain any project files. Instead, use an existing copy of Premake to generate the files for your particular toolset and environment.\nOnce you have a working Premake installed, embed the scripts by opening a console or terminal to the source code directory and running the command\npremake4 embed\nNow generate the project files with a command like:\npremake4 gmake    # for GNU makefiles using GCC\npremake4 vs2008   # for a Visual Studio 2008 solution\nUse the --help option to see all of the available targets. You now have a solution/makefile/workspace that you can load and build.\nNote that when working against the Mercurial sources it is a good idea to refresh the embedded scripts after each update.\n$ hg pull -u\n$ premake4 embed\nSee Debug vs. Release Modes below for an explanation (and maybe eventually I'll think of a better way to do this).\nBuilding the Source Code\nPremake can be built in either \"release\" (the default) or \"debug\" modes. If you are using Makefiles (as opposed to an IDE), you can choose which configuration to build with the config argument:\nmake               # build in release mode, both versions\nmake config=debug  # build in debug mode, when generated with Premake 4.x\nmake CONFIG=Debug  # build in debug mode, when generated with Premake 3.x\nIf you do not supply a config argument, release mode will be used. IDEs like Visual Studio provide their own mechanism for switching build configurations.\nDebug vs. Release Modes\nA significant portion of Premake is written in Lua. For release builds (the default) this has no impact, just build as normal and go.\nWhen built in Debug mode, Premake will read its Lua scripts from the disk at startup, enabling compile-less code/test iterations, and therefore faster development. But it needs a little help finding the scripts. You can use the /scripts command line argument, like so:\npremake4 /scripts=~/Code/premake4/src gmake\nOr set a PREMAKE_PATH environment variable:\nPREMAKE_PATH=~/Code/premake4/src\nYou need to specify the location of the Premake src/ directory, the one containing _premake_main.lua.\nEmbedding the Scripts\nIn release builds, Premake uses a copy of the scripts embedded into static strings: see src/host/scripts.c. If you modify any of the core Lua scripts (anything ending in .lua), you must also update these embedded strings before your changes will appear in the release mode build.\nYou can update these strings by using the embed action, which is part of Premake's own build script.\npremake4 embed\nThis command embeds all of the scripts listed in _manifest.lua into src/host/scripts.c. The next release build will include the updated scripts.\nCONFUSED?\nThe inclusion of the Lua scripts throws a wrench in things, and I certainly understand if you have questions. I'll be glad to help you out. Leave a note in the forums (the preferred approach), join the mailing list, or contact me directly . Your questions will help me improve these instructions.\nPremake Quick Start\nA quick introduction for people who arrived here directly: Premake is a build configuration tool. It reads a description of a software project and generates the files for one of several different toolsets. By using Premake, software developers can save time and support more tools and users. Learn More .\nGetting Premake\nIf you don't have Premake already, you can download it now .\nPremake is a small (around 200K) command line executable, delivered as a single file. Just unpack the download and place the executable on your system search path or anywhere else convenient.\nUsing Premake\nThe simplest Premake command is:\npremake4 action\nUsually you would like Premake to generate project files for a particular toolset, in which case action is one of these toolset identifiers:\nvs2010\nVisual Studio 2010 (or Express)\nvs2008\nVisual Studio 2008 (or Express)\nvs2005\nVisual Studio 2005 (or Express), SharpDevelop , or MonoDevelop\nvs2003\nYou can see a complete list of actions and other options by typing:\npremake4 --help\nOnce the files have been generated you can load the solution or workspace into your IDE and build as you normally would.\nUsing the Generated Makefiles\nRunning make with no options will build all targets using the default configuration. To build a different configuration supply the config argument:\nmake config=release\nMost projects provide debug and release configurations; to see the available targets and configurations, type:\nmake help\nRemove all generated binaries and intermediate files with:\nmake clean\nPremake generated makefiles do not support a make install step. Instead, project owners are encouraged to add an install action to their Premake scripts, which has the advantage of working with any toolset on any platform. You can check for the existence of an install action by viewing the help (run premake4 --help in the project directory).\nNext Steps\nIf you are having trouble building your project, start by contacting the project manager. If you are having trouble building or using Premake, visit our Support page and I'll try to help you out.\nTo learn how to use Premake for your own software projects see Scripting With Premake .\nScripting with Premake\nIn this section, I'll show you how to create project scripts for Premake.\nA Sample Script\nPremake is built on Lua , a powerful, fast, light-weight scripting language. Premake scripts are really Lua programs, so anything you can do in Lua can also be done in a Premake script. To this, Premake adds functions for defining solutions, projects, and configurations as well as support for common build configuration tasks. Premake also provides conventions for defining and handling command line options and actions, allowing you to build sophisticated configuration scripts.\nBecause of the descriptive nature of the Lua language, your build scripts will often look more like static configuration files than mini-programs. Here is an example of a fairly typical Premake script for a C++ executable. See the Premake Cookbook for more examples of common configuration tasks.\n-- A solution contains projects, and defines the available configurations solution \"MyApplication\" configurations { \"Debug\", \"Release\" } -- A project defines one build target project \"MyApplication\" kind \"ConsoleApp\" language \"C++\" files { \"**.h\", \"**.cpp\" } configuration \"Debug\" defines { \"DEBUG\" } flags { \"Symbols\" } configuration \"Release\" defines { \"NDEBUG\" } flags { \"Optimize\" }\nThe indentation in this sample is arbitrary, this is the way I happen to like it.\nThe following sections of this guide will walk you through all of the features of Premake in a somewhat logical fashion. It isn't rocket science, and you probably already have the gist of it from the example above, so feel free to skip around. You can also refer to the Reference section or the Lua Reference Manual for information on a particular function or variable.\nA Bit of Meta\nLet me start with a bit of general information that you will need to know to begin scripting.\nFiles and File Names\nPremake will look for a file named premake4.lua by default, much like make looks for a file named Makefile. So that's the name you want to give your project script files, generally.\nYou can specify a different file name using the file argument, like so:\npremake4 --file=myfilename.lua\nYou can define your entire project in one script file if you want, or you can split up the projects into their own files, or any other organization you can dream up. Use the include() function or Lua's dofile() to link all the files together.\nI personally like to use just one file for simple projects, and one-file-per-project for more complex builds.\nProject Functions and Arguments\nYou define your software project by calling a sequence of functions, such as solution , project , and defines . These functions set up the project state and take care of error checking and the like.\nWhen calling a function with a single string constant for an argument, Lua allows you to drop the parenthesis that would normally appear around the argument list. So these two statements are functionally identical:\nsolution(\"MySolution\") solution \"MySolution\"\nI find the latter form a bit more readable. The same goes with a single list argument:\ndefines({\"DEBUG\", \"TRACE\"}) defines {\"DEBUG\", \"TRACE\"}\nIf you want to use a variable as an argument, or the result of a calculation, then you must use the parenthesis:\nlocal lang = \"C++\" language (lang) -- need the parenthesis here location (\"build/\" .. _ACTION) -- and here too\nValues and Lists\nMany of Premake's functions accept a list of values as a parameter. For instance, a list of source code files, or defined symbols, or build flags. When defining a list of values you need to surround them in curly brackets, Lua's syntax for a list. If you only want to set a single value, you can leave off the brackets if you like.\ndefines { \"DEBUG\", \"TRACE\" } -- defines multiple values defines \"NDEBUG\" -- defines a single value\nThere are also functions that only accept a single value, such as solution and project names, the project kind and language, and so on. If you try to pass a list to these function you'll get an error. These string values may be delimited with single (') or double (\") quotes.\nlanguage \"C++\" kind 'ConsoleApp'\nFor more information on Lua programming, see the Lua website or Programming in Lua . If you get stuck, post a question over in the forums and I will do my best to help you out.\nSolutions and Projects\nStarting with Premake 4.0 I am following the Visual Studio naming conventions for build components. For those of you unfamiliar with Visual Studio I will try to provide to provide the synonyms used by other toolsets; if I miss any let me know and I'll add them.\nSolutions\nAt the top level of every build is a solution, acting as a container and meta-project (other tools use the term workspace). Solutions define a common set of configurations and encapsulate one or more projects (see below). You can define build-wide settings at the solution level; these will apply to all of the projects contained by that solution.\nSolutions are defined using the solution function. Most builds will need only a single solution, but you are free to create more if needed. Configurations are specified using the configurations function; see the next section for more information.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" }\nThe solution name, provided as a parameter to the function, is used as the file name of the generated solution file. So avoid special characters; spaces are okay.\nProjects\nThe primary purpose of a solution is to act as a container for projects. A project lists the settings and source files needed to build one binary target. Just about every IDE uses the term \"project\" for this. In the world of Make, you can think of projects as a makefile for one particular library or executable; a solution is a meta-makefile that calls each project as needed.\nProjects are defined using the project function. You must create a solution and list the available configurations before creating the first project.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" } project \"MyProject\"\nThe project name, like the solution name, is used as the file name for the generated project file so avoid special characters.\nEach project specifies a kind which determines what kind of output is generated, such as a console or windowed executable, or a shared or static library. The kind function is used to specify this value.\nEach project also specifies which programming language it uses, such as C++ or C#. The language function is used to set this value.\nproject \"MyProject\" kind \"ConsoleApp\" language \"C++\"\nLocations\nBy default, Premake will place generated solution and project files in the same directory as the script which defined them. If your Premake script is in C:\\Code\\MyProject then the generated files will also be in C:\\Code\\MyProject.\nYou can change the output location using the location function.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" } location \"build\" project \"MyProject\" location \"build\"\nThe path provided for location should be specified relative to the script file. Using the example and script above, the generated files will be placed in C:\\Code\\MyProject\\build.\nAdding Files\nYou add files\u2014source code, resources, and so on\u2014to your project using the files function.\nfiles { \"hello.h\", -- you can specify exact names \"*.c\", -- or use a wildcard... \"**.cpp\" -- ...and recurse into subdirectories }\nYou can use wildcards in the file patterns to match a set of files. The wildcard * will match files in one directory; the wildcard ** will match files in one directory and also recurse down into any subdirectories.\nFiles located in other directories should be specified relative to the script file. For example, if the script is located at myproject/build and the source files are at myproject/src, the files should be specified as\nfiles { \"../src/*.cpp\" }\nPaths should always use the forward slash / as a separator; Premake will translate to the appropriate platform-specific separator as needed.\nExcluding Files\nSometimes you want most, but not all, of the files in a directory. In that case, use the excludes function to mask out those few exceptions.\nfiles { \"*.c\" } excludes { \"a_file.c\", \"another_file.c\" }\nExcludes may also use wildcards.\nfiles { \"**.c\" } excludes { \"tests/*.c\" }\nSometimes you may want to exclude all the files in a particular directory, but aren't sure where that directory will fall in the source tree.\nfiles { \"**.c\" } excludes { \"**/Win32Specific/**\" }\nLinking to external libraries is done with the links function.\nlinks { \"png\", \"zlib\" }\nWhen specifying libraries, system-specific decorations, such as prefixes or file extensions, should be omitted. Premake will synthesize the correct format based on the target platform automatically. The one exception to the rule is Mac OS X frameworks, where the file extension is required to identify it as such.\nlinks { \"Cocoa.framework\" }\nTo link to a sibling project (a project in the same solution) use the project name. Premake will deduce the correct library path and name based on the current platform and configuration.\nsolution \"MySolution\" project \"MyLibraryProject\" -- ...project settings here... project \"MyExecutableProject\" -- ...project settings here... links { \"MyLibraryProject\" }\nFinding Libraries\nYou can tell Premake where to search for libraries with the libdirs function.\nlibdirs { \"libs\", \"../mylibs\" }\nIf you need to discover the location of a library, use the os.findlib function.\nlibdirs { os.findlib(\"X11\") }\nConfigurations\nA configuration is a collection of flags and options to apply to a build, including build flags, header file and library search directories, and more. Each solution defines its own list of configurations. The most common configuration set, which is usually provided by default by most IDEs, is \"Debug\" and \"Release\". Visual Studio and other IDEs provide facilities to quickly switch between configurations; Premake-generated makefiles allow the configuration to be specified with a command-line parameter.\nSpecifying Configurations\nAt the solution level, specify your list of possible configurations by calling the configurations function and passing it a list of names.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" }\nYou are not limited to these two standard names. For instance, if your project can be built as both as both static or shared libraries, you might use this instead:\nconfigurations { \"DebugLib\", \"DebugDLL\", \"ReleaseLib\", \"ReleaseDLL\" }\nSome features of Premake, such as selecting a configuration from the command line, are easier if you avoid spaces. However, spaces are allowed in configuration names.\nUsing Configurations\nPremake provides a great deal of flexibility when it comes to configuring your build: you can apply settings across an entire solution, a project, or to a targeted combination of configuration and toolset. The configuration function is used to apply settings to a particular build environment.\nFor example, you can define a symbol across all configurations of all projects by setting it at the solution level, before any filters are enabled.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" } defines { \"MY_SYMBOL\" }\nOr, using the configuration function, you can limit it to a particular configuration.\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" } configuration \"Debug\" defines { \"MY_SYMBOL\" }\nThe same rules hold true at the project level.\nproject \"MyProject\" defines { \"TRACE\" } -- this will be applied to every configuration configuration \"Debug\" defines { \"DEBUG\" } -- this will only be applied to Debug builds\nWhen values are supplied at multiple levels, list fields (like defines above) are concatenated while single-value fields (like language ) are overridden. Project values take precedence over solution values, and will appear after the solution values in lists. Values at the same level are evaluated in the order in which they are encountered in the script.\nThis is just an overview of configuration filtering. For more details, including a list of the available filter keywords, see the documentation for the configuration function.\n(I can see where this topic might be a bit confusing for newcomers, and I welcome suggestions for improving this text. Feel free to leave your ideas in the comments.)\nPlatforms\nPlatform support is a new, experimental feature introduced in Premake 4.1. This is a potentially large area of development and it may take a few releases to get it just right. The syntax and behavior described here might change along the way.\nAn important caveat: I don't target multiple platforms in my own day to day work. I am relying on those of you that do, and the community at large, to help me shape this feature.\nOne more disclaimer: I think this page is confusing. If you've got any ideas on how I might explain it better please leave a comment. Thanks!\nIn addition to configurations , you can also target multiple hardware platforms, such as a 32-bit build and a 64-bit build. This is also known as cross compiling . These platforms can be quickly switched between from within your IDE, or with a command-line parameter on the generated makefile.\nIn addition to 32- and 64-bit builds, Premake also supports Mac OS X universal binaries, the Playstation 3, and the Xbox 360. See the platforms function documentation for a full list of supported platforms.\nUnlike configurations, platforms are optional. If you don't need them, just don't call the platforms function at all, in which case the toolset's default behavior will be used.\nSpecifying Platforms\nThe easiest way to target a particular platform is to supply the --platform argument to Premake. If you have a solution that builds on Windows, and you want to a binary for the Xbox 360, you would call:\npremake4 --platform=xbox360 vs2005\nThe files generated by this call will include the default Win32 build normally present in Visual Studio solutions, plus a new set of configurations which target the Xbox 360. Assuming that you have the proper development tools installed and your software is portable enough, you can now build an Xbox 360 binary.\nIf you frequently target several different platforms, and want to switch between them without regenerating your project files, you can add them directly to your script. Target platforms are part of the solution, just like configurations:\nsolution \"MySolution\" configurations { \"Debug\", \"Release\" } platforms { \"Native\", \"Universal\" }\nNot all tools will support all of the possible targets (currently only Visual Studio supports the Xbox 360 platform). Unsupported platforms are silently ignored; they simply will not appear in the generated build scripts.\nMost toolsets require extra configuration to target multiple platforms. Premake will generate a build script with the right instructions for a 64-bit or an Xbox build, but that build will only succeed if the corresponding tools and libraries have been installed on the developer machine. GCC users may need to install the GCC multilib packages.\nThe Native Platform\nIn addition to the cross-compiling platform targets listed above, there is a special target called native which preserves the default compiler behavior. Taking GCC as an example, Premake's x32 flag adds -m32 to the GCC command line, and the x64 flag adds -m64. The native platform, in contrast, does not add any flags to the command line and lets GCC use its default behavior to target the current platform.\nNormally you would include the native platform, and list it first to make it the default.\nplatforms { \"native\", \"x32\", \"x64\" }\nSo if you wanted your code to \"just build\" on Windows or Unix, 32- or 64-bit systems, and you also wanted to allow folks to cross-compile for the Xbox 360 or Mac OS X universal binaries, you could do:\nplatforms { \"native\", \"xbox360\", \"universal\" }\nSometimes it is important to know which platform you are targeting; you might need to define specific symbols or link to different libraries. In this case, the native platform would not be included in the list.\nplatforms { \"x32\", \"x64\" }\nPlatform Settings\nLike any other configuration-specific value, platform-specific settings are set with configuration filters . If no platform is specified to the filter, the subsequent settings will apply to all platforms.\nconfiguration { \"debug\" } defines \"_DEBUG\" -- this symbol will appear in settings for ALL platforms\nIf a specific platform identifier is listed, the settings will be applied only when that platform is specifically selected by the user.\nconfiguration { \"xbox360\" } defines \"IS_XBOX360_BUILD\" -- this will only get applied when user chooses the Xbox 360 build\nThe platform is just another configuration axis, which you can mix and match with any other selectors. See the configuration function for more details.\nconfiguration { \"Debug\", \"x64\" } defines \"USE_64BIT_DEBUG_LIBRARY\"\nPlatforms and Makefiles\nI am still working out how the target platforms should be represented in Premake-generated makefiles. Below is my best take so far; feedback and suggestions for improvement are very much appreciated.\nIn the generated makefiles, platforms and build configurations are paired up. If you defined a solution like this:\nplatforms { \"native\", \"x64\", \"universal\" }\nThere would be six possible configurations: debug, release, debug64, release64, debuguniv, and releaseuniv. I tried to truncate the platforms to something easy to type.\nYou target a specific configuration using the config argument.\nmake config=debug64\nIf the makefile is executed without any arguments, the first build configuration (in the example above, debug) will be used. For this reason, it is recommended that you put native first in the list.\nBuild Settings\nPremake provides an ever-growing list of build settings that you can tweak; the following table lists some of the most common configuration tasks with a link to the corresponding function. As you can see, the flags function provides most of the features, and is a good place to start if you aren't sure how to make something go.\nSpecify source code files\n"}, {"score": 158.34299, "uuid": "3d97b0f1-3aa1-5480-9f24-35eaa9526168", "index": "cw12", "trec_id": "clueweb12-0715wb-87-16268", "target_hostname": "www.gputechconf.com", "target_uri": "http://www.gputechconf.com/gtcnew/on-demand-gtc.php?topic=23", "page_rank": 1.1700305e-09, "spam_rank": 96, "title": "GTC On-Demand Featured Talks |NVIDIA GPU Technology Conference", "snippet": "So, the memory Industry <em>is</em> considering how it <em>is</em> going <em>to</em> move beyond GDDR5 levels <em>in</em> a couple <em>of</em> years <em>to</em> reach bandwidths <em>of</em> more <em>than</em> 10Gbps.", "explanation": null, "document": "Kevan O'Brien\nPlus a sneak peak at the Future of GPU Acceleration!\nMany Adobe Creative Suite 4 applications have enhanced features designed to take advantage of nVidia GeForce and Quadro GPU cards to accelerate application performance. ... Read More\nPlus a sneak peak at the Future of GPU Acceleration! Many Adobe Creative Suite 4 applications have enhanced features designed to take advantage of nVidia GeForce and Quadro GPU cards to accelerate application performance. In this session, find out how Adobe Photoshop, After Effects and Adobe Premiere Pro get a distinct performance boost when handling large files or creating motion graphics and visual effects. Plus you'll get a sneak peek at what's coming in the future around GPU acceleration in Adobe Premiere Pro. Back\nKeywords:\nFuture Directions in GPU Computing\nBill Dally, Sean Varah, Simon Hayhurst, Steve Perlman\nJoin our panel of leading industry experts as they discuss some of the most exciting and disruptive current and future applications to be built on top of GPUs. ... Read More\nJoin our panel of leading industry experts as they discuss some of the most exciting and disruptive current and future applications to be built on top of GPUs. Topics will cover both visual and high performance computing, including rendering, video processing, scientific computing, cloud computing, and more. Industry analyst Rob Enderle will moderate this marquis panel, which will include Steve Perlman, Founder and CEO- ONLIVE; Simon Hayhurst, Senior Director of Product Management - Adobe; Sean Varah CEO- MotionDSP; and Bill Dally, NVIDIA's Chief Scientist. Back\nKeywords:\nGeneral Interest, GTC 2009 - ID 1425\nDownload:\nFireside Chat with Jen-Hsun Huang and Jon Peddie\nJen-Hsun Huang\nFor the second year in a row, NVIDIA CEO Jen-Hsun Huang will participate in a freewheeling fireside chat with leading industry analyst Jon Peddie, of Jon Peddie Research. ... Read More\nFor the second year in a row, NVIDIA CEO Jen-Hsun Huang will participate in a freewheeling fireside chat with leading industry analyst Jon Peddie, of Jon Peddie Research. Topics will include the state of the industry, NVIDIA's strategy and the future of GPU computing, as well as other issues raised by the audience. Back\nKeywords:\nRaising Capital in Difficult Environments\nHeather Gates Massoudi. Jeff Herbst, Peter Kidder. Andrew Sheehan\nThe current economic situation poses unique challenges for start-ups seeking to raise critical funds to grow their businesses. ... Read More\nThe current economic situation poses unique challenges for start-ups seeking to raise critical funds to grow their businesses. This panel will attempt to assess the current state of both the public and private markets, and will explore various strategies and options for raising capital. Topics will include equity and debt, as well as other creative forms of financing such as NRE arrangements, etc. Jeff Herbst, NVIDIA's Vice President of Business Development will lead this panel discussion, which will include leading industry experts from Sutter Hill Ventures, Citi, Silicon Valley Bank and Deloitte. Back\nKeywords:\nEmerging Companies Summit Opening Address\nJeff Herbst\nThe Emerging Companies Summit is a unique forum for startup companies to showcase innovative applications that leverage the GPU to solve visual and high-performance computing problems. ... Read More\nThe Emerging Companies Summit is a unique forum for startup companies to showcase innovative applications that leverage the GPU to solve visual and high-performance computing problems. The Opening Address includes selected demos from a few presenting companies. The ECS is a great opportunity to discover new players in the visual and high performance computing ecosystems, find great investments, explore partnership opportunities, network/build relationships, and discuss the future of an industry that is reshaping computing. Back\nKeywords:\niray - CUDA Accelerated Photorealistic Rendering\nMichael Kaplan\niray\u00ae is a interactive, global illumination ray-traced rendering technology that generates photo real imagery without introducing rendering algorithm specific artifacts, and without requiring the use of renderer specific parameterizations. ... Read More\niray\u00ae is a interactive, global illumination ray-traced rendering technology that generates photo real imagery without introducing rendering algorithm specific artifacts, and without requiring the use of renderer specific parameterizations. This \"push-button\" rendering capability can dramatically improve artist productivity in a wide variety of use cases, including architectural visualization, automotive styling and marketing, product styling, among others. iray takes full advantage of the CUDA programming model, allowing interactive performance on single NVIDIA GPUs, and scaling almost linearly on multi-GPU platforms. The iray rendering mode will be available in the next versions of mental ray (3.8) and RealityServer (2.4). We will demonstrate the key features of iray for end users and application developers, including the progressive refinement of images until maximum fine detail is reached, providing a single process which smoothly combines interactive pre-visualization and final frame rendering. Back\nKeywords:\nGeneral Interest, GTC 2009 - ID 1451\nStreaming:\n"}, {"score": 146.86969, "uuid": "01819733-e8eb-5ef6-923b-65b0b0c7c796", "index": "cw12", "trec_id": "clueweb12-0917wb-66-04068", "target_hostname": "www.metaverseroadmap.org", "target_uri": "http://www.metaverseroadmap.org/inputs.html", "page_rank": 1.315682e-09, "spam_rank": 97, "title": "Metaverse Roadmap: Industry Conditions", "snippet": "<em>Direct3D</em> currently leads <em>OpenGL</em> <em>in</em> video games (both have major share), but <em>OpenGL</em> has developed a clear lead for academic research and scientific visualization, as well as for non-Microsoft <em>platforms</em>.", "explanation": null, "document": "2. Current Conditions. Important current conditions in the metaverse industry.\n2A. Current Conditions - Technology and Science\n\u2022 Web 2.0 (Participatory Web) technologies, led by innovative social networks, browsers, and search platforms, are accelerating the use of 3D and other rich media. The Participatory Web is tools and platforms that empower the user to tag, blog, comment, modify, augment, select from, rank, and talk back to the contributions of other users and the world community. Reputation-based public wikis, like Wikipedia , are pioneering examples of participatory web technology. Open APIs for tagging the web and tying it to the world, like Google Maps , are another. Rich media-enabled social networking sites like MySpace are another. Another is the open source Flock web browser, which encourages RSS aggregation, automated blog posting, photo sharing, gathering and indexing of web searches, and other participatory technologies. In Japan, companies like GaiaX have built social networking websites that allow their users, as one of many community options, to invite each other to online games and virtual worlds. This makes the social network the hub and the virtual worlds the occasional immersive experience [16]. Today's browsers are just beginning to manage 3D web capabilities (3D graphics, games, and video). Opera 9 , for example, includes \"widgets\" that make it easy for users to organize their online games. The ability to easily incorporate YouTube and other video in leading social networking sites has really improved the stickiness of online community. Nevertheless, there is much to be done. We are very early in collaborative productivity software, like Writely (Google's online word processor). We don't have robust data interchange, rich annotation (video, etc.), or conversational search. We don't have good security, privacy, identity, or reputation. We don't have worldwide ultra-broadband or wireless connectivity, which greatly limits efficiency and scope of the collaboration space. Within 3D spaces, we don't have easy access to professional digital modelling tools, or grid computing for data rich simulations. There is a lot to be done, this is a very incomplete list.\na\n\u2022 Internet penetration in the US homes in 2006: 42% of Americans have broadband at home. 71% of \"active users\" (those going online at least once a month) have broadband, and over 85% have dialup or better. 35% of all internet users post content to the web. [14]. According to Nielsen/NetRatings , less than half of all Americans (142 million of 295 million total) were active internet users in 2004. Countries wth better quality and more ubiquitous broadband, like Korea, are likely to have significantly higher percentages.\nb\n\u2022 Software and story are today the prime indicators of success in online virtual worlds. Hardware (speed, graphical realism) and interface intutiveness remain important, but they are not the primary drivers of game success, as originally envisioned by virtual reality pioneers. Hardware and interface may be more negative factors, limiting the size of the market rather than driving differential success among offerings, at least in more mature markets. In the history of the video game industry, market share consistently accrues to stories that mentally and emotionally engage the user and are accessible by simple interfaces. Even virtual worlds like Second Life , which have deficits in graphical realism (several generations behind the state of the art), interface ( a nonintuitive system requiring real dedication to learn to use) and traditional story (being entirely user-driven) nevertheless have a strong niche that caters to users desiring the freedom to create their own story, in a framework that encourages the marketing of their digital creations to other users. Even for proprietary platforms (consoles, portables), the quantity and quality of software titles remains the key market differentiator [1].\nc\n\u2022 The dominant virtual world story to date is medieval fantasy . This is probably because our primary Western and Eastern cultural mythologies are fantasies and fables adapted from our distant past. Though we can expect a broader range of fiction and nonfiction worlds, medieval fantasy dominance may be very slow to change.\nd\n\u2022 Pluralistic standards. There are many standards bodies: ISO , ANSI , W3C , etc. and many competing standards that find their own niches. As examples in the 3D Web space, Microsoft developed Direct3D as a Windows-proprietary 3D graphics standard, and OpenGL (Open Graphics Library) has emerged as a competing open source standard. Direct3D currently leads OpenGL in video games (both have major share), but OpenGL has developed a clear lead for academic research and scientific visualization, as well as for non-Microsoft platforms. A range of open ( Scalable Vector Graphics ), semi-open ( Java ) and proprietary (Adobe Flash , Microsoft's DirectX 10 , MS Vista's Windows Presentation Foundation , XAML , and Dassault and Microsoft's 3D XML ) 3D web enhancement standards are in competition, and each has taken many years to develop. Many historical 3D web standards ( VRML , Microsoft Chrome, Adobe Atmosphere, Shockwave 3D) failed to gain traction, while others ( X3D , the VRML successor, adopted as an ISO standard in 2004) have had slow adoption rates and increasing competition from other open standards developed by proprietary groups (Microsoft's DirectX and XAML, Intel\u2019s Universal 3D , others).\ne\n\u2022 Independent developers and the open source community have not yet rallied around an open metaverse platform, as opposed to proprietary worlds. Croquet is a potential candidate, and the OpenSource Metaverse Project is another even more recent early effort, but to date none has received major support in developer time or funding from the volunteer community.\nf\n\u2022 3D desktop prototypes. Sun\u2019s Project Looking Glass , built on Java 3D, is an interesting but early attempt to enhance a primarily 2D desktop by incrementally adding fast and natural 3D functionality only where it makes the most sense. Looking Glass is a mostly 2D environment, but desktop objects become as manipulable as pieces of paper in the physical world, with windows, objects, and tabs that move, zoom, stack, and flip in a manner that conveys an appealing weight and physicality. Combined with intuitive mouse or touch gestures for object manipulation, such future desktops promise to greatly increase the ability to manipulate and manage information. Eliminating any signs of lag/processor overload for the 3D components, and developing entirely natural manipulation interfaces (possibly touch, verbal, or vision driven) are still significant barriers to be overcome.\ng\n\u2022 3D browser prototypes. Companies like 3B , Browse3D , and SphereSite have first generation 3D browsers available. 3B's is the most participatory, allowing users to pull in pages and graphics from sites like MySpace and Flicker to create a \"personalized 3D space\" for others to view, but doesn't yet include community or avatars. In general, the 3D browser space presently fails to make a compelling case. We may need to see useful 3D desktops first, then an extension of this metaphor into collaborative 3D space and virtual worlds.\n\u2022 Location-based games (LBG) (also called \" locative games \") for mobile phones are now emerging on GPS-equipped cell phones. In 2004, GloVentures demo game RayGun pushed current GPS technology \"to its limits,\" updating the players position once per second and making the player's \"next three steps matter.\" Mikioshi, a mobile online games leader, makes Gunslingers 2 a combat-based cell phone LBG played in Asia. Mogi is virtual treasure game played with cellphones and mobile IM in France. Human Pac-Man was another concept game that demoed in Singapore in 2004, where the players used augmented reality goggles to capture pellets and run from ghosts, just like the 1980's video game. In 2005, Blister Entertainment launched Swordfish and Torpedo Bay as the first US location-based GPS games. As geospatial tagging (geotagging or geocoding) begins to be added to these games, a collaborative game reality can emerge, directing game play.\nh\n\u2022 Creation of 3D worlds from 2D photos and video is now possible in rudimentary form. Mova's Contour is a system for live action volumetric performance capture in video, mapping the performance to 3D and eliminating much of the post-production work in 3D animation. ImageModeler by Realviz, available for all the major 3D animation packages, is another such professional tool (using 2D photos as input). GeoTango's SilverEye is a similar product. MVR Summit quote: \"It's getting really easy to measure the world physically and recreate it using data acquisition. On this laptop computer my guys at U. Arkansas flew over the city, wrote a program, and four hours later had 3,000 real life buildings virtualized with x, y, and z coordinates. That process is automated, so we can do that easier and easier with the demo files and high-res photos.\"\ni\n\u2022 AI agents continue to make major strides in computer animation. Massive Software , started as an AI project for massive simultaneous character animation for The Lord of the Rings trilogy (2001-2003), has developed a framework to provide each character a broad range of attributes and personality traits, and allow them to make independent decisions based on those traits and what they encounter in their virtual environment. In crowd scenes, these characters animate in a highly realistic fashion. The Ant Bully (2006) is the first U.S.-produced film to use the Massive crowd-based computer graphics, but a score of other films using Massive's system are in development. Nonplayer characters (NPCs) in virtual worlds also are making progress in autonomy and AI, but are several years away from the scale and sophistication seen in these feature films.\nj\n\u2022 In 2005, roughly 600 million cell phones, 110 million desktop PCs, and 60 million laptop PCs were being sold globally per year [66]. Cell phones are the most likely platform for mobile, augmented reality interaction with geospatial virtual worlds in coming years.\nk\n\u2022 IPv6 and next generation internet ( Internet2 , etc.). In December 2003 the U.S. Dept. of Defense announced one of the first large-scale deployments of IPv6. Adoption of IPv6 since standardization has been slow, due to such factors as cost of conversion, operational conservatism, short term industry outlook, and difficulty of quantifying the cost of not converting in competitive markets [68]. IPv6\u2019s mandatory security, (authentication and non-repudiation), auto-configuration, multiple options for communication (unicast, multicast, broadcast, anycast), logical group indexing for addresses, and 128 bit address space (10^23 addresses per square meter of planet surface area) should be sufficient for all global embedded devices for the foreseeable future. In 2004 the Chinese launched CERNET2 [67] a competitor to Internet2 in the U.S. and an effort to become leaders of the next generation internet. IPv6 adoption will be an enabler of such 3D web advances as internet television and geospatial platforms, particularly in the longer run, once people are using a mobile geospatial web in five or more years. Likewise, next generation internet will bring HD videoconferencing, 3D television and other data-intensive services, possibly beyond the 10 year horizon for this roadmap.\nl\n\u2022 Onset cues are used for realistic motion simulation in high-end simulators. In orienting to the world, the human body responds primarily to \"onset cues,\" inital rapid accelerations that signify a change in speed or direction. In combination with vision simulation, a number of virtual reality simulators (pilot trainers, combat trainers, etc.) use onset cues to provide kinesthetic feedback in highly immersive environments without requiring motion through space. Link's AH-64 Apache helicopter simulator, which requires a security clearance to operate, employs such such powerful onset cues that operators can get broken noses and bruises from the impact of virtual missiles, etc. Similar approaches are used in amusement park rides and simulated racing .\nm\n\u2022 Head mounted displays (HMDs) and Spatially Immersive Displays (SIDs) like CAVE for virtual reality exist, but both technologies today are used only in niche markets. HMDs are likely to remain niche applications for the forseeable future (see Predictions, Tech and Science). There are many small HMD makers. eMagin makes a head-mounted, head-tracking 3D Visor with a 600 x 800p OLED display for immersive gaming for $600. Sensics uses the eMagin displays to make a very expensive panoramic HMD VR system with 2200 x 1200p per eye for military customers.\nn\n\u2022 Physical Hyperlinks (Physical World Hyperlinks) are any machine readable identifier (1D and 2D barcodes, RFID tag, image, sound, fingerprint) that can be resolved by a cell phone to dial a phone number, start an email, or facilitate a direct Internet connection. In Japan today, 2D barcodes called QR (\"Quick Response\") codes , originally used for inventory management, are now proliferating on business cards, in magazine ads and product packaging. QR codes displayed on All Nippon Airways kiosks now allow cellphone users to travel with paperless electronic tickets. On 3G phones with good built-in cameras, even QR codes on billboards can be resolved by the camera phone, to play a movie trailer, provide a coupon code, etc. The current spec has an alphanumeric data capacity of 4,296 characters. A billboard QR code presently takes up significant space, but this space will certainly shrink as cell phone cameras and processors get better. See picture right, from \" New Bar Codes Can Talk With Your Cellphone ,\" Louise Story, NY Times, 1 Apr 2007.\no\n2B. Current Conditions - Business and Economics\n\u2022 Real-money trading (RMT) (also known as virtual asset trading), the purchase of virtual game items and virtual currency online, through such online enterprises as IGE , MOGS , and TEKGaming , is a major global annual business, with the 2005 market size estimated at somewhere between $200 million and 1.5 billion [13]. Many virtual world currencies trade at rates higher than national currencies such as the Korean won and Chinese yen [1]. Besides blogosphere commentary on in-game activity, RMT is one of the few significant feedback systems today between events in the virtual and real world. Summit quote: \"There is the idea that what happens in the virtual can be tied to the real world. The reality is it's only happened a few times, real-money trade being one of these cross-over points. And it's not supposed to happen, it's actually against the rules in most MMOs.\"\na\n\u2022 Proliferation of internet video viewing platforms, and innovative video content distribution and revenue models. A number of companies have recently innovated serving video over the internet to large numbers of users, setting the stage for the emergence of true, network-independent internet television (IPTV) . Companies like YouTube (70 million clips watched daily in July 2006), Google Video , Apple iTunes Video , iFilm , and MetaCafe are leading examples. Some are also innovating new downloading systems, like Metacafe, which allows regular users to download desired content to their hard drives automatically at night. Many are creating new digital rights management (DRM) systems for distribution of proprietary content. Apple iTunes Video allows viewing of reasonably priced content ($2 per network TV show) on computer or wearable video iPod. Google's revenue model is the most innovative, giving 70% of the revenues from paid video content to the content producer, allowing independent video producers to go direct-to-internet with a revenue model far better than they've ever had before. Google Video is also allowing the content producer to set the price, another first. Some of the free user-rated content is so interesting and tagged to user interests that it would, if downloaded to a digital video recorder (DVR) be preferable to watching regular television in the evening for some users. One can foresee a great platform for delivering specialized video content (machinima, tournaments, etc.) to game players and virtual world denizens just a few years hence.\nb\n\u2022 Chasing the long tail. A recent NYT article [49] noted that Netflix , the online DVD rental service, with 5 million subscribers and 60,000 titles, has more than half (35-40K) of these titles rented out in any particular day. This suggests a strong appetite for the \"long tail\" [50] of 3D media content, at least among a subset of consumers, that is presently not being fulfilled by lowest common denominator Hollywood video productions, but is begining to be addressed by new media (Netflix, internet video) in an increasingly participatory culture. Netflix's movie recommendation collaborative filtering system pushes consumers down the long tail of similar but more obscure fillms. It is so advanced that, like Amazon's, it is a competitive advantage. We can expect simiilar advances in recommendation systems for social communities within 3D worlds, as they proliferate.\nc\n\u2022 Virtual prototyping (VP) is term from computer aided design (CAD), development, manufacturing, product lifecycle management (PLM), and quality assurance circles that involves simulation and testing of designs prior to manufacture. Most of this software is proprietary today, like SimDesigner by MSC Software, and Noesis PLM Optimization software, by Noesis Solutions, both built on the Catia V5 product development platform of product lifecycle management (PLM) software leader Dassault Systems. VP systems \"automate the exploration of the design space\", allowing designers to try different materials and design parameters, rapidly simulating the physical and cost characteristics of the expected result. A few products designed in today's virtual worlds have already made the jump to the physical world. Tringo , a multiplayer game designed and played in Second Life, has been licensed for \"real world\" distribution on the Game Boy Advance in 2006. This has led some to forsee virtual worlds potential to become a low cost and low risk environment for prototyping physical products and architectures. But perhaps a more competitive future will be the ability to run professional CAD/CAM, architecture, PLM and other simulation software from within virtual worlds, as specialized creation environments for those with prototyping interests.\nd\n\u2022 3D worlds do not yet provide a useful work experience for most people, nor have enough features that integrate into people's nonvirtual lives. Summit quote: \"If I could go to these worlds and do something [useful] I'd be there everyday. But I'm not there just for the social activity. As soon as they bring in document creation or start being able to trade real things that have value outside the virtual environment I'm in.\" Seriosity may be the first company developing virtual worlds as online collaboration spaces and workspaces for virtual companies. They are in stealth mode in 2006.\ne\n\u2022 Business models are emerging that allow humans to do piecework in cyberspace (and with gold farming, even in virtual worlds), and even to train simple AI programs. MTurk , Amazon's automated system for employing humans in contracts for simple online tasks, launched in beta in 2006. MTurk supports micropayments (e.g., a few pennies per task) and the monitoring of piecework performance via reputation. Boxxet , a website and set of tools for generating community-ranked topical interest pages, launched in 2006. One of Boxxet's innovations is the use of human web users to train support vector AI machines to recognize valuable aggregated content.\nf\n\u2022 Gold farmers are individuals who acquire in-game currency or objects by continually defeating enemies within online games. This \"gold\" is then sold to other players through third party RMT (real-money trade) websites. Many farmers work in less developed countries and sell online to affluent gamers in the more developed nations. A Dec 2005 NYT article [15] estimated as many as 100 million people worldwide play interactive computer games on a monthly basis, that as many as 100,000 people in China (0.4% of Chinese gamers) are employed (self employed or in small businesses) as gold farmers. This latter number hasn't been independently verified.\ng\n\u2022 In 2004, Internet penetration in China was still less than 6% of the urban population in 2004 [6], yet by that time China already had the single largest population of online gamers. This same year Chinese game companies Shanda and Nexon announced a world record for simultaneous online play of 700,000 users, playing Crazy Arcade (BnB) , a game where families play a simple virtual world game as teams against other families online.[1].\nh\n\u2022 In 2005, eBay's Internet Games category, hosted $30 million in trade for goods (virtual items and currency) that only exist in synthetic worlds [1]. Some (not all) game providers have since banned virtual asset and currency sales, driving much of this traffic to third party sites.\ni\n\u2022 2D Avatarized IM and chat worlds are popular and profitable, more so than 3D. There is already a healthy business in 2D virtual world chat spaces, where avatars navigate 2D space, make friends, participate in activities, and purchase items. Registration in such worlds is free but access to activities and purchase of virtual items (furniture, etc.) costs real money. Playdo in Sweden has more than 300,000 registered members in 2006. Habbo Hotel in the UK is a similar service. Coke Studios (Coca Cola, Inc.) is the most successful branded 2D world where users trade music, wander, chat, and collect items for their 2D \"studios.\" Yahoo IM avatars can be upgrade with faces, outfits, and backgrounds for a small fee. These low-latency and efficient 2D worlds are still vastly more popular than 3D, and may remain so for some time. This is especially evident in the Korean market. 2D virtual worlds like Puzzle Pirates are presently trying to bring this formula to the US and Europe.\nj\n\u2022 While 2D+ social networks ( Cyworld in Korea, MySpace , LiveJournal , many others in the US) have gone mainstream, 3D worlds have yet to do so. While being on a social network of some type is a prerequisite to \"being cool,\" using an open-ended virtual world today (Second Life, There, Project Entropia) can still have the opposite effect, positioning you as \"out of the mainstream.\"\nk\n\u2022 Since many of the legal liability issues of virtual spaces haven't been resolved, perhaps only smaller companies, willing to take calculated risks, can pioneer the development of virtual worlds at present. Linden Lab (creators of Second Life) is a rare example of a company willing to accept the emergence of loosely controlled user-generated content and expression within their world, including pornographic content on the adult version of the world, and user mashups involving visual imagery that is not their own intellectual property. Summit quote #1: \"As an outsider one of the reasons why Second Life works is because you've got management who was willing to take the positions that they've taken on sex and IP etc. That would seem the rare thing: finding a management team willing to make those decisions again.\" Summit quote #2: \"I was at the Austin Game Conference talking to a big shot from Sony Online, he was talking about how great it was to see SL succeeding... I said if you like it so much, how come when I play a Sony game I can't at least upload a coat of arms to wear on my armor? Nothing else, just give me that. And he said, 'Oh no we can't do that because then we'll have Nazis running around everywhere.'\"\nl\n\u2022 Virtual tourism is in its infancy. Beginning with interactive CDs in the 1980s, virtual tourism is slowly gaining interest. Communities from Geoplace to the Virtual Terrain Project exist to promote tools for constructing the real world in interactive, 3D digital form. The attractiveness of virtual tourism systems seems today to be a complex function of hardware (speed and resolution), design (interface intutiveness), and software (story appeal and usefulness in connection to \"real world\" activities). As the market develops, software should increasingly become the key differentiator among competing VT systems, as we have seen with video games and online worlds. In coming years, when we have significantly faster computers, and can rapidly tour \"interactive Los Angeles\" or \"interactive Yosemite\" and sample micronarratives before deciding which of the many possible experiences we will take in a given day, and when this platform is integrated into tomorrow's browsers and today's passive, narrative-driven experiences like LA City View or the Travel Channel , virtual tourism is likely to be a very compelling activity.\nm\n\u2022 There is a gap between advertising dollars spent on television, print, and other media versus video games. Of $80 billion spent on advertising worldwide, only 10% of is games-related. This is disproportionate to the time people spend playing, so there may be room for significant growth in game advertising revenue. Some believe in-game advertising can grow significantly, but others believe such product placement will be too disruptive to be tolerated in many game environments (e.g., picture soft drink ads inside a medieval fantasy game). Nevertheless, there is still significant room for advertising around the delivery of the game, as during free downloads of advertiser-supported game modules. Making a bet on in-game placement, Microsoft recently purchased the in-game advertising company, Massive Inc . Michael Cassidy of Xfire at E3 2006 said \"$15 billion is spent on TV advertising. Less than 1% today spent on gamers. But 18-34 year old men spend more time playing video games than watching TV. If you believe in an efficient market, there's going to be a huge shift into gamers.\"\nn\n\u2022 The AEC (Architecture, Engineering, and Construction) industry is a major constituency driving metaverse development. They see 3D geospatial visualization programs like Google Earth as major new tools for \"location-based simulation.\" The US, Europe, and China are all experimenting with virtual geographic environments for city planning, building, construction, modeling.\no\n\u2022 Local positioning systems (LPS), extensions of GPS tracking systems in use in shipping logistics, allow the ability to identify and inventory all objects in a local space, which in turn can be used to improve the value of 2D and 3D GIS visualizations. Chief among LPS solutions today are RFID systems , which integrate microprocessors, memory, modems, antennas, and power sources on a piece of silicon the size of grain of rice to a postage stamp. 3M sells an RFID Tracking Solution that allows the realtime location of physical files, and other important objects throughout the office. Privacy advocates have major concerns with RFID tracking, which is both invasive of privacy and not secure, as the chips can easily be interrogated and spoofed. Nevertheless, their use for object tracking, and their ability to feed this data into visualizations, continues to grow.\np\n\u2022 3D navigation systems are emerging in Japan and Europe. 2D navigation systems come preinstalled on many new cars, boats, and planes, and are available on portable units for $200-2,000. Verizon's VZ Navigator is a cell phone service with turn-by-turn directions and voice instruction for $10/month. Honda's navigation system provides spoken response to 700 natural language commands.\nq\n2C. Current Conditions - Social, Legal and Other\n\u2022 Dramatic rise of social networks and social virtual worlds. While there have been many false starts and fadeouts (Tribe, Ryze, Yahoo! 360, etc.), today's leading 2D social networks like MySpace (94 million users), Xanga (27 million users), Bebo (22 million users) and Orkut (16 million users), etc., have experienced sustained explosive growth in recent years. Most focus on the youth demographic, rapid adopters of new online behavior. MySpace is now the fourth most popular English language website , according to Alexa Internet, adding an astonishing 500,000 new users a week (Jul 2006). Automation allows these users to be supported by a company of only 500 employees. MySpace supports streaming audio and internet video, giving it limited 3D functionality and making it very popular with independent musicians and filmmakers. A number of these communities, like Cyworld (18 million users), Habbo Hotel ( 7 million users ) and Playdo (300,000 users) also support avatars and the navigation of 2D social space, making them true \"social worlds.\" Finally, a few social worlds, like Second Life (340,000 users) and There , offer a fully 3D immersive experience, but have the slowest acquisition rates, as the technology overhead and user effort required for 3D worlds remain higher at present.\na\n\u2022 The state of online and virtual worlds time statistics today is poor. The BLS's American Time Use Survey (ATUS) is a major new undertaking that will give us insights into actual time use changes from year to year in American workplaces and households. The first official 2005 dataset has not yet been released, but early datasets have been analyzed in the first ATUS conference. Various non-ATUS studies have estimated that Americans spend roughly 35 hours per week either at school or at their jobs, and another 35 hours a week in leisure activities. Of this latter 35 they spend roughly 10 hours watching television. In their small annual phone survey, Harris Interactive estimated that the average American spent 9 hours online in 2006, up from 7 in 1999. Based on the movement of reading from physical to virtual space, a 1997 OC&C Strategy report estimated that by 2010 people would spend more time online than reading books, magazines, and newspapers combined. The 2006 ESA Game Player Data page claims that 50% of all Americans play video games, and that the average male game player plays 7.6 hours, and adult female game player plays 7.4 hours/week. They also claim that 44% of the most frequent video game players play online games. Other studies estimate that youth \"heavy gamers\", the top 25% of youth gamers, mostly male, age 14-17 years of age, spend on the order of 20-30 hours/week playing games. ESA claims that women represent about 38% of the total game playing population. In Korea, where broadband penetration is greatest, a 2000 study estimated that 80% of all youth (8-24 years) played games online at least once a month.\nb\n\u2022 There is presently very weak broadband leadership at the federal level. Despite several Korean studies linking broadband development with economic prosperity and social welfare, and the obvious value of broadband as a platform for Web 2.0 innovation, there are no government initiatives to accelerate broadband development in the United States. President Bush's Technology Agenda gives only the expected lip service to broadband development , and touting minor economic incentives such as a two year deferment on the planned Internet Access Tax (hey look, we didn't tax your access this year!) as examples of progress, but offers no specific monies, strategy, or program.\n\u2022 The rising importance of \u201c Network Neutrality \u201d Policies. Lesiglation and activism that guarantees democratic access to the network. In August 2005, the FCC adopted the following guidelines regarding network neutrality:\n1. Consumers are entitled to access the lawful Internet content of their choice;\n2. Consumers are entitled to run applications and services of their choice, subject to the needs of law enforcement;\n3. Consumers are entitled to connect their choice of legal devices that do not harm the network; and\n4. Consumers are entitled to competition among network providers, application and service providers, and content providers.\nRegulators have increasingly shown willingness to require broadband providers (cable, DSL, wireless) to eliminate competitive restrictions on network usage (e.g., ensuring the consumer has freedom to run free VoIP programs like Skype over telco-run broadband infrastructure, to set up Wi-Fi extensions on home networks, etc.). These emerging \u201cnetwork neutrality\u201d policies bode well for U.S. consumer rights to run complex 3D applications in coming years. Even if such applications compete with existing provider offerings, are bandwidth intensive and force network upgrade, network providers have few options to restrict network usage.\nd\n\u2022 Transparent cities. Public surveillance in some cities is already in an advanced state. In London today, closed-circuit TV network s take pictures of many drivers of cars as they enter the city, record and run their licence plates, and officers check for major law violators. The network can be used to visually search for the car and the pedestrian throughout the city if an arrest is warranted. Over an afternoon of public driving and walking, a citizen might be photographed 200 times by the network. As image recognition improves, such networks will allow a virtual realtime map of city auto and foot traffic, a major advance for secure cities.\ne\n\u2022 The online pornography industry is now innovating internet video on demand (VOD) , with downloads burnable to DVD. Many of these VOD aplications allow unlimited burns to disk. It is questionable whether this \"multiple-burn policy\" will spread to other content providers, as pornography is less socially sharable than other media. Controlling copy count still seems by far the most prevalent future business model for providers of most types of proprietary content, with promotional samples and small independent material available free on public download sites.\nf\n\u2022 A high diversity cost of current content filters. We want the web to be an intimate social medium. Yet we also want it to be one with fine-grained filters for those who want them, and in this function it presently fails (pornography, spam, etc.). Communities and platforms (AOL, etc.) can provide such filters, but presently in a coarse-grained manner, that involves a loss of diversity.\ng\n\u2022 Virtual-physical commerce and social fusions. Many virtual world businesses and social activities can\u2019t be easily partitioned between physical and virtual components. Consider an e-commerce site, or a virtual real estate site that has employees in the physical world, or online social communities that involve both virtual and physical world meetups.\nh\n\u2022 MMOGs like World of Warcraft (WoW) have been called \u201cthe new golf\u201d (only partially tongue in cheek) among online gamers because they are an excuse to get together and talk about real world life (business, social events) while engaging in automatic and ritualized behavior. The \"stickiness\" of WoW is that it is a shared experience. You are able to talk about anything you want while working your group through a relatively simple arc of gameplay.\n"}, {"score": 121.09225, "uuid": "76052121-58b8-5b80-821d-08d64d8672f6", "index": "cw12", "trec_id": "clueweb12-0105wb-34-30118", "target_hostname": "www.bluesnews.com", "target_uri": "http://www.bluesnews.com/archives/oct98-5.html", "page_rank": 1.1944946e-09, "spam_rank": 67, "title": "Blue's News - October 31-November 6, 1998", "snippet": "<em>to</em> the <em>OpenGL</em> version.", "explanation": null, "document": "Mouse Resource Page [11:03 AM EST]\nI received a tip on how to get the Windows NT mouse sampling fix to work for IntelliMouse users who were having a problem, so I put together a quickie mouse resources page to consolidate the files and info from the sampling issue, and to provide links to other mouse resources. The tip on WinNT sampling with the IntelliMouse is there, and other mouse wisdom is welcome, as are corrections.\nJohn Carmack on Q3A Architecture [6:38 AM EST]\nJohn Carmack's .plan has an update on what he describes as the most significant portion of his talk at the FRAG2. The update is huge, here's an excerpt on how the issues he's discussing impact code portability and potential for cheating:\nRelated both issues is client side cheating. Certain cheats are easy to do if you can hack the code, so the server will need to verify which code the client is running. With multiple ported versions, it wouldn't be possible to do any binary verification.\nIf we were willing to wed ourselves completely to the windows platform, we might have pushed ahead with some attempt at binary verification of dlls, but I ruled that option out. I want QuakeArena running on every platform that has hardware accelerated OpenGL and an internet connection.\nThe only real solution to these problems is to use an interpreted language like Quake 1 did. I have reached the conclusion that the benefits of a standard language outweigh the benefits of a custom language for our purposes. I would not go back and extend QC, because tThat stretches the effort from simply system and interpreter design to include language design, and there is already plenty to do.\nI had been working under the assumption that Java was the right way to go, but recently I reached a better conclusion.\nThe programming language for QuakeArena mods is interpreted ANSI C. (well, I am dropping the double data type, but otherwise it should be pretty conformant)\n...\nThe tools necessary for building mods will all be freely available: a modified version of LCC and a new program called q3asm. LCC is a wonderful project -- a cross platform, cross compiling ANSI C compiler done in under 20K lines of code. Anyone interested in compilers should pick up a copy of \"A retargetable C compiler: design and implementation\" by Fraser and Hanson.\n...\nThe drawback is performance. It will probably perform somewhat like QC. Most of the heavy lifting is still done in the builtin functions for path tracing and world sampling, but you could still hurt yourself by looping over tons of objects every frame. Yes, this does mean more load on servers, but I am making some improvements in other parts that I hope will balance things to about the way Q2 was on previous generation hardware.\nThere is also the amusing avenue of writing hand tuned virtual assembly assembly language for critical functions...\nI think this is The Right Thing.\nJohn Carmack's Talk on Shooters [6:38 AM EST]\nOn this week's Shooters we will air a video presentation of the talk John Carmack gave at the FRAG2 about Quake III Arena and related topics. The presentation will be uncut, with part two of the talk to air the following week. The show will air this Thursday at 7:00 PM Eastern time, and in the archive thereafter. After the two part Carmack talk, on November 19 our guest will be id Software's Paul Steed, and we will also post the RealPlayer video of the talk he gave at the FRAG2 on the models in Quake III Arena (see next story for more on that).\nMore on Carmack & Steed's FRAG2 Talks [6:38 AM EST]\nOn the same subjects, LinuxGames has a post up talking about the platform independence for mods in Quake III Arena based on some of John Carmack's comments at the FRAG2 (like the .plan update above). Also, The Q2PMP has a report from the FRAG2 about the models in Quake III Arena from Paul Steed's talk, going over the portions where he discusses how the models are actually built as well as a lot of general player model info.\nNewer Blood2 Demo & Shogo Patch Soon [6:38 AM EST]\nA multiplayer Blood2 demo, a newer version of the single player Blood2 demo to offer some speed and feel improvements over the original, as well as a newer Alpha Shogo patch are all in the works over at Monolith high command (thanks Apache at Blood2.com ). Monolith's Brian Goble's .plan has an update on these subjects, mentioning the Blood2 update may be available as a patch, rather than a full download, and will be out \"a few days after the full version officially goes gold. :),\" which he says could be \"any hour now!\" Monolith CEO Jason Hall's .plan also has word on the optimizations recently added to Blood2, and the updated demo, and also addresses the potential for anger at a second large download. Finally, Blood2 project leader Jay \"Shade\" Wilson updated his .plan with more on all of this. Shade's update is huge, giving word on where to send bug reports ( b2demobugs@lith.com ), and addressing some of the concerns he's received, touching on Speed, Mouselook, Mouse Sensitivity, Crash bugs, Limb Loss (lack thereof), Blood (not enough), and The levels are \"too techie.\" Here's the conclusion where he talks about what's in the works:\n***New, Improved, Blood 2 Demo***\nYes, we will be releasing a new and improved Blood 2 demo, mainly so people can see the speed improvements. The details are undecided at this point, but we will probably release it shortly after the game goes gold.\n***Multiplayer Demo***\nFor those who only play multiplayer, yes, we will be releasing a multiplayer demo. We won't release it until we get the updated net code that Shogo is testing out and integrate it into B2's code, which will be the Blood 2 point release, which should arrive in late November, early December at the latest.\n***Blood 2 Final***\nNo, we haven't gone gold yet, but we are very close. We've frozen all content and are trying to work out the last of the bugs. That's all I'll say for now. :)\nNT PS/2 Mouse Rate Revisited [6:38 AM EST]\nA follow-up on the post from yesterday about a fix that allows you to set a PS/2 mouse under Windows NT to a higher sampling rate, I've received a couple of letters confirming that this does work, though g1zm0 sends a warning to have NT4 SP4 installed, or you risk a B.S.O.D. (Blue Screen O' Death) at startup. To recap, this replacement system file for NT (31 KB) by Espen Blikstad should allow the changes made with the WinNT PS/2 Mouse Rate adjuster to take effect, which can be verified using the Mouse Rate Checker utility . Squeak!\nNew Qizmo [6:38 AM EST]\nA new version 2.51 of Qizmo is available, fixing some bugs in this shareware QuakeWorld proxy program, and adding support for dynamic IP's and versions of the QWCL hacked with the polyblend hack.\n3D Realms Diary [6:38 AM EST]\nA Weekend To Remember is an article by 3D Portal 's Chris Day recapping his FRAG2 experience, recounting a visit to 3DRealms to check on the progress of Duke Nukem forever.\nCliff B Interview [6:38 AM EST]\nPart one of Action Xtreme's interview with Cliff Bleszinski is up talking to the Epic designer on a wide variety of topics.\nid Demo Analyzer [6:38 AM EST]\nThe Demo Analysis Homepage has a new version 0.99 of the id Demo Analyzer (IDDA), which outputs stats from demos recorded in Quake, Quake II and QuakeWorld.\nOn Video Violence [6:38 AM EST]\nDoes shoot-'em-up software lead to aggressive behavior? is an article on CNN that suggests offering your children Myst and Riven as computer game alternatives (I'd sooner have 'em watch Barney). Thanks DBC. (\"These are the days of video violence...\")\nsCary Future [6:38 AM EST]\nCongrats to sCary, who has announced he will be joining the gaming startup being founded by Charlie Brown, Gary McTaggart, Jack \"morbid\" Mathews, and Mike \"giggler\" Wardwell shortly to be their project manager.\n"}], [{"score": 103.396225, "uuid": "4ef8d7e4-f981-56ff-9d3d-25cae44e678f", "index": "cw12", "trec_id": "clueweb12-0305wb-90-17672", "target_hostname": "cse.csusb.edu", "target_uri": "http://cse.csusb.edu/dick/doc/C++.libraries.FAQ.txt", "page_rank": 1.1719142e-09, "spam_rank": 68, "title": "From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!howland.e", "snippet": "Ports <em>to</em> other <em>platforms</em> <em>in</em> progress. This <em>is</em> more <em>than</em> just a wrapper for the WinSockets calls. It provides higher-level functions that make reading&#x2F;writing <em>to</em> sockets very easy.", "explanation": null, "document": "is one of http, ftp, mailto, news, author, postal, tel, fax or bbs -\nis a single line of text. Separate parts of a postal address with commas. -\nis optional text describing the reference Examples: - http://www.ashmount.com/trumphurst/cpplibs1;Available C++ Libraries - ftp://ftp.ashmount.com/trumphurst/docclass/docclass.zip;DocClass utility - mailto:cpplibs@trmphrst.demon.co.uk;Mail a submission to the FAQ - news:comp.lang.c++ - author:Nikki Locke - fax:1-800-456-789;Toll-free enquiries Please mail comments, criticisms, additions and amendments to me at cpplibs@trmphrst.demon.co.uk. NOTE TO VENDORS This FAQ contains details of both free and commercial libraries. Vendors who have sent me details of their libraries for inclusion in the FAQ have been pleasantly surprised by the level of interest generated. Please remember, I only allow 2 or 3 paragraphs describing the product, and no advertising hype ! Added : 01/01/95 Amended : 22/05/96 WWW http://www.trmphrst.demon.co.uk/cppsub.html - A Web form to add your submission to the list Email:cpplibs@trmphrst.demon.co.uk - Mail a submission to the list ------------------------------------------------------------------------ Changes since the last update ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Last update was on Jul 31 1996 CGI++ added on Mar 19 1997 (part2) CNCL updated on Aug 8 1996 (part2) AvlTree added on Mar 19 1997 (part2) CmdLine added on Mar 19 1997 (part2) C++SIM 1.5.2 updated on Mar 19 1997 (part2) CDBFile added on Mar 19 1997 (part2) CSLIB added on Mar 19 1997 (part2) CSock C++ Socketing Library added on Nov 13 1996 (part2) Grayscale Image Processing updated on Mar 19 1997 (part2) Callbacks added on Oct 3 1996 (part2) Doctor Matrix added on Mar 19 1997 (part2) BRL10 added on Nov 13 1996 (part2) ADAPTIVE Communication Environment (ACE) updated on Mar 19 1997 (part2) SPLASH updated on Mar 19 1997 (part3) paintlib added on Mar 19 1997 (part3) MIME++ added on Nov 25 1996 (part3) Options added on Mar 19 1997 (part3) molbio++ updated on Aug 8 1996 (part3) td.lib added on Mar 19 1997 (part3) O-Matrix added on Mar 19 1997 (part3) SOCKET++ updated on Mar 19 1997 (part3) MetaKit updated on Nov 14 1996 (part3) MATCOM updated on Aug 8 1996 (part3) PTL - Portable Threads Library added on Nov 13 1996 (part4) ClassAction added on Aug 7 1996 (part4) C++ component search engine added on Nov 13 1996 (part4) SNIP: A Programming Power-tool added on Mar 19 1997 (part4) MkHelp added on Aug 2 1996 (part4) MenuPlus added on Nov 13 1996 (part4) Algebra updated on Oct 3 1996 (part4) Robert Davies C++ list added on Nov 13 1996 (part4) IKaID added on Mar 19 1997 (part5) Allegris Workshop added on Nov 13 1996 (part5) C++/Views (Allegris Workshop) updated on Nov 13 1996 (part5) MainWin updated on Mar 19 1997 (part5) MFC Toolkit 2.0 added on Mar 19 1997 (part5) Forward Error Correction Library added on Sep 9 1996 (part5) Thames Calendar Suite added on Nov 13 1996 (part6) Rhine collection added on Nov 13 1996 (part6) ObjectViews updated on Mar 19 1997 (part6) ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:44 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (6/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:27 GMT Organization: Trumphurst Ltd. Lines: 920 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256158 comp.answers:25744 news.answers:101457 Archive-name: C++-faq/libraries/part6 Comp-lang-c++-archive-name: C++-faq/libraries/part6 Available C++ libraries FAQ (6/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (this file) Other commercial sources of C++ code (this file) ------------------------------------------------------------------------ Commercial libraries (O-Z) ~~~~~~~~~~~~~~~~~~~~~~~~~~ ObjectBuilder - GUI library ObjectBuilder includes the Object Interface (OI) class library which is a C++ object-oriented implementation of both Motif and Openlook interfaces. Note that interested parties can read more about the OI library in the 1300 page \"OI Programmer's Guide\" by Gary Aitken and Amber Bensen published by Prentice-Hall. ObjectBuilder is a GUI that offers developers a complete C++ implementation of Motif. ObjectBuilder allows developers to rapidly design, test, modify and implement sophisticated object-oriented graphical user interfaces by using ObjectBuilder to manipulate C++ objects found in its Object Interface (OI) C++ class library. ObjectBuilder features a drag-and-drop user interface that allows developers to immediately visualize the results of their user interface design. ObjectBuilder is owned and supported by Openware Technologies, Inc.. Formerly owned by ParcPlace Systems, Openware recently acquired ObjectBuilder. Operating Systems: - Solaris - HP UX - IBM AIX - SGI Irix - Dec Alpha - SCO Unix 3.2.4 - Unisys Unixware - NCR SVR4 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Tel:1-800-933-5558 x4224 (Kris Gottschalk) ------------------------------------------------------------------------ Objective Grid - Visual C++/MFC grid control Stingray Software offers two Visual C++/Microsoft Foundation Class extensions: Objective Grid and SEC++. Objective Grid is a full-featured grid control that can be used as a CView or CWnd derivative. All products include source code and are royalty free. Objective Grid is $395. There is a bundle with SEC++ available for $795. Compuserve: GO STINGRAY Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.unx.com/~stingray Email:stingsoft@aol.com Tel:1-919-321-6186 Tel:1-800-924-4223 ------------------------------------------------------------------------ Objectivity/DB - Object Oriented Database Operating Systems: - Sparc - HP 9000 - IBM AIX - SGI Irix Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.objectivity.com Email:info@objectivity.com Postal address:Objectivity Inc., 301B East Evelyn Avenue, Mountain View, CA 94041 Tel:415-245-7100 ------------------------------------------------------------------------ OBJECTSTORE - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:44-793-491177 Fax:617-270-3509 Postal address:UK Office: Object Design (UK) Ltd., 604 Delta Business Park, Welton Road, Swindon, Wiltshire SN5 7XP Postal address:Object Design, One New England Executive Park, 101 El Camino Real, Suite 300, Burlington, MA 01803,, Menlo Park, CA 94025 Tel:44-793-486111 Tel:(415) 327 - 5191 Tel:617-270-9797 ------------------------------------------------------------------------ ObjectViews I believe this is a commercial version of InterViews. Quest Systems Added : 01/01/95 Amended : 19/03/97 Licencing : Commercial WWW http://www.quest.com Email:info@quest.com Postal address:Quest Systems Corporation, 3333 Bowers Avenue, Suite 130, Santa Clara, CA. 95054 ------------------------------------------------------------------------ Octo+ - Extenstion library to MFC The Octo+ MFC class library is an extenstion library to MFC. Subscription entitles you to the use of all the classes developed for the duration of a year. There is a commitment to issue a new class every two weeks. De facto at least one new class is added every week. You could compare it to the subscription to an online MFC source magazine. The class library is accessible at : www.periphere.be where you can get all the latest information up-to-date. New classes issued are eMailed to registered users. Operating Systems: - PC Windows Compilers: - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.periphere.be ------------------------------------------------------------------------ ONTOS - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+44 625 539 905 Fax:617-272-8101 Postal address:UK: VALBECC SOFTWARE, Mr. Fred Peel, 115 Wilmslow Road, Handforth,, Wilmslow, SK9 3ER, U.K. Postal address:Ontologic, Inc., Three Burlington Woods, Burlington, MA 01803 Tel:+44 625 539 903 Tel:617-272-7110 ------------------------------------------------------------------------ Open Dialogue Operating Systems: - HP UX Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ Open Interface Version 3.0 This is a C-based UI library, but type-safe for C++ compatibility. The software also comes with a WYSIWYG GUI builder. They include tons of extra widgets like business graphics (bar, pie, and line charts), images (all standard formats), and hypertext help. Other software in Open Interface includes international character support, multi-font support, full printer support, memory management, file I/O support as well as Windows DDE support (the latter is, of course, non- portable). They also have a product called Nexpertobject, which is an expert systems tool intended for GUI development. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Neuron Data, 156 University Avenue, Palo Alto, California 94301 Tel:(415) 321-4488 Tel:(800) 876-4900 ------------------------------------------------------------------------ OpenUI - Another GUI builder This interface supports C, Pascal, and (ish) COBOL. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Open Software Associates, P.O. Box 3599, Sunnyvale, CA 94088-3599 Tel:(408) 730-2626 ------------------------------------------------------------------------ ORION/ITASCA - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:612 851 3157 Email:doug@itasc.com Postal address: Itasca Systems, Inc., 7850 Metro Parkway, Minneapolis, Minn 55425 Postal address:Itasca Systems, Inc., 2850 Metro Drive, Suite 300, Minneapolis, MN 55425 Tel:(612) 851-3155 Tel:612-851-3158 ------------------------------------------------------------------------ OS Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+33 1 30 84 77 90 Fax:+1 617 577 1209 Email:didier@o2tech.fr Email:o2@o2tech.fr Postal address:France: O2 Technology, 7, Rue du Parc de Clagny, 78035 Versailles Cedex, France Postal address:O2 technology, Suite 2200, 1 Kendall Square, Cambridge MA 02139, U.S.A. Tel:+33 1 30 84 77 9 Tel:+1 617 621 7041 ------------------------------------------------------------------------ Persistence - Access to a relational database from a C++ object model Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Persistence Software Inc, 1700 Sourth Amphlett Blvd, Suite 250, San Mateo, Ca 94402 Tel:415.341.7733 ------------------------------------------------------------------------ POET - Object Oriented Database Pricing starts at about $500. 00 for the DOS version, to a little over $1000.00 for the Unix versions. Operating Systems: - PC Windows - Novell - OS/2 - Mac - Sparc - NeXT - PC DOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:+44 81 / 317 2310 Fax:408 / 748 - 9060 Fax:+44 81 / 316 7778 Fax:617 / 621 7097 Fax:+49 40 / 60 39 851 Fax:+49 30 / 342 8413 Email:poet@bks.de Email:acourt@cix.compulink.co.uk Postal address:In Germany : BKS Software Guerickestr. 27 1000 Berlin 10 Germany Postal address:BKS Software, 4633 Old Ironsides Drive, Suite 110, Santa Clara, CA 95054 Postal address:BKS Software, One Kendall Square, Suite 2200, Cambridge, MA 02139 Postal address:European Office:, BKS Software, Fo_redder 12, 2000 Hamburg 67, Germany Postal address:UK Office:, Silicon River, Ltd., 106-108 Powis Street, London, SE18 6LU, England Tel:+49 40 / 60 99 011 Tel:+49 30 / 342 3066 Tel:+44 81 / 317 7777 Tel:617 / 621 7047 Tel:408 / 748 - 3403 ------------------------------------------------------------------------ Presentation Services Manager UI library No WYSIWYG GUI builder exists, but they do include a script language. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+61 3 646 8610 Postal address:Lancorp Pty Ltd, 33 Nott St, Port Melbourne 3207, Australia Tel:+61 3 646 7100 ------------------------------------------------------------------------ Rhine collection - C++ functions for Name Matching To provide a computer name matching system where the strings are not identical eg to match \"The Megaland (USA) Corp\" with \"Megaland USA Corporation\" short list of features: - includes both exact and standard matching; - written as a binary tree for speed; - no built in limitations on number of names to match or length of names. C++ code is fully standard - verified by PC-lint [tm] version 7.0 Licence contains normal range of conditions - software may be used in customers own products subject to number of straightforward conditions. Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial WWW http:/www.timetide.com/ Email:kenneth@timetide.com Postal address:Time and Tide Ltd,22 St Leonards Road, Surbiton, Surrey, United Kingdom, KT6 4DE Tel:0181-399-8684 ------------------------------------------------------------------------ SEC++ - Visual C++/MFC controls SEC++ includes: CView derivatives for panning and zooming, image classes (DIB/GIF/JPG/PCX/TGA/TIFF), MDI alternatives, Win32 classes and control classes (maskedit, splash screen, tip of the day). All products include source code and are royalty free. SEC++ is $395. There is a bundle with Objective Grid available for $795. Compuserve: GO STINGRAY Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.unx.com/~stingray Email:stingsoft@aol.com Tel:1-919-321-6186 Tel:1-800-924-4223 ------------------------------------------------------------------------ SOFTPRO TOUCH - GUI C++ class library for OS/2: SOFTPRO GmbH has announced its new 32bit C++ class library TOUCH-GUI 2.1 for OS/2 2.x. The product contains more than 140 classes which support windows, menu bars, multi-threading, controls (including all OS/2 2.x controls: slider, value set, notebook, container), dialog boxes, graphics, printer control, MDI, DDE, Drag and Drop, loadable resources, and management of profiles (.INI files). Other features include auxiliary classes for data manipulation and storage management. Additionally, TOUCH- GUI 2.1 contains high-level classes like formatted entry fields, tables, and complete NLS. Furthermore, TOUCH-GUI 2.1 is fully integrated in STAR CASE++, an OOA/OOD case tool (method: Coad/Yourdon), and Intersolv's PVCS (a version control system). The product includes online (.INF) and printed documentation, a demo program, and samples. TOUCH-GUI 2.1 costs DM 1.720,00 excl. VAT (ca. US $990), the runtime DLL's may be distributed royalty free. For upgrade prices and special project licenses (including source code of TOUCH-GUI) contact the supplier. NOTE: TOUCH-GUI 2.1 single license will be available at a special price of DM 199,00 excl. VAT (ca. US $120) during 04/01/94 - 06/30/94. Printed documentation is not shipped with the special price product, it is available for another DM 99,00 excl. VAT (ca. US $60). However, full online documentation is included. Operating Systems: - OS/2 Compilers: - Borland C++ - Gnu CC - IBM Cset++ - Watcom C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+49 7031 6606-66 Email:ffu@softpro.de Postal address:SOFTPRO GmbH, Stadtgrabenstr. 21, D-71032 Boeblingen, Germany Tel:+49 7031 6606-0 Mr. Frank Fuchs (extension -50) ------------------------------------------------------------------------ StarView - A Portable C++ Class Library for Graphical User Interfaces StarView is a portable C++ Class Library for Graphical User Interfaces. StarView is one of the major parts of our total Object Oriented programming environment (we call it SOLAR system). - portability between the operating systems MS-DOS, OS/2, Macintosh and different UNIX flavours - at least portable between the GUI's MS-WINDOWS, MS-Presentation Manager, MacApp and OSF/Motif - fulfillment of the requirements of the different GUI Style Guide's - data exchange and direct communication between the applications in homogeneous and heterogeneous networks (groupware approach) Operating Systems: - PC Windows 3 - OS/2 - Sun - Mac Compilers: - Borland C++ - Zortech C++ - Glockenspiel C++ - MPW C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Author:Andreas Meyer, STAR DIVISION Fax:(415) 233-0142 Fax:++49 40 23646 550 Email:svinfo@stardiv.de Email:svinfo@starlab.uucp Postal address:Star Division, 2180 Sand Hill Road, Suite 320, Menlo Park, CA 94025 Postal address:STAR DIVISION GmbH, Andreas Jahnke, Sachsenfeld 4, D-20097 Hamburg, Germany Tel:(800) 888-8527 Tel:++49 40 23646 500 ------------------------------------------------------------------------ STL\n- ANSI/ISO compliant cross-platform toolkit STL\nis an ANSI/ISO compliant cross-platform toolkit that includes: - Standards\n- ANSI/ISO Standard Template Library (STL). The most portable version of STL on the market today! - ANSI/ISO String - Supports both char and wchar_t for international use! - Time\n- 64-bit time, date, and time zone support. Supports non-standard time zones and DST rules! - Thread\n- Portable interface for multi-threaded programming (Available on multi-threaded platforms) STL\ncomes with a 350+ page user guide, full source code, 250+ examples, and absolutely no royalties. Operating Systems: - HP UX - IBM AIX - PC Windows - PC 32-bit Windows - SGI Irix - Solaris - Sparc - SunOS - SYSV - Unix Compilers: - Borland C++ - Gnu CC - HP C++ - IBM xlC - SGI NCC - Sparcworks - Sun CC - Visual C++ - WATCOM C++32 Added : 22/05/96 Amended : 22/05/96 Licencing : Commercial Fax:1-214-663-3959 WWW http://www.objectspace.com/Products/STLToolKit Email:info@objectspace.com - Email for product information Tel:1-800-object1 ------------------------------------------------------------------------ Systems\n- ANSI/ISO compliant cross-platform toolkit Systems\nis an ANSI/ISO compliant cross-platform toolkit that includes: - Standards\n- ANSI/ISO Standard Template Library (STL) The most portable version of STL on the market today! - ANSI/ISO String - Supports both char and wchar_t for international use! - Time\n- 64-bit time, date, and time zone support. Supports non-standard time zones and DST rules! - Thread\n- Portable interface for multi-threaded programming (Available on multi-threaded platforms) - Network\n- TCP and UDP socket communications Create object-oriented internet application! - Streaming\n- Universal Streaming System (TM) for non-intrusive persistence and object transport Includes support for templates and STL! - IOStream interface to I/O objects, include sockets Use familiar \"cout\" syntax with sockets and other devices! - Platform\nfor UNIX - Comprehensive UNIX-specific systems programming classes. Includes process, message queue, SYSV IPC support and more! Systems\ncomes with over 700 pages of documentation, full source code, 400+ examples, and absolutely no royalties. Operating Systems: - HP UX - IBM AIX - PC 32-bit Windows - Solaris - Sparc - SunOS - SYSV - Unix Compilers: - Borland C++ - Gnu CC - HP C++ - IBM xlC - SGI NCC - Sparcworks - Sun CC - Visual C++ - WATCOM C++32 Added : 22/05/96 Amended : 22/05/96 Licencing : Commercial Fax:1-214-663-3959 WWW http://www.objectspace.com/Products/SystemToolKit Email:info@objectspace.com - Email for product information Tel:1-800-object1 ------------------------------------------------------------------------ Thames Calendar Suite - Collection of functions for the modern calendar This provides a complete collection of functions for the modern calendar. How many days between dates?, What is 3rd Tuesday of month, How many business days in period? Short list of features: - Comprehensive collection for timeseries, project control, financial markets accountancy; - writing dates to text, interpreting dates from text in almost any format; - tool kit to define bank holidays, incl Easter in western and eastern churches; - conversion between Gregorian Hebrew and Julian calendar. Inclusive Price around 215 UK pounds ie around 340 US dollars. C++ code is fully standard - verified by PC-lint [tm] version 7.0 Licence contains normal range of conditions - software may be used in customers own products subject to number of straightforward conditions. Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial WWW http:/www.timetide.com/ Email:kenneth@timetide.com Postal address:Time and Tide Ltd,22 St Leonards Road, Surbiton, Surrey, United Kingdom, KT6 4DE Tel:0181-399-8684 ------------------------------------------------------------------------ Tools.h++ - Rogue Wave tools library. Tools.h++ consists mostly of a large and rich set of concrete classes that are usable in isolation and do not depend on other classes for their implementation or semantics. Components include Collections, String processing, Time & date handling, File space manager, B-Tree disk retrieval, bit vectors, virtual I/O streams, caching managers, virtual arrays, etc. Added : 01/01/95 Amended : 22/05/96 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ USL C++ Standard Components Formerly developed and marketed by AT&T Bell Laboratories and UNIX System Laboratories, these are now developed and licensed by SCO. C++ Standard Components include : - Args - argc/argv command line parser. - Bits - bit manipulation to arbitrary-length bitstrings. - Block - dynamic arrays. - Array_alg - efficient algorithms for searching, sorting, inserting etc. - Fsm - finite state machines. - G2++ - message formatting for inter-process communication. - Graph - maintain arbitrary relationships between arbitrary entities. - Graph_alg - including searching, cycle and component detection. - ipcstream - inter-process streams. - List - doubly-linked lists. - Map - like arrays, except that the subscripts can be non-integral. - Objection - like UNIX software signals. - Path - facilities for manipulating UNIX path names and UNIX search paths. - Pool - optimise memory allocation. - Regex - regular expressions. - Set - including Sets, Bags, and pointer sets. - Stopwatch - for timing critical sections of code - String - variable-length character strings. - Strstream - iostreams for Strings. - Symbol - efficient symbol table handling & sorting. - Time - Time, Duration (time difference) and Place (geographical location). Also included are the following tools : - c++filt - demangles C++ names in standard input. - dem - demangles C++ names in an argument list. - demangle - demangles C++ names in a.out for easier debugging. fs - a tool and library to help find freestore bugs. - g2++comp - compiles G2++ record definitions. - hier - displays the inheritance hierarchy in a program. - incl - displays the hierarchy of include files used in a program. - publik - displays the public interface of a class. Operating Systems: - Unix Added : 01/01/95 Amended : 22/05/96 Licencing : Commercial Email:wmb@sco.com Tel:1-201-443-5622 ------------------------------------------------------------------------ VERSANT - Object Oriented Database Versant markets a full-function OODBMS together with associated DBA and application developer tools. Other platforms will be announced soon. A Windows/NT port is in progress. Interfaces to 'C', 'C++' and Smalltalk-80 are supported. Operating Systems: - Sun - IBM AIX - HP 9000 - Dec Ultrix - SGI Irix - NCR SVR4 - NeXT - Sequent - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+31 - (0)2503 - 66855 Fax:415-325-2380 Fax:(415) 325-2380 Email:aflynn@osc.com Email:info@osc.com Email:info@versant.com, Postal address:UK Distributor:, Admiral Software Ltd, Admiral House, 193-199 London Road, CAMBERLEY, Surrey GU15 3JT Postal address:European Office:, Versant Europe, Siriusdreet 2, P.O. Box 333, 2130 All Hoofddrop, The Netherlands Postal address:Versant Object Technology, 4500 Bohannon Drive, Suite 200, Menlo Park, CA 94025, Attn: Mike Mooney Tel:01276 692269 Tel:+31 - (0)2503 - 66851 Tel:(31) 2503-66373 Tel:415-325-2300 Tel:(415) 329-7500 Tel:1-800-VERSANT ------------------------------------------------------------------------ ViewKit ObjectPak - application framework for developing OSF/Motif and CDE applications using C++ ViewKit includes generic application classes, menu, dialog, and preference classes; as well as ToolTalk and UNIX process control systems. ViewKit ObjectPak builds on the C++/Motif programming methods established by Doug Young in his book \"Object-Oriented Programming with C++ and OSF/Motif\". ViewKit ObjectPak provides a variety of ready-to use components and enables developers to easily extend ViewKit by creating new component classes. With these high-level components, ViewKit ensures consistency throughout a family of applications, and promotes enterprise-wide software reuse. In addition, ViewKit supports easy and effective communication between applications by using ToolTalk(tm), the CDE standard for inter-application messaging. ViewKit ObjectPak is available in binary and source form. Originally developed by Silicon Graphics, ViewKit is now available through ICS for most UNIX platforms. ICS has distributors in the U.K., France, Germany, Italy, Spain, Sweden, Israel, Korea, Japan, and Australia. Operating Systems: - SunOS - Solaris - HP UX - Dec Unix - IBM AIX - SCO Open Desktop Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(617) 621-9555 WWW http://www.ics.com/ Email:info@ics.com Postal address:Integrated Computer Solutions, Inc. 201 Broadway Cambridge, MA Tel:(617) 621-0060 ------------------------------------------------------------------------ Warne's Garbage Collector (WGC) WGC is a full-featured high-performance C++ memory manager that includes: - an incredibly fast explicit memory manager (drop-in new/delete) - a parallel incremental generational non-copying collector - a transparent just-in-time heap-checker WGC's fast explicit memory manager provides a drop-in accelerated new/delete. Using a multi-tiered parallel algorithm with the first tier inline, WGC can allocate most objects inline in less than 10 instructions! To enhance space efficiency WGC uses address-aligned storage algorithms with no per-object overhead (no linked lists!). To reduce fragmentation, WGC maintains a single process free store for all threads, modules, and DLLs. WGC's collector implements both conservative and accurate scanning and fully supports C++ code. Classes, arrays, scalars, interior pointers, unions, cross-heap pointers, anonymous unions (really!), large objects, library code you have no control over, etc. are all supported. Plus, you can incrementally deploy automatic memory management in existing or new applications, making some classes or objects collected and some not. WGC's just-in-time heap-checker stays active during the entire development cycle, transparently checking every new and delete. If a check fails, WGC will spawn your debugger and take you live to the line in question. To complement the live access to the line that failed a delete check, WGC provides detailed pointer/object info (allocating thread/line/file/pass count, object allocation time in microseconds, etc.) Debugging extensions allow interactive display/logging of object/pointer status and process stats. WGC is currently available for all major C++ compilers under Windows NT, Windows 95, and OS/2. WGC is priced at $895 per developer for all platforms, with no royalties. Team & Volume discounts apply. Source available. Ports to other platforms in progress. Operating Systems: - PC Windows 95 - PC Windows NT - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(604) 598-9546 Email:kevinw@reflective.com Postal address:Reflective Software Corp 2660 Estevan Ave. Victoria, BC, CANADA, V8R 2T4 Tel:(604) 683-0977 Tel:(800) 707-7171 ------------------------------------------------------------------------ Wind/U-MFC A Unix version of the popular Microsoft Foundation Classes shipped with Visual C++ (a 16-bit MFC 2.5 and a 32-bit MFC 2.1). Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(203) 438-5013 WWW http://www.bristol.com Email:info@bristol.com Postal address:Bristol Technology Inc., 241 Ethan Allen Highway, Ridgefield, CT 06877 USA Tel:(203) 438-6969 ------------------------------------------------------------------------ WinSockets++ 1.1 - A C++ class library for WinSockets. This is more than just a wrapper for the WinSockets calls. It provides higher-level functions that make reading/writing to sockets very easy. Additionally, the Async aspect of the library makes using the asynchronous functionality of WinSockets *very* easy and your code *very* clean. It costs $50 which includes full source. Operating Systems: - PC Windows Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Email:troy@cais.com ------------------------------------------------------------------------ WNDX - Graphical User Interface development environment Added : 01/01/95 Amended : 05/02/96 Licencing : Commercial Fax:403-283-6250 WWW http://www.wndx.com/ Email:sales@wndx.com Postal address:WNDX, Suite 418, 1167 Kensington Cr Nw, Calgary, Alberta Canada T2N 1X7 Tel:402-283-6091 ------------------------------------------------------------------------ XVT Portability Toolkit This is a C-language library of functions (although, you can pay extra for C++). They have a WYSIWYG GUI builder, but they charge for that, too. OPTIONS: - C++ capability $200 - XVT-Design (a WYSIWYG GUI builder) $1200 ($2900 for non-PC UNIX) - Source Code (call) Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(303) 443-0969 Email:info@xvt.com Postal address:XVT Software Incorporated, 4900 Pearl East Circle, Box 18750, Boulder, CO 80308 Tel:(303) 443-4223 Tel:(800) 678-7988 ------------------------------------------------------------------------ zApp Developer's Suite V2.2 The zApp Developer's Suite is a set of libraries and a designer containing over 300 object classes that provide GUI and other capabilities. It is the single solution to the problem of quickly writing commercial quality applications that run on multiple platforms. The zApp Developer's Suite consists of: - zApp, the industry leading C++ application framework - zApp Factory, a visual designer and code generator for the zApp environment - zApp Interface Pack, a set of powerful custom controls for zApp. The software comes with about 2500 pages of documentation and complete on-line help. It costs between $1,000 and $5,000 per developer, depending on the platforms needed. Operating Systems: - PC Windows - PC 32-bit Windows - PC DOS - OS/2 - X Windows - Motif - IBM AIX - HP UX - SCO Open Desktop - SGI Irix - Unixware - Solaris Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 691-9099 Email:sales@inmark.com Postal address:Inmark, 2065 Landings Drive, Mountainview, CA 94043 Tel:(415) 691-9000 Tel:(800) 3-inmark ------------------------------------------------------------------------ ZGRAF - C++ Multi-Platform Graph Toolkit The ZGRAF C++ Multi-Platform Graph Toolkit is a library for generating and printing tech. and business graphs in a number of environments. Graph styles include X/Y, Bar, Pie, Area, Scatter, Polar, Log, 3-D Surface, Contour, Smith Chart, and more. Support for X-Windows soon.Full C++ source code is included. Price: $30 - $99, with no royalties. Operating Systems: - PC Windows - PC 32-bit Windows - OS/2 - PC DOS Compilers: - Visual C++ - Borland C++ - IBM Cset++ Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial WWW http://ourworld.compuserve.com/homepages/zgraf Email:70742.1356@compuserve.com Email:jjakob@delphi.com Postal address:ZGRAF Software, Box 3103, Clarksville, IN 47131 ------------------------------------------------------------------------ Zinc V4.1 This is a full C++ class library that comes with the Zinc Designer (a WYSIWYG GUI builder). Their classes include some graphic capabilities, a rather nice error system, and a portable, if rudimentary, help system. Also included is the source for the library (and for the Designer!). In addition to the usual GUI stuff, Zinc also provides international character support (an extended version, for extra bux, is in the works), some container classes, and filesystem portability. They also allow you to incorporate platform-specific stuff (e.g., system messages) into their API; but, of course, you're on your own when it comes to porting any additions. The main new feature for 4.1 is object persistence. , (800) 638 8665, (801) 785-8900, (801) 785-8996 (fax), (801) 785-8997 (bbs) , tech@zinc.com Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(801) 785-8997 Fax:(801) 785-8996 WWW http://www.zinc.com Email:tech@zinc.com Postal address:ZINC Software Incorporated, 405 South 100 East 2nd Floor, Pleasant Grove, UT 84062 Tel:(801) 785-8900 Tel:(800) 638 8665 ------------------------------------------------------------------------ Other commercial sources of C++ code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ EMS CD This is not a code CD but it has many libraries & some code (all msdos) brought together into a CD. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:609-582-9204 Email:rbakerpc@aol.com Postal address:EMS Professional Software, Specialized Software Libraries, Baker Enterprises, 20 Ferro Drive, Sewell, NJ 08080 ------------------------------------------------------------------------ ISCL CD ROM from ImageSoft Checkout the ISCL CD ROM from ImageSoft, it contains the largest collection of C++ source code ever compiled in one place. It's available from ImageSoft Added : 01/01/95 Amended : 01/01/95 Licencing : Not known BBS:(516) 767-9074 Fax:(516) 767-9067 Email:mcdhup!image!iscl Postal address:ImageSoft Inc., 2 Haven Avenue, Port Washington, NY 11050 Tel:(516) 767-2233 ------------------------------------------------------------------------ USL UNIX Toolchest - An electronic catalog for browsing and ordering source software This catalog provides unsupported software products, developed within AT&T, for the commercial UNIX world. As you browse through the online catalog, you'll find descriptions of all the tools, complete with information on memory and disk requirements, documentation, and license fees. United States and Canada, may access the Toolchest by dialing 1-908-522- 6900(e-7-1) and logging in as \"guest\". Note : The USL UNIX Toolchest is no longer marketed by USL or Novell; it has reverted back to AT&T. The only contact info I have for it is the US number 800-462-8146, option #2. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known BBS:1-908-522- 6900 Tel:800-462-8146, option #2. ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!news-peer.sprintlink.net!news.sprintlink.net!sprint!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:45 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!news-peer.sprintlink.net!news.sprintlink.net!sprint!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (2/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:32 GMT Organization: Trumphurst Ltd. Lines: 1123 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1996/11/26 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256160 comp.answers:25745 news.answers:101458 Archive-name: C++-faq/libraries/part2 Comp-lang-c++-archive-name: C++-faq/libraries/part2 Available C++ libraries FAQ (2/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (this file) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Libraries available via FTP (A-L) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ADAPTIVE Communication Environment (ACE) - C++ IPC wrappers This release contains contains the source code, documentation, and example test drivers for a number of C++ wrapper libraries and higher- level distributed application frameworks developed as part of the ADAPTIVE project at the University of Calfornia, Irvine. The C++ wrappers encapsulate many of the user-level BSD and System V Release 4 IPC facilities such as sockets, TLI, select and poll, named pipes and STREAM pipes, the mmap family of memory-mapped file commands, System V IPC (i.e., shared memory, semaphores, message queues), and explicit dynamic linking (e.g., dlopen/dlsym/dlclose) using type-secure, object-oriented interfaces. The higher-level distributed application frameworks integrate and enhance the lower-level C++ wrappers to support the configuration of concurrent network daemons composed of monolithic and/or stackable services A relatively complete set of documentation and extensive examples are included in the release. A mailing list is available for discussing bug fixes, enhancements, and porting issues regarding ACE. Please send mail to ace-users-request@ics.uci.edu if you'd like to become part of the mailing list. I have been informed that the ftp site listed may be incorrect. Correct information would be appreciated. Added : 01/01/95 Amended : 30/07/96 Licencing : Not known FTP from ftp://wuarchive.wustl.edu/languages/c++/ACE/ Email:ace-users-request@ics.uci.edu ------------------------------------------------------------------------ Aisearch - a package to make writing problem solving programs easier. Offers the programmer a set of search algorithms that may be used to solve all kind of different problems. The following search algorithms have been implemented: - depth-first tree and graph search - breadth-first tree and graph search - uniform-cost tree and graph search - best-first search - bidirectional depth-first tree and graph search - bidirectional breadth-first tree and graph search - AND/OR depth tree search - AND/OR breadth tree search. Although this package is meant as a tool for developing problem solving software it is not meant exclusively for programmers that are familiar with the concept of problem representation and search techniques. The document accompanying this package first describes (though condensed) the theory of problem solving in AI and next explains how the search class library must be used. Furthermore, as the source code is richly commented and as also some demo programs are included the package should also prove useful to people that want to get acquainted with the subject. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://obelix.icce.rug.nl/pub/peter/aisearch.tar.Z FTP from ftp://obelix.icce.rug.nl/pub/peter/aisearch.zip ------------------------------------------------------------------------ Amulet - User Interface Development Environment AMULET is a user interface development environment in C++. Code written using Amulet will work with little or no changes on all platforms. More than just another free \"virtual toolkit,\" Amulet includes many features specifically designed to make the creation of highly-interactive, graphical, direct manipulation user interfaces significantly easier. Based on a proven earlier system, called Garnet, that was in wide use in the Lisp community, Amulet adds a number of important innovations and refinements. Important features of Amulet include: - a dynamic, prototype-instance object system that makes prototyping easier - automatic constraint solving integrated with the object system - a \"structured-graphics\" model (also called a \"display list\") that handles automatic refresh of objects when the change - a high-level input model that makes it easy to add behaviors to objects and also supports undo and help for operations - a full set of flexible widgets implemented using the Amulet intrinsics, so you can easily experiment with your own widgets; and high-level interactive debugging tools. Widgets include:buttons, check boxes, radio buttons, menus, menu bars (pull-down menus), scroll bars, scrolling windows, and text input fields. Amulet comes with complete documentation including a tutorial. Operating Systems: - X Windows - PC 32-bit Windows - Mac Compilers: - Gnu CC - Object Center - Visual C++ - MetroWerks CodeWarrior Added : 29/02/96 Amended : 29/02/96 Licencing : Public Domain FTP from ftp://ftp.cs.cmu.edu/usr0/anon/project/amulet/amulet/README WWW http://www.cs.cmu.edu/~amulet Email:bam@cs.cmu.edu - Brad A. Myers Postal address:Brad A. Myers, Human Computer Interaction Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213-3891 ------------------------------------------------------------------------ Andy Register's - matrix library It is still under development so there is no documentatin and some functions have not been throughly tested. It is a departure from most matrix libs in that it includes things like UpperTriangular different from Diagonal, from Row, from Col, etc. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andy Register FTP from ftp://ftp.cerl.gatech.edu/pub/c++/gtmatrix Email:andy@cerl.gatech.edu ------------------------------------------------------------------------ Arjuna - For writing fault-tolerant (distributed) applications Arjuna provides a set of tools (C++ classes and libraries) for writing fault-tolerant distributed applications using persistent objects, atomic actions, and replication. Included in the system is a C++ stub generator (and associated RPC mechanism) which takes a C++ class definition for an object and generates client and server stub code. Using these stub classes occurs in a relatively transparent manner: the differences between a local and distributed application are typically only a single line. The system has been ported to a wide range of architectures and C++ compilers, both by the authors and other users, and has been in use for several years. A comprehensive manual is available with the distribution. The system has been ported to a wide range of architectures and C++ compilers, both by the authors and other users, and has been in use for several years. Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://arjuna.ncl.ac.uk/ WWW http://arjuna.ncl.ac.uk/ ------------------------------------------------------------------------ Awesime - A C++ task library explicitly designed for simulation Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Dirk Grunwald FTP from ftp://ftp.cs.colorado.edu/pub/cs/misc/Awesime Email:grunwald@foobar.cs.colorado.edu ------------------------------------------------------------------------ BLAS in C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Damian McGuckin FTP from ftp://usc.edu/pub/C-numanal/blas.cpp.shar.z Email:damianm@eram.esi.com.au ------------------------------------------------------------------------ Blas.cpp.shar.z A BLAS in C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Damian McGuckin FTP from ftp://usc.edu/pub/C-numanal/ Email:damianm@eram.esi.com.au ------------------------------------------------------------------------ Brent's univariate minimizer and zero finder. Ref: G.Forsythe, M.Malcolm, C.Moler, Computer methods for mathematical computations. Precision - double Obsolete - now part of the linalg package Added : 01/01/95 Amended : 30/07/96 Licencing : Not known WWW http:cpplibs2.html#LinAlg.shar ------------------------------------------------------------------------ BRL10 - Binary Relations Library for C/C++ Binary relations are more directly based on semantic concepts rather than on recordlike structures as traditional (relational, hierarchies, networks, object-oriented) models are. Binary Relations tend to be more functionally complete in their information processing capability, and more precise in their semantic modelling. The Binary Relations Approach was implemented in Binary Relations Library for C/C++. BRL is not a full featured DBMS. It does not support all ideas of the Binary Relations Approach. BRL is however a small, fast and reliable engine. BRL provides basic tools for using binary relations in C and C++ programs. Operating Systems: - FreeBSD - PC DOS - PC Windows Compilers: - Gnu CC - Borland C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Non commercial Author:Andrew Girow WWW http://tetragr.zaporizhzhe.ua/home/girow/homepage.html Email:andrew@tetragr.zaporizhzhe.ua ------------------------------------------------------------------------ C* In C++ - Parallel Programming Classes for C++: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Terry Bossomaier Email:terry@arp.anu.edu.au ------------------------------------------------------------------------ C++ FEM - (Finite Element Method) Library In addition to FEM related classes, this library also has: - Some simple garbage collection stuff - An automatic differentiation library - A sparse matrix library This is an initial release and people should *expect* to have to do some work to get it running on their system. If you have gcc-2.3.3, libg++-2.3[.1], Gnu make and makedepend you shouldn't have too much difficulty however. The code is unsupported, and is distributed under the terms of the GNU Public License. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Michael Tiller, University of Illinois (Urbana-Champaign) FTP from ftp://usc.edu/pub/C-numanal/femlib-1.1.tar.gz Email:tiller@solace.me.uiuc.edu ------------------------------------------------------------------------ C++ implementation of differential algebra This is temporarily unavailable while we resolve the question of whether inclusion of codes from Numerical Recipes makes distribution illegal. Available from the netlib mailing list, in c++/mxyzptlk.shar Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Leo Michelotti Email:michelotti@adcalc.fnal.gov Email:netlib@research.att.com ------------------------------------------------------------------------ C++Advio - Advanced i/o and arithmetic compression Portable handling and compression of binary data. Keywords: pipes, arithmetic coding, start-stop coding, endian i/o, compression Operating Systems: - Solaris - HP 9000 - IBM AIX - Dec Alpha - FreeBSD - Mac - PC 32-bit Windows Compilers: - Gnu CC - Sun CC - MetroWerks CodeWarrior - Borland C++ Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.cpt.hqx - Mac distribution FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.README.txt - README file (ftp) FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.shar WWW http://mozart.compsci.com/~oleg/ftp/c++advio.README.txt - README file (Web) Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ C++SIM 1.5.2 - A simulation package written in C++. C++SIM provides discrete process based simulation similar to that provided by the simulation class and libraries of SIMULA. The linked list manipulation facilities provided by SIMSET are also included in the package, and there is support for a variety of statistics gathering classes. The simulation package requires the use of a threads package and currently only works with the following: - Sun's lwp threads and Solaris threads - C++ task library - NT threads - Posix threads - cthreads - Rex threads It has been build on a number of different architectures and C++ compilers, and porting to other systems should be relatively easy. Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://arjuna.ncl.ac.uk WWW http://arjuna.ncl.ac.uk ------------------------------------------------------------------------ CalcPlus - Interpreter of procedural language The CalcPlus library is the C++ class library which provides an ability to use your own programming language built into C++ project. Any algorithm or any constant needed by application can be carried out into the special file, when process comes to the key point, it calls function or procedure stored in the text file. Interpreter runs the function and process returns back to C++ code. Library contains the interpreter which understands simple nameless procedural language. Bi-directional communication between C++ and the code for interpreter available. Version of the language that comes with the library allows to use functions, procedures, blocks, preprocessor, global and local variables and constants, if/for/while statements. Each variable can have value of type: nil, bool, long, float, string, date. Type definitions and arrays are allowed. Functions and procedures may be recursive. New functions written in C++ may be easily added to the language. Syntax of the language can be modified by changing YACC rules. Interpreter is fast enough and may be helpful for many tasks. Platform independent, YACC required. Operating Systems: - PC DOS - SCO Unix 3.2.4 - SunOS Compilers: - Borland C++ - Visual C++ - Watcom C++ - Gnu CC - Sparcworks Added : 22/05/96 Amended : 22/05/96 Licencing : Shareware Author:Vladimir Schipunov FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/cpluspls/calcplus.zip Email:vschipun@cammail1.attmail.com ------------------------------------------------------------------------ Callbacks - Inter-component callbacks using functors This library provides a comprehensive, portable, type-safe, efficient, general purpose mechanism for inter-component callbacks using template functors. Full source code and examples. A complete rationale and description of this mechanism appeared in my article in the February 1995 issue of the C++ Report (now reprinted in 'C++ Gems', SIGS Books). Users are strongly encouraged to read the article before proceeding, as the library has minimal embedded documentation at present. Operating Systems: - All - not O/S specific Compilers: - Visual C++ - IBM Cset++ - Borland C++ - Watcom C++ Added : 03/10/96 Amended : 03/10/96 Licencing : Copyrighted freeware Author:Rich Hickey WWW http://www.sigs.com/books/gems.html - C++ Gems WWW http://ourworld.compuserve.com/HomePages/RichHickey Email:hickeyr@ibm.net ------------------------------------------------------------------------ CB++ - CommonBase Database Access Library for C/C++ This library was written in 1989 as a basis for storing C++ objects in a relational database. The development of such a system was stopped in 1990 because of problems with the MS-DOS environment used in this time. My involvement in various user interface projects here in the institute and otherwhere made it sleep until last week. Okay, here is it. It is only the database access layer of the projected object storage system but it has some useful features which are provided by commercial tools out there: - Builds on the C language interface of a database, there is no need for a precompiler (like embedded SQL - which is totally unusable in combination with C++, at least it was three years ago...) - Very simple to use. Unlike the native C interfaces of the databases it is as simple as embedded SQL or some 4th generation languages. - Makes applications portable among different SQL databases. The library itself is relatively easy to port as the database vendor specific code Note - Scott R. Chilcote\" (scotty@nando.net) reports he can only find the a README file at the site given, and his attempts to mail the author's address given therein fail. (david_r@netvision.net.il) reports he couldnt find anything at the ftp site. Added : 01/01/95 Amended : 22/05/96 Licencing : Not known FTP from ftp://ftp.x.org/contrib/CB++.0.1.* ------------------------------------------------------------------------ CBMT - Collaborative BioMolecular Tools CBMT provides a number of easy-to-use fundamental classes for biologists, chemists and crystallographers. They include: Molecular Structure, Sequence, Standard Formats (PDB, CIF, GCG, etc), Geometry, Statistics, TextParsing, and a single container class (a dynamic Array). All documentation is in HTML, and member functions have *.c examples. I hope that the system can be extended as a communal effort and am piloting this idea in the C++ course at the Globewide Network Academy Version 1.3 will be posted shortly including an experimental script language (generated automatically from the *.h files) providing support for persistent objects manipulatable by other languages such as tcl or csh. Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial Author:Peter Murray-Rust FTP from ftp://s-ind2.dl.ac.uk/cbmt/democ12.tar.Z WWW http://www.dl.ac.uk/CBMT/HOME.html WWW http://info.desy.de/gna/html/cc/index.html) WWW http://www.dl.ac.uk/CBMT/HOME.html Email:mbglx@seqnet.dl.ac.uk Email:pmr1716@ggr.co.uk ------------------------------------------------------------------------ CCL110JE.ZIP - Coroutine class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ FTP from ftp://garbo.uwasa.fi/pc/c-lang/ ------------------------------------------------------------------------ CNCL - ComNets Class Library Universal classes: - Tree structured class hierarchy, similar to NIHCL. - Classes for general purposes such as arrays, linked lists, strings. - Interface classes for UNIX system calls: pipes, select. - Persistent objects. Simulation: - Event driven simulation. - Statistical evaluation. - Random number generators and distributions. Fuzzy logic: - Fuzzy sets, fuzzy variables, fuzzy rules and inference - engine for building fuzzy controllers and expert systems. EZD: - Interface classes for DEC's ezd graphics server. Operating Systems: - HP UX - SunOS - Solaris - Linux Compilers: - Gnu CC Added : 01/01/95 Amended : 08/08/96 Licencing : GNU copyleft Author:Martin Junius, Martin Steppler, et al. FTP from ftp://ftp.comnets.rwth-aachen.de/pub/CNCL/ WWW http://www.comnets.rwth-aachen.de/doc/cncl.html Email:cncl-adm@comnets.rwth-aachen.de Postal address:Communication Networks, Aachen University of Technology, D-52056, Aachen, Germany Postal address:Communication Networks, Aachen University of Technology, D-52056 Aachen, Germany ------------------------------------------------------------------------ Conical - C++ classes for building neural networks CONICAL is a cross-platform library of C++ classes for building biologically realistic simulations of neurons or small neural networks. Its capabilities are similar to large Unix-based packages such as GENESIS and NEURON, but produces simulations which are smaller, faster, and easily imbedded in other applications. CONICAL is still under development, but documentation is fairly complete and includes both introductory material and demo programs. Operating Systems: - Unix - MacOS - PC DOS - PC Windows Compilers: - Gnu CC - Borland Turbo C++ - MetroWerks CodeWarrior Added : 30/07/96 Amended : 30/07/96 Licencing : Education Author:Joseph J. Strout FTP from ftp://ftp-ncmir.ucsd.edu/pub/jstrout/conical.tar.gz - source & docs by ftp WWW http://www-acs.ucsd.edu/~jstrout/conical - CONICAL home page Email:jstrout@ucsd.edu - send email to the author Postal address:J. Strout,3033 Basic Sciences Bldg,UCSD,9500 Gilman Dr.,La Jolla,CA,92093-0608 ------------------------------------------------------------------------ COOL - Texas Instrument's \"C++ Object Oriented Library\". COOL includes classes like AVL_Tree, Association, Bignum, Binary_Tree, Bit_Set, Complex, Date_Time, Envelope, Gen_String, Handle, Hash_Table, Iterator, List, M_Vector, Matrix, N_Tree, Pair, Quaternion, Queue, Random, Range, Rational, Regexp, Set, Shared, Stack, String, Timer, Value, Vector. COOL uses a special \"template\" syntax which is preprocessed by a special cpp (distributed with COOL). This enables it to be used with compilers which do not support templates. Added : 01/01/95 Amended : 05/02/96 Licencing : Not known FTP from ftp://ftp.ti.com/pub/COOL.tar.Z ------------------------------------------------------------------------ CSock C++ Socketing Library - An advanced wrapper for Windows socketing An advanced wrapper for Windows socketing. Uses newer C++ language extensions to shred the amount of code required for socketing applications. All the standard Windows socketing wrapper classes usually implemented, and then: - Insertion and extraction operators are templatized so you won't have to implement new ones. - Address type classes are polymorphic and also templatized -- one line to add a new one. - Ability to dynamically load WINSOCK at runtime, in case TCP/IP is not installed. - Quite easy to port. $20.00 U.S. shareware license entitles registered users to updates through version 2.99. FTP functionality is already partially complete. Distributed as source code. Should work with any compiler that supports exceptions, templates and new cast operators. Operating Systems: - PC 32-bit Windows Compilers: - Visual C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Shareware Author:TRI Software, a division of TRInternational, Inc. WWW http://junior.apk.net/~tri/csock/ Email:tri@apk.net ------------------------------------------------------------------------ Cvmath.cc - An include file to make complex math look like regular math. The file uses a lot of operator overloading, so that if x=a+ib and y=c+id, the code for multiplying the two together looks like z = x*y; Also, the file includes nrutil from Numerical Recipes, and adds the complex versions for vectors and matrices. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Leonard Kamlet FTP from ftp://usc.edu/pub/C-numanal/cvmath.cc Email:lik@engin.umich.edu ------------------------------------------------------------------------ DiamondBase - Add Relational Database functionality to your C++ programs DiamondBase is a library of C++ routines and utilities that allow you to add Relational Database functionality to your C++ programs. It is written entirely in C++, and great pains have been taken to ensure it compiles under a variety of compilers. It comes with a 47 page manual. Operating Systems: - Unix - OS/2 Compilers: - Gnu CC - Cfront - Borland C++ for OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://pippin.cs.monash.edu.au/pub/export/ Email:davison@molly.cs.monash.edu.au Email:kevinl@bruce.cs.monash.edu.au Email:darrenp@dibbler.cs.monash.edu.au ------------------------------------------------------------------------ Diffpack - Quick prototyping of simulators solving partial differential equations by FEM Diffpack is a large and comprehensive C++ package aiming at quick prototyping of simulators solving partial differential equations by FEM. Under development at SINTEF Applied Mathematics and the University of Oslo, Norway. Version 1.0 of Diffpack is released for free non-commerical use and is distributed by netlib. For further details refer to the Diffpack WWW home page Added : 01/01/95 Amended : 01/01/95 Licencing : Not known WWW http://www.oslo.sintef.no/avd/33/3340/diffpack ------------------------------------------------------------------------ DoPVM - A class built on PVM, for message passing environments. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Hartley Email:skip@mathcs.emory.edu ------------------------------------------------------------------------ DOSTmUit - DOS Text Mode User Interface Toolkit Enables C++ programmers to add a CUA-compliant user interface to their DOS programs without getting involved in screen coordinates and other messy details. The programmer merely states which interface objects are required, and how they are to be placed on the screen in relation to each other. Those familiar with the ET++ toolkit for the X windows system under Unix will get the general idea. Includes a class documentation facility (DocClass) which will generate a large text file from the source code giving details of every class, structure, enum and extern in the toolkit. This program will also work on your own C++ source code. Source is provided. Operating Systems: - PC DOS Compilers: - Zortech C++ 3.0 - Borland C++ 3.1,4.X Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial Author:Nikki Locke, Trumphurst Ltd. FTP from ftp://ftp.demon.co.uk/pub/trumphurst/toolkit/ WWW http://www.trmphrst.demon.co.uk/toolkit.html Email:uit@trmphrst.demon.co.uk ------------------------------------------------------------------------ Drat - A C++ interface to the curses library Drat contains several classes for interfacing with the UNIX curses library, including menus with callback's, and other common forms. Added : 05/02/96 Amended : 05/02/96 Licencing : Not known WWW http://www.best.com/~smurman/Drat Email:smurman@best.com ------------------------------------------------------------------------ ET++ - A large GUI library and other C++ tools developed in Europe The Authors are both with Taligent now. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andre Weinand and Erich Gamma FTP from ftp://ftp.ubilab.ubs.ch/ FTP from ftp://ftp.inria.fr/gnu/et++-2.0.tar.Z ------------------------------------------------------------------------ FFTPACK++ - C++ version of FFTPACK FFT_Pack is a C++ wrapper for FFTPACK complex routines using LAPACK++ Matrix and Vector classes. FFTPACK routines were converted to C using f2c and also modified to use double precision complex using -r8 to f2c. Most of this code was lifted directly from GNU OCTAVE v1.1.0, hence the copyright notice at the top. The forward FFT takes you to freq domain (ala direction == -1), and backward the other way. Passing LaVectorComplex/Double or LaGenMatComplex/Double with one dimension set to 1 will implicitly perform 1D FFT on the data. The members of the FFT_Pack class are declared static, since they really need no private member storage. There are two types of transform routines: ones that return a new complex matrix and the ones that change the matrix in place. Compilers: - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Mumit Khan Fax:608 265 3811 WWW http://www.xraylith.wisc.edu/~khan/software/fftpack/ Email:khan@xraylith.wisc.edu Postal address:Center for X-ray Lithography, University of Wisconsin - Madison Tel:608 265 6075 ------------------------------------------------------------------------ GAGS - C++ class library for Genetic algorithms It includes classes for chromosomes and populations. Library:binary chromosome representation. Genetic operators: mutation, xOver (n-pt and uniform), remove/reinsert. Selection operator: steady state, tournament, roulette wheel. Perl and/or tcl/tk graphic front-end. Graphics through gnuplot. Training from file. Application generator: it needs only an ANSI-C definition of the fitness function. It's parsed, and a program that runs a GA on it is generated. Operating Systems: - Unix Compilers: - Gnu CC - SGI CC - Sun CC Added : 08/02/96 Amended : 08/02/96 Licencing : Copyrighted freeware Author:JJMerelo Fax:34-58-243230 FTP from ftp://kal-el.ugr.es/GAGS/GAGS-0.94e.tar.gz WWW http://kal-el.ugr.es/gags.html Email:jmerelo@kal-el.ugr.es Tel:34-58-243162 ------------------------------------------------------------------------ GAME - Parallel Genetic Algorithms Theory and Applications Edited by: J. Stender Publisher: IOS Press Frontiers in Artificial Intelligence and Applications series 1993, 225 pp; hard cover; w/ disk ISBN: 90 5199 087 1 Price: $85, 59 pounds sterling The first version of the GAME Virtual Machine software and two examples that come with the book can be obtained also by ftp. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://bells.cs.ucl.ac.uk/papagena/game/version1/ ------------------------------------------------------------------------ GECOOL 2.1 - A reworking and enhancement of Texas Instrument's \"C++ Object Oriented Library\" By some programmers at General Electric. Also available is JCOOL. Its main difference from COOL and GECOOL is that it uses real C++ templates instead of a similar syntax that is preprocessed by a special 'cpp' distributed with COOL and GECOOL. Some users behind \"firewalls\" have had difficulty accessing the ftp site. Added : 01/01/95 Amended : 05/02/96 Licencing : Not known FTP from ftp://ftp.cs.utexas.edu/pub/COOL ------------------------------------------------------------------------ Generic Linked List Package A package to define, create, update query and delete one or more (nodes of) linked lists, to sort linked lists, and so on. The user doesn't have to take care of allocating a number of bytes for a node, inserting on the right place, deleting and freeing a node and so on. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://hermes.bouw.tno.nl/pub/TNO/BOUW/Bouwinf/linkedlist0.10.shar FTP from ftp://ftp.tno.nl/pub/TNO/BOUW/Bouwinf/linkedlist0.10.shar ------------------------------------------------------------------------ GINA++ - An O-O application framework for C++, X11R5, and OSF/Motif GINA++ (The Generic INteractive Application for C++) is an object- oriented application framework that facilitates the development of applications with a graphical user interface. It is written in C++ and uses OSF/Motif and X for the user interface parts. GINA++ comes as a library of C++ classes, 10 small to medium demo applications, and it is fully documented. Components of GINA++ are: - A C++ encapsulation of OSF/Motif providing easy-to-use mechanisms for deriving new widget classes completely in C++ - Support for object-oriented graphics (rectangles, arrows, circle, etc) - An unlimited undo/redo history mechanism - supporting classes for data structures (list, arrays, etc), run-time type information, and a notification mechanism. The classes of GINA++ constitute an executable program - the generic application - which possesses the basic functionality and the user interface components common to all interactive graphical applications, but lacks any application-specific behavior. The predefined functionality and behavior is inherited by deriving subclasses from the existing GINA++ classes. Application specific behavior is implemented by adding new classes and member functions. Differences to the standard application are coded by refining virtual member functions inherited from GINA++. Operating Systems: - HP UX - Sparc - X Windows Compilers: - Cfront Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andreas Baecker FTP from ftp://ftp.x.org/contrib/ FTP from ftp://ftp.gmd.de/gmd/ginaplus Email:baecker@gmd.de Postal address:GMD, P.O. Box 1316, D-53731 Sankt Augustin ------------------------------------------------------------------------ Gnans - Simulation of stochastic and deterministic dynamical systems A program (and language) for dynamical systems. Includes simple scripting language. Graphical user interface. Operating Systems: - SunOS - SGI Irix - IBM AIX - X Windows Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Bengt Martensson FTP from ftp://ftp.mathematik.uni-Bremen.de/pub/gnans Email:bengt@mathematik.uni-Bremen.de ------------------------------------------------------------------------ Grail - Symbolic computation with finite-state machines and regular expressions Supports conversion of FSM to RE and back and also conversion to and from finite languages. Supports many algebraic operations on FSM and RE. All objects are templates, so you can parameterize FSM or RE to use any C++ class or base type as its alphabet type (hence, Mealy machines are supported by using ordered pairs as the alphabet type). Compilers: - Cfront - IBM xlC - IBM Cset++ - Watcom C++ Added : 22/05/96 Amended : 22/05/96 Licencing : Education WWW http://www.csd.uwo.ca/research/grail Email:drraymond@csd.uwo.ca ------------------------------------------------------------------------ GRAS - A Graph-Oriented Database System for SE Applications Copyright (C) 1987-1992 Lehrstuhl Informatik III, RWTH Aachen This library is free software under the terms of the GNU Library General Public License. The system GRAS with interfaces for the programming languages Modula-2 and C is available as public domain software for Sun3/Sun4 workstations (the GRAS system itself is implemented in Modula-2 and consists of many layers which might be reusable for the implementation of other systems): There are several files contain documentation, sources, binaries, and libraries. All binaries are for Sun/4 machines. Sun/3 binaries are shipped only if explicitly requested. Operating Systems: - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Dr. Andy Sch\"urr (or Richard Breuer) FTP from ftp://tupac-amaru.informatik.rwth-aachen.de/pub/unix/GRAS522_3 Email:ricki@rwthi3.informatik.rwth-aachen.de Email:andy@rwthi3.informatik.rwth-aachen.de Postal address:Lehrstuhl f\"ur Informatik III, University of Technology Aachen (RWTH Aachen), Ahornstr. 55, D-5100 Aachen ------------------------------------------------------------------------ Grayscale Image Processing Enhanced grayscale image processing class library and verification code, source code Keywords: image arithmetics, image filtration, lazy image, C++, class library Operating Systems: - Solaris - HP 9000 - rs6000-aix-3.2 - Dec Alpha - FreeBSD - PC 32-bit Windows Compilers: - Gnu CC - Sun CC - MetroWerks CodeWarrior - Borland C++ Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/grayimage-21.cpt.hqx - Mac distribution FTP from ftp://replicant.csci.unt.edu/pub/oleg/image.README.txt - README (ftp) FTP from ftp://replicant.csci.unt.edu/pub/oleg/image_v21.shar WWW http://mozart.compsci.com/~oleg/ftp/image.README.txt - README (Web) Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Hans Boehms GC - Hans Boehms free Garbage Collector Implements much of the Detlefs/Ellis C++ GC proposal. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.parc.xerox.com/pub/gc ------------------------------------------------------------------------ High level vector operations Contains the Aitken-Lagrange interpolation over the table of uniform or arbitrary mesh, and the Hook-Jeevse multidimensional minimizer. Precision single/double. Obsolete - now part of the Lin-alg package. Added : 01/01/95 Amended : 30/07/96 Licencing : Not known WWW http:cpplibs2.html#LinAlg.shar ------------------------------------------------------------------------ InterViews - GUI class library developed by Stanford University Make sure you get v3.1 or later. This library contains excellent examples of multiple inheritance used profitably. I understand that InterViews development will not continue past the current version; author Mark Linton is concentrating his efforts on the X Consortium Fresco project, which should show up in X11R6. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://interviews.stanford.edu/ FTP from ftp://ftp.informatik.uni-kiel.de/pub/graphics/X/InterViews ------------------------------------------------------------------------ ISC366.ZIP - Interrupt Service Class (v. 3.66) Allows hooking of interrupts (software and hardware) into classes, comes with classes for staying resident, for serial communication (interrupt driven), and like-wise classes. Comes with full source code! Operating Systems: - PC DOS Compilers: - Borland C++ 3.0 - Borland C++ 3.1,4.X Added : 01/01/95 Amended : 01/01/95 Licencing : Public Domain FTP from ftp://oak.oakland.edu/pub/msdos/cpluspls/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ Kalman - A class library for Kalman filtering Contains lumatrix.c++ etc. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/kalman.tar.gz Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ Lapack++ - C++ version of some of lapack fortran code Developmental version of proposed C++ version of lapack. Contains blas.h++ etc, but needs Fortran library to link. Documents : Overview paper (9 pages postscript), release notes (7 page ps) Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:J. Dongarra, R. Pozo, D. Walker FTP from ftp://netlib2.cs.utk.edu/lapack++/ ------------------------------------------------------------------------ LEDA, - A Library of Efficient Data Types and Algorithms Provides basic data-types like lists, stacks, queues, trees, sets, partitions, priority queues and a few others. These are parameterizable classes, you may add your own datatype and have a priority queue ... An important datatype is a graph, these are also parameterizable and there are useful algorithms for them like shortest path, transitive closure, matching, maximum flow, spanning tree and others, we have implemented a few algorithms for dealing with perfect graphs, but these ar not part of the standard library. The latest part deals with computational geometry. It can be used with C++ compilers which understand templates Compilers: - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Education Author:Stefan Naeher FTP from ftp://ftp.mpi-sb.mpg.de/pub/LEDA/ Email:stefan@mpi-sb.mpg.de Postal address:Max-Planck-Institut fuer Informatik, Im Stadtwald, 6600 Saarbruecken, Germany ------------------------------------------------------------------------ libg++ - (GNU's C++ library) Libg++ is probably only relevant if you are using g++; and if so, you already know about it. It does have some good implementations of bignum's and of regular expressions and strings. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://aeneas.mit.edu/pub/gnu/ ------------------------------------------------------------------------ Lily (LIsp LibrarY) - Gives C++ programmers the capability to write LISP-style code I think Lily will be useful in academia for instructors who want to teach artificial intelligence techniques with C++. The garbage collection mechanism employed by Lily is slow which will make it unattractive for commercial use. Documentation is minimal. The \"Lily User's Guide\" (in file lily.txt) provides a good overview of the architecture of Lily -- the document is unfinished. All of the example programs are from Winston's book \"LISP Second Edition\" so you will be much better off if you have a copy. Steele's \"Common LISP\" describes the behavior of the LISP functions. Operating Systems: - PC Windows 3 - Unix Compilers: - Gnu CC - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft FTP from ftp://sunsite.unc.edu/pub/packages/development/libraries/lily-0.1.tar.gz ------------------------------------------------------------------------ LinAlg.shar - basic linear algebra classes and applications basic linear algebra classes and applications (SVD, interpolation, multivariate optimization) The package contains declarations of Matrix, Vector, subMatrix over the real domain, and *efficient* and fool-proof implementations of level 1 & 2 BLAS (element-wise operations + various multiplications), transpositions and determinant evaluation/inversion. There are operations on a single row/col/diagonal of a matrix. The \"new style\" of returning matrices (via LazyMatrix) and filling them out. New in the Jan 1996 version: extended to include singular value decomposition (SVD) and its applications to (a regularized) solution of simultaneous linear equations (with possibly rectangular matrices) and (pseudo)matrix inverse. This version of LinAlg.shar also includes Aitken-Lagrange interpolation over the table of uniform or arbitrary mesh, and a Hook-Jeevse local multidimensional minimizer, formerly of hl_vector.shar package. Matrix/Vector/etc classes are expanded with new methods. More attention to Matrix/Vector promises. The code is made cross-platform compatible (compiles both under UNIX and on a Mac). See LinAlg.h for the complete list of classes and functions, and vmatrix.cc, vvector.cc, etc. test drivers as to how the features can be used. See README for hints. Operating Systems: - Mac - Unix - Solaris - IBM AIX - Dec Alpha - SGI Irix Compilers: - Gnu CC - MetroWerks CodeWarrior Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/LinAlg.cpt.hqx - Mac version FTP from ftp://replicant.csci.unt.edu/pub/oleg/LinAlg.shar - Unix version FTP from ftp://netlib.att.com/netlib/c++/lin_alg.shar.Z WWW http://mozart.compsci.com/~oleg/ftp/LinAlg.README.txt - README file Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1996 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:46 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (5/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:43 GMT Organization: Trumphurst Ltd. Lines: 1410 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256162 comp.answers:25746 news.answers:101459 Archive-name: C++-faq/libraries/part5 Comp-lang-c++-archive-name: C++-faq/libraries/part5 Available C++ libraries FAQ (5/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (this file) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Commercial libraries (A-N) ~~~~~~~~~~~~~~~~~~~~~~~~~~ Allegris Workshop - Application framework for building portable applications and reusable components Application framework for building portable applications and reusable components by professional C++ developers. Includes the following features; - Over 180 C++ classes - Model View Controller Framework - Portable Resource Workshop - Support for ActiveX - Web Server application classes - Internationalization Support - Full source code included Available on a per user, per platform basis, $995. Full support is available. Operating Systems: - PC Windows - OS/2 - Solaris - IBM AIX - HP UX - Dec Unix Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial Fax:(301)838-5064 FTP from ftp://ftp.intersolv.com/solution/allegris/workshop.htm WWW http:www.intersolv.com Email:allegrisinfo@intersolv.com Postal address:INTERSOLV,9420 Key West Avenue,Rockville, MD 20850 Tel:(301)838-5000 ------------------------------------------------------------------------ Aspect This is a C library, though they're type safe for C++ compatibility. A GUI builder is provided with the library. They're coming out with a C++ class library soon. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(719)576-3835 Postal address:OPEN Inc., 655 Southpointe Court, Suite 200, Colorado Springs, CO 80906 Tel:(719)527-9700 ------------------------------------------------------------------------ Booch Components Rational markets the C++ Booch objects which are a somewhat bizarre, but possibly quite innovative, set of library objects. It appears quite complete (unless you have some specific, uncommon needs); Booch may have an edge in supporting concurrency. USL may have more installations and greater maturity. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Tel:408-496-3700 ------------------------------------------------------------------------ C++ Data Object Library - Data structures combined with automatic persistence C++ Data Object Library has a wide variety of data structures combined with automatic persistence (storage to disk). In many applications, using the library is like building your own OO database. The emphasis is on high performance and protection against allocation and pointer errors. The library can help practically any C++ project, but is especially useful for large and complex software projects designs such as VLSI CAD. Uses a code generator. Data relations are represented as objects. Protection against pointer errors is achieved by using rings instead of NULL ending lists. Smart iterators permit to delete objects while travering lists. Several methods of storing data to disk, including memory blasting (storing entire pages of memory). Portable programs and data, schema migration. Data organizations: lists, collections, aggregates, trees, graphs, dynamic arrays, hash tables, pointer links, reference counting, many-to-many relation, dynamic properties (like in LISP), virtual (disk access is if a large array), run-time access to type tables. The library is build on ideas described in \"Taming C++: Pattern Classes and Persistence for Large Projects\", by Jiri Soukup, Addison-Wesley 1994. Sells in full source, and runs with all major compilers. A C version with similar features but with a less elegant interface is also available. No licence restrictions and no marketing tricks. You can ship the source of the library with your programs, except for the code generator. A complete regression test, documentation and support comes with the basic price. We are one of the oldest class libraries in business, and we stand behind our software. Prices in US$: $299 DOS,WINDOWS, or MAC $599 UNIX workstations Postage included in North America, $25 for overseas. Operating Systems: - Unix - PC Windows - OS/2 - Mac Compilers: - Sun CC - HP C++ - Cfront - Borland C++ - Visual C++ - Zortech C++ 3.0 - Watcom C++ - Gnu CC - Dec CC Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:613-838-3316 Email:jiri@debra.dgbt.doc.ca Postal address:Code Farms Inc 7214 Jock Trail, Richmond, Ont., K0A 2Z0, Canada Tel:613-838-4829 ------------------------------------------------------------------------ C++/Views (Allegris Workshop) Product name now changed to Alegris Workshop. Cross-platform C++ class library designed for use by experienced commercial C++ developers. Originally written in Smalltalk, it was rewritten in C++ to provide greater performance and also to appeal to a greater number of developers. Includes the following features; - Cross-platform object-browser - GUI Painter - Portable Resource Files - Persistent Object Support - Fully portable Available on a per user, per platform basis, $995. Full support is available. Operating Systems: - PC Windows - PC 32-bit Windows - OS/2 - Motif Compilers: - Visual C++ - Borland C++ - Symantec C++ - IBM Cset++ - Sparcworks Added : 01/01/95 Amended : 13/11/96 Licencing : Commercial Fax:+44 (0)1727 869 804 Fax:301 838 5064 WWW http://www.intersolv.com Email:idsinfo@intersolv.com Postal address:Europe: INTERSOLV, Ltd Abbey View Everard Close St Albans, Herts AL1 2PS Postal address:USA/CANADA: INTERSOLV, Inc. 9420 Key West Avenue Rockville MD 20850 Tel:+44 (0)1727 812 812 Tel:800 547 4000 ------------------------------------------------------------------------ Classix In addition to Rogue Wave, Empathy offers a good general-purpose library called Classix. I do not have confirmed information, but I have been told that this library is no longer available. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ CommonPoint Application System - Comprehensive C++ class library for writing portable GUI applications It includes a GUI builder, a development environment, full international language support, full 2D and 3D graphics, multi-media, collection classes, customizable text and graphics editors, a compound document architecture, a workspace/finder, etc.. It is fully supported. Future versions will run on additional platforms. Operating Systems: - IBM AIX Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.taligent.com/ Postal address:Taligent, Inc., Cupertino, CA ------------------------------------------------------------------------ CommonView - Iconic user interface from Glockenspiel This is a C++ UI library. In addition, it comes with container classes. The down-side is that some of the features are not supported across all platforms. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(516) 342-6947 Postal address:Computer Associates International, One CA Plaza, Islandia, NY 11788 Tel:(516) 342-2308 ------------------------------------------------------------------------ CP Graphics - CP Graphics Library for Windows Library features include: - Bitmap and DIB functions for loading, saving, scaling, displaying, copying and printing - Multimedia support for WAV, MID, FLC and AVI - Animation - transparent 'put' and sprite animation - Sound - Palette manipulation - Clipboard - High-level drawing functions CPDEMO.EXE shows the user interface created with CP Graphics Library: animated buttons, region buttons, frames and other features. To find out more or to download the demo or free Windows screen saver please visit the Web site below, or send an e-mail message. Operating Systems: - PC Windows Added : 14/03/96 Amended : 14/03/96 Licencing : Commercial Fax:+61 8 396 1477, +61 8 262 8130 WWW http://www.tne.net.au/cp Email:adavidovic@nexus.edu.au - Technical support Email:cp@tne.net.au Postal address:Computer Point, 71 Williamson Road, Para Hills 5096, South Australia Tel:+61 8 263 3623, +61 8 262 7751 ------------------------------------------------------------------------ Crusher! - Data Compression Toolkits The Crusher! Data Compression Toolkits are high-performance, portable data compression libraries. Crusher's comprehensive API of 45+ functions, identical across all platforms, provides buffer compression, file compression, archiving, subdirectory support, wildcards, disk spanning, encryption, self-extracting EXE's and more. Typical results compresses data to 20-50% of their original size or less. Implement full archiving in just four function calls. Crusher archives are portable across all supported platforms and full source code is included, as well as numerous sample applications. Includes ARQ.EXE, a convenient command-line utility for managing Crusher archives, and SETUP, a Windows installation/setup program. Supports all C/C++ memory models and languages such as Visual Basic and Delphi. Windows versions include VBX and OCX custom controls and full on-line documentation. Limited 30-day warranty. A free demo is available for downloading from our bbs or web site. Retail Platform Pricing (all prices are in U.S. dollar and include full C source code): - DOS $249 - 16-bit Windows $299 - 32-bit Windows $299 - Macintosh $299 - OS/2 $349 - Unix $349 Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 - Unisys Unixware - Mac Compilers: - Borland C++ - Visual C++ - Watcom C++ - Symantec C++ Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial BBS:606-268-1251 Fax:606-266-0726 WWW http://www.dcmicro.com Email:info@dcmicro.com Postal address:DC Micro Development, P.O. Box 54588, Lexington, KY 40555 Tel:606-268-1559 Tel:800-775-1073 ------------------------------------------------------------------------ DiaViews++ Class library for the development of graphical user interfaces (GUI) in OSF/Motif and C++ This library combines the power of the OSF/Motif toolkit with the advantages of the C++ language by means of completely encapsulating the Motif objects (widgets/gadgets). This means there is a C++ class for every Motif object. DiaViews supports the structured, object-oriented development of Motif interfaces. C++ features such as rigorous type checks and virtual functions, etc. enhance the efficiency of the development process. Advantages: - Uniform C++ interface with OSF/Motif - Framework for generating reusable UI components - Use of callback objects - Interface with Dialog Builder, the interactive tool from Siemens Nixdorf for OSF/Motif user interfaces - Simple and reliable handling of Motif resources - Automatic generation of make- files - Minimal training overhead Price for source license (all platforms): 1200 DM, ~800 US$ Academic or private use license: 300 DM, ~200 US$ (needs Generic++) Added : 01/01/95 Amended : 28/02/96 Licencing : Commercial Fax:(49) 89 893242-31 Email:info@ootec.isar.de Postal address:Alexander v. Zitzewitz, OO-Tec GmbH, Muenchener Strasse 45, D-82131 Gauting, W. Germany Tel:(49) 89 893242-0 ------------------------------------------------------------------------ Distinct TCP/IP - TCP/IP for Windows Software Development Kit C++ Class Libraries for FTP, Telnet and Windows Sockets. Allows developers to develop TCP/IP applications without making calls directly to a C Dynamic Link Library (DLL). Applications are created using the Distinct C++ Class Libraries, which take care of establishing the connection between the client and server side of the application. All functionality normally associated with calling a TCP/IP application is taken care of by setting data members and by handling upcall events. Applications are notified of errors, connection changes and incoming data by an upcall posted by the library to the applications window, by providing a callback function to the library or by making polling calls to the library at frequent intervals. Standard Edition:$495.00 Professional Edition:$695.00 Distinct TCP/IP Run Time: $100.00 Compilers: - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(408) 366-2101 Email:mktg@distinct.com Postal address:Distinct Corporation, 12901 Saratoga Avenue, #4, Saratoga, CA 95070 Tel:(408) 366-8933 ------------------------------------------------------------------------ DV Centro - C++ graphics framework for building visual language applications DV-Centro provides robust graphics, event management and utilities for efficiently developing applications that use non-textual interfaces. Visual language interfaces allow programming through manipulation of graphic objects. By overlaying, juxtaposing or inter- connecting graphic objects, a user can interact and manipulate the application. DV-Centro is designed for creating applications such as graphical editors and visual language applications - like diagram editors, finite state machine editors, simulation and control systems, etc. It provides: - graphics classes: primitives (line, point, circle etc.), rendering (Motif, Windows, Postscript), automatic damage repair, properties (color, fill, line styles etc.), transformations (rotation, scaling, translation) - graphical constraint management for graphical connectivity and containment. For example, keeping lines connected to boxes while editing a diagram. - event handling classes for platform-independent definition of events, states and responses used to define how the system behaves. - mechanisms for graphical editing (n-level undo/redo, copy/cut/paste, save/restore etc.) - utilities: run-time type checking, memory management - classes to link data to graphics so you have \"smart diagrams\" - Python bindings to Centro for rapid development without long C++ compile times Operating Systems: - SunOS - Solaris - HP UX - PC 32-bit Windows Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:413-586-3805 WWW http://www.dvcorp.com Email:info@dvcorp.com Postal address:DataViews Corporation 47 Pleasant Street Northampton, MA 01060 Tel:413-586-4414 ------------------------------------------------------------------------ fACTs++ Class Library - Financial Application Construction Tools in C++ A homogeneous tool-box of more than 300 C++ classes and templates. fACTs++ provides programmers with design patterns for distributed client-server applications supporting multi-currency securities and transactions, along with associated international conventions. The library includes a complete set of foundation classes, parallel processing and communication classes, extendible financial instrument hierarchy and financial modeling classes. fACTs++ features include: - Dynamic Object Type Identification with Smart Pointers - Streams Interface - Container Templates - Time, Date, Calendar and Timer classes - String and Regexp Classes - Mathematics and Financial Modeling Classes - Internationalization Support - Interface To Persistence Storage and Extendible Objects - Application Configuration Framework - Human-Computer Interface Tools, including Model-Viewer Controller Classes - Distributed Processing Primitives and Client-Server Framework - CashValue, CashFlow, Payment, Yield and DayCount, Market classes - Comprehensive and extendible set of instrument definitions, such as Swap, Bond, Basket and Derivative - Portfolio, Position and Transaction Classes - Yield Curve, Volatility and Time Series Classes fACTs++ is available, on a per-project basis, as part of Objective Edge's custom software engineering service. The company's training program allows clients to quickly \"ramp-up\" their object-oriented development projects, providing early, visible results while reducing development costs. Upon project completion, clients are left with a technology base and application architecture which they are able to leverage in future development activities. fACTs++ is currently supported on Solaris 2.X and x86, and may be ported to any POSIX compliant platform on a custom development basis. fACTs++ is a trademarks of Objective Edge Inc. Copyright(c) 1994, 1995 Objective Edge Inc. All rights Reserved. Operating Systems: - Solaris Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:416-485-6473 WWW http://www.objectiveEdge.com/ Email:info@objectiveEdge.com Postal address:Objective Edge Inc. Suite 401, 194 Merton Street Toronto, Canada M4S 1A1 Tel:416-485-7186 ------------------------------------------------------------------------ Forward Error Correction Library - Reed-Solomon Forward Error Correction Supports Reed-Solomon Forward Error Correction encoding and decoding for many different codes Features: - ANSI C++ class library, can be called from C or C++ - Designed for ease of use and flexibility - Generate/test Reed-Solomon codes with an absolute minimal knowledge of error correcting codes - Provides C++ classes to allow finite field matrix and polynomial operations to allow generation of other codes Licensing/pricing: please contact us. Operating Systems: - PC DOS - PC Windows Compilers: - Borland C++ Added : 09/09/96 Amended : 09/09/96 Licencing : Commercial WWW http://www.scotweb.com/4i2i/ Email:101361.474@compuserve.com Postal address:4i2i Communications Ltd, 56 High Street, New Pitsligo, Aberdeenshire, UK Tel:(+44) 1224 733569 ------------------------------------------------------------------------ G-BASE/GTX (MATISSE) - Object Oriented Database Contact: Christina Bernard, Marketing and Communications Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(617) 547-5420 Email:info@odb.com Postal address:ODB, an Intellitic Intl Co., 238 Broadway, Cambridge, MA 02139 Tel:(617) 354-4220 ------------------------------------------------------------------------ Galaxy This is a C UI library, but it's written in an object-oriented style and is type safe for C++ use. The package includes a WYSIWYG GUI builder. The tools are, reportedly, pretty full-featured. User-interface items have extensive abstraction (for example, they have a confirmation-type dialog that resolves to a push-pin and 'apply' button under openlook, but 'ok', 'apply', 'cancel' buttons under motif). Objects can be positioned relative to each other (rather than merely absolute position on the screen). Also, errors are handled with an abstract exception handling framework. They support internationalization of fonts (at least Japanese), money, and data formatting. Some extra-cool features include memory leak detection and C-language objects for text (multi-styled, multi-font text with embedded graphics), list (spreadsheet-like for handling up to 2^31 x 2^31 cells with customizable displays), and graphics processing. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(703) 758-2711 Email:galaxy@visix.com Postal address:Visix, 11440 Commerce Park Drive, Reston, Virginia 22091 Tel:(800) 832-8668 ------------------------------------------------------------------------ GEMSTONE Object Oriented Database Briefly, GemStone is a full featured OODBMS with transaction control, multiple users, multiple platforms supported, client server architecture, active objects (ie, behavior can occur in the database as well as in the application using it), multiple language support, etc. GemStone is actually quite a bit more than just a data repository - it is a full-fledged DBMS that is pure OO. You can access the same database just as easily from C, C++, or SmallTalk, or you can build entire database applications inside the database server, because it is an active server that runs methods written in our DML, OPAL, which is a dialect of SmallTalk. There are also high-level tools to aid application building. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:510-814-6227 Email:marcs@slc.com Postal address:UK Office:, Servio-UK Ltd, Criterion House, Beauchamp Court, Victors Way, Barnet, EN5 5TZ, England Postal address:Servio Corporation, 950 Marina Village Parkway, Suite 110, Alameda CA 94501 Tel:(181) 447-0800 Tel:800-243-9369 Tel:510-814-6200 ------------------------------------------------------------------------ Generic++ Class library with container classes and basic data types for the development of portable, object-oriented applications. Actually (Feb 96) won the readers choice award of \"Objekt Spektrum\", which is a German SIGS publication. This C++ library is completely new. It is aimed at commercial users and implements a generous selection of application-independent basic classes. Its use frees the user from error-prone and time-consuming specific tasks (e.g. main memory management). All libraries previously available on the market are targeted more or less specifically on a particular system environment. However, it is becoming more and more urgent to make as many application modules as possible independent of a specific target platform. What gives Generic++ its competitive edge is the portability of its components and the way it takes account of other software engineering aspects. Advantages: - Implementation of the most important application- independent basic classes - Availability on all standard operating systems and platforms - Accommodation of the latest C++ extensions such as templates and exception handling - Co-existence with other libraries - High degree of runtime efficiency and low resource consumption - Integrated debugging support - Template-based, typesafe container classes with interchangeable implementation data structures - Smart cursors - Suitability for use in the development of client/server applications in heterogeneous networks. - Support for multi-threaded applications - Persistent objects - Regular expressions - System independent handling of file and path names Price for source license (all platforms): 947 DM, ~610 US$ Academic or private use license: 300 DM, ~200 US$ Operating Systems: - Unix - PC Windows NT - OS/2 - PC Windows - PC DOS Compilers: - Cfront - IBM xlC - Watcom C++ - IBM Cset++ - Borland C++ - Symantec C++ Added : 01/01/95 Amended : 28/02/96 Licencing : Commercial Fax:(49) 89 893242-31 Email:info@ootec.isar.de Postal address:Alexander v. Zitzewitz, OO-Tec GmbH, Muenchener Strasse 45, D-82131 Gauting, W. Germany Tel:(49) 89 893242-0 ------------------------------------------------------------------------ Greenleaf ArchiveLib - C/C++ library for data compression/archiving Greenleaf ArchiveLib provides the developer a set of classes and functions to compress and store ASCII and binary data into an archive for storage, as well as to retrieve and expand the stored data from the archive. Features include: PKZip 2.0x archive support - insert, extract, delete, list and more 3 compress and decompress engines: PKZip 2.0x compatible Greenleaf engine: lossless, dictionary-based Copy engine as alternative for small files Portable data compression engines are fast and efficient Progress meter & message classes Functions to add, replace, delete, update and retrieve objects of compressed data within the archive The price is $279 and this includes full source code. There are no royalties when distributed in executable format. Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 Compilers: - Visual C++ - Borland C++ - Symantec C++ - Watcom C++ - IBM Cset++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(214)250-3778 Fax:(214)248-7830 WWW http://www.gleaf.com/~gleaf.com Email:info@gleaf.com Postal address:Greenleaf Software, Inc. 16479 Dallas Pkwy. STE 570 Dallas, TX 75248 Tel:(800)523-9830 Tel:(214)248-2561 ------------------------------------------------------------------------ Greenleaf Comm++ Comm++ is an synchronous RS-232 communications library that provides interrupt-driven, circular buffered service for 35 ports at baud rates to 115,200 baud. Classes are provided for: serial port controls, modem controls, file transfer protocols and calculation of check values. Features include: XMODEM, YMODEM, ZMODEM, CompuServe B+, Kermit and ANSI file transfer support XON/XOFF, RTS/CTS flow control Support for Novell's NASI interface VT52 and VT100 (subset) terminal emulation support 286/386 Dos extender support The price is $279 and this includes full source code. There are no royalties when distributed in executable format. (214)248-2561 (800)523-9830 (214)248-7830 FAX (214)250-3778 BBS http:\\\\www.gleaf.com\\~gleaf.com email: info@gleaf.com Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 Compilers: - Visual C++ - Borland C++ - Symantec C++ - Watcom C++ - IBM Cset++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(214)250-3778 Fax:(214)248-7830 WWW http://www.gleaf.com/~gleaf.com Email:info@gleaf.com Postal address:Greenleaf Software, Inc. 16479 Dallas Pkwy. STE 570 Dallas, TX 75248 Tel:(800)523-9830 Tel:(214)248-2561 ------------------------------------------------------------------------ Guild This is a C-language UI library, but they're type-safe for C++ compatibility. The package includes a GUI builder and an event occurrence monitor. Additional features in the library includes support for international character sets, portable file system support and nifty C-language classes for pie-charts, 3d bars, x-y plots, and the like. OPTIONS: - Graphic Modeling $995 - Oracle Database Bridge $395 - ODBC Database Access $495 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 349-4908 Postal address:Guild, 1710 S. Amphlett, 2nd Fl., San Mateo, California 94402 Tel:(415) 513-6650 ------------------------------------------------------------------------ ICpak101, ICpak201 Stepstone Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ IDB - Object Databases Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:412-963-1843 Postal address:Persistent Data Systems, P.O. box 38415, Pittsburgh, PA 15238-9929 Tel:412-963-1846 ------------------------------------------------------------------------ IKaID - Computer animation library Brief summary of purpose: Computer animation library as an addition to OpenGL, Direct3D, OpenInventor, Rave, etc. Short list of features: Inverse kinematics, rigid-body dynamics, 3D transformation routines, and classes, and a non-linear equations solver. All components have portions assembly-coded for speed on the Intel Pentium. Non-transferable single-user license $169.00. Contact us for details on other types of licenses. Operating Systems: - PC 32-bit Windows Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial WWW http://home1.gte.net/blazing/fast.htm Email:blazing@gte.net Postal address:Blaze Software, 171 Pier Avenue, Santa Monica, CA 90405 ------------------------------------------------------------------------ ILOG BROKER - Distributed Object Computing ILOG BROKER: C++ library and preprocessor that extend the C++ language to transparently support Distributed Object Computing environments. Developers can make any existing linked C++ application distributed, by minimally changing their header files. A set of about 15 keywords enable ILOG BROKER's preprocessor to generate standard C++ code. Once the header files have been annotated, the preprocessor automatically generates the C++ source code to build the distributed application. Communication between objects is performed through the use of local surrogates calling methods on the real implementation objects across a network. The current implementation relies on RPC for the transportation layer. ILOG BROKER annotations have also been designed to generate IDL code for CORBA 2 specifications. ILOG BROKER does not impose the use of a dedicated server. Each object in the distributed application can be both a client and a server to and for other objects, therefore providing a true peer-to-peer programming tool. Cost: $5,000 per Unix-based development license. Preferred university rates available upon request. Operating Systems: - Dec OSF/1 - HP UX - IBM AIX - Silicon Graphics - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG DB LINK - Connect RDBMS to C++ applications ILOG DB LINK: is a C++ library to connect RDBMS such as Sybase, Oracle, Ingres, Informix, or SQLBase to C++ applications. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG RULES - Data monitoring in real-time environments ILOG RULES: is a C++ tool for data monitoring in real-time environments. ILOG RULES embeddable inference engine applies rules directly on native C++ application objets. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG SERVER - C++ object server implementing real-time groupware applications ILOG SERVER is a C++ library and preprocessor for building reactive servers of C++ objects. It offers a client-independent external abstraction of the data, which ensures the coherence of the shared objects. Each client: - has its own API (Application Programming Interface) - only has to be concerned with the objects it manipulates - does not have to worry about other clients sharing the same objects ILOG SERVER is an extension of the SmallTalk Model View Controller (MVC) architecture to manipulate custom C++ objects instead of fundamental data types. Developers describe object models by annotating their header files using about 15 predefined keywords. Once the header files have been annotated, ILOG SERVER's C++ preprocessor automatically generates the appropriate C++ code. By extending the notion of a C++ pointer as a data member, ILOG SERVER makes it possible to easily build relationships with cardinalities between C++ classes that will automatically be maintained. This extension to C++ supports inheritance and relationships based on smart pointers. Cost: $5,000 per Unix-based development license. Preferred university rates available upon request. Demonstration CD-ROM available Operating Systems: - Dec OSF/1 - HP UX - IBM AIX - Silicon Graphics - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG SOLVER - Constraint reasoning library ILOG SOLVER: is a C++ constraint reasoning library for solving complex resource management problems such as scheduling, configuration, and planning. ILOG SCHEDULE: is an add-on library to ILOG SOLVER dedicated to solving scheduling problems. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG TALK - Object-oriented dynamic language ILOG TALK: is an object-oriented dynamic language offering a seamless integration with C++ class libraries. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG VIEWS - C++ library and editor to design Very Graphical User Interfaces ILOG VIEWS 2 high-level C++ class library is fully extensible and portable across Windows, OS/2, and Unix platforms. It includes: - portable resources, event management, and PostScript support - a portable multi-look gadget library - extensive 2D graphic object library including charts and gauges - PowerObjects such as graph layout, spreadsheet, and Gantt chart - management of multiple views & layers (for cartographic applications) - double buffering, infinite undo, zooming, and other editing operations The development of portable VGUI applications is accelerated through ILOG PowerEdit, an extensible VGUI builder that generates standard C++ code. PowerEdit reusable components are provided with ILOG VIEWS 2 so that developers can create and distribute their own custom editors. ILOG VIEWS 2 Dynamic Variable mechanism offer an interpretor for writing C formulae between variables to control the attributes of objects. This allows for code-free animation and control of graphics objects. ILOG VIEWS 2 provides a message translation mechanism so that messages used in the interfaces may be translated dynamically. The look and feel of ILOG VIEWS 2 applications can be changed dynamically from Motif to Windows on all platforms. ILOG BUILDER: is a GUI builder that generates OSF/Motif interfaces in C and C++. It offers UIL read/write capabilities and tight integration with ILOG VIEWS. Operating Systems: - Dec OSF/1 - HP UX - Silicon Graphics - Sun - PC Windows - PC 32-bit Windows - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ImageSoft - Object/Engineering C++ class library supporting simulation. The library provides a natural approach to solving discrete-event simulation problems. Modularity is reinforced by implementing the process objects as concurrent tasks. Support is provided for dynamic systems; transaction operators; transaction messages; as well as queuing network thread with polymorphic scheduler (timer for discrete-event simulation; tracer for simulation run; processes in discrete-event simulation with services delay; conventional/unconditional blocking, pre-emption, etc.; shared queues/links in network with LIFO, FIFO & arbitrary queuing discipline; producing node and source; consuming node and sink; generic queuing network nodes and servers. And full source code is provided together with extensive documentation, examples and tutorial. There are also an enormous number of other class libraries included with source that are of interest to the scientific and engineering community. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(516) 767-9074 Fax:(516) 767-9067 Email:mcdhup!image!object Postal address:ImageSoft Inc., 2 Haven Avenue, Port Washington, NY 11050 Tel:(516) 767-2233 ------------------------------------------------------------------------ KALA - Object Oriented Database Kala(tm) is a Persistent Data Server managing distributed, shared, arbitrarily complex and evolving persistent data. Kala is highly efficient and secure. Kala manages the visibility of persistent data elements to its clients, thus supporting any types of transactions, versions, access control, security, configurations. Kala does not restrict you to any particular model. Kala provides the mechanism, but imposes no policy. Ports to Windows and MacOS are also likely in the near future. Any port is possible as NRE. Kala's interface is ANSI C, also callable from C++. Contact: Sergiu S. Simmel Operating Systems: - Sun - Sparc - PC DOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+1-617-646-5753 Email:sss@world.std.com Email:kala-request@world.std.com Postal address:Penobscot Development Corporation, 50 Princeton Road, Arlington, MA 02174-8253, USA Tel:+1-617-646-7935 ------------------------------------------------------------------------ Libsetl - programming symbolically in C++ Libsetl is a C++ library that is designed for supporting symbolic computing in C++. Based on a very high-level symbolic programming language (SETL), libsetl offers a number of powerful features that are available only for advanced symbolic languages. These features include latent types, high-level constructs (sets, maps and tuples), high-level operations through polymorphism, efficient iterators, runtime type checking, automatic memory management, intuitive syntax, and more. C++ programs written using libsetl do not have common C++ errors like memory leaks or memory corruptions. Runtime errors are detected and handled gracefully by using exceptions. Libsetl and its related files are proprietary materials. But free copies of precompiled packages are available for evaluations or education/research purposes. Operating Systems: - PC DOS - PC Windows 95 - Linux - SunOS - Solaris - HP UX Compilers: - Gnu CC - Visual C++ - HP C++ - Cfront Added : 28/03/96 Amended : 28/03/96 Licencing : Demo Fax:908.957.7189 WWW http://www.landsoft.com Email:landsoft@landsoft.com - Land Software Postal address:Zhiqing Liu, Land Software, 162 von Neumann Drive, Princeton, NJ 08540 Tel:908.957.3891 ------------------------------------------------------------------------ Linpack.h++ - The jewel of C++ math classes. Linpack.h++ includes all of Matrix.h++, plus all of the functionality in the original and well- established Fortran version; including solutions of systems of equations for a variety of matrix types, solutions of over- and under-determined systems of equations, incremental least squares solvers, etc. But, Linpack.h++ is a tru object-oriented library, not just a C version that compiles under C++: the traditional messiness of the Fortran version has been replaced with high-level, yet efficient, objects that make code far easier to write and maintain. Prices range from $299 to $1195 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ M++ M++ isn't as well known as the RogueWave math.h++ libraries, but it has been around for many years. It has a number of features that distinguish it from the RogueWave classes, notably improved handling of temporaries. M++ was explicitly designed to provide the functionality of an array language like Matlab or Gauss and it contains the Linpack, Eispack stuff found in RogueWave's Linpack.h++. Dyad Software, also sell modules written in M++ for doing statistical work, including linear and nonlinear least squares estimation, as well as optimization, numerical integration, and differential equations. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:206-271-9486 Fax:206-637-9428 Postal address:Dyad Software, 6947 Coal Creek Pkwy, Suite 361, Renton, WA 98059-3159 Tel:206-637-9426 ------------------------------------------------------------------------ MacApp (application development toolkit) Apple Operating Systems: - Mac Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ MainWin - MFC on Unix (Microsoft Foundation Classes) Developers can develop on Unix using the MFC library as on the PC. With virtually no change to the source code compared to the PC version (typically less then 1 per 1000) they produce unix version using the MainWin libraries. Most advanced features of MFC are supported like OLE, activeX, WinInet, multithreading, common controls. The look and feel of the application on unix is either Windows or Motif, and can be changed at runtime. Requires the C++ compiler from the platform vendor. Current MFC version (as of 11/96): 4.2 Operating Systems: - Solaris - SGI Irix - Dec Unix - HP UX - SCO Open Desktop Added : 01/01/95 Amended : 19/03/97 Licencing : Commercial Author:MainSoft corporation Fax:1 408 774 3404 WWW http:www.mainsoft.com Email:info@mainsoft.com Postal address:1270 Oakmead parkway, Sunnyvale CA 94086 Tel:1 408 774 3400 ------------------------------------------------------------------------ Matrix.h++ - includes all the functionality of Math.h++. For example: general matrices, vectors, statistics, complex numbers, Fast Forier Transformation (FFT's), etc. Matrix.h++ adds specialized matrix classes such as banded, symmetric, positive-definite, Hermitian, tridiagonal, etc. Because Matrix.h++ includes Math.h++, it can take advantage of Math.h++'s highly optimized low-level assembly routines, making it fast as well as graceful. Prices range from $199 to $995 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ Memory Tuning System (MTS) - Fast, efficient memory allocator Specifically designed to minimize paging and data fragmentation Improves run-time performance by: - Minimizing virtual memory paging - Providing faster malloc/free calls - Minimizing memory fragmentation Improves programmer productivity with: - Standard C library malloc interface - Works with C, C++, FORTRAN - Availability on Unix, OS/2, Win32s and Windows NT - Consistent performance across multiple machines - MTS shipped as portable C source code Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:Western Office: 303.416.0753 Fax:Eastern Office: 508.454.7559 Email:al@newcode.com Email:zeev@newcode.com Email: info@newcode.com Email:al@newcode.com Email:zeev@newcode.com Postal address:Western Office: NewCode Technology, Inc., 2406 Newport Court, Fort Collins, CO 80526 Postal address:Eastern Office: NewCode Technology, Inc., 650 Suffolk Street, Lowell, MA 01854 Tel:Western Office: 303.416.0784 Tel:Eastern Office: 508.454.7255 Tel:Corporate Headquarters: 1.800.NEWCODE (1.800.639.2633) ------------------------------------------------------------------------ MFC Toolkit 2.0 - MFC extensions The Toolkit product contains MFC extensions that make the programming job easier and improve your product. Examples of this include: - a bitmapped button class that generates all required images from a single 16 or 256-color bitmap - a class that allows subclassing of windows already subclassed by MFC - a fully-customizable docking toolbar that extends customization even to allowing the end-user to edit bitmap images on buttons - a class from which you can derive your own docking splitters - a simple splitter window with dynamic reorientation horz/vert - routines to find a runtime-class structure from its ascii name, check inheritan! ce using ascii names only, etc These are just a few examples; the toolkit contains more than this, is shipped with an extensive HLP file and full source code, and works with both the 32 and 16-bit versions of MFC. Operating Systems: - PC Windows - PC 32-bit Windows Compilers: - Visual C++ Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial Author:McAdams Research WWW http://home.sprynet.com/sprynet/smcadams - Demo Email:smcadams@sprynet.com ------------------------------------------------------------------------ NeoAccess Developer's Toolkit - Cross-platform object database engine for C++ development NeoAccess(TM) is a full-featured object database engine for use in Windows, Macintosh, Unix and DOS based applications. NeoAccess's feature set include: Blobs, part lists, iterators, swizzlers, temporary objects, multiple indices on a class, a powerful relational object query mechanism, a very small memory and file footprint and a streams-based I/O model. NeoAccess has the complete set of features that in-house and commercial developers need and an easy to use programming interface that hides internal complexity to keep C++ developers productive. In much the same way that application frameworks are used to construct the front-end of an application, NeoAccess is the framework developers use to build an application's back-end. NeoAccess is a set of C++ classes that naturally extends standard application frameworks such as Metrowerks' PowerPlant, Symantec's THINK Class Library and Apple's MacApp on the Macintosh and Microsoft's Foundation Classes, Inmark's zApp and Borland's ObjectWindows in Intel-based environments. NeoAccess is very portable and can also be used without an application framework. NeoAccess comes complete with full source code. The same NeoAccess source code can be used to build Windows ('95, NT and 3.x), Macintosh, Unix (all platforms) and DOS applications. The programming interface is virtually identical in all environments. NeoAccess-based applications produce single file documents that are binary-compatible across platforms. That is, a database built on one platform can be used on any other platform without conversion. The NeoAccess Developer's Toolkit is priced at $749 per developer with no runtime licensing fees. It includes full source code, numerous sample applications, 450+ pages of documentation, and 30 days of online technical support. Operating Systems: - PC Windows - Unix - PC DOS - MacOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(510) 524-4501 FTP from ftp://ftp.neologic.com/users/neologic/ WWW http://www.neologic.com/~neologic/ Email:neologic@neologic.com Postal address:NeoLogic Systems, Inc. 1450 Fourth St., Suite 12 Berkeley, CA 94710 Tel:(510) 524-5897 ------------------------------------------------------------------------ NetClasses++ - C++ classes for message passing environments: NetClasses is a set of C++ class libraries that is organized as an object- oriented software toolkit for distributed, message-passing based programming. Facilities include : Transporting objects over a network. NetClasses can transport: Arbitrary C++ objects derived from PostModern's TransObject class, arbitrary NIH- derived objects, and NetClasses Typed Objects. - NetClasses Typed Objects provide an object-oriented data transport in which the structure and organization of objects is specified externally in configurable files using a simple, programming language independent abstract syntax notation, the NetClasses Abstract Syntax Notation (NASN). - Remote method invocations (RMI). Using RMI, an application on machine B can invoke a method on machine A. RMI makes fault tolerance and connection management transparent to the application programmer. The RMI layer is built on top of the distributed services package that is described below. - Reading and writeing all three varieties of NetClasses-transportable objects on streams using machine-independent external representations. Prices : - NetClasses Development License $1995 - NetClasses Runtime License $495 - NetClasses Source Code License $7995 (includes 3 runtime licenses) - NetClasses training class $2000 - NetClasses consulting and porting services (ask for quote) Operating Systems: - Sparc Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 572-1300 Postal address:Qualix Group, 1900 S. Norfolk St. Suite 224, San Mateo, CA 94403 Tel:(415) 572-0200 Tel:1-800-245-UNIX ------------------------------------------------------------------------ NeXTStep - application development toolkit NeXT Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ NuGraf - Deveoper's 3D Toolkit The NuGraf Developer's 3D Toolkit is a powerful and general purpose 3D graphics framework (in C, but C++ type-safe) providing full-featured hierarchical database management, modeling and high-quality \"photo-realistic\" rendering capabilities. The toolkit is designed as a complete \"drop-in\" solution for third party software vendors seeking to quickly and efficiently incorporate high quality 3D computer graphics into their software packages. The toolkit provides all of the necessary components to build a complete interactive 3D modeling and rendering system. These components include a state-of-the-art \"photo-realistic\" renderer, modeling and database management, coordinate space mapping, object and polygon picking, automatic smoothing and processing of raw polygonal data (useful for DXF file import), as well as optimized wireframe output for fast interactive data manipulation. The toolkit also handles all aspects of the 3D rendering process, alleviating the host application from dealing with such mundane tasks as error handling and recovery, color output conversion (for those output devices with few colors) and file/display output. It features all of the functionality normally associated with a high-end rendering system but neatly packaged into componentized modules. NuGraf is ideally suited for: - Inclusion into CAD packages which have a graphical user interface and existing 3D modeling capabilities, but no rendering features. - 3D applications with weak or older renderers, or those that depend upon slow ray tracing. - 3D applications which currently use real-time, medium quality renderers such as Open GL or 3DR. - Developers writing 3D modeling applications which require powerful rendering capabilities, color conversion and scanline output to various devices. - Any developer wishing to create a 3D modeling and rendering system from the ground up. - 3d font creation programs. Pricing: Development licences = $3500 for \"Application Builder\" version, $995 for \"Render Extender\" version. Royalties apply for commercial applications developed with the toolkit. Highly portable, inquire about other platforms. Please refer to WEB site for further information, online API spec, extensive slide show and pricing. Operating Systems: - PC Windows - PC 32-bit Windows - Linux - SGI Irix - Sun Compilers: - Watcom C++ - Gnu CC - Sun CC Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial Fax:905-672-2706 WWW http://www.okino.com Email:sales@okino.com Postal address:Okino Computer Graphics, Inc., Mississauga, Ontario, Canada. Tel:905-672-9328, ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!su-news-hub1.bbnplanet.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!news-peer.gsl.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:47 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!su-news-hub1.bbnplanet.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!news-peer.gsl.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (4/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:49 GMT Organization: Trumphurst Ltd. Lines: 659 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256163 comp.answers:25747 news.answers:101460 Archive-name: C++-faq/libraries/part4 Comp-lang-c++-archive-name: C++-faq/libraries/part4 Available C++ libraries FAQ (4/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (this file) Libraries with no known FTP site (this file) Source code from books (this file) Other places to look for details of C++ libraries (this file) Useful ftp sites (this file) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Tools for C++ Programmers ~~~~~~~~~~~~~~~~~~~~~~~~~ C++ component search engine - Searches C++ Libraries FAQ for components This is a Web page containing a Java search engine which searches the C++ Library FAQ for libraries or components which match your criteria. I have tried this myself, and it is a very neat Web page. It even plays music to you while the search progresses! Just select \"Search Library\", then enter your search string and press return. Added : 13/11/96 Amended : 13/11/96 Licencing : Not known WWW http://pascal.math.msstate.edu:4000/PROJ ------------------------------------------------------------------------ Cback - Cfront optimiser Cback optimizes C source from the cfront C++ translator to create easy to read, smaller, faster and portable C source, while maintaining or improving compile times Improves run-time performance by: - Minimizing object code size (especially in debug) - Minimizing cfront output code size - Simplifying cfront data structures and expressions Improves programmer productivity with: - Easier to read C source from cfront output - Portable C source from cfront output - Faster link times, reducing the debug cycle - Seamless integration into existing compile paths - Availability on a broad range of Unix platforms Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:303.416.0753 Fax:508.454.7559 Email:al@newcode.com Email:zeev@newcode.com Email:info@newcode.com Postal address:Western Office: NewCode Technology, Inc., 2406 Newport Court, Fort Collins, CO 80526 Postal address: Eastern Office:NewCode Technology, Inc., 650 Suffolk Street, Lowell, MA 01854 Tel:Corporate HQ: 1.800.NEWCODE (1.800.639.2633) Tel:303.416.0784 Tel:508.454.7255 ------------------------------------------------------------------------ ClassAction - OO design and C++ code gen ClassAction is an Object Oriented design tool for Windows 95 based on an approximation of the OMT methodology. It generates C++ code suitable for MFC 4.0. Contains context sensitive help, floating/dockable toolbar, drag/drop support. Also has install/uninstall. The current version is the first beta version. Operating Systems: - PC Windows 95 Added : 07/08/96 Amended : 07/08/96 Licencing : Shareware Author:Shane Hyde, Trontech Pty Ltd FTP from ftp://ftp.simtel.net/pub/simtelnet/win95/prog/clsa10b1.zip Email:Shane_Hyde@msn.com ------------------------------------------------------------------------ Classdoc - AWK package to produce documentation from C++ source Dag Bruck has written this package in AWK. It produces UNIX-style manual pages from C++ class headers. If you are interested in automatic documentation, you might want to look at this. Added : 08/02/96 Amended : 08/02/96 Licencing : Not known Email:dag@control.lth.se - Mail Dag Bruck ------------------------------------------------------------------------ DocClass - Generates class documentation from source files Docclass is a simple C++ program which reads in C++ header files, and outputs documentation describing the class hierarchy, methods, inherited methods etc. Docclass has a rather dumb parser, but it should cope with reasonably sane C++ class declarations. It understands comments, and tries to group the comments with the appropriate class or method. Docclass does not require templates, or nested classes, as many people had C++ compilers which didn't support them. With any luck, it should understand them a little in the code it analyses, though. Docclass is Copyright (c) Trumphurst Ltd. I have made it available on the Internet for personal use only. Please do not use it in a commercial situation (except for testing to see if it is suitable) without first obtaining permission (mail address below). Operating Systems: - Unix - PC DOS Compilers: - Borland C++ - Zortech C++ - Gnu CC Added : 08/02/96 Amended : 08/02/96 Licencing : Copyrighted freeware FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.txt - Text description FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.tar.Z - Unix version FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.zip - DOS version WWW http://www.trmphrst.demon.co.uk/docclass.html - DocClass Web page Email:docclass@trmphrst.demon.co.uk - Mail the author ------------------------------------------------------------------------ MkHelp - Generate HTML documentation from source files Pretty good beta level documentation generator. Generates fully cross-referenced class descriptions from .i files output by your compiler's preprocessor. Can extract comments from the source code and include them in the documentation (comments have to be immediately before the class, variable or method). Pretty configurable - can generate the files in any language, for instance. Has a few problems with some apparently correct syntax, and does not document typedefs, enums or global variables. Operating Systems: - PC 32-bit Windows - Solaris Compilers: - Borland C++ - Visual C++ - Cfront Added : 02/08/96 Amended : 02/08/96 Licencing : Non commercial WWW http://www.geocities.com/CapeCanaveral/1330/mkhelp.html Email:wilmot@mail.club-internet.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 19/03/97 Amended : 19/03/97 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 19/03/97 Amended : 19/03/97 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/QSun/DCE threads &content=PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. APTL provides an object interface (++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x +MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x +LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris +Pthreads (Native kernel Solaris threads) ? Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 Licencing : Copyrighted freeware FTP from ftp://alix.inria.fr/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ SNIP: A Programming Power-tool - SNIP takes in an IDL and uses it to create code according to code patterns SNIP is a programming power-tool for generating code from rules, or \"code patterns\" (AKA idioms). Sr. software engineers have often noticed patterns in their coding practices. SNIP allows those patterns to be captured and expressed in an executable template. An IDL-like input form is used to define objects. That IDL is then applied to the template to create code that a user would normally have typed in by hand. For more information, and an example, see the site that describes SNIP more fully at http://www.ultranet.com/~advsw Operating Systems: - Motif - PC 32-bit Windows - Solaris - Sparc - Microsoft Win32 based systems Compilers: - Apogee CC - Borland C++ - CRI C++ (Cray) - Dec CC - Gnu CC - Glockenspiel C++ - HP C++ - IBM Cset++ - IBM xlC - MetroWerks CodeWarrior - MPW C++ - SGI CC - SGI NCC - Sparcworks - Symantec C++ - Symantec THINK C++ - Visual C++ - WATCOM C++32 - Zortech C++ - Cfront Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial WWW http://www.ultranet.com/~advsw - Site describing SNIP in full with examples Email:advsw@ma.ultranet.com - Contact Advantage Software Technologies about SNIP ------------------------------------------------------------------------ Libraries with no known FTP site ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Algebra - Collection of C++ classes to represent and edit equations in a GUI Object classes to represent/edit algebric equations in Windows: number, literal, boolean, + and - infinite, indeterminations group, document, line, page, list, sum, negation, division,multiplication, root, raise, equal, lessThan, lessThanOrEqual etc..., equivalent, implication. Implementing: log,exp,sin,cos,tg,cotg,cos,asin,acos,atg, logic operators, etc... Operating Systems: - PC 32-bit Windows Compilers: - Borland C++ Added : 28/03/96 Amended : 03/10/96 Licencing : Non commercial WWW http://www.geocities.com/Athens/6308 Email:RuiHFAzevedo@mail.telepac.pt ------------------------------------------------------------------------ DCE++ - A C++ API for Programming Distributed Systems DCE++ is a set of ANSI C++ classes that enable the rapid prototyping of distributed programs. The goal of DCE++ is to provide a platform independent C++ API to the significant components used in distributed computing. Namely: RPC, threads, Security and Naming across the widely used distributed computing platforms such as DCE, ONC and WNT. It is expected that by encapsulating platform dependencies inherent in setting up rpcs, security etc. in DCE++ base classes, program development time can be drastically reduced. Moreover, a foundation can be provided for developing *portable* distributed program development tools. The second *evaluation* version of DCE++, version 0.4, has been released on Dec 2'93. The release includes C++ bindings for remote procedure calls over DCE and ONC. A C++ threads api for programming DCE threads. A C++ threads api for programming DCE distributed Time Service. The release is available free of charge upon signing a very liberal license agreement. The license agreement is obtainable by anonymous ftp from hal.com. It is in the directory dce++. The same directory also contains the release notes for the 0.4 version and plans for 0.5 features. To obtain the code, please send the signed license agreement to: Added : 01/01/95 Amended : 01/01/95 Licencing : Copyright (other) Author:William Leddy, Arjun Khanna Fax:512-794-8737 FTP from ftp://hal.com/dce++/ Email:arjun@hal.com Postal address:HaL Computer Systems, Austin, Texas ------------------------------------------------------------------------ GenTools - A Computational Genomic Tool Suite The University of Texas System CHPC and collaborators are addressing the problems of high performance platforms by developing GenTools, an interactive, distributed, loosely integrated, set of tools for DNA and protein sequence data analysis, phylogenetic analysis, and restriction mapping which combines different algorithm implementations, machines, and databases through a \"bio-user\" friendly set of graphical user interfaces. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:(512)471-2445 Email:sarah@chpc.utexas.edu Postal address:Sarah Barron, GenTools Project Leader, Computational Molecular Biology and Genetics Group, University of Texas System Center for High Performance Computing, Balcones Research Center, CMS 1.154, 10100 Burnet Road, Austin, TX 78758-4497 Tel:(512)471-2434 ------------------------------------------------------------------------ MenuPlus - Menu class library for Turbo C++ for DOS The library contains functions that allow the programmer to easily implement custom popup, pulldown, and buttonbar menus. The menus are designed to have the look and feel of familiar menu systems found in many popular applications. MenuPlus provides all screen, keyboard, and mouse functionalilty built in. Simply declare a menu object (menu item names, hotkeys, and handler functions) and MenuPlus does the rest. MenuPlus is designed to be simple to use, yet versatile enough to allow customized look and operations of the menus. (Includes demos illustrating use.) Registration of $15 grants royalty-free use of the library and also provides registered owner with all source code. Operating Systems: - PC DOS Compilers: - Borland Turbo C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Shareware Author:Jeffrey Schierenbeck Email:jssoft@aol.com Postal address:JS Software,517 Ingram Drive West,Eau Claire, WI 54701 ------------------------------------------------------------------------ Source code from books ~~~~~~~~~~~~~~~~~~~~~~ Bruce Eckel - Thinking in C++ eckelt03.zip contains the source code for Bruce Eckel's book \"Thinking in C++\" (Prentice-Hall 1995, ISBN: 0-13-917709-4). This is the complete set of source code files from the book, including corrections after the book was published. The package only contains ASCII text files. They were prepared and tested with a number of compilers under DOS/Windows, and are intended to represent the correct language implementation at the time of their creation, rather than a particular compiler. However, please be aware that the C++ language is still a draft standard, and some language elements are still subject to small changes. The package is distributed as copyrighted freeware (you can use the code, and redistribute the package, but you cannot distribute modified versions of the package or portions of the package). Special requirements: Compressed from the original DOS directory structure using PKZIP 2.04g. When you unzip the package, use the -d flag to create directories and maintain the directory structure. Changes: Includes errata sheets for the first printing of the book (corrected in the second printing). eckelt03.zip has replaced eckelt01.zip (distributed on CIS & AOL). Copyrighted FreeWare. Uploaded by the author, Bruce Eckel\n. Operating Systems: - PC DOS - PC Windows 3 Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Author:Bruce Eckel FTP from ftp://oak.oakland.edu/SimTel/msdos/cpluspls/eckelt03.zip Email:eckel@aol.com ------------------------------------------------------------------------ Coplien - Advanced C++ Programming Styles and Idioms Code from \"Advanced C++ Programming Styles and Idioms\" by James O. Coplien, Addison-Wesley, 1992, ISBN Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://netlib.att.com/netlib/c++/idioms ------------------------------------------------------------------------ Hansen - C++ Answers book Code from \"The C++ Answer Book\" by Tony L. Hansen , Addison-Wesley, 1990, ISBN 0-302-11497-6 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://netlib.att.com/netlib/c++/answerbook ------------------------------------------------------------------------ Smith - Object Oriented Software in C++ Source to the Book by Michael A. Smith \"Object-Oriented Software in C++\", Chapman & Hall, London. 1993. ISBN 0 412 55380 5. Added : 01/01/95 Amended : 09/02/96 Licencing : Not known FTP from ftp://unix.brighton.ac.uk/pub/mas Email:mas@unix.brighton.ac.uk ------------------------------------------------------------------------ Other places to look for details of C++ libraries ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ASSET ASSET is currently populating a library of reusable components and systems, and documents on software reuse, called the Worldwide Software Reuse Discovery library (WSRD, pronounced \"wizard\"). Included are assets in numerous languages including C++, C, and Ada. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known WWW http://source.asset.com/ Email:info@source.asset.com Email:theeke@source.asset.com Postal address:Obtaining an ASSET account or accessing the WSRD library: ASSET Attn: Account Administrator P.O. Box 3305 1350 Earl L. Core Rd. Morgantown, WV 26505 Postal address:Supplying products & advertisements: ASSET Attn: Patrick A. Theeke P.O. Box 3305 1350 Earl L. Core Rd. Morgantown, WV 26505 Tel:(304) 284-9000 Tel:(304) 284-9000 ------------------------------------------------------------------------ comp.object FAQ Added : 01/01/95 Amended : 01/01/95 FTP from ftp://rtfm.mit.edu/pub/usenet-by-group/comp.object/ Newsgroup:comp.object ------------------------------------------------------------------------ comp.windows.misc - Portable GUI-software FAQ Added : 01/01/95 Amended : 01/01/95 FTP from ftp://rtfm.mit.edu/pub/usenet-by-group/comp.windows.misc/ Newsgroup:comp.windows.misc ------------------------------------------------------------------------ ftp.th.darmstadt.de Added : 01/01/95 Amended : 01/01/95 FTP from ftp:ftp.th-darmstadt.de/pub/programming/languages/C++/c++-products/ ------------------------------------------------------------------------ numcomp-free-c.gz The index of resources for numerical computation in C or C++. Added : 01/01/95 Amended : 01/01/95 FTP from ftp://usc.edu/pub/C-numanal/numcomp-free-c.gz ------------------------------------------------------------------------ Robert Davies C++ list - Robert Davies' list of http and ftp sites relevant to C++ uses details of C++ libraries\". This file is mostly a list of http and ftp sites I have seen mentioned in the C++ newsgroups. Added : 13/11/96 Amended : 13/11/96 Licencing : Not known FTP from ftp://tahi.isor.vuw.ac.nz/pub/newmat08/cpp_site.txt FTP from ftp://nz.com/robert/cpp_site.txt ------------------------------------------------------------------------ Useful ftp sites ~~~~~~~~~~~~~~~~ Current CUG Library Catalog The CUG CD-ROM file listing offers the most comprehensive look at the programming tools and utilities available from CUG. The complete annotated listing (about 1 megabyte) is available through anonymous ftp as follows: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://cdrom.com//pub/cdrom/cdroms/cug/capsule.txt ------------------------------------------------------------------------ ftp.luth.se Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.luth.se/pub/languages/c++/ClassLibs/ ------------------------------------------------------------------------ ftp.th.darmstadt.de A major repository of C++ stuff, mostly under the directory tree starting at /pub/programming/languages/C++. Includes a product list (from which some of the information in this document was taken) in various formats in sub-directory c++-products. Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.th-darmstadt.de/pub/programming/languages/C++/ ------------------------------------------------------------------------ FTP/Mail gateways - Obtaining FTP files via email If you don't have ftp access, send email to ftpmail@decwrl.dec.com saying \"help\". You will get instructions on how to do ftp via email. European users might like to try ftpmail@grasp.insa-lyon.fr instead. Added : 01/01/95 Amended : 28/03/96 Email:ftpmail@grasp.insa-lyon.fr Email:ftpmail@decwrl.dec.com ------------------------------------------------------------------------ Netlib - research.att.com has email, ftp - ornl.gov has email, xnetlib - nac.no has email, xnetlib for Europe - unix.hensa.ac.uk is a mail server useful for Europe. - ci.cs.uow.edu.au (130.130.64.3) in Australia E.g. send email to netlib@ornl.gov to access by email. This is a mail server. Send mail with the text \"send index\" or \"send index from C++\" Added : 01/01/95 Amended : 01/01/95 Email:netlib@nac.no Email:netlib@ornl.gov Email:netlib@research.att.com ------------------------------------------------------------------------ Simtel The primary Simtel site is simtel.net, but there are many mirror sites all over the world. Added : 01/01/95 Amended : 28/03/96 FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/cplusplus/ ------------------------------------------------------------------------ Source code newsgroups ftp.uu.net (e.g. usenet/comp.sources.reviewed archives the comp.sources.reviewed newsgroup). Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.uu.net/usenet/ ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:48 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (3/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:52 GMT Organization: Trumphurst Ltd. Lines: 1233 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256164 comp.answers:25748 news.answers:101461 Archive-name: C++-faq/libraries/part3 Comp-lang-c++-archive-name: C++-faq/libraries/part3 Available C++ libraries FAQ (3/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (this file) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Libraries available via FTP (M-Z) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ MatClass - a C++ class for numerical computation Very complete. - Offers a general purpose dense, real matrix class - Has a family of decomposition classes based on LU, Cholesky, Householder QR and SVD - Has a family of OLS regression classes based on above decompositons - A family of special function classes - Random number class - Has a simplified I/O structure Documents : Very thorough tex manual, with discussion of design philosophy. Currently the manual does not cover all the features of the I/O. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Chris Birchenhall FTP from ftp://ftp.mcc.ac.uk/pub/matclass/unix FTP from ftp://ftp.mcc.ac.uk/pub/matclass/pc Email:chris.birchenhall@mailhost.mcc.ac.uk ------------------------------------------------------------------------ MATCOM - Matlab to C++ translator and matrix library MATCOM V2 translates Matlab source files (M-Files) to C++ source code. The resulting code is linked with the supplied C++ Matrix class library to create MEX files or stand alone executables. The C++ code and library can be integrated in products, royalty free, saving the need to translate the algorithm prototype. Compiled code runs significantly faster than the original interpreted source. Source code created highly resembles the original code using C++ language features. The compilation is fully automated by a smart project manager. Matrices of doubles, floats, ints and chars are supported, providing lower memory usage for many applications, especially Signal and Image Processing. Evaluation version (fully functional, 30 days limited) is available for free download from the Web page. Information packet is also available by e-mail and fax. An introductory price for MATCOM V2 is 300$ for a single user license, with discounts on quantity and for academic institutes. Prices are valid until Jan 1, 1997. Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - Linux - SunOS - Solaris - SGI Irix - Dec OSF/1 - Dec Alpha - HP UX - IBM AIX - OS/2 Compilers: - Gnu CC - Visual C++ - Watcom C++ - Borland C++ - SGI CC - Dec CC - IBM xlC - Sun CC - HP C++ - EMX - DJGPP Added : 05/02/96 Amended : 08/08/96 Licencing : Commercial Fax:1-215-9571719 Fax:1-888-MATHTOOLS WWW http://www.mathtools.com Email:info@mathtools.com Postal address:MathTools LTD, P.O.Box 855, Horsham, Pennsylvania, USA 19044-0855 ------------------------------------------------------------------------ Matrix - A C++ Matrix class A C++ Matrix class, including a matrix implementation of the backward error propagation (backprop) algorithm for training multi-layer, feed- forward artificial neural networks. A C++ interface to existing C and FORTRAN matrix libraries. LaTeX manual. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:E. Robert (Bob) Tisdale FTP from ftp://ftp.cs.ucla.edu/pub/Matrix.tar.Z Email:edwin@cs.ucla.edu ------------------------------------------------------------------------ Matthew's Galib - A C++ Genetic Algorithm Library GAlib is a C++ library that contains a set of genetic algorithm objects. With GAlib you can add genetic algorithm optimization techniques to your program using any data representation and many different genetic algorithm operators. The library includes genomes based upon binary string, array, tree, and list data structures, and you can create your own genomes by simply deriving a new class from the base genome and any data structure that you may be using already. Many scaling, selection, termination, initialization, mutation, and crossover methods are included in the library, and you can override any of the defaults with operators.of your own design. Operating Systems: - SGI Irix - IBM AIX - Dec MIPS Ultrix - Solaris - HP UX - MacOS - PC Compilers: - Cfront - DCC - Gnu CC - MetroWerks CodeWarrior - Symantec THINK C++ - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial FTP from ftp://lancet.mit.edu/pub/ga/ WWW http://lancet.mit.edu/ga/ ------------------------------------------------------------------------ MetaKit - A portable C++ class library for persistent structured data Store and retrieve structured data. Features: on-demand loading, failsafe commit/rollback, portable and streamable data files, simple API in a few C++ classes. Comes with hypertext intro, many source code examples including disk catalog and Winsock client/server, and Winhelp API reference guide. No royalties. Link as DLL or LIB, Win32/Win16/Dos libs included. The shareware version is only for Windows and MFC. Registered users can obtain all library versions, including debug versions, and will be notified of new revisions and updates. Full web/email/fax support. MetaKit is freely distributable as shareware. It must be registered after the 30-day trial period: US$ 25 for personal/non-profit use. For all other purposes the source code version must be purchased (Windows/MFC $90, all others: Universal $165). Operating Systems: - PC DOS - PC Windows - Unix - Mac - OpenVMS Compilers: - Visual C++ - Symantec C++ - Watcom C++ - Borland C++ - Gnu CC - MetroWerks CodeWarrior - Dec CC Added : 22/03/96 Amended : 14/11/96 Licencing : Shareware Author:Jean-Claude Wippler Fax:+31-30-635-2337 WWW http://purl.net/meta4/metakit.zip - Metakit home page WWW http://purl.net/meta4/metakit.zip WWW http://purl.net/meta4/metakit - MetaKit home page Email:jcw@meta4.nl ------------------------------------------------------------------------ MIME++ - A class library for creating and parsing messages in MIME format Features - Intuitive object-oriented architecture. - Designed from the beginning to permit user customization or extension through inheritance (subclassing of library classes) and polymorphism. - Class names are taken directly from the BNF grammars given in RFC-822 and RFC-1521. - Supports all MIME types and subtypes documented in RFC-1521, including multipart, message, and application types. - Supports quoted-printable and base64 content transfer encodings. Other uuencode, binhex, and others will be supported soon. - Provides high-level, wrapper classes BasicMessage, MultipartMessage, and MessageWithAttachments that are easy to use. These wrapper classes also serve as examples showing how to use the basic library classes. MIME++ should compile with just about any C++ compiler. The system-dependent features, which are few, are oriented toward UNIX systems. Operating Systems: - Linux - Dec Unix - Silicon Graphics - PC DOS - PC Windows - Sun Compilers: - Gnu CC - SGI CC - Borland C++ - Sun CC - MetroWerks CodeWarrior Added : 25/11/96 Amended : 25/11/96 Licencing : Non commercial Author:Doug Sauder WWW http://www.fwb.gulf.net/~dwsauder/mimepp.html - MIME++ Web Page Email:dwsauder@tasc.com - author's alternate email address Email:dwsauder@fwb.gulf.net - author's preferred email address ------------------------------------------------------------------------ molbio++ - A C++ library for molecular biosequence analysis Major features include: - classes and services for reading and writing sequence data in the following formats: - Genbank Flatfile - EMBL / SwissProt - GCG / Wisconsin - Fasta / Pearson - PIR - NCBI Retrieve Server (read-only) - limited parsing of fields and features in biosequence files - storing amino acid or nucleic acid sequences - iterating over a biosequence - calculating and storing counts or frequencies of amino acids or nucleotides - device-independent graphics, via GCG's FIGURE program - translating nucleotide sequences into proteins using the universal genetic code or modifications thereof. - parsing BLAST output - calculating pI and molecular weight of proteins - amino acid hydropathy values of Kyte & Doolittle Alex Lin\nhas reported both of the ftp sites unavailable. Further information welcome. Added : 01/01/95 Amended : 08/08/96 Licencing : Not known Author:Keith Robison FTP from ftp://golgi.harvard.edu/pub/CONTRIBUTIONS/molbio++ FTP from ftp://ftp.ebi.ac.edu/ - Alternative site found by Herve Recipon ------------------------------------------------------------------------ Motif++ - A wrapper-library, that encapsulates Motif widgets in C++ classes All resources of these Widgets can now be set through member-functions, while objects can be used in callback-functions. The July 93 release offers: - Easy configuration (even for non-imake-gurus) - Full support for X11R4 as well as X11R5 - Full support for Motif 1.1 and Motif 1.2 (including Drag and Drop) - Support for Xbae widgetset - Support for the xpm library - Percentage widgets - Generic Widget - Support for WCL Table Widget - A library for easy manipulation of Visuals - A library that reads PBMPLUS files, as well as providing an extension to 3D of the format. - Lots of demos and testfiles (even somewhat useful programs) - An article I wrote on the usage of Motif, X and C++, previously posted on Usenet. - All filenames smaller than 14 characters Operating Systems: - X Windows - Motif Compilers: - Cfront Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Ronald van Loon FTP from ftp://src.doc.ic.ac.uk/packages/motif++/motif++.28.jul.93.tar.gz FTP from ftp://ftp.wg.omron.co.jp/pub/X11/misc/MOTIF.AND.WIDGETS/Motif++.tar.Z FTP from ftp://nrcnet0.nrc.ca/pub/motif++/motif++.28.jul.93.tar.gz FTP from ftp://decuac.dec.com//pub/X11/motif++.28.jul.93.tar.gz Email:motif++-request@motif.hacktic.nl Email:motif++@motif.hacktic.nl Email:rvloon@motif.hacktic.nl Tel:+31 33 758 293 (if desparate !) ------------------------------------------------------------------------ MTL110JE.ZIP - Multithreading class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ FTP from ftp://garbo.uwasa.fi/pc/c-lang/ ------------------------------------------------------------------------ Newmat - A very thorough matrix class This library supports classes Matrix, UpperTriangularMatrix, LowerTriangularMatrix, DiagonalMatrix, SymmetricMatrix, BandMatrix, UpperBandMatrix, LowerBandMatrix, SymmetricBandMatrix, RowVector, ColumnVector. Only one element type is supported. It includes the operations *, +, -, concatenation, elementwise product, inverse, transpose, conversion between types, submatrix, determinant, Cholesky decomposition, QR triangularisation, singular value decomposition, symmetric eigenvalue analysis, fast Fourier transform, sort, print, an interface to \"Numerical Recipes in C\" programs, and an emulation of exceptions. Compilers: - Borland C++ - Watcom C++ - Visual C++ - Gnu CC - Cfront Added : 01/01/95 Amended : 30/07/96 Licencing : Copyrighted freeware Author:Robert Davies FTP from ftp://oak.oakland.edu/pub/simtelnet/msdos/cpluspls/newmat08.zip FTP from ftp://nz.com/robert/newmat08.tar.gz FTP from ftp://nz.com/robert/newmat08.zip WWW http://nz.com/webnz/robert/ Email:robert.davies@vuw.ac.nz ------------------------------------------------------------------------ NIHCL - (National Institute of Health's C++ Library) NIHCL is essentially a mapping of part of Smalltalk's library into C++. It lies somewhere between OATH and COOL. It is a little better supported and there is a textbook by the author, Keith Gorlen, that is fairly good documentation. However, the Smalltalk hierarchy is not completely consistent (IMO) with the C++ strong typing nature. It is weakly supported. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://alw.nih.gov/pub/nihcl.tar.Z ------------------------------------------------------------------------ nlmdl - A library for estimation of nonlinear models Nonlinear maximisation, estimation, includes a real matrix class Operating Systems: - Unix - PC DOS Compilers: - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:A. Ronald Gallant FTP from ftp://ccvr1.cc.ncsu.edu/pub/arg/nlmdl FTP from ftp://ftp.uu.net/usenet/comp.sources.misc/volume16/nlmdl Email:arg@ccvr1.cc.ncsu.edu ------------------------------------------------------------------------ O-Matrix - RAD environment for scientific and engineering applications Harmonic Software has released O-Matrix 3.1 for Windows, a RAD environment (Rapid Application Development), for scientific and engineering applications. The new version of O-Matrix includes extensive capabilities for developing visually-oriented, easy-to-use technical applications. This enables the development of user-friendly applications significantly faster than traditional visually-oriented compilers and with performance that is dramatically faster than typical interpreted matrix languages. In addition O-Matrix version 3.1 includes an improved user interface for more productive application development and simplified interactive usage. Many functions have been added including routines for Kalman filtering, wavelet analysis and advanced statistics. Operating Systems: - PC Windows Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware Author:Harmonic Software Fax:1-206-367-1067 WWW http://world.std.com/~harmonic Email:harmonic@world.std.com Postal address:12223 Dayton Avenue North, Seattle, WA 98133 Tel:1-800-895-4546 ------------------------------------------------------------------------ OATH - Object oriented Abstract Type Hierarchy OATH was designed as an experiment in increasing object-oriented reuse. It has a fairly high learning curve, but potentially higher gains if you are looking for a more flexible and robust abstraction. It is completely unsupported. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://csc.ti.com/pub/oath.tar.Z ------------------------------------------------------------------------ Objtran and Objdce Objtran is a set of C++ class libraries that provide a higher-level abstraction for programmers developing applications using OSF's DCE and Transarc's Encina. Objtran actually consists of two separate libraries -- Objdce and Objtran. Objdce makes it easier to write DCE applications by abstracting some of the more complex aspects of DCE. A class is included that can manage an RPC server, interacting with the DCE Name Service and Security Service as desired. Another class manages a client's binding to a server and encapsulates Name Service lookups. Other classes allow the programmer to use threads and various forms of mutual-exclusion locks, report errors consistently, utilize Access Control Lists, handle timestamps from the DCE Time Service, and perform UUID manipulation. Objtran is built on top of Objdce, and adds support for the Encina distributed transaction service. It is intended to be used with C++ programs instead of the \"Transactional C\" macro package. It fully encapsulates the Encina TRAN and TRPC facilities with a few easy-to-use classes. It also provides an efficient recovery service for proper control of distributed transactions, and has support for the TM/XA service, allowing interoperability with XA-compliant databases. Support for the Encina Monitor is being implemented so programs may, with very few code changes, use either the smaller and more efficient bare Objtran environment or the more sophisticated Monitor. This software is Copyright 1993-1994 by Citibank, N.A. Permission is granted to use, copy, modify and distribute the software and its documentation without fee. The software is distributed with no warranty of any kind. Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware FTP from ftp://wilma.cs.brown.edu/pub/Objtran.tar.Z Email:objtran-comment@fig.citib.com ------------------------------------------------------------------------ OBST - Persistent object management system The persistent object management system OBST was developed by Forschungszentrum Informatik (FZI) as a contribution to the STONE project. Sites interested in getting information about new OBST developments are welcome to register in their mailing list by sending a mail with subject \"obst-mailing-list\" to stone@fzi.de. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:++49-721-9654-609 FTP from ftp://gate.fzi.de/pub/OBST/ Email:stone@fzi.de Postal address:Forschungszentrum Informatik FZI, STONE Projekt, Haid-und-Neu-Strasse 10-14, D-7500 Karlsruhe 1, Germany Tel:++49-721-9654-601 ------------------------------------------------------------------------ Octave - Matlab like interactive system for numerical computations Includes C++ classes for matrix manipulation, numerical integration, and the solution of systems of nonlinear equations, ODEs and DAEs. Distributed under the GPL. Operating Systems: - Sparc - Dec Ultrix - Linux - Unix - IBM AIX Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:John W. Eaton FTP from ftp://ftp.che.wisc.edu/pub/octave/octave-M.N.tar.Z Email:jwe@che.utexas.edu ------------------------------------------------------------------------ Ode - Object database v2.0 Ode is an object-oriented database based on the C++ database model. The primary interface to Ode is the database programming language O++ which is based on C++. Ode is now available to Universities. The current version of Ode runs on Sun (Sparc) workstations and users must have C++ release 2.0 or a later release. Operating Systems: - Sparc Compilers: - Sun CC Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://research.att.com./dist/ode2.0/2.0.oppbin.tar.Z Email:nhg@research.att.com Postal address:Narain Gehani, AT&T Bell Labs 3D-414, 600 Mountain Ave, Murray Hill, NJ 07974 ------------------------------------------------------------------------ ooMPEG - Berkeley MPEG decoder A reentrant, multi-threaded version of the Berkeley MPEG decoder Operating Systems: - Sun - Sparc - Solaris - HP UX - SGI Irix - SunOS Added : 05/02/96 Amended : 05/02/96 Licencing : Non commercial FTP from ftp://ftp.cs.brown.edu/pub/ooMPEG.tar.Z WWW http://www.cs.brown.edu/software/ooMPEG/ Email:lsh@cs.brown.edu ------------------------------------------------------------------------ Options - command-line option parsing library Options is a full-featured C++ class library for parsing options on the command-line. It uses the getopt() style of option parsing but provides a lot more features and has configurable behavior.es. Operating Systems: - OS/2 - PC DOS - PC Windows - Unix Compilers: - Borland C++ - Cfront - Gnu CC Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware WWW http://www.enteract.com/~bradapp/ftp/ - Options option parser ------------------------------------------------------------------------ OSE - C++ Library and Build Environment OSE is a development environment for C/C++ programmers. The major components of OSE are a generic C++ class library, documentation tools and build environment. The C++ class library includes support for error handling, error message logging, error recovery, program debugging, memory management, resource management, object containment, strings and symbols, pattern matching, operating system interfacing, simulation and event driven systems. OSE can be used with all major C++ compilers and UNIX platforms as well as Windows NT and Windows 95. OSE has been integrated for use with the ObjectStore OODBMS from Object Design. OSE was a winner at CODA '94, the ComputerWorld Object Developer Awards, held in conjunc! tion with ObjectWorld in Sydney, Australia. The category in which OSE was successful was \"Best implementation of a reuseable development environment for company deployment\". Operating Systems: - PC 32-bit Windows - Unix Compilers: - Cfront - Dec CC - Gnu CC - HP C++ - IBM xlC - SGI CC - SGI NCC - Sparcworks - Sun CC - Visual C++ - KAI CenterLine Novell Lucid ObjectStore - Borland C++ Added : 22/05/96 Amended : 22/05/96 Licencing : Copyright (other) Author: Graham Dumpleton FTP from ftp://ftp.dscpl.com.au/pub/ose WWW http://www.dscpl.com.au Email:info@dscpl.com.au ------------------------------------------------------------------------ P++ - Parallel Programming Classes for C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Dan Quinlan FTP from ftp://ftp.c3.lanl.gov/pub/dquinlan/ WWW http://www.c3.lanl.gov/~dquinlan/A++P++.html WWW http://www.c3.lanl.gov/~dquinlan/home.html Email:dquinlan@lanl.gov Email:dquinlan@c3serve.c3.lanl.gov ------------------------------------------------------------------------ paintlib - Image file decoding Paintlib is a C++ class library for image file decoding and manipulation. It currently supports the TGA, TIFF, JPEG/JFIF, Windows BMP, and Mac PICT formats. Data source and destination formats can be tailored as nessesary. Additionally, format-independent but fast bitmap manipulation classes are available. Although there are a few Windows-specific functions, the library is portable. Makefiles are included for Microsoft Visual C++ (Win32) and GNU C++ (DOS and SunOS). Prerequisite is a C++-compiler with standard C libraries and support for exception handling. The library also requires support for 32-bit memory addressing. Operating Systems: - PC 32-bit Windows - Solaris Compilers: - Gnu CC - Visual C++ Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware WWW http://www.cs.tu-berlin.de/~uzadow/paintlib - Paintlib web site. ------------------------------------------------------------------------ ParLib++ - Parallel Programming Classes for C++: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:David Greco Email:David.Greco@crs4.it ------------------------------------------------------------------------ PARODY - C++ DATABASE LIBRARY Al Stevens has written a book on the subject called `Database programming in C++' or something. An article on the subject was printed in Doctor Dobbs Journal some time ago. The nice thing is that Stevens also wrote a C++ library adding persistence to C++, and the source is available. The library is called PARODY and compiles under most DOS-based C++ compilers. A slight rewrite of the GUI- routines has to be done to make it compile under GNU C. Operating Systems: - PC DOS - Unix Compilers: - Gnu CC - Borland C++ - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.mv.com/pub/ddj/1992/1992.12/parody.zip ------------------------------------------------------------------------ pC++ - A preprocessor for C++ that implements a data parallel extension Operating Systems: - CM5 - Paragon - KSR-1 - Sequent - BBNTC2000 - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Email:gannon@cs.indiana.edu ------------------------------------------------------------------------ PDBlib - Library for modeling a macromolecular structure PDBlib is a class library written in C++ for modeling a macromolecular structure at the level of detail (excluding symmetry information) found in a Protein Data Back (PDB) file. A class is supplied to read a PDB file into a PDBlib representation. This class is independent of the actual representation and other forms of input, for example from a relational database like SESAM, are possible. The library is made extensible by a close coupling between intrinsic and external classes. By writing only to the external classes you will remain compliant with future versions of the library. You don't get source code. This is a temporary situation while we attempt to centralize bug fixes and additions to the library. If you find this situation unworkable source code is available by signing a copyright agreement which is available with the distribution. The following files are available : - PDBLib.1.0.SGI.tar.Z Compressed tar file of PDB object classes library and header files for SGI. AT&T C++ release 2.1 & 3.0 compatible. - PDBLib.1.0.Sun.tar.Z Compressed tar file of PDB object classes library and header files for Sun Sparc station. AT&T C++ release 2.1 & 3.0 compatible. - PDBLib.1.0.Cvx.tar.Z Compressed tar file of PDB object classes library and header files for Convex. AT&T C++ release 2.1 compatible. - PDBLib.1.0.Alpha.tar.Z Compressed tar file of PDB object classes library and header files for Dec 3000 (Alpha AXP) with OSF1. Dec C++ (cxx) release 1.2 compatible. Operating Systems: - SGI Irix - Sparc - Convex - Dec Alpha Compilers: - Cfront - Dec CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyright (other) Author:Phil Bourne (general comments, criticisms, questions about future directions) Author:Ilya Shindyalov (PDBview) Author:Weider Chang (PDBlib) FTP from ftp://cuhhca.hhmi.columbia.edu/pub/programs/PDB/PDBlib/ Email:system@cuhhca.hhmi.columbia.edu Email:shindyal@cuhhca.hhmi.columbia.edu Email:weider@cuhhca.hhmi.columbia.edu ------------------------------------------------------------------------ Presto - C++ routines for lightweight threads on multiprocessors. C++ routines for fine-grained parallel programming (lightweight threads) on multiprocessors. Tuned for the Sequent machines, but highly adaptable and customizable. Systems : Unix-like OS on (moderate) multiprocessor machines Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Brian N. Bershad, Edward D. Lazowska, Henry M. Levy FTP from ftp://cs.washington.edu/pub/presto1.0.tar.Z ------------------------------------------------------------------------ Radix-2 - Fast Fourier Transform Radix-2 DFT of a real or complex sequence, or sin/cos/complex Fourier integral of an evenly tabulated function. The input can be either real or complex with/without zero padding, the full complex transform or only real/im/abs_value part of it can be obtained. Test drivers and test run outputs are included, too. Commented. Needs LinAlg.shar, v3.2 Operating Systems: - Unix - Mac Compilers: - Gnu CC - MetroWerks CodeWarrior Added : 01/01/95 Amended : 22/05/96 Licencing : Not known Author:Oleg Kiselyov Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/fft.tar.gz FTP from ftp://netlib.att.com/netlib/c++/fft.shar.Z WWW http:cpplibs2.html#LinAlg.shar Email:netlib@research.att.com Email:oleg@unt.edu Email:oleg@ponder.csci.unt.edu Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Range - C++ class for range arithmetic. Associated with article in TOMS, Dec 1992 title \"Precise computation using range arithmetic, via C++\". Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Oliver Aberth and Mark J. Schaefer FTP from ftp://math.tamu.edu/pub/range/range.tar.Z ------------------------------------------------------------------------ RTTI implementation Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Arindam Banerji FTP from ftp://invaders.dcrl.nd.edu/pub/software/rtti.tar.Z Email:axb@cse.nd.edu Postal address:384 FitzPatrick Hall, Dept. of Computer Science & Engg., University of Notre Dame, Notre Dame, IN 46556 Tel:(219)-631-5772 Tel:(219)-631-5273 ------------------------------------------------------------------------ RTTI library Till RTTI becomes a part of regular compilers these RTTI libraries provide an excellent tool for the same purpose. The library is claimed to be portable. No licence restrictions. Added : 01/01/95 Amended : 01/01/95 Licencing : Public Domain Author:Arindam Banerji Fax:(219)-631-9260 FTP from ftp://invaders.dcrl.nd.edu/pub/software/rtti.tar.Z Email:axb@cse.nd.edu? Email:axb@defender.dcrl.nd.edu Tel:(219)-631-5273 ------------------------------------------------------------------------ SA - Library for simulated annealing Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/sa.zoo Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ Sdeint A Runge-Kutta like class for integrating systems of Stochastic Differential Equations. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/sdeint.tar.z Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ SESAME - Neural net software ? Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:C. Tietz FTP from ftp://ftp.gmd.de//gmd/as/sesame ------------------------------------------------------------------------ simC - C/C++ function library for discrete simulation SimC is a function library for C/C++, providing support facilities for discrete and combined discrete-continuous simulation including set operations and data collection. Operating Systems: - PC Added : 19/03/96 Amended : 19/03/96 Licencing : Shareware Author:Toh Choon Swee FTP from ftp://garbo.uwasa.fi/pc/c-lang/simc100.zip Email:tohcs@pobox.org.sg Postal address:Toh Choon Swee, Serangoon Garden, P.O. Box 487, Singapore 915533 ------------------------------------------------------------------------ SIMEX - Helps develop discrete-event simulation models Provides classes that help a user develop discrete-event simulation models, with an emphasis on epidemiology and biology. Classes for random number generation, event and process management, user interface (commandline arguments, TTY, or Tcl/TK), aggregate statistics, basic data structures (list, strings, weighted ordered sets). Many examples. Operating Systems: - SunOS Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Fax:(612) 625-7166 FTP from ftp://ftp.nmsr.labmed.umn.edu WWW http://www.nmsr.labmed.umn.edu Email:jan@simvax.labmed.umn.edu Email:michael@simvax.labmed.umn.edu Postal address:Box 511 UMHC, Div of Health Computer Sciences, U Minn, MPLS, MN 55455 Tel:(612) 625-3241 (Jan Marie Lundgren) ------------------------------------------------------------------------ Simpack - Tools for writing simulations with a EECS bias Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Paul A. Fishwick FTP from ftp://bikini.cis.ufl.edu/cis/tech-reports/tr92/tr92-022.ps.Z FTP from ftp://bikini.cis.ufl.edu/pub/simdigest/tools/simpack/ Email:fishwick@cis.ufl.edu ------------------------------------------------------------------------ SMURPH - A C++ library which could be useful for building a network simulator It comes with extensive documentation and examples. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://menaik.cs.ualberta.ca//pub/smurph/ ------------------------------------------------------------------------ SOCKET++ - C++ iostream like library for sockets and pipes Filename is socket++-XX.tar.gz (XX - version no). ameasures@cix.compulink.co.uk (Alastair Measures) reports :- An archie search (Imperial archie server) yielded the following: - ftp.informatik.fh-wiesbaden.de/pub/UNIX/comm/inet/socket++-1.10.tar.gz - rs104.hrz.th-darmstadt.de/pub/programming/languages/C++/class-libraries/networking/socket++-1.10.tar.gz - irz301.inf.tu-dresden.de/.4.1/vol4/unix/socket++-1.6.tar.gz - ftp.cso.uiuc.edu/pub/lang/C++/class-libraries/networking/socket++-1.10.tar.gz Have excluded the RPM based files from this list. In the actual event I found the latest edition seemed to be 1.11 which didn't seem too keen to clean compile on this 'ere RedHat4.0 Linux.... Having installed an RPM I found the documentation a bit faulty ... so back to the C API Added : 01/01/95 Amended : 19/03/97 Licencing : Not known FTP from ftp://ftp.virginia.edu/pub/ ------------------------------------------------------------------------ SPLASH - Small Perl-like List And String Handling class library SPLASH is a c++ class library that implements many of the Perl constructs and data types, including extensive regex regular expression pattern matching. For those not familiar with Perl, it is an excellent scripting language by Larry Wall and is available for most platforms. This Class library provides List, String, Regular Expression, and text manipulation handling capabilities based on those provided in Perl. File names are splashxxx.tar.Z or splashxxx.zip where xxx is the version number, currently 190 (for version 1.90). Also look for updates in the same directory. Operating Systems: - Unix - PC DOS Added : 01/01/95 Amended : 19/03/97 Licencing : Public Domain Author:Jim Morris FTP from ftp://ftp.wolfman.com/users/morris/public/splash/splash190.tar.gz - Unix version FTP from ftp://ftp.wolfman.com/users/morris/public/splash/update191.zip - DOS update patch FTP from ftp://ftp.wolfman.com/users/morris/public/splash/update191.tar.gz - Unix update patch FTP from ftp://ftp.wolfman.com/users/morris/public/splash/splash190.zip - DOS version WWW http://www.wolfman.com/splash.html - Article on SPLASH Email:splash@wolfman.com ------------------------------------------------------------------------ td.lib - C/C++ Programmers time, date, and cal lib (adtd) td.lib v2 is a small time and date library for C/C++ programmers. It contains practical time and date functions that overcome the limitations of the ANSI standard functions that ship with Borland, and Microsoft C++ compilers. Unlike the standard functions, td.lib allows the programmer to perform a variety of calculations using dates and times from Jan. 1, 1 A.D. to Dec. 31, 32766 and the ability to format and print the output of such calculations using ANSI format specifiers. Designed with the beginning programmer in mind, td.lib is easy to use and simplifies the process of coding time/date routines. The library is fully ANSI compliant and can be used with any standard C/C++ compiler. The source is freely available (mail the author). Special requirements: IBM compatible 386 PC. Operating Systems: - PC DOS Added : 19/03/97 Amended : 27/03/97 Licencing : Copyrighted freeware Author:Brady Tippit FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/c/adtdv2.zip WWW http://www.simtel.net/pub/simtelnet/msdos/c/adtdv2.zip Email:bt0202@broncho.ucok.edu ------------------------------------------------------------------------ Texas Persistant Store Texas is a free persistent store that can be used with standard C++ compilers, and works efficiently with very little modification to most C++ programs. It runs on several varieties of UNIX and should be very easy to port to most modern operating systems, such as OS/2, Windows NT, Mach, Windows 4.0, etc. (If things we hear are correct, Linux will provide the necessary virtual memory features soon, too, and Texas will be ported about fifteen minutes later. :-) Texas uses \"pointer swizzling at page fault time\", an address translation techique that converts pointers from an abstract format to actual virtual memory addresses when pages are first touched and brought into memory. (A similar technique, invented independently, is used in the market-leading persistent store/OODB, ObjectStore from Object Design Inc.) This allows Texas to be highly portable, avoiding any assumptions about where a page of data will be an a process' virtual memory address space; it can also support very large addresses spaces efficiently on stock 32-bit hardware. (It could also be used to efficiently provide shared address spaces across networked heterogenous machines with different hardware address sizes, e.g., across 32- and 64-bit machines.) Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Paul R. Wilson and Sheetal V. Kakkad FTP from ftp://ftp.cs.utexas.edu/pub/garbage/texaspstore.ps FTP from ftp://ftp.cs.utexas.edu/pub/garbage/swizz.ps FTP from ftp://ftp.cs.utexas.edu/pub/garbage/texas Email:oops@cs.utexas.edu Postal address:Object-Oriented Programming Systems research group, Computer Sciences Dept., University of Texas, Austin, Texas ------------------------------------------------------------------------ TOLKIEN - TOoLKIt for gENetics based applications The tool contains objects for both GA and classifier system applications. It's in some kind of alpha-status. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Email:tang028@cs.cuhk.hk ------------------------------------------------------------------------ TSR100JE.ZIP - TSR class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://garbo.uwasa.fi/pc/c-lang/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ Types 1.0 Types is a Shareware library used to support the creation of reusable software components in C++. Full source code and documentation and examples are included. Types provides:Garbage Collector,recursive data estructures,encode and decode of polymorfic objects,encode and decoding to and from files or memory using external or local data representation, exceptions,... Types also include some classes implemented using types a double linked list, stack, btree, storage class, string and others. You can use and XDR representation for encode and decode objects this feature enable your data to be ported to other plataforms. Operating Systems: - PC Compilers: - Borland C++ 4.0 Added : 01/01/95 Amended : 01/01/95 Licencing : Shareware FTP from ftp://oak.oakland.edu/pub/simtelnet/msdos/cpluspls/typesc10.zip Email:malpica@mailer.main.conacyt.mx ------------------------------------------------------------------------ Unibase Framework - toolkit designed to simplify network programming The UniBase Framework is a platform-independent toolkit designed to simplify network programming. You use standard iostream-derived communication streams with standard io operators, instead of messy connect() and listen() calls. You can leverage on ALL the code you already have using standard fstreams and iostreams with little or no modification and make your program NETWORKED today! Unix versions due soon. Free for any purpose, with little requirements (see details at the downloading home page listed below). Operating Systems: - PC Windows Compilers: - Visual C++ Added : 05/02/96 Amended : 05/02/96 Licencing : Copyrighted freeware Author:John Chia-chin Wang WWW http://bbs.csie.ntu.edu.tw/~jcwang/unibase/index.cgi Email:jcwang@csie.ntu.edu.tw ------------------------------------------------------------------------ Unidraw - A graphical editor building library Unidraw is a graphical editor building library based on top of InterViews. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://interviews.stanford.edu/ ------------------------------------------------------------------------ valarray\nAttempts at providing the functionality described in Chapter 26 of the draft C++ standard. None of the releases stick perfectly to the specifications of the proposed standard. Version 2.0 is a very deliberate step away from the draft as released in April 1995 for public comments in the USA: it is used as a proof of concept to support a revision of the original specs. Some characteristics: - heavy usage of templates and their automatic instantiation; - avoidance of temporary arrays in array expressions; - production of fast compact loops, but some overhead before entering those loops. Operating Systems: - Sun - Cray - PC Compilers: - Borland C++ 4.5 - Sun CC 4.x - Sun CC 3.x - CRI C++ (Cray) - IBM xlC - SGI NCC - Apogee CC Added : 01/01/95 Amended : 22/05/96 Licencing : Non commercial Author:David Vandevoorde FTP from ftp://ftp.cs.rpi.edu/pub/vandevod/Valarray Email:vandevod@cs.rpi.edu Postal address:Department of Computer Science, Rensselaer Polytechnic Institute, Troy, NY12180, USA ------------------------------------------------------------------------ wxWindows - C++ class library for building Motif, Open Look, Windows 3.1 and NT applications C++ class library for building Motif, Open Look, Windows 3.1 and NT applications from the same source code. One simple API is provided for all platforms. wxWindows supports objects such as frames, subwindows, buttons, list boxes, icons, and bitmaps, and supports drawing into canvases, PostScript files, Windows printers, metafiles and bitmaps using the same drawing primitives. wxWindows provides a hypertext help facility, and a utility for maintaining documentation in printed and three hypertext formats. It also provides an interprocess communication API based on DDE, that works under both Windows 3.1 and UNIX. Documentation is available in PostScript, RTF, Windows Help, wxHelp and HTML formats. Julian Smart, Artificial Intelligence Applications Institute, University of Edinburgh, 80 South Bridge, Edinburgh, Scotland, EH1 1HN, TEL: 031 650 2746 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.aiai.ed.ac.uk/pub/packages/wxwin Email:J.Smart@ed.ac.uk Postal address:Julian Smart, Artificial Intelligence Applications Institute, University of Edinburgh, 80 South Bridge, Edinburgh, Scotland, EH1 1HN Tel:031 650 2746 ------------------------------------------------------------------------ XMS200JE.ZIP - XMS array class library Wrapper classes to access XMS, UMBs and the HMA, as well as a templated XMS array class. Test suites and timing programs provided for each class. Source included. Free. DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://garbo.uwasa.fi/pc/c-lang/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ XRLCAD - CXrL CAD toolset This package contains a C++ class library to manipulate Structure (as in Calma/CIF) hierarchies. There is also loaders for CIF and Calma, as well as output drivers for these formats. A bunch of demo programs are included which I wrote when I was testing the library, and these programs turned out be quite useful tools. The library is still in its infancy, but it's reasonably solid; in a few months I'll take another look at it and probably overhaul it. Operating Systems: - sparc-sunos-4.1.3 - sparc-sunos-5 - rs6000-aix-3.2 - decstation-ultrix4.2 - hppa1.1-hpux9.05 Compilers: - Sun CC - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Author:Mumit Khan Fax:+1 608 265 3811 WWW http://www.xraylith.wisc.edu/~khan/software/xrlcad/xrlcad.html Email:khan@xraylith.wisc.edu Postal address:Mumit Khan, Research Staff, Center for X-ray Lithography, University of Wisconsin-Madison Tel:+1 608 265 6075 ------------------------------------------------------------------------ YACL - Yet Another Class Library YACL is a freely available C++ class library that includes GUI classes based on the Model-View-Controller paradigm. The class protocols are designed in a platform independent manner, and are implemented under Motif 1.2 as well as under Microsoft Windows and OS/2. This makes it possible to maintain a single code base for an application that runs on all three platforms. YACL also includes a suite of container and data storage classes for general-purpose programming. Operating Systems: - Motif - PC Windows 3 - OS/2 - X Windows Added : 01/01/95 Amended : 05/02/96 Licencing : Not known Fax:(803) 777-3767 FTP from ftp://ftp.cs.sc.edu/pub/yacl WWW http://www.cs.sc.edu/~sridhar/yacl.html Email:sridhar@usceast.cs.sc.edu Postal address:M. A. Sridhar, Department of Computer Science, University of South Carolina, Columbia, SC 29208, USA Tel:(803) 777-2427 ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute\n"}, {"score": 103.3382, "uuid": "a3de54ce-9fb7-5988-b6bd-296ad1b626ef", "index": "cw12", "trec_id": "clueweb12-0408wb-62-13941", "target_hostname": "www.csci.csusb.edu", "target_uri": "http://www.csci.csusb.edu/dick/doc/C++.libraries.FAQ.txt", "page_rank": 1.1813476e-09, "spam_rank": 70, "title": "From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!howland.e", "snippet": "Ports <em>to</em> other <em>platforms</em> <em>in</em> progress. This <em>is</em> more <em>than</em> just a wrapper for the WinSockets calls. It provides higher-level functions that make reading&#x2F;writing <em>to</em> sockets very easy.", "explanation": null, "document": "is one of http, ftp, mailto, news, author, postal, tel, fax or bbs -\nis a single line of text. Separate parts of a postal address with commas. -\nis optional text describing the reference Examples: - http://www.ashmount.com/trumphurst/cpplibs1;Available C++ Libraries - ftp://ftp.ashmount.com/trumphurst/docclass/docclass.zip;DocClass utility - mailto:cpplibs@trmphrst.demon.co.uk;Mail a submission to the FAQ - news:comp.lang.c++ - author:Nikki Locke - fax:1-800-456-789;Toll-free enquiries Please mail comments, criticisms, additions and amendments to me at cpplibs@trmphrst.demon.co.uk. NOTE TO VENDORS This FAQ contains details of both free and commercial libraries. Vendors who have sent me details of their libraries for inclusion in the FAQ have been pleasantly surprised by the level of interest generated. Please remember, I only allow 2 or 3 paragraphs describing the product, and no advertising hype ! Added : 01/01/95 Amended : 22/05/96 WWW http://www.trmphrst.demon.co.uk/cppsub.html - A Web form to add your submission to the list Email:cpplibs@trmphrst.demon.co.uk - Mail a submission to the list ------------------------------------------------------------------------ Changes since the last update ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Last update was on Jul 31 1996 CGI++ added on Mar 19 1997 (part2) CNCL updated on Aug 8 1996 (part2) AvlTree added on Mar 19 1997 (part2) CmdLine added on Mar 19 1997 (part2) C++SIM 1.5.2 updated on Mar 19 1997 (part2) CDBFile added on Mar 19 1997 (part2) CSLIB added on Mar 19 1997 (part2) CSock C++ Socketing Library added on Nov 13 1996 (part2) Grayscale Image Processing updated on Mar 19 1997 (part2) Callbacks added on Oct 3 1996 (part2) Doctor Matrix added on Mar 19 1997 (part2) BRL10 added on Nov 13 1996 (part2) ADAPTIVE Communication Environment (ACE) updated on Mar 19 1997 (part2) SPLASH updated on Mar 19 1997 (part3) paintlib added on Mar 19 1997 (part3) MIME++ added on Nov 25 1996 (part3) Options added on Mar 19 1997 (part3) molbio++ updated on Aug 8 1996 (part3) td.lib added on Mar 19 1997 (part3) O-Matrix added on Mar 19 1997 (part3) SOCKET++ updated on Mar 19 1997 (part3) MetaKit updated on Nov 14 1996 (part3) MATCOM updated on Aug 8 1996 (part3) PTL - Portable Threads Library added on Nov 13 1996 (part4) ClassAction added on Aug 7 1996 (part4) C++ component search engine added on Nov 13 1996 (part4) SNIP: A Programming Power-tool added on Mar 19 1997 (part4) MkHelp added on Aug 2 1996 (part4) MenuPlus added on Nov 13 1996 (part4) Algebra updated on Oct 3 1996 (part4) Robert Davies C++ list added on Nov 13 1996 (part4) IKaID added on Mar 19 1997 (part5) Allegris Workshop added on Nov 13 1996 (part5) C++/Views (Allegris Workshop) updated on Nov 13 1996 (part5) MainWin updated on Mar 19 1997 (part5) MFC Toolkit 2.0 added on Mar 19 1997 (part5) Forward Error Correction Library added on Sep 9 1996 (part5) Thames Calendar Suite added on Nov 13 1996 (part6) Rhine collection added on Nov 13 1996 (part6) ObjectViews updated on Mar 19 1997 (part6) ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:44 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (6/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:27 GMT Organization: Trumphurst Ltd. Lines: 920 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256158 comp.answers:25744 news.answers:101457 Archive-name: C++-faq/libraries/part6 Comp-lang-c++-archive-name: C++-faq/libraries/part6 Available C++ libraries FAQ (6/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (this file) Other commercial sources of C++ code (this file) ------------------------------------------------------------------------ Commercial libraries (O-Z) ~~~~~~~~~~~~~~~~~~~~~~~~~~ ObjectBuilder - GUI library ObjectBuilder includes the Object Interface (OI) class library which is a C++ object-oriented implementation of both Motif and Openlook interfaces. Note that interested parties can read more about the OI library in the 1300 page \"OI Programmer's Guide\" by Gary Aitken and Amber Bensen published by Prentice-Hall. ObjectBuilder is a GUI that offers developers a complete C++ implementation of Motif. ObjectBuilder allows developers to rapidly design, test, modify and implement sophisticated object-oriented graphical user interfaces by using ObjectBuilder to manipulate C++ objects found in its Object Interface (OI) C++ class library. ObjectBuilder features a drag-and-drop user interface that allows developers to immediately visualize the results of their user interface design. ObjectBuilder is owned and supported by Openware Technologies, Inc.. Formerly owned by ParcPlace Systems, Openware recently acquired ObjectBuilder. Operating Systems: - Solaris - HP UX - IBM AIX - SGI Irix - Dec Alpha - SCO Unix 3.2.4 - Unisys Unixware - NCR SVR4 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Tel:1-800-933-5558 x4224 (Kris Gottschalk) ------------------------------------------------------------------------ Objective Grid - Visual C++/MFC grid control Stingray Software offers two Visual C++/Microsoft Foundation Class extensions: Objective Grid and SEC++. Objective Grid is a full-featured grid control that can be used as a CView or CWnd derivative. All products include source code and are royalty free. Objective Grid is $395. There is a bundle with SEC++ available for $795. Compuserve: GO STINGRAY Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.unx.com/~stingray Email:stingsoft@aol.com Tel:1-919-321-6186 Tel:1-800-924-4223 ------------------------------------------------------------------------ Objectivity/DB - Object Oriented Database Operating Systems: - Sparc - HP 9000 - IBM AIX - SGI Irix Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.objectivity.com Email:info@objectivity.com Postal address:Objectivity Inc., 301B East Evelyn Avenue, Mountain View, CA 94041 Tel:415-245-7100 ------------------------------------------------------------------------ OBJECTSTORE - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:44-793-491177 Fax:617-270-3509 Postal address:UK Office: Object Design (UK) Ltd., 604 Delta Business Park, Welton Road, Swindon, Wiltshire SN5 7XP Postal address:Object Design, One New England Executive Park, 101 El Camino Real, Suite 300, Burlington, MA 01803,, Menlo Park, CA 94025 Tel:44-793-486111 Tel:(415) 327 - 5191 Tel:617-270-9797 ------------------------------------------------------------------------ ObjectViews I believe this is a commercial version of InterViews. Quest Systems Added : 01/01/95 Amended : 19/03/97 Licencing : Commercial WWW http://www.quest.com Email:info@quest.com Postal address:Quest Systems Corporation, 3333 Bowers Avenue, Suite 130, Santa Clara, CA. 95054 ------------------------------------------------------------------------ Octo+ - Extenstion library to MFC The Octo+ MFC class library is an extenstion library to MFC. Subscription entitles you to the use of all the classes developed for the duration of a year. There is a commitment to issue a new class every two weeks. De facto at least one new class is added every week. You could compare it to the subscription to an online MFC source magazine. The class library is accessible at : www.periphere.be where you can get all the latest information up-to-date. New classes issued are eMailed to registered users. Operating Systems: - PC Windows Compilers: - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.periphere.be ------------------------------------------------------------------------ ONTOS - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+44 625 539 905 Fax:617-272-8101 Postal address:UK: VALBECC SOFTWARE, Mr. Fred Peel, 115 Wilmslow Road, Handforth,, Wilmslow, SK9 3ER, U.K. Postal address:Ontologic, Inc., Three Burlington Woods, Burlington, MA 01803 Tel:+44 625 539 903 Tel:617-272-7110 ------------------------------------------------------------------------ Open Dialogue Operating Systems: - HP UX Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ Open Interface Version 3.0 This is a C-based UI library, but type-safe for C++ compatibility. The software also comes with a WYSIWYG GUI builder. They include tons of extra widgets like business graphics (bar, pie, and line charts), images (all standard formats), and hypertext help. Other software in Open Interface includes international character support, multi-font support, full printer support, memory management, file I/O support as well as Windows DDE support (the latter is, of course, non- portable). They also have a product called Nexpertobject, which is an expert systems tool intended for GUI development. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Neuron Data, 156 University Avenue, Palo Alto, California 94301 Tel:(415) 321-4488 Tel:(800) 876-4900 ------------------------------------------------------------------------ OpenUI - Another GUI builder This interface supports C, Pascal, and (ish) COBOL. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Open Software Associates, P.O. Box 3599, Sunnyvale, CA 94088-3599 Tel:(408) 730-2626 ------------------------------------------------------------------------ ORION/ITASCA - Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:612 851 3157 Email:doug@itasc.com Postal address: Itasca Systems, Inc., 7850 Metro Parkway, Minneapolis, Minn 55425 Postal address:Itasca Systems, Inc., 2850 Metro Drive, Suite 300, Minneapolis, MN 55425 Tel:(612) 851-3155 Tel:612-851-3158 ------------------------------------------------------------------------ OS Object Oriented Database Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+33 1 30 84 77 90 Fax:+1 617 577 1209 Email:didier@o2tech.fr Email:o2@o2tech.fr Postal address:France: O2 Technology, 7, Rue du Parc de Clagny, 78035 Versailles Cedex, France Postal address:O2 technology, Suite 2200, 1 Kendall Square, Cambridge MA 02139, U.S.A. Tel:+33 1 30 84 77 9 Tel:+1 617 621 7041 ------------------------------------------------------------------------ Persistence - Access to a relational database from a C++ object model Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Postal address:Persistence Software Inc, 1700 Sourth Amphlett Blvd, Suite 250, San Mateo, Ca 94402 Tel:415.341.7733 ------------------------------------------------------------------------ POET - Object Oriented Database Pricing starts at about $500. 00 for the DOS version, to a little over $1000.00 for the Unix versions. Operating Systems: - PC Windows - Novell - OS/2 - Mac - Sparc - NeXT - PC DOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:+44 81 / 317 2310 Fax:408 / 748 - 9060 Fax:+44 81 / 316 7778 Fax:617 / 621 7097 Fax:+49 40 / 60 39 851 Fax:+49 30 / 342 8413 Email:poet@bks.de Email:acourt@cix.compulink.co.uk Postal address:In Germany : BKS Software Guerickestr. 27 1000 Berlin 10 Germany Postal address:BKS Software, 4633 Old Ironsides Drive, Suite 110, Santa Clara, CA 95054 Postal address:BKS Software, One Kendall Square, Suite 2200, Cambridge, MA 02139 Postal address:European Office:, BKS Software, Fo_redder 12, 2000 Hamburg 67, Germany Postal address:UK Office:, Silicon River, Ltd., 106-108 Powis Street, London, SE18 6LU, England Tel:+49 40 / 60 99 011 Tel:+49 30 / 342 3066 Tel:+44 81 / 317 7777 Tel:617 / 621 7047 Tel:408 / 748 - 3403 ------------------------------------------------------------------------ Presentation Services Manager UI library No WYSIWYG GUI builder exists, but they do include a script language. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+61 3 646 8610 Postal address:Lancorp Pty Ltd, 33 Nott St, Port Melbourne 3207, Australia Tel:+61 3 646 7100 ------------------------------------------------------------------------ Rhine collection - C++ functions for Name Matching To provide a computer name matching system where the strings are not identical eg to match \"The Megaland (USA) Corp\" with \"Megaland USA Corporation\" short list of features: - includes both exact and standard matching; - written as a binary tree for speed; - no built in limitations on number of names to match or length of names. C++ code is fully standard - verified by PC-lint [tm] version 7.0 Licence contains normal range of conditions - software may be used in customers own products subject to number of straightforward conditions. Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial WWW http:/www.timetide.com/ Email:kenneth@timetide.com Postal address:Time and Tide Ltd,22 St Leonards Road, Surbiton, Surrey, United Kingdom, KT6 4DE Tel:0181-399-8684 ------------------------------------------------------------------------ SEC++ - Visual C++/MFC controls SEC++ includes: CView derivatives for panning and zooming, image classes (DIB/GIF/JPG/PCX/TGA/TIFF), MDI alternatives, Win32 classes and control classes (maskedit, splash screen, tip of the day). All products include source code and are royalty free. SEC++ is $395. There is a bundle with Objective Grid available for $795. Compuserve: GO STINGRAY Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.unx.com/~stingray Email:stingsoft@aol.com Tel:1-919-321-6186 Tel:1-800-924-4223 ------------------------------------------------------------------------ SOFTPRO TOUCH - GUI C++ class library for OS/2: SOFTPRO GmbH has announced its new 32bit C++ class library TOUCH-GUI 2.1 for OS/2 2.x. The product contains more than 140 classes which support windows, menu bars, multi-threading, controls (including all OS/2 2.x controls: slider, value set, notebook, container), dialog boxes, graphics, printer control, MDI, DDE, Drag and Drop, loadable resources, and management of profiles (.INI files). Other features include auxiliary classes for data manipulation and storage management. Additionally, TOUCH- GUI 2.1 contains high-level classes like formatted entry fields, tables, and complete NLS. Furthermore, TOUCH-GUI 2.1 is fully integrated in STAR CASE++, an OOA/OOD case tool (method: Coad/Yourdon), and Intersolv's PVCS (a version control system). The product includes online (.INF) and printed documentation, a demo program, and samples. TOUCH-GUI 2.1 costs DM 1.720,00 excl. VAT (ca. US $990), the runtime DLL's may be distributed royalty free. For upgrade prices and special project licenses (including source code of TOUCH-GUI) contact the supplier. NOTE: TOUCH-GUI 2.1 single license will be available at a special price of DM 199,00 excl. VAT (ca. US $120) during 04/01/94 - 06/30/94. Printed documentation is not shipped with the special price product, it is available for another DM 99,00 excl. VAT (ca. US $60). However, full online documentation is included. Operating Systems: - OS/2 Compilers: - Borland C++ - Gnu CC - IBM Cset++ - Watcom C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+49 7031 6606-66 Email:ffu@softpro.de Postal address:SOFTPRO GmbH, Stadtgrabenstr. 21, D-71032 Boeblingen, Germany Tel:+49 7031 6606-0 Mr. Frank Fuchs (extension -50) ------------------------------------------------------------------------ StarView - A Portable C++ Class Library for Graphical User Interfaces StarView is a portable C++ Class Library for Graphical User Interfaces. StarView is one of the major parts of our total Object Oriented programming environment (we call it SOLAR system). - portability between the operating systems MS-DOS, OS/2, Macintosh and different UNIX flavours - at least portable between the GUI's MS-WINDOWS, MS-Presentation Manager, MacApp and OSF/Motif - fulfillment of the requirements of the different GUI Style Guide's - data exchange and direct communication between the applications in homogeneous and heterogeneous networks (groupware approach) Operating Systems: - PC Windows 3 - OS/2 - Sun - Mac Compilers: - Borland C++ - Zortech C++ - Glockenspiel C++ - MPW C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Author:Andreas Meyer, STAR DIVISION Fax:(415) 233-0142 Fax:++49 40 23646 550 Email:svinfo@stardiv.de Email:svinfo@starlab.uucp Postal address:Star Division, 2180 Sand Hill Road, Suite 320, Menlo Park, CA 94025 Postal address:STAR DIVISION GmbH, Andreas Jahnke, Sachsenfeld 4, D-20097 Hamburg, Germany Tel:(800) 888-8527 Tel:++49 40 23646 500 ------------------------------------------------------------------------ STL\n- ANSI/ISO compliant cross-platform toolkit STL\nis an ANSI/ISO compliant cross-platform toolkit that includes: - Standards\n- ANSI/ISO Standard Template Library (STL). The most portable version of STL on the market today! - ANSI/ISO String - Supports both char and wchar_t for international use! - Time\n- 64-bit time, date, and time zone support. Supports non-standard time zones and DST rules! - Thread\n- Portable interface for multi-threaded programming (Available on multi-threaded platforms) STL\ncomes with a 350+ page user guide, full source code, 250+ examples, and absolutely no royalties. Operating Systems: - HP UX - IBM AIX - PC Windows - PC 32-bit Windows - SGI Irix - Solaris - Sparc - SunOS - SYSV - Unix Compilers: - Borland C++ - Gnu CC - HP C++ - IBM xlC - SGI NCC - Sparcworks - Sun CC - Visual C++ - WATCOM C++32 Added : 22/05/96 Amended : 22/05/96 Licencing : Commercial Fax:1-214-663-3959 WWW http://www.objectspace.com/Products/STLToolKit Email:info@objectspace.com - Email for product information Tel:1-800-object1 ------------------------------------------------------------------------ Systems\n- ANSI/ISO compliant cross-platform toolkit Systems\nis an ANSI/ISO compliant cross-platform toolkit that includes: - Standards\n- ANSI/ISO Standard Template Library (STL) The most portable version of STL on the market today! - ANSI/ISO String - Supports both char and wchar_t for international use! - Time\n- 64-bit time, date, and time zone support. Supports non-standard time zones and DST rules! - Thread\n- Portable interface for multi-threaded programming (Available on multi-threaded platforms) - Network\n- TCP and UDP socket communications Create object-oriented internet application! - Streaming\n- Universal Streaming System (TM) for non-intrusive persistence and object transport Includes support for templates and STL! - IOStream interface to I/O objects, include sockets Use familiar \"cout\" syntax with sockets and other devices! - Platform\nfor UNIX - Comprehensive UNIX-specific systems programming classes. Includes process, message queue, SYSV IPC support and more! Systems\ncomes with over 700 pages of documentation, full source code, 400+ examples, and absolutely no royalties. Operating Systems: - HP UX - IBM AIX - PC 32-bit Windows - Solaris - Sparc - SunOS - SYSV - Unix Compilers: - Borland C++ - Gnu CC - HP C++ - IBM xlC - SGI NCC - Sparcworks - Sun CC - Visual C++ - WATCOM C++32 Added : 22/05/96 Amended : 22/05/96 Licencing : Commercial Fax:1-214-663-3959 WWW http://www.objectspace.com/Products/SystemToolKit Email:info@objectspace.com - Email for product information Tel:1-800-object1 ------------------------------------------------------------------------ Thames Calendar Suite - Collection of functions for the modern calendar This provides a complete collection of functions for the modern calendar. How many days between dates?, What is 3rd Tuesday of month, How many business days in period? Short list of features: - Comprehensive collection for timeseries, project control, financial markets accountancy; - writing dates to text, interpreting dates from text in almost any format; - tool kit to define bank holidays, incl Easter in western and eastern churches; - conversion between Gregorian Hebrew and Julian calendar. Inclusive Price around 215 UK pounds ie around 340 US dollars. C++ code is fully standard - verified by PC-lint [tm] version 7.0 Licence contains normal range of conditions - software may be used in customers own products subject to number of straightforward conditions. Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial WWW http:/www.timetide.com/ Email:kenneth@timetide.com Postal address:Time and Tide Ltd,22 St Leonards Road, Surbiton, Surrey, United Kingdom, KT6 4DE Tel:0181-399-8684 ------------------------------------------------------------------------ Tools.h++ - Rogue Wave tools library. Tools.h++ consists mostly of a large and rich set of concrete classes that are usable in isolation and do not depend on other classes for their implementation or semantics. Components include Collections, String processing, Time & date handling, File space manager, B-Tree disk retrieval, bit vectors, virtual I/O streams, caching managers, virtual arrays, etc. Added : 01/01/95 Amended : 22/05/96 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ USL C++ Standard Components Formerly developed and marketed by AT&T Bell Laboratories and UNIX System Laboratories, these are now developed and licensed by SCO. C++ Standard Components include : - Args - argc/argv command line parser. - Bits - bit manipulation to arbitrary-length bitstrings. - Block - dynamic arrays. - Array_alg - efficient algorithms for searching, sorting, inserting etc. - Fsm - finite state machines. - G2++ - message formatting for inter-process communication. - Graph - maintain arbitrary relationships between arbitrary entities. - Graph_alg - including searching, cycle and component detection. - ipcstream - inter-process streams. - List - doubly-linked lists. - Map - like arrays, except that the subscripts can be non-integral. - Objection - like UNIX software signals. - Path - facilities for manipulating UNIX path names and UNIX search paths. - Pool - optimise memory allocation. - Regex - regular expressions. - Set - including Sets, Bags, and pointer sets. - Stopwatch - for timing critical sections of code - String - variable-length character strings. - Strstream - iostreams for Strings. - Symbol - efficient symbol table handling & sorting. - Time - Time, Duration (time difference) and Place (geographical location). Also included are the following tools : - c++filt - demangles C++ names in standard input. - dem - demangles C++ names in an argument list. - demangle - demangles C++ names in a.out for easier debugging. fs - a tool and library to help find freestore bugs. - g2++comp - compiles G2++ record definitions. - hier - displays the inheritance hierarchy in a program. - incl - displays the hierarchy of include files used in a program. - publik - displays the public interface of a class. Operating Systems: - Unix Added : 01/01/95 Amended : 22/05/96 Licencing : Commercial Email:wmb@sco.com Tel:1-201-443-5622 ------------------------------------------------------------------------ VERSANT - Object Oriented Database Versant markets a full-function OODBMS together with associated DBA and application developer tools. Other platforms will be announced soon. A Windows/NT port is in progress. Interfaces to 'C', 'C++' and Smalltalk-80 are supported. Operating Systems: - Sun - IBM AIX - HP 9000 - Dec Ultrix - SGI Irix - NCR SVR4 - NeXT - Sequent - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+31 - (0)2503 - 66855 Fax:415-325-2380 Fax:(415) 325-2380 Email:aflynn@osc.com Email:info@osc.com Email:info@versant.com, Postal address:UK Distributor:, Admiral Software Ltd, Admiral House, 193-199 London Road, CAMBERLEY, Surrey GU15 3JT Postal address:European Office:, Versant Europe, Siriusdreet 2, P.O. Box 333, 2130 All Hoofddrop, The Netherlands Postal address:Versant Object Technology, 4500 Bohannon Drive, Suite 200, Menlo Park, CA 94025, Attn: Mike Mooney Tel:01276 692269 Tel:+31 - (0)2503 - 66851 Tel:(31) 2503-66373 Tel:415-325-2300 Tel:(415) 329-7500 Tel:1-800-VERSANT ------------------------------------------------------------------------ ViewKit ObjectPak - application framework for developing OSF/Motif and CDE applications using C++ ViewKit includes generic application classes, menu, dialog, and preference classes; as well as ToolTalk and UNIX process control systems. ViewKit ObjectPak builds on the C++/Motif programming methods established by Doug Young in his book \"Object-Oriented Programming with C++ and OSF/Motif\". ViewKit ObjectPak provides a variety of ready-to use components and enables developers to easily extend ViewKit by creating new component classes. With these high-level components, ViewKit ensures consistency throughout a family of applications, and promotes enterprise-wide software reuse. In addition, ViewKit supports easy and effective communication between applications by using ToolTalk(tm), the CDE standard for inter-application messaging. ViewKit ObjectPak is available in binary and source form. Originally developed by Silicon Graphics, ViewKit is now available through ICS for most UNIX platforms. ICS has distributors in the U.K., France, Germany, Italy, Spain, Sweden, Israel, Korea, Japan, and Australia. Operating Systems: - SunOS - Solaris - HP UX - Dec Unix - IBM AIX - SCO Open Desktop Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(617) 621-9555 WWW http://www.ics.com/ Email:info@ics.com Postal address:Integrated Computer Solutions, Inc. 201 Broadway Cambridge, MA Tel:(617) 621-0060 ------------------------------------------------------------------------ Warne's Garbage Collector (WGC) WGC is a full-featured high-performance C++ memory manager that includes: - an incredibly fast explicit memory manager (drop-in new/delete) - a parallel incremental generational non-copying collector - a transparent just-in-time heap-checker WGC's fast explicit memory manager provides a drop-in accelerated new/delete. Using a multi-tiered parallel algorithm with the first tier inline, WGC can allocate most objects inline in less than 10 instructions! To enhance space efficiency WGC uses address-aligned storage algorithms with no per-object overhead (no linked lists!). To reduce fragmentation, WGC maintains a single process free store for all threads, modules, and DLLs. WGC's collector implements both conservative and accurate scanning and fully supports C++ code. Classes, arrays, scalars, interior pointers, unions, cross-heap pointers, anonymous unions (really!), large objects, library code you have no control over, etc. are all supported. Plus, you can incrementally deploy automatic memory management in existing or new applications, making some classes or objects collected and some not. WGC's just-in-time heap-checker stays active during the entire development cycle, transparently checking every new and delete. If a check fails, WGC will spawn your debugger and take you live to the line in question. To complement the live access to the line that failed a delete check, WGC provides detailed pointer/object info (allocating thread/line/file/pass count, object allocation time in microseconds, etc.) Debugging extensions allow interactive display/logging of object/pointer status and process stats. WGC is currently available for all major C++ compilers under Windows NT, Windows 95, and OS/2. WGC is priced at $895 per developer for all platforms, with no royalties. Team & Volume discounts apply. Source available. Ports to other platforms in progress. Operating Systems: - PC Windows 95 - PC Windows NT - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(604) 598-9546 Email:kevinw@reflective.com Postal address:Reflective Software Corp 2660 Estevan Ave. Victoria, BC, CANADA, V8R 2T4 Tel:(604) 683-0977 Tel:(800) 707-7171 ------------------------------------------------------------------------ Wind/U-MFC A Unix version of the popular Microsoft Foundation Classes shipped with Visual C++ (a 16-bit MFC 2.5 and a 32-bit MFC 2.1). Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(203) 438-5013 WWW http://www.bristol.com Email:info@bristol.com Postal address:Bristol Technology Inc., 241 Ethan Allen Highway, Ridgefield, CT 06877 USA Tel:(203) 438-6969 ------------------------------------------------------------------------ WinSockets++ 1.1 - A C++ class library for WinSockets. This is more than just a wrapper for the WinSockets calls. It provides higher-level functions that make reading/writing to sockets very easy. Additionally, the Async aspect of the library makes using the asynchronous functionality of WinSockets *very* easy and your code *very* clean. It costs $50 which includes full source. Operating Systems: - PC Windows Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Email:troy@cais.com ------------------------------------------------------------------------ WNDX - Graphical User Interface development environment Added : 01/01/95 Amended : 05/02/96 Licencing : Commercial Fax:403-283-6250 WWW http://www.wndx.com/ Email:sales@wndx.com Postal address:WNDX, Suite 418, 1167 Kensington Cr Nw, Calgary, Alberta Canada T2N 1X7 Tel:402-283-6091 ------------------------------------------------------------------------ XVT Portability Toolkit This is a C-language library of functions (although, you can pay extra for C++). They have a WYSIWYG GUI builder, but they charge for that, too. OPTIONS: - C++ capability $200 - XVT-Design (a WYSIWYG GUI builder) $1200 ($2900 for non-PC UNIX) - Source Code (call) Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(303) 443-0969 Email:info@xvt.com Postal address:XVT Software Incorporated, 4900 Pearl East Circle, Box 18750, Boulder, CO 80308 Tel:(303) 443-4223 Tel:(800) 678-7988 ------------------------------------------------------------------------ zApp Developer's Suite V2.2 The zApp Developer's Suite is a set of libraries and a designer containing over 300 object classes that provide GUI and other capabilities. It is the single solution to the problem of quickly writing commercial quality applications that run on multiple platforms. The zApp Developer's Suite consists of: - zApp, the industry leading C++ application framework - zApp Factory, a visual designer and code generator for the zApp environment - zApp Interface Pack, a set of powerful custom controls for zApp. The software comes with about 2500 pages of documentation and complete on-line help. It costs between $1,000 and $5,000 per developer, depending on the platforms needed. Operating Systems: - PC Windows - PC 32-bit Windows - PC DOS - OS/2 - X Windows - Motif - IBM AIX - HP UX - SCO Open Desktop - SGI Irix - Unixware - Solaris Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 691-9099 Email:sales@inmark.com Postal address:Inmark, 2065 Landings Drive, Mountainview, CA 94043 Tel:(415) 691-9000 Tel:(800) 3-inmark ------------------------------------------------------------------------ ZGRAF - C++ Multi-Platform Graph Toolkit The ZGRAF C++ Multi-Platform Graph Toolkit is a library for generating and printing tech. and business graphs in a number of environments. Graph styles include X/Y, Bar, Pie, Area, Scatter, Polar, Log, 3-D Surface, Contour, Smith Chart, and more. Support for X-Windows soon.Full C++ source code is included. Price: $30 - $99, with no royalties. Operating Systems: - PC Windows - PC 32-bit Windows - OS/2 - PC DOS Compilers: - Visual C++ - Borland C++ - IBM Cset++ Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial WWW http://ourworld.compuserve.com/homepages/zgraf Email:70742.1356@compuserve.com Email:jjakob@delphi.com Postal address:ZGRAF Software, Box 3103, Clarksville, IN 47131 ------------------------------------------------------------------------ Zinc V4.1 This is a full C++ class library that comes with the Zinc Designer (a WYSIWYG GUI builder). Their classes include some graphic capabilities, a rather nice error system, and a portable, if rudimentary, help system. Also included is the source for the library (and for the Designer!). In addition to the usual GUI stuff, Zinc also provides international character support (an extended version, for extra bux, is in the works), some container classes, and filesystem portability. They also allow you to incorporate platform-specific stuff (e.g., system messages) into their API; but, of course, you're on your own when it comes to porting any additions. The main new feature for 4.1 is object persistence. , (800) 638 8665, (801) 785-8900, (801) 785-8996 (fax), (801) 785-8997 (bbs) , tech@zinc.com Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(801) 785-8997 Fax:(801) 785-8996 WWW http://www.zinc.com Email:tech@zinc.com Postal address:ZINC Software Incorporated, 405 South 100 East 2nd Floor, Pleasant Grove, UT 84062 Tel:(801) 785-8900 Tel:(800) 638 8665 ------------------------------------------------------------------------ Other commercial sources of C++ code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ EMS CD This is not a code CD but it has many libraries & some code (all msdos) brought together into a CD. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:609-582-9204 Email:rbakerpc@aol.com Postal address:EMS Professional Software, Specialized Software Libraries, Baker Enterprises, 20 Ferro Drive, Sewell, NJ 08080 ------------------------------------------------------------------------ ISCL CD ROM from ImageSoft Checkout the ISCL CD ROM from ImageSoft, it contains the largest collection of C++ source code ever compiled in one place. It's available from ImageSoft Added : 01/01/95 Amended : 01/01/95 Licencing : Not known BBS:(516) 767-9074 Fax:(516) 767-9067 Email:mcdhup!image!iscl Postal address:ImageSoft Inc., 2 Haven Avenue, Port Washington, NY 11050 Tel:(516) 767-2233 ------------------------------------------------------------------------ USL UNIX Toolchest - An electronic catalog for browsing and ordering source software This catalog provides unsupported software products, developed within AT&T, for the commercial UNIX world. As you browse through the online catalog, you'll find descriptions of all the tools, complete with information on memory and disk requirements, documentation, and license fees. United States and Canada, may access the Toolchest by dialing 1-908-522- 6900(e-7-1) and logging in as \"guest\". Note : The USL UNIX Toolchest is no longer marketed by USL or Novell; it has reverted back to AT&T. The only contact info I have for it is the US number 800-462-8146, option #2. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known BBS:1-908-522- 6900 Tel:800-462-8146, option #2. ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!news-peer.sprintlink.net!news.sprintlink.net!sprint!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:45 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!news-peer.gsl.net!news-peer.sprintlink.net!news.sprintlink.net!sprint!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (2/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:32 GMT Organization: Trumphurst Ltd. Lines: 1123 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1996/11/26 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256160 comp.answers:25745 news.answers:101458 Archive-name: C++-faq/libraries/part2 Comp-lang-c++-archive-name: C++-faq/libraries/part2 Available C++ libraries FAQ (2/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (this file) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Libraries available via FTP (A-L) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ADAPTIVE Communication Environment (ACE) - C++ IPC wrappers This release contains contains the source code, documentation, and example test drivers for a number of C++ wrapper libraries and higher- level distributed application frameworks developed as part of the ADAPTIVE project at the University of Calfornia, Irvine. The C++ wrappers encapsulate many of the user-level BSD and System V Release 4 IPC facilities such as sockets, TLI, select and poll, named pipes and STREAM pipes, the mmap family of memory-mapped file commands, System V IPC (i.e., shared memory, semaphores, message queues), and explicit dynamic linking (e.g., dlopen/dlsym/dlclose) using type-secure, object-oriented interfaces. The higher-level distributed application frameworks integrate and enhance the lower-level C++ wrappers to support the configuration of concurrent network daemons composed of monolithic and/or stackable services A relatively complete set of documentation and extensive examples are included in the release. A mailing list is available for discussing bug fixes, enhancements, and porting issues regarding ACE. Please send mail to ace-users-request@ics.uci.edu if you'd like to become part of the mailing list. I have been informed that the ftp site listed may be incorrect. Correct information would be appreciated. Added : 01/01/95 Amended : 30/07/96 Licencing : Not known FTP from ftp://wuarchive.wustl.edu/languages/c++/ACE/ Email:ace-users-request@ics.uci.edu ------------------------------------------------------------------------ Aisearch - a package to make writing problem solving programs easier. Offers the programmer a set of search algorithms that may be used to solve all kind of different problems. The following search algorithms have been implemented: - depth-first tree and graph search - breadth-first tree and graph search - uniform-cost tree and graph search - best-first search - bidirectional depth-first tree and graph search - bidirectional breadth-first tree and graph search - AND/OR depth tree search - AND/OR breadth tree search. Although this package is meant as a tool for developing problem solving software it is not meant exclusively for programmers that are familiar with the concept of problem representation and search techniques. The document accompanying this package first describes (though condensed) the theory of problem solving in AI and next explains how the search class library must be used. Furthermore, as the source code is richly commented and as also some demo programs are included the package should also prove useful to people that want to get acquainted with the subject. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://obelix.icce.rug.nl/pub/peter/aisearch.tar.Z FTP from ftp://obelix.icce.rug.nl/pub/peter/aisearch.zip ------------------------------------------------------------------------ Amulet - User Interface Development Environment AMULET is a user interface development environment in C++. Code written using Amulet will work with little or no changes on all platforms. More than just another free \"virtual toolkit,\" Amulet includes many features specifically designed to make the creation of highly-interactive, graphical, direct manipulation user interfaces significantly easier. Based on a proven earlier system, called Garnet, that was in wide use in the Lisp community, Amulet adds a number of important innovations and refinements. Important features of Amulet include: - a dynamic, prototype-instance object system that makes prototyping easier - automatic constraint solving integrated with the object system - a \"structured-graphics\" model (also called a \"display list\") that handles automatic refresh of objects when the change - a high-level input model that makes it easy to add behaviors to objects and also supports undo and help for operations - a full set of flexible widgets implemented using the Amulet intrinsics, so you can easily experiment with your own widgets; and high-level interactive debugging tools. Widgets include:buttons, check boxes, radio buttons, menus, menu bars (pull-down menus), scroll bars, scrolling windows, and text input fields. Amulet comes with complete documentation including a tutorial. Operating Systems: - X Windows - PC 32-bit Windows - Mac Compilers: - Gnu CC - Object Center - Visual C++ - MetroWerks CodeWarrior Added : 29/02/96 Amended : 29/02/96 Licencing : Public Domain FTP from ftp://ftp.cs.cmu.edu/usr0/anon/project/amulet/amulet/README WWW http://www.cs.cmu.edu/~amulet Email:bam@cs.cmu.edu - Brad A. Myers Postal address:Brad A. Myers, Human Computer Interaction Institute, School of Computer Science, Carnegie Mellon University, Pittsburgh, PA 15213-3891 ------------------------------------------------------------------------ Andy Register's - matrix library It is still under development so there is no documentatin and some functions have not been throughly tested. It is a departure from most matrix libs in that it includes things like UpperTriangular different from Diagonal, from Row, from Col, etc. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andy Register FTP from ftp://ftp.cerl.gatech.edu/pub/c++/gtmatrix Email:andy@cerl.gatech.edu ------------------------------------------------------------------------ Arjuna - For writing fault-tolerant (distributed) applications Arjuna provides a set of tools (C++ classes and libraries) for writing fault-tolerant distributed applications using persistent objects, atomic actions, and replication. Included in the system is a C++ stub generator (and associated RPC mechanism) which takes a C++ class definition for an object and generates client and server stub code. Using these stub classes occurs in a relatively transparent manner: the differences between a local and distributed application are typically only a single line. The system has been ported to a wide range of architectures and C++ compilers, both by the authors and other users, and has been in use for several years. A comprehensive manual is available with the distribution. The system has been ported to a wide range of architectures and C++ compilers, both by the authors and other users, and has been in use for several years. Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://arjuna.ncl.ac.uk/ WWW http://arjuna.ncl.ac.uk/ ------------------------------------------------------------------------ Awesime - A C++ task library explicitly designed for simulation Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Dirk Grunwald FTP from ftp://ftp.cs.colorado.edu/pub/cs/misc/Awesime Email:grunwald@foobar.cs.colorado.edu ------------------------------------------------------------------------ BLAS in C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Damian McGuckin FTP from ftp://usc.edu/pub/C-numanal/blas.cpp.shar.z Email:damianm@eram.esi.com.au ------------------------------------------------------------------------ Blas.cpp.shar.z A BLAS in C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Damian McGuckin FTP from ftp://usc.edu/pub/C-numanal/ Email:damianm@eram.esi.com.au ------------------------------------------------------------------------ Brent's univariate minimizer and zero finder. Ref: G.Forsythe, M.Malcolm, C.Moler, Computer methods for mathematical computations. Precision - double Obsolete - now part of the linalg package Added : 01/01/95 Amended : 30/07/96 Licencing : Not known WWW http:cpplibs2.html#LinAlg.shar ------------------------------------------------------------------------ BRL10 - Binary Relations Library for C/C++ Binary relations are more directly based on semantic concepts rather than on recordlike structures as traditional (relational, hierarchies, networks, object-oriented) models are. Binary Relations tend to be more functionally complete in their information processing capability, and more precise in their semantic modelling. The Binary Relations Approach was implemented in Binary Relations Library for C/C++. BRL is not a full featured DBMS. It does not support all ideas of the Binary Relations Approach. BRL is however a small, fast and reliable engine. BRL provides basic tools for using binary relations in C and C++ programs. Operating Systems: - FreeBSD - PC DOS - PC Windows Compilers: - Gnu CC - Borland C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Non commercial Author:Andrew Girow WWW http://tetragr.zaporizhzhe.ua/home/girow/homepage.html Email:andrew@tetragr.zaporizhzhe.ua ------------------------------------------------------------------------ C* In C++ - Parallel Programming Classes for C++: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Terry Bossomaier Email:terry@arp.anu.edu.au ------------------------------------------------------------------------ C++ FEM - (Finite Element Method) Library In addition to FEM related classes, this library also has: - Some simple garbage collection stuff - An automatic differentiation library - A sparse matrix library This is an initial release and people should *expect* to have to do some work to get it running on their system. If you have gcc-2.3.3, libg++-2.3[.1], Gnu make and makedepend you shouldn't have too much difficulty however. The code is unsupported, and is distributed under the terms of the GNU Public License. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Michael Tiller, University of Illinois (Urbana-Champaign) FTP from ftp://usc.edu/pub/C-numanal/femlib-1.1.tar.gz Email:tiller@solace.me.uiuc.edu ------------------------------------------------------------------------ C++ implementation of differential algebra This is temporarily unavailable while we resolve the question of whether inclusion of codes from Numerical Recipes makes distribution illegal. Available from the netlib mailing list, in c++/mxyzptlk.shar Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Leo Michelotti Email:michelotti@adcalc.fnal.gov Email:netlib@research.att.com ------------------------------------------------------------------------ C++Advio - Advanced i/o and arithmetic compression Portable handling and compression of binary data. Keywords: pipes, arithmetic coding, start-stop coding, endian i/o, compression Operating Systems: - Solaris - HP 9000 - IBM AIX - Dec Alpha - FreeBSD - Mac - PC 32-bit Windows Compilers: - Gnu CC - Sun CC - MetroWerks CodeWarrior - Borland C++ Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.cpt.hqx - Mac distribution FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.README.txt - README file (ftp) FTP from ftp://replicant.csci.unt.edu/pub/oleg/c++advio.shar WWW http://mozart.compsci.com/~oleg/ftp/c++advio.README.txt - README file (Web) Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ C++SIM 1.5.2 - A simulation package written in C++. C++SIM provides discrete process based simulation similar to that provided by the simulation class and libraries of SIMULA. The linked list manipulation facilities provided by SIMSET are also included in the package, and there is support for a variety of statistics gathering classes. The simulation package requires the use of a threads package and currently only works with the following: - Sun's lwp threads and Solaris threads - C++ task library - NT threads - Posix threads - cthreads - Rex threads It has been build on a number of different architectures and C++ compilers, and porting to other systems should be relatively easy. Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://arjuna.ncl.ac.uk WWW http://arjuna.ncl.ac.uk ------------------------------------------------------------------------ CalcPlus - Interpreter of procedural language The CalcPlus library is the C++ class library which provides an ability to use your own programming language built into C++ project. Any algorithm or any constant needed by application can be carried out into the special file, when process comes to the key point, it calls function or procedure stored in the text file. Interpreter runs the function and process returns back to C++ code. Library contains the interpreter which understands simple nameless procedural language. Bi-directional communication between C++ and the code for interpreter available. Version of the language that comes with the library allows to use functions, procedures, blocks, preprocessor, global and local variables and constants, if/for/while statements. Each variable can have value of type: nil, bool, long, float, string, date. Type definitions and arrays are allowed. Functions and procedures may be recursive. New functions written in C++ may be easily added to the language. Syntax of the language can be modified by changing YACC rules. Interpreter is fast enough and may be helpful for many tasks. Platform independent, YACC required. Operating Systems: - PC DOS - SCO Unix 3.2.4 - SunOS Compilers: - Borland C++ - Visual C++ - Watcom C++ - Gnu CC - Sparcworks Added : 22/05/96 Amended : 22/05/96 Licencing : Shareware Author:Vladimir Schipunov FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/cpluspls/calcplus.zip Email:vschipun@cammail1.attmail.com ------------------------------------------------------------------------ Callbacks - Inter-component callbacks using functors This library provides a comprehensive, portable, type-safe, efficient, general purpose mechanism for inter-component callbacks using template functors. Full source code and examples. A complete rationale and description of this mechanism appeared in my article in the February 1995 issue of the C++ Report (now reprinted in 'C++ Gems', SIGS Books). Users are strongly encouraged to read the article before proceeding, as the library has minimal embedded documentation at present. Operating Systems: - All - not O/S specific Compilers: - Visual C++ - IBM Cset++ - Borland C++ - Watcom C++ Added : 03/10/96 Amended : 03/10/96 Licencing : Copyrighted freeware Author:Rich Hickey WWW http://www.sigs.com/books/gems.html - C++ Gems WWW http://ourworld.compuserve.com/HomePages/RichHickey Email:hickeyr@ibm.net ------------------------------------------------------------------------ CB++ - CommonBase Database Access Library for C/C++ This library was written in 1989 as a basis for storing C++ objects in a relational database. The development of such a system was stopped in 1990 because of problems with the MS-DOS environment used in this time. My involvement in various user interface projects here in the institute and otherwhere made it sleep until last week. Okay, here is it. It is only the database access layer of the projected object storage system but it has some useful features which are provided by commercial tools out there: - Builds on the C language interface of a database, there is no need for a precompiler (like embedded SQL - which is totally unusable in combination with C++, at least it was three years ago...) - Very simple to use. Unlike the native C interfaces of the databases it is as simple as embedded SQL or some 4th generation languages. - Makes applications portable among different SQL databases. The library itself is relatively easy to port as the database vendor specific code Note - Scott R. Chilcote\" (scotty@nando.net) reports he can only find the a README file at the site given, and his attempts to mail the author's address given therein fail. (david_r@netvision.net.il) reports he couldnt find anything at the ftp site. Added : 01/01/95 Amended : 22/05/96 Licencing : Not known FTP from ftp://ftp.x.org/contrib/CB++.0.1.* ------------------------------------------------------------------------ CBMT - Collaborative BioMolecular Tools CBMT provides a number of easy-to-use fundamental classes for biologists, chemists and crystallographers. They include: Molecular Structure, Sequence, Standard Formats (PDB, CIF, GCG, etc), Geometry, Statistics, TextParsing, and a single container class (a dynamic Array). All documentation is in HTML, and member functions have *.c examples. I hope that the system can be extended as a communal effort and am piloting this idea in the C++ course at the Globewide Network Academy Version 1.3 will be posted shortly including an experimental script language (generated automatically from the *.h files) providing support for persistent objects manipulatable by other languages such as tcl or csh. Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial Author:Peter Murray-Rust FTP from ftp://s-ind2.dl.ac.uk/cbmt/democ12.tar.Z WWW http://www.dl.ac.uk/CBMT/HOME.html WWW http://info.desy.de/gna/html/cc/index.html) WWW http://www.dl.ac.uk/CBMT/HOME.html Email:mbglx@seqnet.dl.ac.uk Email:pmr1716@ggr.co.uk ------------------------------------------------------------------------ CCL110JE.ZIP - Coroutine class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ FTP from ftp://garbo.uwasa.fi/pc/c-lang/ ------------------------------------------------------------------------ CNCL - ComNets Class Library Universal classes: - Tree structured class hierarchy, similar to NIHCL. - Classes for general purposes such as arrays, linked lists, strings. - Interface classes for UNIX system calls: pipes, select. - Persistent objects. Simulation: - Event driven simulation. - Statistical evaluation. - Random number generators and distributions. Fuzzy logic: - Fuzzy sets, fuzzy variables, fuzzy rules and inference - engine for building fuzzy controllers and expert systems. EZD: - Interface classes for DEC's ezd graphics server. Operating Systems: - HP UX - SunOS - Solaris - Linux Compilers: - Gnu CC Added : 01/01/95 Amended : 08/08/96 Licencing : GNU copyleft Author:Martin Junius, Martin Steppler, et al. FTP from ftp://ftp.comnets.rwth-aachen.de/pub/CNCL/ WWW http://www.comnets.rwth-aachen.de/doc/cncl.html Email:cncl-adm@comnets.rwth-aachen.de Postal address:Communication Networks, Aachen University of Technology, D-52056, Aachen, Germany Postal address:Communication Networks, Aachen University of Technology, D-52056 Aachen, Germany ------------------------------------------------------------------------ Conical - C++ classes for building neural networks CONICAL is a cross-platform library of C++ classes for building biologically realistic simulations of neurons or small neural networks. Its capabilities are similar to large Unix-based packages such as GENESIS and NEURON, but produces simulations which are smaller, faster, and easily imbedded in other applications. CONICAL is still under development, but documentation is fairly complete and includes both introductory material and demo programs. Operating Systems: - Unix - MacOS - PC DOS - PC Windows Compilers: - Gnu CC - Borland Turbo C++ - MetroWerks CodeWarrior Added : 30/07/96 Amended : 30/07/96 Licencing : Education Author:Joseph J. Strout FTP from ftp://ftp-ncmir.ucsd.edu/pub/jstrout/conical.tar.gz - source & docs by ftp WWW http://www-acs.ucsd.edu/~jstrout/conical - CONICAL home page Email:jstrout@ucsd.edu - send email to the author Postal address:J. Strout,3033 Basic Sciences Bldg,UCSD,9500 Gilman Dr.,La Jolla,CA,92093-0608 ------------------------------------------------------------------------ COOL - Texas Instrument's \"C++ Object Oriented Library\". COOL includes classes like AVL_Tree, Association, Bignum, Binary_Tree, Bit_Set, Complex, Date_Time, Envelope, Gen_String, Handle, Hash_Table, Iterator, List, M_Vector, Matrix, N_Tree, Pair, Quaternion, Queue, Random, Range, Rational, Regexp, Set, Shared, Stack, String, Timer, Value, Vector. COOL uses a special \"template\" syntax which is preprocessed by a special cpp (distributed with COOL). This enables it to be used with compilers which do not support templates. Added : 01/01/95 Amended : 05/02/96 Licencing : Not known FTP from ftp://ftp.ti.com/pub/COOL.tar.Z ------------------------------------------------------------------------ CSock C++ Socketing Library - An advanced wrapper for Windows socketing An advanced wrapper for Windows socketing. Uses newer C++ language extensions to shred the amount of code required for socketing applications. All the standard Windows socketing wrapper classes usually implemented, and then: - Insertion and extraction operators are templatized so you won't have to implement new ones. - Address type classes are polymorphic and also templatized -- one line to add a new one. - Ability to dynamically load WINSOCK at runtime, in case TCP/IP is not installed. - Quite easy to port. $20.00 U.S. shareware license entitles registered users to updates through version 2.99. FTP functionality is already partially complete. Distributed as source code. Should work with any compiler that supports exceptions, templates and new cast operators. Operating Systems: - PC 32-bit Windows Compilers: - Visual C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Shareware Author:TRI Software, a division of TRInternational, Inc. WWW http://junior.apk.net/~tri/csock/ Email:tri@apk.net ------------------------------------------------------------------------ Cvmath.cc - An include file to make complex math look like regular math. The file uses a lot of operator overloading, so that if x=a+ib and y=c+id, the code for multiplying the two together looks like z = x*y; Also, the file includes nrutil from Numerical Recipes, and adds the complex versions for vectors and matrices. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Leonard Kamlet FTP from ftp://usc.edu/pub/C-numanal/cvmath.cc Email:lik@engin.umich.edu ------------------------------------------------------------------------ DiamondBase - Add Relational Database functionality to your C++ programs DiamondBase is a library of C++ routines and utilities that allow you to add Relational Database functionality to your C++ programs. It is written entirely in C++, and great pains have been taken to ensure it compiles under a variety of compilers. It comes with a 47 page manual. Operating Systems: - Unix - OS/2 Compilers: - Gnu CC - Cfront - Borland C++ for OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://pippin.cs.monash.edu.au/pub/export/ Email:davison@molly.cs.monash.edu.au Email:kevinl@bruce.cs.monash.edu.au Email:darrenp@dibbler.cs.monash.edu.au ------------------------------------------------------------------------ Diffpack - Quick prototyping of simulators solving partial differential equations by FEM Diffpack is a large and comprehensive C++ package aiming at quick prototyping of simulators solving partial differential equations by FEM. Under development at SINTEF Applied Mathematics and the University of Oslo, Norway. Version 1.0 of Diffpack is released for free non-commerical use and is distributed by netlib. For further details refer to the Diffpack WWW home page Added : 01/01/95 Amended : 01/01/95 Licencing : Not known WWW http://www.oslo.sintef.no/avd/33/3340/diffpack ------------------------------------------------------------------------ DoPVM - A class built on PVM, for message passing environments. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Hartley Email:skip@mathcs.emory.edu ------------------------------------------------------------------------ DOSTmUit - DOS Text Mode User Interface Toolkit Enables C++ programmers to add a CUA-compliant user interface to their DOS programs without getting involved in screen coordinates and other messy details. The programmer merely states which interface objects are required, and how they are to be placed on the screen in relation to each other. Those familiar with the ET++ toolkit for the X windows system under Unix will get the general idea. Includes a class documentation facility (DocClass) which will generate a large text file from the source code giving details of every class, structure, enum and extern in the toolkit. This program will also work on your own C++ source code. Source is provided. Operating Systems: - PC DOS Compilers: - Zortech C++ 3.0 - Borland C++ 3.1,4.X Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial Author:Nikki Locke, Trumphurst Ltd. FTP from ftp://ftp.demon.co.uk/pub/trumphurst/toolkit/ WWW http://www.trmphrst.demon.co.uk/toolkit.html Email:uit@trmphrst.demon.co.uk ------------------------------------------------------------------------ Drat - A C++ interface to the curses library Drat contains several classes for interfacing with the UNIX curses library, including menus with callback's, and other common forms. Added : 05/02/96 Amended : 05/02/96 Licencing : Not known WWW http://www.best.com/~smurman/Drat Email:smurman@best.com ------------------------------------------------------------------------ ET++ - A large GUI library and other C++ tools developed in Europe The Authors are both with Taligent now. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andre Weinand and Erich Gamma FTP from ftp://ftp.ubilab.ubs.ch/ FTP from ftp://ftp.inria.fr/gnu/et++-2.0.tar.Z ------------------------------------------------------------------------ FFTPACK++ - C++ version of FFTPACK FFT_Pack is a C++ wrapper for FFTPACK complex routines using LAPACK++ Matrix and Vector classes. FFTPACK routines were converted to C using f2c and also modified to use double precision complex using -r8 to f2c. Most of this code was lifted directly from GNU OCTAVE v1.1.0, hence the copyright notice at the top. The forward FFT takes you to freq domain (ala direction == -1), and backward the other way. Passing LaVectorComplex/Double or LaGenMatComplex/Double with one dimension set to 1 will implicitly perform 1D FFT on the data. The members of the FFT_Pack class are declared static, since they really need no private member storage. There are two types of transform routines: ones that return a new complex matrix and the ones that change the matrix in place. Compilers: - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Mumit Khan Fax:608 265 3811 WWW http://www.xraylith.wisc.edu/~khan/software/fftpack/ Email:khan@xraylith.wisc.edu Postal address:Center for X-ray Lithography, University of Wisconsin - Madison Tel:608 265 6075 ------------------------------------------------------------------------ GAGS - C++ class library for Genetic algorithms It includes classes for chromosomes and populations. Library:binary chromosome representation. Genetic operators: mutation, xOver (n-pt and uniform), remove/reinsert. Selection operator: steady state, tournament, roulette wheel. Perl and/or tcl/tk graphic front-end. Graphics through gnuplot. Training from file. Application generator: it needs only an ANSI-C definition of the fitness function. It's parsed, and a program that runs a GA on it is generated. Operating Systems: - Unix Compilers: - Gnu CC - SGI CC - Sun CC Added : 08/02/96 Amended : 08/02/96 Licencing : Copyrighted freeware Author:JJMerelo Fax:34-58-243230 FTP from ftp://kal-el.ugr.es/GAGS/GAGS-0.94e.tar.gz WWW http://kal-el.ugr.es/gags.html Email:jmerelo@kal-el.ugr.es Tel:34-58-243162 ------------------------------------------------------------------------ GAME - Parallel Genetic Algorithms Theory and Applications Edited by: J. Stender Publisher: IOS Press Frontiers in Artificial Intelligence and Applications series 1993, 225 pp; hard cover; w/ disk ISBN: 90 5199 087 1 Price: $85, 59 pounds sterling The first version of the GAME Virtual Machine software and two examples that come with the book can be obtained also by ftp. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://bells.cs.ucl.ac.uk/papagena/game/version1/ ------------------------------------------------------------------------ GECOOL 2.1 - A reworking and enhancement of Texas Instrument's \"C++ Object Oriented Library\" By some programmers at General Electric. Also available is JCOOL. Its main difference from COOL and GECOOL is that it uses real C++ templates instead of a similar syntax that is preprocessed by a special 'cpp' distributed with COOL and GECOOL. Some users behind \"firewalls\" have had difficulty accessing the ftp site. Added : 01/01/95 Amended : 05/02/96 Licencing : Not known FTP from ftp://ftp.cs.utexas.edu/pub/COOL ------------------------------------------------------------------------ Generic Linked List Package A package to define, create, update query and delete one or more (nodes of) linked lists, to sort linked lists, and so on. The user doesn't have to take care of allocating a number of bytes for a node, inserting on the right place, deleting and freeing a node and so on. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://hermes.bouw.tno.nl/pub/TNO/BOUW/Bouwinf/linkedlist0.10.shar FTP from ftp://ftp.tno.nl/pub/TNO/BOUW/Bouwinf/linkedlist0.10.shar ------------------------------------------------------------------------ GINA++ - An O-O application framework for C++, X11R5, and OSF/Motif GINA++ (The Generic INteractive Application for C++) is an object- oriented application framework that facilitates the development of applications with a graphical user interface. It is written in C++ and uses OSF/Motif and X for the user interface parts. GINA++ comes as a library of C++ classes, 10 small to medium demo applications, and it is fully documented. Components of GINA++ are: - A C++ encapsulation of OSF/Motif providing easy-to-use mechanisms for deriving new widget classes completely in C++ - Support for object-oriented graphics (rectangles, arrows, circle, etc) - An unlimited undo/redo history mechanism - supporting classes for data structures (list, arrays, etc), run-time type information, and a notification mechanism. The classes of GINA++ constitute an executable program - the generic application - which possesses the basic functionality and the user interface components common to all interactive graphical applications, but lacks any application-specific behavior. The predefined functionality and behavior is inherited by deriving subclasses from the existing GINA++ classes. Application specific behavior is implemented by adding new classes and member functions. Differences to the standard application are coded by refining virtual member functions inherited from GINA++. Operating Systems: - HP UX - Sparc - X Windows Compilers: - Cfront Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Andreas Baecker FTP from ftp://ftp.x.org/contrib/ FTP from ftp://ftp.gmd.de/gmd/ginaplus Email:baecker@gmd.de Postal address:GMD, P.O. Box 1316, D-53731 Sankt Augustin ------------------------------------------------------------------------ Gnans - Simulation of stochastic and deterministic dynamical systems A program (and language) for dynamical systems. Includes simple scripting language. Graphical user interface. Operating Systems: - SunOS - SGI Irix - IBM AIX - X Windows Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Bengt Martensson FTP from ftp://ftp.mathematik.uni-Bremen.de/pub/gnans Email:bengt@mathematik.uni-Bremen.de ------------------------------------------------------------------------ Grail - Symbolic computation with finite-state machines and regular expressions Supports conversion of FSM to RE and back and also conversion to and from finite languages. Supports many algebraic operations on FSM and RE. All objects are templates, so you can parameterize FSM or RE to use any C++ class or base type as its alphabet type (hence, Mealy machines are supported by using ordered pairs as the alphabet type). Compilers: - Cfront - IBM xlC - IBM Cset++ - Watcom C++ Added : 22/05/96 Amended : 22/05/96 Licencing : Education WWW http://www.csd.uwo.ca/research/grail Email:drraymond@csd.uwo.ca ------------------------------------------------------------------------ GRAS - A Graph-Oriented Database System for SE Applications Copyright (C) 1987-1992 Lehrstuhl Informatik III, RWTH Aachen This library is free software under the terms of the GNU Library General Public License. The system GRAS with interfaces for the programming languages Modula-2 and C is available as public domain software for Sun3/Sun4 workstations (the GRAS system itself is implemented in Modula-2 and consists of many layers which might be reusable for the implementation of other systems): There are several files contain documentation, sources, binaries, and libraries. All binaries are for Sun/4 machines. Sun/3 binaries are shipped only if explicitly requested. Operating Systems: - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:Dr. Andy Sch\"urr (or Richard Breuer) FTP from ftp://tupac-amaru.informatik.rwth-aachen.de/pub/unix/GRAS522_3 Email:ricki@rwthi3.informatik.rwth-aachen.de Email:andy@rwthi3.informatik.rwth-aachen.de Postal address:Lehrstuhl f\"ur Informatik III, University of Technology Aachen (RWTH Aachen), Ahornstr. 55, D-5100 Aachen ------------------------------------------------------------------------ Grayscale Image Processing Enhanced grayscale image processing class library and verification code, source code Keywords: image arithmetics, image filtration, lazy image, C++, class library Operating Systems: - Solaris - HP 9000 - rs6000-aix-3.2 - Dec Alpha - FreeBSD - PC 32-bit Windows Compilers: - Gnu CC - Sun CC - MetroWerks CodeWarrior - Borland C++ Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/grayimage-21.cpt.hqx - Mac distribution FTP from ftp://replicant.csci.unt.edu/pub/oleg/image.README.txt - README (ftp) FTP from ftp://replicant.csci.unt.edu/pub/oleg/image_v21.shar WWW http://mozart.compsci.com/~oleg/ftp/image.README.txt - README (Web) Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Hans Boehms GC - Hans Boehms free Garbage Collector Implements much of the Detlefs/Ellis C++ GC proposal. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.parc.xerox.com/pub/gc ------------------------------------------------------------------------ High level vector operations Contains the Aitken-Lagrange interpolation over the table of uniform or arbitrary mesh, and the Hook-Jeevse multidimensional minimizer. Precision single/double. Obsolete - now part of the Lin-alg package. Added : 01/01/95 Amended : 30/07/96 Licencing : Not known WWW http:cpplibs2.html#LinAlg.shar ------------------------------------------------------------------------ InterViews - GUI class library developed by Stanford University Make sure you get v3.1 or later. This library contains excellent examples of multiple inheritance used profitably. I understand that InterViews development will not continue past the current version; author Mark Linton is concentrating his efforts on the X Consortium Fresco project, which should show up in X11R6. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://interviews.stanford.edu/ FTP from ftp://ftp.informatik.uni-kiel.de/pub/graphics/X/InterViews ------------------------------------------------------------------------ ISC366.ZIP - Interrupt Service Class (v. 3.66) Allows hooking of interrupts (software and hardware) into classes, comes with classes for staying resident, for serial communication (interrupt driven), and like-wise classes. Comes with full source code! Operating Systems: - PC DOS Compilers: - Borland C++ 3.0 - Borland C++ 3.1,4.X Added : 01/01/95 Amended : 01/01/95 Licencing : Public Domain FTP from ftp://oak.oakland.edu/pub/msdos/cpluspls/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ Kalman - A class library for Kalman filtering Contains lumatrix.c++ etc. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/kalman.tar.gz Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ Lapack++ - C++ version of some of lapack fortran code Developmental version of proposed C++ version of lapack. Contains blas.h++ etc, but needs Fortran library to link. Documents : Overview paper (9 pages postscript), release notes (7 page ps) Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:J. Dongarra, R. Pozo, D. Walker FTP from ftp://netlib2.cs.utk.edu/lapack++/ ------------------------------------------------------------------------ LEDA, - A Library of Efficient Data Types and Algorithms Provides basic data-types like lists, stacks, queues, trees, sets, partitions, priority queues and a few others. These are parameterizable classes, you may add your own datatype and have a priority queue ... An important datatype is a graph, these are also parameterizable and there are useful algorithms for them like shortest path, transitive closure, matching, maximum flow, spanning tree and others, we have implemented a few algorithms for dealing with perfect graphs, but these ar not part of the standard library. The latest part deals with computational geometry. It can be used with C++ compilers which understand templates Compilers: - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Education Author:Stefan Naeher FTP from ftp://ftp.mpi-sb.mpg.de/pub/LEDA/ Email:stefan@mpi-sb.mpg.de Postal address:Max-Planck-Institut fuer Informatik, Im Stadtwald, 6600 Saarbruecken, Germany ------------------------------------------------------------------------ libg++ - (GNU's C++ library) Libg++ is probably only relevant if you are using g++; and if so, you already know about it. It does have some good implementations of bignum's and of regular expressions and strings. Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://aeneas.mit.edu/pub/gnu/ ------------------------------------------------------------------------ Lily (LIsp LibrarY) - Gives C++ programmers the capability to write LISP-style code I think Lily will be useful in academia for instructors who want to teach artificial intelligence techniques with C++. The garbage collection mechanism employed by Lily is slow which will make it unattractive for commercial use. Documentation is minimal. The \"Lily User's Guide\" (in file lily.txt) provides a good overview of the architecture of Lily -- the document is unfinished. All of the example programs are from Winston's book \"LISP Second Edition\" so you will be much better off if you have a copy. Steele's \"Common LISP\" describes the behavior of the LISP functions. Operating Systems: - PC Windows 3 - Unix Compilers: - Gnu CC - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft FTP from ftp://sunsite.unc.edu/pub/packages/development/libraries/lily-0.1.tar.gz ------------------------------------------------------------------------ LinAlg.shar - basic linear algebra classes and applications basic linear algebra classes and applications (SVD, interpolation, multivariate optimization) The package contains declarations of Matrix, Vector, subMatrix over the real domain, and *efficient* and fool-proof implementations of level 1 & 2 BLAS (element-wise operations + various multiplications), transpositions and determinant evaluation/inversion. There are operations on a single row/col/diagonal of a matrix. The \"new style\" of returning matrices (via LazyMatrix) and filling them out. New in the Jan 1996 version: extended to include singular value decomposition (SVD) and its applications to (a regularized) solution of simultaneous linear equations (with possibly rectangular matrices) and (pseudo)matrix inverse. This version of LinAlg.shar also includes Aitken-Lagrange interpolation over the table of uniform or arbitrary mesh, and a Hook-Jeevse local multidimensional minimizer, formerly of hl_vector.shar package. Matrix/Vector/etc classes are expanded with new methods. More attention to Matrix/Vector promises. The code is made cross-platform compatible (compiles both under UNIX and on a Mac). See LinAlg.h for the complete list of classes and functions, and vmatrix.cc, vvector.cc, etc. test drivers as to how the features can be used. See README for hints. Operating Systems: - Mac - Unix - Solaris - IBM AIX - Dec Alpha - SGI Irix Compilers: - Gnu CC - MetroWerks CodeWarrior Added : 22/05/96 Amended : 30/07/96 Licencing : Public Domain Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/LinAlg.cpt.hqx - Mac version FTP from ftp://replicant.csci.unt.edu/pub/oleg/LinAlg.shar - Unix version FTP from ftp://netlib.att.com/netlib/c++/lin_alg.shar.Z WWW http://mozart.compsci.com/~oleg/ftp/LinAlg.README.txt - README file Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1996 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:46 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!howland.erols.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (5/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:43 GMT Organization: Trumphurst Ltd. Lines: 1410 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256162 comp.answers:25746 news.answers:101459 Archive-name: C++-faq/libraries/part5 Comp-lang-c++-archive-name: C++-faq/libraries/part5 Available C++ libraries FAQ (5/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (this file) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Commercial libraries (A-N) ~~~~~~~~~~~~~~~~~~~~~~~~~~ Allegris Workshop - Application framework for building portable applications and reusable components Application framework for building portable applications and reusable components by professional C++ developers. Includes the following features; - Over 180 C++ classes - Model View Controller Framework - Portable Resource Workshop - Support for ActiveX - Web Server application classes - Internationalization Support - Full source code included Available on a per user, per platform basis, $995. Full support is available. Operating Systems: - PC Windows - OS/2 - Solaris - IBM AIX - HP UX - Dec Unix Added : 13/11/96 Amended : 13/11/96 Licencing : Commercial Fax:(301)838-5064 FTP from ftp://ftp.intersolv.com/solution/allegris/workshop.htm WWW http:www.intersolv.com Email:allegrisinfo@intersolv.com Postal address:INTERSOLV,9420 Key West Avenue,Rockville, MD 20850 Tel:(301)838-5000 ------------------------------------------------------------------------ Aspect This is a C library, though they're type safe for C++ compatibility. A GUI builder is provided with the library. They're coming out with a C++ class library soon. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(719)576-3835 Postal address:OPEN Inc., 655 Southpointe Court, Suite 200, Colorado Springs, CO 80906 Tel:(719)527-9700 ------------------------------------------------------------------------ Booch Components Rational markets the C++ Booch objects which are a somewhat bizarre, but possibly quite innovative, set of library objects. It appears quite complete (unless you have some specific, uncommon needs); Booch may have an edge in supporting concurrency. USL may have more installations and greater maturity. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Tel:408-496-3700 ------------------------------------------------------------------------ C++ Data Object Library - Data structures combined with automatic persistence C++ Data Object Library has a wide variety of data structures combined with automatic persistence (storage to disk). In many applications, using the library is like building your own OO database. The emphasis is on high performance and protection against allocation and pointer errors. The library can help practically any C++ project, but is especially useful for large and complex software projects designs such as VLSI CAD. Uses a code generator. Data relations are represented as objects. Protection against pointer errors is achieved by using rings instead of NULL ending lists. Smart iterators permit to delete objects while travering lists. Several methods of storing data to disk, including memory blasting (storing entire pages of memory). Portable programs and data, schema migration. Data organizations: lists, collections, aggregates, trees, graphs, dynamic arrays, hash tables, pointer links, reference counting, many-to-many relation, dynamic properties (like in LISP), virtual (disk access is if a large array), run-time access to type tables. The library is build on ideas described in \"Taming C++: Pattern Classes and Persistence for Large Projects\", by Jiri Soukup, Addison-Wesley 1994. Sells in full source, and runs with all major compilers. A C version with similar features but with a less elegant interface is also available. No licence restrictions and no marketing tricks. You can ship the source of the library with your programs, except for the code generator. A complete regression test, documentation and support comes with the basic price. We are one of the oldest class libraries in business, and we stand behind our software. Prices in US$: $299 DOS,WINDOWS, or MAC $599 UNIX workstations Postage included in North America, $25 for overseas. Operating Systems: - Unix - PC Windows - OS/2 - Mac Compilers: - Sun CC - HP C++ - Cfront - Borland C++ - Visual C++ - Zortech C++ 3.0 - Watcom C++ - Gnu CC - Dec CC Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:613-838-3316 Email:jiri@debra.dgbt.doc.ca Postal address:Code Farms Inc 7214 Jock Trail, Richmond, Ont., K0A 2Z0, Canada Tel:613-838-4829 ------------------------------------------------------------------------ C++/Views (Allegris Workshop) Product name now changed to Alegris Workshop. Cross-platform C++ class library designed for use by experienced commercial C++ developers. Originally written in Smalltalk, it was rewritten in C++ to provide greater performance and also to appeal to a greater number of developers. Includes the following features; - Cross-platform object-browser - GUI Painter - Portable Resource Files - Persistent Object Support - Fully portable Available on a per user, per platform basis, $995. Full support is available. Operating Systems: - PC Windows - PC 32-bit Windows - OS/2 - Motif Compilers: - Visual C++ - Borland C++ - Symantec C++ - IBM Cset++ - Sparcworks Added : 01/01/95 Amended : 13/11/96 Licencing : Commercial Fax:+44 (0)1727 869 804 Fax:301 838 5064 WWW http://www.intersolv.com Email:idsinfo@intersolv.com Postal address:Europe: INTERSOLV, Ltd Abbey View Everard Close St Albans, Herts AL1 2PS Postal address:USA/CANADA: INTERSOLV, Inc. 9420 Key West Avenue Rockville MD 20850 Tel:+44 (0)1727 812 812 Tel:800 547 4000 ------------------------------------------------------------------------ Classix In addition to Rogue Wave, Empathy offers a good general-purpose library called Classix. I do not have confirmed information, but I have been told that this library is no longer available. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ CommonPoint Application System - Comprehensive C++ class library for writing portable GUI applications It includes a GUI builder, a development environment, full international language support, full 2D and 3D graphics, multi-media, collection classes, customizable text and graphics editors, a compound document architecture, a workspace/finder, etc.. It is fully supported. Future versions will run on additional platforms. Operating Systems: - IBM AIX Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial WWW http://www.taligent.com/ Postal address:Taligent, Inc., Cupertino, CA ------------------------------------------------------------------------ CommonView - Iconic user interface from Glockenspiel This is a C++ UI library. In addition, it comes with container classes. The down-side is that some of the features are not supported across all platforms. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(516) 342-6947 Postal address:Computer Associates International, One CA Plaza, Islandia, NY 11788 Tel:(516) 342-2308 ------------------------------------------------------------------------ CP Graphics - CP Graphics Library for Windows Library features include: - Bitmap and DIB functions for loading, saving, scaling, displaying, copying and printing - Multimedia support for WAV, MID, FLC and AVI - Animation - transparent 'put' and sprite animation - Sound - Palette manipulation - Clipboard - High-level drawing functions CPDEMO.EXE shows the user interface created with CP Graphics Library: animated buttons, region buttons, frames and other features. To find out more or to download the demo or free Windows screen saver please visit the Web site below, or send an e-mail message. Operating Systems: - PC Windows Added : 14/03/96 Amended : 14/03/96 Licencing : Commercial Fax:+61 8 396 1477, +61 8 262 8130 WWW http://www.tne.net.au/cp Email:adavidovic@nexus.edu.au - Technical support Email:cp@tne.net.au Postal address:Computer Point, 71 Williamson Road, Para Hills 5096, South Australia Tel:+61 8 263 3623, +61 8 262 7751 ------------------------------------------------------------------------ Crusher! - Data Compression Toolkits The Crusher! Data Compression Toolkits are high-performance, portable data compression libraries. Crusher's comprehensive API of 45+ functions, identical across all platforms, provides buffer compression, file compression, archiving, subdirectory support, wildcards, disk spanning, encryption, self-extracting EXE's and more. Typical results compresses data to 20-50% of their original size or less. Implement full archiving in just four function calls. Crusher archives are portable across all supported platforms and full source code is included, as well as numerous sample applications. Includes ARQ.EXE, a convenient command-line utility for managing Crusher archives, and SETUP, a Windows installation/setup program. Supports all C/C++ memory models and languages such as Visual Basic and Delphi. Windows versions include VBX and OCX custom controls and full on-line documentation. Limited 30-day warranty. A free demo is available for downloading from our bbs or web site. Retail Platform Pricing (all prices are in U.S. dollar and include full C source code): - DOS $249 - 16-bit Windows $299 - 32-bit Windows $299 - Macintosh $299 - OS/2 $349 - Unix $349 Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 - Unisys Unixware - Mac Compilers: - Borland C++ - Visual C++ - Watcom C++ - Symantec C++ Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial BBS:606-268-1251 Fax:606-266-0726 WWW http://www.dcmicro.com Email:info@dcmicro.com Postal address:DC Micro Development, P.O. Box 54588, Lexington, KY 40555 Tel:606-268-1559 Tel:800-775-1073 ------------------------------------------------------------------------ DiaViews++ Class library for the development of graphical user interfaces (GUI) in OSF/Motif and C++ This library combines the power of the OSF/Motif toolkit with the advantages of the C++ language by means of completely encapsulating the Motif objects (widgets/gadgets). This means there is a C++ class for every Motif object. DiaViews supports the structured, object-oriented development of Motif interfaces. C++ features such as rigorous type checks and virtual functions, etc. enhance the efficiency of the development process. Advantages: - Uniform C++ interface with OSF/Motif - Framework for generating reusable UI components - Use of callback objects - Interface with Dialog Builder, the interactive tool from Siemens Nixdorf for OSF/Motif user interfaces - Simple and reliable handling of Motif resources - Automatic generation of make- files - Minimal training overhead Price for source license (all platforms): 1200 DM, ~800 US$ Academic or private use license: 300 DM, ~200 US$ (needs Generic++) Added : 01/01/95 Amended : 28/02/96 Licencing : Commercial Fax:(49) 89 893242-31 Email:info@ootec.isar.de Postal address:Alexander v. Zitzewitz, OO-Tec GmbH, Muenchener Strasse 45, D-82131 Gauting, W. Germany Tel:(49) 89 893242-0 ------------------------------------------------------------------------ Distinct TCP/IP - TCP/IP for Windows Software Development Kit C++ Class Libraries for FTP, Telnet and Windows Sockets. Allows developers to develop TCP/IP applications without making calls directly to a C Dynamic Link Library (DLL). Applications are created using the Distinct C++ Class Libraries, which take care of establishing the connection between the client and server side of the application. All functionality normally associated with calling a TCP/IP application is taken care of by setting data members and by handling upcall events. Applications are notified of errors, connection changes and incoming data by an upcall posted by the library to the applications window, by providing a callback function to the library or by making polling calls to the library at frequent intervals. Standard Edition:$495.00 Professional Edition:$695.00 Distinct TCP/IP Run Time: $100.00 Compilers: - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(408) 366-2101 Email:mktg@distinct.com Postal address:Distinct Corporation, 12901 Saratoga Avenue, #4, Saratoga, CA 95070 Tel:(408) 366-8933 ------------------------------------------------------------------------ DV Centro - C++ graphics framework for building visual language applications DV-Centro provides robust graphics, event management and utilities for efficiently developing applications that use non-textual interfaces. Visual language interfaces allow programming through manipulation of graphic objects. By overlaying, juxtaposing or inter- connecting graphic objects, a user can interact and manipulate the application. DV-Centro is designed for creating applications such as graphical editors and visual language applications - like diagram editors, finite state machine editors, simulation and control systems, etc. It provides: - graphics classes: primitives (line, point, circle etc.), rendering (Motif, Windows, Postscript), automatic damage repair, properties (color, fill, line styles etc.), transformations (rotation, scaling, translation) - graphical constraint management for graphical connectivity and containment. For example, keeping lines connected to boxes while editing a diagram. - event handling classes for platform-independent definition of events, states and responses used to define how the system behaves. - mechanisms for graphical editing (n-level undo/redo, copy/cut/paste, save/restore etc.) - utilities: run-time type checking, memory management - classes to link data to graphics so you have \"smart diagrams\" - Python bindings to Centro for rapid development without long C++ compile times Operating Systems: - SunOS - Solaris - HP UX - PC 32-bit Windows Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:413-586-3805 WWW http://www.dvcorp.com Email:info@dvcorp.com Postal address:DataViews Corporation 47 Pleasant Street Northampton, MA 01060 Tel:413-586-4414 ------------------------------------------------------------------------ fACTs++ Class Library - Financial Application Construction Tools in C++ A homogeneous tool-box of more than 300 C++ classes and templates. fACTs++ provides programmers with design patterns for distributed client-server applications supporting multi-currency securities and transactions, along with associated international conventions. The library includes a complete set of foundation classes, parallel processing and communication classes, extendible financial instrument hierarchy and financial modeling classes. fACTs++ features include: - Dynamic Object Type Identification with Smart Pointers - Streams Interface - Container Templates - Time, Date, Calendar and Timer classes - String and Regexp Classes - Mathematics and Financial Modeling Classes - Internationalization Support - Interface To Persistence Storage and Extendible Objects - Application Configuration Framework - Human-Computer Interface Tools, including Model-Viewer Controller Classes - Distributed Processing Primitives and Client-Server Framework - CashValue, CashFlow, Payment, Yield and DayCount, Market classes - Comprehensive and extendible set of instrument definitions, such as Swap, Bond, Basket and Derivative - Portfolio, Position and Transaction Classes - Yield Curve, Volatility and Time Series Classes fACTs++ is available, on a per-project basis, as part of Objective Edge's custom software engineering service. The company's training program allows clients to quickly \"ramp-up\" their object-oriented development projects, providing early, visible results while reducing development costs. Upon project completion, clients are left with a technology base and application architecture which they are able to leverage in future development activities. fACTs++ is currently supported on Solaris 2.X and x86, and may be ported to any POSIX compliant platform on a custom development basis. fACTs++ is a trademarks of Objective Edge Inc. Copyright(c) 1994, 1995 Objective Edge Inc. All rights Reserved. Operating Systems: - Solaris Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:416-485-6473 WWW http://www.objectiveEdge.com/ Email:info@objectiveEdge.com Postal address:Objective Edge Inc. Suite 401, 194 Merton Street Toronto, Canada M4S 1A1 Tel:416-485-7186 ------------------------------------------------------------------------ Forward Error Correction Library - Reed-Solomon Forward Error Correction Supports Reed-Solomon Forward Error Correction encoding and decoding for many different codes Features: - ANSI C++ class library, can be called from C or C++ - Designed for ease of use and flexibility - Generate/test Reed-Solomon codes with an absolute minimal knowledge of error correcting codes - Provides C++ classes to allow finite field matrix and polynomial operations to allow generation of other codes Licensing/pricing: please contact us. Operating Systems: - PC DOS - PC Windows Compilers: - Borland C++ Added : 09/09/96 Amended : 09/09/96 Licencing : Commercial WWW http://www.scotweb.com/4i2i/ Email:101361.474@compuserve.com Postal address:4i2i Communications Ltd, 56 High Street, New Pitsligo, Aberdeenshire, UK Tel:(+44) 1224 733569 ------------------------------------------------------------------------ G-BASE/GTX (MATISSE) - Object Oriented Database Contact: Christina Bernard, Marketing and Communications Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(617) 547-5420 Email:info@odb.com Postal address:ODB, an Intellitic Intl Co., 238 Broadway, Cambridge, MA 02139 Tel:(617) 354-4220 ------------------------------------------------------------------------ Galaxy This is a C UI library, but it's written in an object-oriented style and is type safe for C++ use. The package includes a WYSIWYG GUI builder. The tools are, reportedly, pretty full-featured. User-interface items have extensive abstraction (for example, they have a confirmation-type dialog that resolves to a push-pin and 'apply' button under openlook, but 'ok', 'apply', 'cancel' buttons under motif). Objects can be positioned relative to each other (rather than merely absolute position on the screen). Also, errors are handled with an abstract exception handling framework. They support internationalization of fonts (at least Japanese), money, and data formatting. Some extra-cool features include memory leak detection and C-language objects for text (multi-styled, multi-font text with embedded graphics), list (spreadsheet-like for handling up to 2^31 x 2^31 cells with customizable displays), and graphics processing. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(703) 758-2711 Email:galaxy@visix.com Postal address:Visix, 11440 Commerce Park Drive, Reston, Virginia 22091 Tel:(800) 832-8668 ------------------------------------------------------------------------ GEMSTONE Object Oriented Database Briefly, GemStone is a full featured OODBMS with transaction control, multiple users, multiple platforms supported, client server architecture, active objects (ie, behavior can occur in the database as well as in the application using it), multiple language support, etc. GemStone is actually quite a bit more than just a data repository - it is a full-fledged DBMS that is pure OO. You can access the same database just as easily from C, C++, or SmallTalk, or you can build entire database applications inside the database server, because it is an active server that runs methods written in our DML, OPAL, which is a dialect of SmallTalk. There are also high-level tools to aid application building. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:510-814-6227 Email:marcs@slc.com Postal address:UK Office:, Servio-UK Ltd, Criterion House, Beauchamp Court, Victors Way, Barnet, EN5 5TZ, England Postal address:Servio Corporation, 950 Marina Village Parkway, Suite 110, Alameda CA 94501 Tel:(181) 447-0800 Tel:800-243-9369 Tel:510-814-6200 ------------------------------------------------------------------------ Generic++ Class library with container classes and basic data types for the development of portable, object-oriented applications. Actually (Feb 96) won the readers choice award of \"Objekt Spektrum\", which is a German SIGS publication. This C++ library is completely new. It is aimed at commercial users and implements a generous selection of application-independent basic classes. Its use frees the user from error-prone and time-consuming specific tasks (e.g. main memory management). All libraries previously available on the market are targeted more or less specifically on a particular system environment. However, it is becoming more and more urgent to make as many application modules as possible independent of a specific target platform. What gives Generic++ its competitive edge is the portability of its components and the way it takes account of other software engineering aspects. Advantages: - Implementation of the most important application- independent basic classes - Availability on all standard operating systems and platforms - Accommodation of the latest C++ extensions such as templates and exception handling - Co-existence with other libraries - High degree of runtime efficiency and low resource consumption - Integrated debugging support - Template-based, typesafe container classes with interchangeable implementation data structures - Smart cursors - Suitability for use in the development of client/server applications in heterogeneous networks. - Support for multi-threaded applications - Persistent objects - Regular expressions - System independent handling of file and path names Price for source license (all platforms): 947 DM, ~610 US$ Academic or private use license: 300 DM, ~200 US$ Operating Systems: - Unix - PC Windows NT - OS/2 - PC Windows - PC DOS Compilers: - Cfront - IBM xlC - Watcom C++ - IBM Cset++ - Borland C++ - Symantec C++ Added : 01/01/95 Amended : 28/02/96 Licencing : Commercial Fax:(49) 89 893242-31 Email:info@ootec.isar.de Postal address:Alexander v. Zitzewitz, OO-Tec GmbH, Muenchener Strasse 45, D-82131 Gauting, W. Germany Tel:(49) 89 893242-0 ------------------------------------------------------------------------ Greenleaf ArchiveLib - C/C++ library for data compression/archiving Greenleaf ArchiveLib provides the developer a set of classes and functions to compress and store ASCII and binary data into an archive for storage, as well as to retrieve and expand the stored data from the archive. Features include: PKZip 2.0x archive support - insert, extract, delete, list and more 3 compress and decompress engines: PKZip 2.0x compatible Greenleaf engine: lossless, dictionary-based Copy engine as alternative for small files Portable data compression engines are fast and efficient Progress meter & message classes Functions to add, replace, delete, update and retrieve objects of compressed data within the archive The price is $279 and this includes full source code. There are no royalties when distributed in executable format. Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 Compilers: - Visual C++ - Borland C++ - Symantec C++ - Watcom C++ - IBM Cset++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(214)250-3778 Fax:(214)248-7830 WWW http://www.gleaf.com/~gleaf.com Email:info@gleaf.com Postal address:Greenleaf Software, Inc. 16479 Dallas Pkwy. STE 570 Dallas, TX 75248 Tel:(800)523-9830 Tel:(214)248-2561 ------------------------------------------------------------------------ Greenleaf Comm++ Comm++ is an synchronous RS-232 communications library that provides interrupt-driven, circular buffered service for 35 ports at baud rates to 115,200 baud. Classes are provided for: serial port controls, modem controls, file transfer protocols and calculation of check values. Features include: XMODEM, YMODEM, ZMODEM, CompuServe B+, Kermit and ANSI file transfer support XON/XOFF, RTS/CTS flow control Support for Novell's NASI interface VT52 and VT100 (subset) terminal emulation support 286/386 Dos extender support The price is $279 and this includes full source code. There are no royalties when distributed in executable format. (214)248-2561 (800)523-9830 (214)248-7830 FAX (214)250-3778 BBS http:\\\\www.gleaf.com\\~gleaf.com email: info@gleaf.com Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - OS/2 Compilers: - Visual C++ - Borland C++ - Symantec C++ - Watcom C++ - IBM Cset++ Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(214)250-3778 Fax:(214)248-7830 WWW http://www.gleaf.com/~gleaf.com Email:info@gleaf.com Postal address:Greenleaf Software, Inc. 16479 Dallas Pkwy. STE 570 Dallas, TX 75248 Tel:(800)523-9830 Tel:(214)248-2561 ------------------------------------------------------------------------ Guild This is a C-language UI library, but they're type-safe for C++ compatibility. The package includes a GUI builder and an event occurrence monitor. Additional features in the library includes support for international character sets, portable file system support and nifty C-language classes for pie-charts, 3d bars, x-y plots, and the like. OPTIONS: - Graphic Modeling $995 - Oracle Database Bridge $395 - ODBC Database Access $495 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 349-4908 Postal address:Guild, 1710 S. Amphlett, 2nd Fl., San Mateo, California 94402 Tel:(415) 513-6650 ------------------------------------------------------------------------ ICpak101, ICpak201 Stepstone Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ IDB - Object Databases Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:412-963-1843 Postal address:Persistent Data Systems, P.O. box 38415, Pittsburgh, PA 15238-9929 Tel:412-963-1846 ------------------------------------------------------------------------ IKaID - Computer animation library Brief summary of purpose: Computer animation library as an addition to OpenGL, Direct3D, OpenInventor, Rave, etc. Short list of features: Inverse kinematics, rigid-body dynamics, 3D transformation routines, and classes, and a non-linear equations solver. All components have portions assembly-coded for speed on the Intel Pentium. Non-transferable single-user license $169.00. Contact us for details on other types of licenses. Operating Systems: - PC 32-bit Windows Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial WWW http://home1.gte.net/blazing/fast.htm Email:blazing@gte.net Postal address:Blaze Software, 171 Pier Avenue, Santa Monica, CA 90405 ------------------------------------------------------------------------ ILOG BROKER - Distributed Object Computing ILOG BROKER: C++ library and preprocessor that extend the C++ language to transparently support Distributed Object Computing environments. Developers can make any existing linked C++ application distributed, by minimally changing their header files. A set of about 15 keywords enable ILOG BROKER's preprocessor to generate standard C++ code. Once the header files have been annotated, the preprocessor automatically generates the C++ source code to build the distributed application. Communication between objects is performed through the use of local surrogates calling methods on the real implementation objects across a network. The current implementation relies on RPC for the transportation layer. ILOG BROKER annotations have also been designed to generate IDL code for CORBA 2 specifications. ILOG BROKER does not impose the use of a dedicated server. Each object in the distributed application can be both a client and a server to and for other objects, therefore providing a true peer-to-peer programming tool. Cost: $5,000 per Unix-based development license. Preferred university rates available upon request. Operating Systems: - Dec OSF/1 - HP UX - IBM AIX - Silicon Graphics - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG DB LINK - Connect RDBMS to C++ applications ILOG DB LINK: is a C++ library to connect RDBMS such as Sybase, Oracle, Ingres, Informix, or SQLBase to C++ applications. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG RULES - Data monitoring in real-time environments ILOG RULES: is a C++ tool for data monitoring in real-time environments. ILOG RULES embeddable inference engine applies rules directly on native C++ application objets. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG SERVER - C++ object server implementing real-time groupware applications ILOG SERVER is a C++ library and preprocessor for building reactive servers of C++ objects. It offers a client-independent external abstraction of the data, which ensures the coherence of the shared objects. Each client: - has its own API (Application Programming Interface) - only has to be concerned with the objects it manipulates - does not have to worry about other clients sharing the same objects ILOG SERVER is an extension of the SmallTalk Model View Controller (MVC) architecture to manipulate custom C++ objects instead of fundamental data types. Developers describe object models by annotating their header files using about 15 predefined keywords. Once the header files have been annotated, ILOG SERVER's C++ preprocessor automatically generates the appropriate C++ code. By extending the notion of a C++ pointer as a data member, ILOG SERVER makes it possible to easily build relationships with cardinalities between C++ classes that will automatically be maintained. This extension to C++ supports inheritance and relationships based on smart pointers. Cost: $5,000 per Unix-based development license. Preferred university rates available upon request. Demonstration CD-ROM available Operating Systems: - Dec OSF/1 - HP UX - IBM AIX - Silicon Graphics - Sun Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG SOLVER - Constraint reasoning library ILOG SOLVER: is a C++ constraint reasoning library for solving complex resource management problems such as scheduling, configuration, and planning. ILOG SCHEDULE: is an add-on library to ILOG SOLVER dedicated to solving scheduling problems. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG TALK - Object-oriented dynamic language ILOG TALK: is an object-oriented dynamic language offering a seamless integration with C++ class libraries. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ILOG VIEWS - C++ library and editor to design Very Graphical User Interfaces ILOG VIEWS 2 high-level C++ class library is fully extensible and portable across Windows, OS/2, and Unix platforms. It includes: - portable resources, event management, and PostScript support - a portable multi-look gadget library - extensive 2D graphic object library including charts and gauges - PowerObjects such as graph layout, spreadsheet, and Gantt chart - management of multiple views & layers (for cartographic applications) - double buffering, infinite undo, zooming, and other editing operations The development of portable VGUI applications is accelerated through ILOG PowerEdit, an extensible VGUI builder that generates standard C++ code. PowerEdit reusable components are provided with ILOG VIEWS 2 so that developers can create and distribute their own custom editors. ILOG VIEWS 2 Dynamic Variable mechanism offer an interpretor for writing C formulae between variables to control the attributes of objects. This allows for code-free animation and control of graphics objects. ILOG VIEWS 2 provides a message translation mechanism so that messages used in the interfaces may be translated dynamically. The look and feel of ILOG VIEWS 2 applications can be changed dynamically from Motif to Windows on all platforms. ILOG BUILDER: is a GUI builder that generates OSF/Motif interfaces in C and C++. It offers UIL read/write capabilities and tight integration with ILOG VIEWS. Operating Systems: - Dec OSF/1 - HP UX - Silicon Graphics - Sun - PC Windows - PC 32-bit Windows - OS/2 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+65 773 04 39 Fax:+33 1 4908 3510 Fax:+1 415-390-0946 WWW http://www.ilog.fr WWW http://www.ilog.fr Email:info@ilog.com.sg Email:info@ilog.fr Email:info@ilog.com Postal address:Asia: ILOG Pte Ltd., 02-05 Cintech Building, 3 Science Park Drive, SINGAPORE 118254 Postal address:Europe: ILOG SA, BP 85, 9 rue de Verdun, 94253 Gentilly Cedex, France Postal address:ILOG, Inc., 2005 Landings Drive, Mountain View, CA 94043, USA Tel:+65 773 06 26 Tel:+33 1 4908 3500 Tel:+1 415-390-9000 ------------------------------------------------------------------------ ImageSoft - Object/Engineering C++ class library supporting simulation. The library provides a natural approach to solving discrete-event simulation problems. Modularity is reinforced by implementing the process objects as concurrent tasks. Support is provided for dynamic systems; transaction operators; transaction messages; as well as queuing network thread with polymorphic scheduler (timer for discrete-event simulation; tracer for simulation run; processes in discrete-event simulation with services delay; conventional/unconditional blocking, pre-emption, etc.; shared queues/links in network with LIFO, FIFO & arbitrary queuing discipline; producing node and source; consuming node and sink; generic queuing network nodes and servers. And full source code is provided together with extensive documentation, examples and tutorial. There are also an enormous number of other class libraries included with source that are of interest to the scientific and engineering community. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:(516) 767-9074 Fax:(516) 767-9067 Email:mcdhup!image!object Postal address:ImageSoft Inc., 2 Haven Avenue, Port Washington, NY 11050 Tel:(516) 767-2233 ------------------------------------------------------------------------ KALA - Object Oriented Database Kala(tm) is a Persistent Data Server managing distributed, shared, arbitrarily complex and evolving persistent data. Kala is highly efficient and secure. Kala manages the visibility of persistent data elements to its clients, thus supporting any types of transactions, versions, access control, security, configurations. Kala does not restrict you to any particular model. Kala provides the mechanism, but imposes no policy. Ports to Windows and MacOS are also likely in the near future. Any port is possible as NRE. Kala's interface is ANSI C, also callable from C++. Contact: Sergiu S. Simmel Operating Systems: - Sun - Sparc - PC DOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:+1-617-646-5753 Email:sss@world.std.com Email:kala-request@world.std.com Postal address:Penobscot Development Corporation, 50 Princeton Road, Arlington, MA 02174-8253, USA Tel:+1-617-646-7935 ------------------------------------------------------------------------ Libsetl - programming symbolically in C++ Libsetl is a C++ library that is designed for supporting symbolic computing in C++. Based on a very high-level symbolic programming language (SETL), libsetl offers a number of powerful features that are available only for advanced symbolic languages. These features include latent types, high-level constructs (sets, maps and tuples), high-level operations through polymorphism, efficient iterators, runtime type checking, automatic memory management, intuitive syntax, and more. C++ programs written using libsetl do not have common C++ errors like memory leaks or memory corruptions. Runtime errors are detected and handled gracefully by using exceptions. Libsetl and its related files are proprietary materials. But free copies of precompiled packages are available for evaluations or education/research purposes. Operating Systems: - PC DOS - PC Windows 95 - Linux - SunOS - Solaris - HP UX Compilers: - Gnu CC - Visual C++ - HP C++ - Cfront Added : 28/03/96 Amended : 28/03/96 Licencing : Demo Fax:908.957.7189 WWW http://www.landsoft.com Email:landsoft@landsoft.com - Land Software Postal address:Zhiqing Liu, Land Software, 162 von Neumann Drive, Princeton, NJ 08540 Tel:908.957.3891 ------------------------------------------------------------------------ Linpack.h++ - The jewel of C++ math classes. Linpack.h++ includes all of Matrix.h++, plus all of the functionality in the original and well- established Fortran version; including solutions of systems of equations for a variety of matrix types, solutions of over- and under-determined systems of equations, incremental least squares solvers, etc. But, Linpack.h++ is a tru object-oriented library, not just a C version that compiles under C++: the traditional messiness of the Fortran version has been replaced with high-level, yet efficient, objects that make code far easier to write and maintain. Prices range from $299 to $1195 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ M++ M++ isn't as well known as the RogueWave math.h++ libraries, but it has been around for many years. It has a number of features that distinguish it from the RogueWave classes, notably improved handling of temporaries. M++ was explicitly designed to provide the functionality of an array language like Matlab or Gauss and it contains the Linpack, Eispack stuff found in RogueWave's Linpack.h++. Dyad Software, also sell modules written in M++ for doing statistical work, including linear and nonlinear least squares estimation, as well as optimization, numerical integration, and differential equations. Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial BBS:206-271-9486 Fax:206-637-9428 Postal address:Dyad Software, 6947 Coal Creek Pkwy, Suite 361, Renton, WA 98059-3159 Tel:206-637-9426 ------------------------------------------------------------------------ MacApp (application development toolkit) Apple Operating Systems: - Mac Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ MainWin - MFC on Unix (Microsoft Foundation Classes) Developers can develop on Unix using the MFC library as on the PC. With virtually no change to the source code compared to the PC version (typically less then 1 per 1000) they produce unix version using the MainWin libraries. Most advanced features of MFC are supported like OLE, activeX, WinInet, multithreading, common controls. The look and feel of the application on unix is either Windows or Motif, and can be changed at runtime. Requires the C++ compiler from the platform vendor. Current MFC version (as of 11/96): 4.2 Operating Systems: - Solaris - SGI Irix - Dec Unix - HP UX - SCO Open Desktop Added : 01/01/95 Amended : 19/03/97 Licencing : Commercial Author:MainSoft corporation Fax:1 408 774 3404 WWW http:www.mainsoft.com Email:info@mainsoft.com Postal address:1270 Oakmead parkway, Sunnyvale CA 94086 Tel:1 408 774 3400 ------------------------------------------------------------------------ Matrix.h++ - includes all the functionality of Math.h++. For example: general matrices, vectors, statistics, complex numbers, Fast Forier Transformation (FFT's), etc. Matrix.h++ adds specialized matrix classes such as banded, symmetric, positive-definite, Hermitian, tridiagonal, etc. Because Matrix.h++ includes Math.h++, it can take advantage of Math.h++'s highly optimized low-level assembly routines, making it fast as well as graceful. Prices range from $199 to $995 Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(503) 757-6650 Email:info@roguewave.com Postal address:Rogue Wave Software, Inc., 1325 NW 9th Street, Corvallis, OR, 97330 Tel:(503) 754-2311 ------------------------------------------------------------------------ Memory Tuning System (MTS) - Fast, efficient memory allocator Specifically designed to minimize paging and data fragmentation Improves run-time performance by: - Minimizing virtual memory paging - Providing faster malloc/free calls - Minimizing memory fragmentation Improves programmer productivity with: - Standard C library malloc interface - Works with C, C++, FORTRAN - Availability on Unix, OS/2, Win32s and Windows NT - Consistent performance across multiple machines - MTS shipped as portable C source code Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:Western Office: 303.416.0753 Fax:Eastern Office: 508.454.7559 Email:al@newcode.com Email:zeev@newcode.com Email: info@newcode.com Email:al@newcode.com Email:zeev@newcode.com Postal address:Western Office: NewCode Technology, Inc., 2406 Newport Court, Fort Collins, CO 80526 Postal address:Eastern Office: NewCode Technology, Inc., 650 Suffolk Street, Lowell, MA 01854 Tel:Western Office: 303.416.0784 Tel:Eastern Office: 508.454.7255 Tel:Corporate Headquarters: 1.800.NEWCODE (1.800.639.2633) ------------------------------------------------------------------------ MFC Toolkit 2.0 - MFC extensions The Toolkit product contains MFC extensions that make the programming job easier and improve your product. Examples of this include: - a bitmapped button class that generates all required images from a single 16 or 256-color bitmap - a class that allows subclassing of windows already subclassed by MFC - a fully-customizable docking toolbar that extends customization even to allowing the end-user to edit bitmap images on buttons - a class from which you can derive your own docking splitters - a simple splitter window with dynamic reorientation horz/vert - routines to find a runtime-class structure from its ascii name, check inheritan! ce using ascii names only, etc These are just a few examples; the toolkit contains more than this, is shipped with an extensive HLP file and full source code, and works with both the 32 and 16-bit versions of MFC. Operating Systems: - PC Windows - PC 32-bit Windows Compilers: - Visual C++ Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial Author:McAdams Research WWW http://home.sprynet.com/sprynet/smcadams - Demo Email:smcadams@sprynet.com ------------------------------------------------------------------------ NeoAccess Developer's Toolkit - Cross-platform object database engine for C++ development NeoAccess(TM) is a full-featured object database engine for use in Windows, Macintosh, Unix and DOS based applications. NeoAccess's feature set include: Blobs, part lists, iterators, swizzlers, temporary objects, multiple indices on a class, a powerful relational object query mechanism, a very small memory and file footprint and a streams-based I/O model. NeoAccess has the complete set of features that in-house and commercial developers need and an easy to use programming interface that hides internal complexity to keep C++ developers productive. In much the same way that application frameworks are used to construct the front-end of an application, NeoAccess is the framework developers use to build an application's back-end. NeoAccess is a set of C++ classes that naturally extends standard application frameworks such as Metrowerks' PowerPlant, Symantec's THINK Class Library and Apple's MacApp on the Macintosh and Microsoft's Foundation Classes, Inmark's zApp and Borland's ObjectWindows in Intel-based environments. NeoAccess is very portable and can also be used without an application framework. NeoAccess comes complete with full source code. The same NeoAccess source code can be used to build Windows ('95, NT and 3.x), Macintosh, Unix (all platforms) and DOS applications. The programming interface is virtually identical in all environments. NeoAccess-based applications produce single file documents that are binary-compatible across platforms. That is, a database built on one platform can be used on any other platform without conversion. The NeoAccess Developer's Toolkit is priced at $749 per developer with no runtime licensing fees. It includes full source code, numerous sample applications, 450+ pages of documentation, and 30 days of online technical support. Operating Systems: - PC Windows - Unix - PC DOS - MacOS Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(510) 524-4501 FTP from ftp://ftp.neologic.com/users/neologic/ WWW http://www.neologic.com/~neologic/ Email:neologic@neologic.com Postal address:NeoLogic Systems, Inc. 1450 Fourth St., Suite 12 Berkeley, CA 94710 Tel:(510) 524-5897 ------------------------------------------------------------------------ NetClasses++ - C++ classes for message passing environments: NetClasses is a set of C++ class libraries that is organized as an object- oriented software toolkit for distributed, message-passing based programming. Facilities include : Transporting objects over a network. NetClasses can transport: Arbitrary C++ objects derived from PostModern's TransObject class, arbitrary NIH- derived objects, and NetClasses Typed Objects. - NetClasses Typed Objects provide an object-oriented data transport in which the structure and organization of objects is specified externally in configurable files using a simple, programming language independent abstract syntax notation, the NetClasses Abstract Syntax Notation (NASN). - Remote method invocations (RMI). Using RMI, an application on machine B can invoke a method on machine A. RMI makes fault tolerance and connection management transparent to the application programmer. The RMI layer is built on top of the distributed services package that is described below. - Reading and writeing all three varieties of NetClasses-transportable objects on streams using machine-independent external representations. Prices : - NetClasses Development License $1995 - NetClasses Runtime License $495 - NetClasses Source Code License $7995 (includes 3 runtime licenses) - NetClasses training class $2000 - NetClasses consulting and porting services (ask for quote) Operating Systems: - Sparc Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial Fax:(415) 572-1300 Postal address:Qualix Group, 1900 S. Norfolk St. Suite 224, San Mateo, CA 94403 Tel:(415) 572-0200 Tel:1-800-245-UNIX ------------------------------------------------------------------------ NeXTStep - application development toolkit NeXT Added : 01/01/95 Amended : 01/01/95 Licencing : Commercial ------------------------------------------------------------------------ NuGraf - Deveoper's 3D Toolkit The NuGraf Developer's 3D Toolkit is a powerful and general purpose 3D graphics framework (in C, but C++ type-safe) providing full-featured hierarchical database management, modeling and high-quality \"photo-realistic\" rendering capabilities. The toolkit is designed as a complete \"drop-in\" solution for third party software vendors seeking to quickly and efficiently incorporate high quality 3D computer graphics into their software packages. The toolkit provides all of the necessary components to build a complete interactive 3D modeling and rendering system. These components include a state-of-the-art \"photo-realistic\" renderer, modeling and database management, coordinate space mapping, object and polygon picking, automatic smoothing and processing of raw polygonal data (useful for DXF file import), as well as optimized wireframe output for fast interactive data manipulation. The toolkit also handles all aspects of the 3D rendering process, alleviating the host application from dealing with such mundane tasks as error handling and recovery, color output conversion (for those output devices with few colors) and file/display output. It features all of the functionality normally associated with a high-end rendering system but neatly packaged into componentized modules. NuGraf is ideally suited for: - Inclusion into CAD packages which have a graphical user interface and existing 3D modeling capabilities, but no rendering features. - 3D applications with weak or older renderers, or those that depend upon slow ray tracing. - 3D applications which currently use real-time, medium quality renderers such as Open GL or 3DR. - Developers writing 3D modeling applications which require powerful rendering capabilities, color conversion and scanline output to various devices. - Any developer wishing to create a 3D modeling and rendering system from the ground up. - 3d font creation programs. Pricing: Development licences = $3500 for \"Application Builder\" version, $995 for \"Render Extender\" version. Royalties apply for commercial applications developed with the toolkit. Highly portable, inquire about other platforms. Please refer to WEB site for further information, online API spec, extensive slide show and pricing. Operating Systems: - PC Windows - PC 32-bit Windows - Linux - SGI Irix - Sun Compilers: - Watcom C++ - Gnu CC - Sun CC Added : 05/02/96 Amended : 05/02/96 Licencing : Commercial Fax:905-672-2706 WWW http://www.okino.com Email:sales@okino.com Postal address:Okino Computer Graphics, Inc., Mississauga, Ontario, Canada. Tel:905-672-9328, ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!su-news-hub1.bbnplanet.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!news-peer.gsl.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:47 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!su-news-hub1.bbnplanet.com!cpk-news-hub1.bbnplanet.com!news.bbnplanet.com!news-peer.gsl.net!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (4/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:49 GMT Organization: Trumphurst Ltd. Lines: 659 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256163 comp.answers:25747 news.answers:101460 Archive-name: C++-faq/libraries/part4 Comp-lang-c++-archive-name: C++-faq/libraries/part4 Available C++ libraries FAQ (4/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (part3) Tools for C++ Programmers (this file) Libraries with no known FTP site (this file) Source code from books (this file) Other places to look for details of C++ libraries (this file) Useful ftp sites (this file) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Tools for C++ Programmers ~~~~~~~~~~~~~~~~~~~~~~~~~ C++ component search engine - Searches C++ Libraries FAQ for components This is a Web page containing a Java search engine which searches the C++ Library FAQ for libraries or components which match your criteria. I have tried this myself, and it is a very neat Web page. It even plays music to you while the search progresses! Just select \"Search Library\", then enter your search string and press return. Added : 13/11/96 Amended : 13/11/96 Licencing : Not known WWW http://pascal.math.msstate.edu:4000/PROJ ------------------------------------------------------------------------ Cback - Cfront optimiser Cback optimizes C source from the cfront C++ translator to create easy to read, smaller, faster and portable C source, while maintaining or improving compile times Improves run-time performance by: - Minimizing object code size (especially in debug) - Minimizing cfront output code size - Simplifying cfront data structures and expressions Improves programmer productivity with: - Easier to read C source from cfront output - Portable C source from cfront output - Faster link times, reducing the debug cycle - Seamless integration into existing compile paths - Availability on a broad range of Unix platforms Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:303.416.0753 Fax:508.454.7559 Email:al@newcode.com Email:zeev@newcode.com Email:info@newcode.com Postal address:Western Office: NewCode Technology, Inc., 2406 Newport Court, Fort Collins, CO 80526 Postal address: Eastern Office:NewCode Technology, Inc., 650 Suffolk Street, Lowell, MA 01854 Tel:Corporate HQ: 1.800.NEWCODE (1.800.639.2633) Tel:303.416.0784 Tel:508.454.7255 ------------------------------------------------------------------------ ClassAction - OO design and C++ code gen ClassAction is an Object Oriented design tool for Windows 95 based on an approximation of the OMT methodology. It generates C++ code suitable for MFC 4.0. Contains context sensitive help, floating/dockable toolbar, drag/drop support. Also has install/uninstall. The current version is the first beta version. Operating Systems: - PC Windows 95 Added : 07/08/96 Amended : 07/08/96 Licencing : Shareware Author:Shane Hyde, Trontech Pty Ltd FTP from ftp://ftp.simtel.net/pub/simtelnet/win95/prog/clsa10b1.zip Email:Shane_Hyde@msn.com ------------------------------------------------------------------------ Classdoc - AWK package to produce documentation from C++ source Dag Bruck has written this package in AWK. It produces UNIX-style manual pages from C++ class headers. If you are interested in automatic documentation, you might want to look at this. Added : 08/02/96 Amended : 08/02/96 Licencing : Not known Email:dag@control.lth.se - Mail Dag Bruck ------------------------------------------------------------------------ DocClass - Generates class documentation from source files Docclass is a simple C++ program which reads in C++ header files, and outputs documentation describing the class hierarchy, methods, inherited methods etc. Docclass has a rather dumb parser, but it should cope with reasonably sane C++ class declarations. It understands comments, and tries to group the comments with the appropriate class or method. Docclass does not require templates, or nested classes, as many people had C++ compilers which didn't support them. With any luck, it should understand them a little in the code it analyses, though. Docclass is Copyright (c) Trumphurst Ltd. I have made it available on the Internet for personal use only. Please do not use it in a commercial situation (except for testing to see if it is suitable) without first obtaining permission (mail address below). Operating Systems: - Unix - PC DOS Compilers: - Borland C++ - Zortech C++ - Gnu CC Added : 08/02/96 Amended : 08/02/96 Licencing : Copyrighted freeware FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.txt - Text description FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.tar.Z - Unix version FTP from ftp://ftp.demon.co.uk/pub/trumphurst/docclass/docclass.zip - DOS version WWW http://www.trmphrst.demon.co.uk/docclass.html - DocClass Web page Email:docclass@trmphrst.demon.co.uk - Mail the author ------------------------------------------------------------------------ MkHelp - Generate HTML documentation from source files Pretty good beta level documentation generator. Generates fully cross-referenced class descriptions from .i files output by your compiler's preprocessor. Can extract comments from the source code and include them in the documentation (comments have to be immediately before the class, variable or method). Pretty configurable - can generate the files in any language, for instance. Has a few problems with some apparently correct syntax, and does not document typedefs, enums or global variables. Operating Systems: - PC 32-bit Windows - Solaris Compilers: - Borland C++ - Visual C++ - Cfront Added : 02/08/96 Amended : 02/08/96 Licencing : Non commercial WWW http://www.geocities.com/CapeCanaveral/1330/mkhelp.html Email:wilmot@mail.club-internet.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 19/03/97 Amended : 19/03/97 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/Sun/DCE threads PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. PTL provides an object interface (C++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris Pthreads (Native kernel Solaris threads) =Copyrighted freeware Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 19/03/97 Amended : 19/03/97 FTP from ftp://alix.inria.fr:/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ PTL - Portable Threads Library - C++ interface to POSIX/QSun/DCE threads &content=PTL is a free library (GNU LGPL license) to ease the port and debug of multithreaded applications. APTL provides an object interface (++) to threads and synchronisation abtractions provided by existing threads packages. PTL is tiny (current size is 55K gziped). Currently supported architectures/machines are: - Dec alpha/OSF1 DEC threads. (Native DCE threads) - Dec alpha/OSF1 MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x +MIT Pthread (Pthread-1.60-b4 from C. Provenzano) - Sun Sparc/SunOs4.1.x +LWP threads (Native user level SunOS threads) - Sun Sparc/Solaris +Pthreads (Native kernel Solaris threads) ? Operating Systems: - Dec Alpha - Dec OSF/1 - Solaris - Sparc - SunOS Compilers: - Gnu CC Added : 13/11/96 Amended : 13/11/96 Licencing : Copyrighted freeware FTP from ftp://alix.inria.fr/pub/thread-lib/thread.tgz - Latest release WWW http://www-sor.inria.fr/~bruncott/PTL - Online Documentation Email:Georges.Brun-Cottan@inria.fr ------------------------------------------------------------------------ SNIP: A Programming Power-tool - SNIP takes in an IDL and uses it to create code according to code patterns SNIP is a programming power-tool for generating code from rules, or \"code patterns\" (AKA idioms). Sr. software engineers have often noticed patterns in their coding practices. SNIP allows those patterns to be captured and expressed in an executable template. An IDL-like input form is used to define objects. That IDL is then applied to the template to create code that a user would normally have typed in by hand. For more information, and an example, see the site that describes SNIP more fully at http://www.ultranet.com/~advsw Operating Systems: - Motif - PC 32-bit Windows - Solaris - Sparc - Microsoft Win32 based systems Compilers: - Apogee CC - Borland C++ - CRI C++ (Cray) - Dec CC - Gnu CC - Glockenspiel C++ - HP C++ - IBM Cset++ - IBM xlC - MetroWerks CodeWarrior - MPW C++ - SGI CC - SGI NCC - Sparcworks - Symantec C++ - Symantec THINK C++ - Visual C++ - WATCOM C++32 - Zortech C++ - Cfront Added : 19/03/97 Amended : 19/03/97 Licencing : Commercial WWW http://www.ultranet.com/~advsw - Site describing SNIP in full with examples Email:advsw@ma.ultranet.com - Contact Advantage Software Technologies about SNIP ------------------------------------------------------------------------ Libraries with no known FTP site ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Algebra - Collection of C++ classes to represent and edit equations in a GUI Object classes to represent/edit algebric equations in Windows: number, literal, boolean, + and - infinite, indeterminations group, document, line, page, list, sum, negation, division,multiplication, root, raise, equal, lessThan, lessThanOrEqual etc..., equivalent, implication. Implementing: log,exp,sin,cos,tg,cotg,cos,asin,acos,atg, logic operators, etc... Operating Systems: - PC 32-bit Windows Compilers: - Borland C++ Added : 28/03/96 Amended : 03/10/96 Licencing : Non commercial WWW http://www.geocities.com/Athens/6308 Email:RuiHFAzevedo@mail.telepac.pt ------------------------------------------------------------------------ DCE++ - A C++ API for Programming Distributed Systems DCE++ is a set of ANSI C++ classes that enable the rapid prototyping of distributed programs. The goal of DCE++ is to provide a platform independent C++ API to the significant components used in distributed computing. Namely: RPC, threads, Security and Naming across the widely used distributed computing platforms such as DCE, ONC and WNT. It is expected that by encapsulating platform dependencies inherent in setting up rpcs, security etc. in DCE++ base classes, program development time can be drastically reduced. Moreover, a foundation can be provided for developing *portable* distributed program development tools. The second *evaluation* version of DCE++, version 0.4, has been released on Dec 2'93. The release includes C++ bindings for remote procedure calls over DCE and ONC. A C++ threads api for programming DCE threads. A C++ threads api for programming DCE distributed Time Service. The release is available free of charge upon signing a very liberal license agreement. The license agreement is obtainable by anonymous ftp from hal.com. It is in the directory dce++. The same directory also contains the release notes for the 0.4 version and plans for 0.5 features. To obtain the code, please send the signed license agreement to: Added : 01/01/95 Amended : 01/01/95 Licencing : Copyright (other) Author:William Leddy, Arjun Khanna Fax:512-794-8737 FTP from ftp://hal.com/dce++/ Email:arjun@hal.com Postal address:HaL Computer Systems, Austin, Texas ------------------------------------------------------------------------ GenTools - A Computational Genomic Tool Suite The University of Texas System CHPC and collaborators are addressing the problems of high performance platforms by developing GenTools, an interactive, distributed, loosely integrated, set of tools for DNA and protein sequence data analysis, phylogenetic analysis, and restriction mapping which combines different algorithm implementations, machines, and databases through a \"bio-user\" friendly set of graphical user interfaces. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:(512)471-2445 Email:sarah@chpc.utexas.edu Postal address:Sarah Barron, GenTools Project Leader, Computational Molecular Biology and Genetics Group, University of Texas System Center for High Performance Computing, Balcones Research Center, CMS 1.154, 10100 Burnet Road, Austin, TX 78758-4497 Tel:(512)471-2434 ------------------------------------------------------------------------ MenuPlus - Menu class library for Turbo C++ for DOS The library contains functions that allow the programmer to easily implement custom popup, pulldown, and buttonbar menus. The menus are designed to have the look and feel of familiar menu systems found in many popular applications. MenuPlus provides all screen, keyboard, and mouse functionalilty built in. Simply declare a menu object (menu item names, hotkeys, and handler functions) and MenuPlus does the rest. MenuPlus is designed to be simple to use, yet versatile enough to allow customized look and operations of the menus. (Includes demos illustrating use.) Registration of $15 grants royalty-free use of the library and also provides registered owner with all source code. Operating Systems: - PC DOS Compilers: - Borland Turbo C++ Added : 13/11/96 Amended : 13/11/96 Licencing : Shareware Author:Jeffrey Schierenbeck Email:jssoft@aol.com Postal address:JS Software,517 Ingram Drive West,Eau Claire, WI 54701 ------------------------------------------------------------------------ Source code from books ~~~~~~~~~~~~~~~~~~~~~~ Bruce Eckel - Thinking in C++ eckelt03.zip contains the source code for Bruce Eckel's book \"Thinking in C++\" (Prentice-Hall 1995, ISBN: 0-13-917709-4). This is the complete set of source code files from the book, including corrections after the book was published. The package only contains ASCII text files. They were prepared and tested with a number of compilers under DOS/Windows, and are intended to represent the correct language implementation at the time of their creation, rather than a particular compiler. However, please be aware that the C++ language is still a draft standard, and some language elements are still subject to small changes. The package is distributed as copyrighted freeware (you can use the code, and redistribute the package, but you cannot distribute modified versions of the package or portions of the package). Special requirements: Compressed from the original DOS directory structure using PKZIP 2.04g. When you unzip the package, use the -d flag to create directories and maintain the directory structure. Changes: Includes errata sheets for the first printing of the book (corrected in the second printing). eckelt03.zip has replaced eckelt01.zip (distributed on CIS & AOL). Copyrighted FreeWare. Uploaded by the author, Bruce Eckel\n. Operating Systems: - PC DOS - PC Windows 3 Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Author:Bruce Eckel FTP from ftp://oak.oakland.edu/SimTel/msdos/cpluspls/eckelt03.zip Email:eckel@aol.com ------------------------------------------------------------------------ Coplien - Advanced C++ Programming Styles and Idioms Code from \"Advanced C++ Programming Styles and Idioms\" by James O. Coplien, Addison-Wesley, 1992, ISBN Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://netlib.att.com/netlib/c++/idioms ------------------------------------------------------------------------ Hansen - C++ Answers book Code from \"The C++ Answer Book\" by Tony L. Hansen , Addison-Wesley, 1990, ISBN 0-302-11497-6 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://netlib.att.com/netlib/c++/answerbook ------------------------------------------------------------------------ Smith - Object Oriented Software in C++ Source to the Book by Michael A. Smith \"Object-Oriented Software in C++\", Chapman & Hall, London. 1993. ISBN 0 412 55380 5. Added : 01/01/95 Amended : 09/02/96 Licencing : Not known FTP from ftp://unix.brighton.ac.uk/pub/mas Email:mas@unix.brighton.ac.uk ------------------------------------------------------------------------ Other places to look for details of C++ libraries ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ASSET ASSET is currently populating a library of reusable components and systems, and documents on software reuse, called the Worldwide Software Reuse Discovery library (WSRD, pronounced \"wizard\"). Included are assets in numerous languages including C++, C, and Ada. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known WWW http://source.asset.com/ Email:info@source.asset.com Email:theeke@source.asset.com Postal address:Obtaining an ASSET account or accessing the WSRD library: ASSET Attn: Account Administrator P.O. Box 3305 1350 Earl L. Core Rd. Morgantown, WV 26505 Postal address:Supplying products & advertisements: ASSET Attn: Patrick A. Theeke P.O. Box 3305 1350 Earl L. Core Rd. Morgantown, WV 26505 Tel:(304) 284-9000 Tel:(304) 284-9000 ------------------------------------------------------------------------ comp.object FAQ Added : 01/01/95 Amended : 01/01/95 FTP from ftp://rtfm.mit.edu/pub/usenet-by-group/comp.object/ Newsgroup:comp.object ------------------------------------------------------------------------ comp.windows.misc - Portable GUI-software FAQ Added : 01/01/95 Amended : 01/01/95 FTP from ftp://rtfm.mit.edu/pub/usenet-by-group/comp.windows.misc/ Newsgroup:comp.windows.misc ------------------------------------------------------------------------ ftp.th.darmstadt.de Added : 01/01/95 Amended : 01/01/95 FTP from ftp:ftp.th-darmstadt.de/pub/programming/languages/C++/c++-products/ ------------------------------------------------------------------------ numcomp-free-c.gz The index of resources for numerical computation in C or C++. Added : 01/01/95 Amended : 01/01/95 FTP from ftp://usc.edu/pub/C-numanal/numcomp-free-c.gz ------------------------------------------------------------------------ Robert Davies C++ list - Robert Davies' list of http and ftp sites relevant to C++ uses details of C++ libraries\". This file is mostly a list of http and ftp sites I have seen mentioned in the C++ newsgroups. Added : 13/11/96 Amended : 13/11/96 Licencing : Not known FTP from ftp://tahi.isor.vuw.ac.nz/pub/newmat08/cpp_site.txt FTP from ftp://nz.com/robert/cpp_site.txt ------------------------------------------------------------------------ Useful ftp sites ~~~~~~~~~~~~~~~~ Current CUG Library Catalog The CUG CD-ROM file listing offers the most comprehensive look at the programming tools and utilities available from CUG. The complete annotated listing (about 1 megabyte) is available through anonymous ftp as follows: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://cdrom.com//pub/cdrom/cdroms/cug/capsule.txt ------------------------------------------------------------------------ ftp.luth.se Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.luth.se/pub/languages/c++/ClassLibs/ ------------------------------------------------------------------------ ftp.th.darmstadt.de A major repository of C++ stuff, mostly under the directory tree starting at /pub/programming/languages/C++. Includes a product list (from which some of the information in this document was taken) in various formats in sub-directory c++-products. Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.th-darmstadt.de/pub/programming/languages/C++/ ------------------------------------------------------------------------ FTP/Mail gateways - Obtaining FTP files via email If you don't have ftp access, send email to ftpmail@decwrl.dec.com saying \"help\". You will get instructions on how to do ftp via email. European users might like to try ftpmail@grasp.insa-lyon.fr instead. Added : 01/01/95 Amended : 28/03/96 Email:ftpmail@grasp.insa-lyon.fr Email:ftpmail@decwrl.dec.com ------------------------------------------------------------------------ Netlib - research.att.com has email, ftp - ornl.gov has email, xnetlib - nac.no has email, xnetlib for Europe - unix.hensa.ac.uk is a mail server useful for Europe. - ci.cs.uow.edu.au (130.130.64.3) in Australia E.g. send email to netlib@ornl.gov to access by email. This is a mail server. Send mail with the text \"send index\" or \"send index from C++\" Added : 01/01/95 Amended : 01/01/95 Email:netlib@nac.no Email:netlib@ornl.gov Email:netlib@research.att.com ------------------------------------------------------------------------ Simtel The primary Simtel site is simtel.net, but there are many mirror sites all over the world. Added : 01/01/95 Amended : 28/03/96 FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/cplusplus/ ------------------------------------------------------------------------ Source code newsgroups ftp.uu.net (e.g. usenet/comp.sources.reviewed archives the comp.sources.reviewed newsgroup). Added : 01/01/95 Amended : 01/01/95 FTP from ftp://ftp.uu.net/usenet/ ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute From csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv Thu May 15 07:24:48 1997 Path: csus.edu!csulb.edu!hammer.uoregon.edu!arclight.uoregon.edu!feed1.news.erols.com!cpk-news-hub1.bbnplanet.com!cam-news-hub1.bbnplanet.com!news.bbnplanet.com!bloom-beacon.mit.edu!senator-bedfellow.mit.edu!faqserv From: nikki@trmphrst.demon.co.uk (Nikki Locke) Newsgroups: comp.lang.c++,comp.answers,news.answers Subject: Available C++ libraries FAQ (3/6) Supersedes:\nFollowup-To: poster Date: 25 Apr 1997 00:45:52 GMT Organization: Trumphurst Ltd. Lines: 1233 Approved: news-answers-request@MIT.Edu Expires: 8 Jun 1997 00:42:33 GMT Message-ID:\nReferences:\nReply-To: cpplibs@trmphrst.demon.co.uk NNTP-Posting-Host: penguin-lust.mit.edu Summary: Contains a list of available C++ libraries, both PD and commercial. X-Last-Updated: 1997/03/27 X-Mailer: cppnews $Revision: 1.43 $ Originator: faqserv@penguin-lust.MIT.EDU Xref: csus.edu comp.lang.c++:256164 comp.answers:25748 news.answers:101461 Archive-name: C++-faq/libraries/part3 Comp-lang-c++-archive-name: C++-faq/libraries/part3 Available C++ libraries FAQ (3/6) ================================= Contents ~~~~~~~~ Introduction (part1) Adding or amending entries (part1) Changes since the last update (part1) Libraries available via FTP (A-L) (part2) Libraries available via FTP (M-Z) (this file) Tools for C++ Programmers (part4) Libraries with no known FTP site (part4) Source code from books (part4) Other places to look for details of C++ libraries (part4) Useful ftp sites (part4) Commercial libraries (A-N) (part5) Commercial libraries (O-Z) (part6) Other commercial sources of C++ code (part6) ------------------------------------------------------------------------ Libraries available via FTP (M-Z) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ MatClass - a C++ class for numerical computation Very complete. - Offers a general purpose dense, real matrix class - Has a family of decomposition classes based on LU, Cholesky, Householder QR and SVD - Has a family of OLS regression classes based on above decompositons - A family of special function classes - Random number class - Has a simplified I/O structure Documents : Very thorough tex manual, with discussion of design philosophy. Currently the manual does not cover all the features of the I/O. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Chris Birchenhall FTP from ftp://ftp.mcc.ac.uk/pub/matclass/unix FTP from ftp://ftp.mcc.ac.uk/pub/matclass/pc Email:chris.birchenhall@mailhost.mcc.ac.uk ------------------------------------------------------------------------ MATCOM - Matlab to C++ translator and matrix library MATCOM V2 translates Matlab source files (M-Files) to C++ source code. The resulting code is linked with the supplied C++ Matrix class library to create MEX files or stand alone executables. The C++ code and library can be integrated in products, royalty free, saving the need to translate the algorithm prototype. Compiled code runs significantly faster than the original interpreted source. Source code created highly resembles the original code using C++ language features. The compilation is fully automated by a smart project manager. Matrices of doubles, floats, ints and chars are supported, providing lower memory usage for many applications, especially Signal and Image Processing. Evaluation version (fully functional, 30 days limited) is available for free download from the Web page. Information packet is also available by e-mail and fax. An introductory price for MATCOM V2 is 300$ for a single user license, with discounts on quantity and for academic institutes. Prices are valid until Jan 1, 1997. Operating Systems: - PC DOS - PC Windows - PC 32-bit Windows - Linux - SunOS - Solaris - SGI Irix - Dec OSF/1 - Dec Alpha - HP UX - IBM AIX - OS/2 Compilers: - Gnu CC - Visual C++ - Watcom C++ - Borland C++ - SGI CC - Dec CC - IBM xlC - Sun CC - HP C++ - EMX - DJGPP Added : 05/02/96 Amended : 08/08/96 Licencing : Commercial Fax:1-215-9571719 Fax:1-888-MATHTOOLS WWW http://www.mathtools.com Email:info@mathtools.com Postal address:MathTools LTD, P.O.Box 855, Horsham, Pennsylvania, USA 19044-0855 ------------------------------------------------------------------------ Matrix - A C++ Matrix class A C++ Matrix class, including a matrix implementation of the backward error propagation (backprop) algorithm for training multi-layer, feed- forward artificial neural networks. A C++ interface to existing C and FORTRAN matrix libraries. LaTeX manual. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:E. Robert (Bob) Tisdale FTP from ftp://ftp.cs.ucla.edu/pub/Matrix.tar.Z Email:edwin@cs.ucla.edu ------------------------------------------------------------------------ Matthew's Galib - A C++ Genetic Algorithm Library GAlib is a C++ library that contains a set of genetic algorithm objects. With GAlib you can add genetic algorithm optimization techniques to your program using any data representation and many different genetic algorithm operators. The library includes genomes based upon binary string, array, tree, and list data structures, and you can create your own genomes by simply deriving a new class from the base genome and any data structure that you may be using already. Many scaling, selection, termination, initialization, mutation, and crossover methods are included in the library, and you can override any of the defaults with operators.of your own design. Operating Systems: - SGI Irix - IBM AIX - Dec MIPS Ultrix - Solaris - HP UX - MacOS - PC Compilers: - Cfront - DCC - Gnu CC - MetroWerks CodeWarrior - Symantec THINK C++ - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Non commercial FTP from ftp://lancet.mit.edu/pub/ga/ WWW http://lancet.mit.edu/ga/ ------------------------------------------------------------------------ MetaKit - A portable C++ class library for persistent structured data Store and retrieve structured data. Features: on-demand loading, failsafe commit/rollback, portable and streamable data files, simple API in a few C++ classes. Comes with hypertext intro, many source code examples including disk catalog and Winsock client/server, and Winhelp API reference guide. No royalties. Link as DLL or LIB, Win32/Win16/Dos libs included. The shareware version is only for Windows and MFC. Registered users can obtain all library versions, including debug versions, and will be notified of new revisions and updates. Full web/email/fax support. MetaKit is freely distributable as shareware. It must be registered after the 30-day trial period: US$ 25 for personal/non-profit use. For all other purposes the source code version must be purchased (Windows/MFC $90, all others: Universal $165). Operating Systems: - PC DOS - PC Windows - Unix - Mac - OpenVMS Compilers: - Visual C++ - Symantec C++ - Watcom C++ - Borland C++ - Gnu CC - MetroWerks CodeWarrior - Dec CC Added : 22/03/96 Amended : 14/11/96 Licencing : Shareware Author:Jean-Claude Wippler Fax:+31-30-635-2337 WWW http://purl.net/meta4/metakit.zip - Metakit home page WWW http://purl.net/meta4/metakit.zip WWW http://purl.net/meta4/metakit - MetaKit home page Email:jcw@meta4.nl ------------------------------------------------------------------------ MIME++ - A class library for creating and parsing messages in MIME format Features - Intuitive object-oriented architecture. - Designed from the beginning to permit user customization or extension through inheritance (subclassing of library classes) and polymorphism. - Class names are taken directly from the BNF grammars given in RFC-822 and RFC-1521. - Supports all MIME types and subtypes documented in RFC-1521, including multipart, message, and application types. - Supports quoted-printable and base64 content transfer encodings. Other uuencode, binhex, and others will be supported soon. - Provides high-level, wrapper classes BasicMessage, MultipartMessage, and MessageWithAttachments that are easy to use. These wrapper classes also serve as examples showing how to use the basic library classes. MIME++ should compile with just about any C++ compiler. The system-dependent features, which are few, are oriented toward UNIX systems. Operating Systems: - Linux - Dec Unix - Silicon Graphics - PC DOS - PC Windows - Sun Compilers: - Gnu CC - SGI CC - Borland C++ - Sun CC - MetroWerks CodeWarrior Added : 25/11/96 Amended : 25/11/96 Licencing : Non commercial Author:Doug Sauder WWW http://www.fwb.gulf.net/~dwsauder/mimepp.html - MIME++ Web Page Email:dwsauder@tasc.com - author's alternate email address Email:dwsauder@fwb.gulf.net - author's preferred email address ------------------------------------------------------------------------ molbio++ - A C++ library for molecular biosequence analysis Major features include: - classes and services for reading and writing sequence data in the following formats: - Genbank Flatfile - EMBL / SwissProt - GCG / Wisconsin - Fasta / Pearson - PIR - NCBI Retrieve Server (read-only) - limited parsing of fields and features in biosequence files - storing amino acid or nucleic acid sequences - iterating over a biosequence - calculating and storing counts or frequencies of amino acids or nucleotides - device-independent graphics, via GCG's FIGURE program - translating nucleotide sequences into proteins using the universal genetic code or modifications thereof. - parsing BLAST output - calculating pI and molecular weight of proteins - amino acid hydropathy values of Kyte & Doolittle Alex Lin\nhas reported both of the ftp sites unavailable. Further information welcome. Added : 01/01/95 Amended : 08/08/96 Licencing : Not known Author:Keith Robison FTP from ftp://golgi.harvard.edu/pub/CONTRIBUTIONS/molbio++ FTP from ftp://ftp.ebi.ac.edu/ - Alternative site found by Herve Recipon ------------------------------------------------------------------------ Motif++ - A wrapper-library, that encapsulates Motif widgets in C++ classes All resources of these Widgets can now be set through member-functions, while objects can be used in callback-functions. The July 93 release offers: - Easy configuration (even for non-imake-gurus) - Full support for X11R4 as well as X11R5 - Full support for Motif 1.1 and Motif 1.2 (including Drag and Drop) - Support for Xbae widgetset - Support for the xpm library - Percentage widgets - Generic Widget - Support for WCL Table Widget - A library for easy manipulation of Visuals - A library that reads PBMPLUS files, as well as providing an extension to 3D of the format. - Lots of demos and testfiles (even somewhat useful programs) - An article I wrote on the usage of Motif, X and C++, previously posted on Usenet. - All filenames smaller than 14 characters Operating Systems: - X Windows - Motif Compilers: - Cfront Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Ronald van Loon FTP from ftp://src.doc.ic.ac.uk/packages/motif++/motif++.28.jul.93.tar.gz FTP from ftp://ftp.wg.omron.co.jp/pub/X11/misc/MOTIF.AND.WIDGETS/Motif++.tar.Z FTP from ftp://nrcnet0.nrc.ca/pub/motif++/motif++.28.jul.93.tar.gz FTP from ftp://decuac.dec.com//pub/X11/motif++.28.jul.93.tar.gz Email:motif++-request@motif.hacktic.nl Email:motif++@motif.hacktic.nl Email:rvloon@motif.hacktic.nl Tel:+31 33 758 293 (if desparate !) ------------------------------------------------------------------------ MTL110JE.ZIP - Multithreading class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ FTP from ftp://garbo.uwasa.fi/pc/c-lang/ ------------------------------------------------------------------------ Newmat - A very thorough matrix class This library supports classes Matrix, UpperTriangularMatrix, LowerTriangularMatrix, DiagonalMatrix, SymmetricMatrix, BandMatrix, UpperBandMatrix, LowerBandMatrix, SymmetricBandMatrix, RowVector, ColumnVector. Only one element type is supported. It includes the operations *, +, -, concatenation, elementwise product, inverse, transpose, conversion between types, submatrix, determinant, Cholesky decomposition, QR triangularisation, singular value decomposition, symmetric eigenvalue analysis, fast Fourier transform, sort, print, an interface to \"Numerical Recipes in C\" programs, and an emulation of exceptions. Compilers: - Borland C++ - Watcom C++ - Visual C++ - Gnu CC - Cfront Added : 01/01/95 Amended : 30/07/96 Licencing : Copyrighted freeware Author:Robert Davies FTP from ftp://oak.oakland.edu/pub/simtelnet/msdos/cpluspls/newmat08.zip FTP from ftp://nz.com/robert/newmat08.tar.gz FTP from ftp://nz.com/robert/newmat08.zip WWW http://nz.com/webnz/robert/ Email:robert.davies@vuw.ac.nz ------------------------------------------------------------------------ NIHCL - (National Institute of Health's C++ Library) NIHCL is essentially a mapping of part of Smalltalk's library into C++. It lies somewhere between OATH and COOL. It is a little better supported and there is a textbook by the author, Keith Gorlen, that is fairly good documentation. However, the Smalltalk hierarchy is not completely consistent (IMO) with the C++ strong typing nature. It is weakly supported. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://alw.nih.gov/pub/nihcl.tar.Z ------------------------------------------------------------------------ nlmdl - A library for estimation of nonlinear models Nonlinear maximisation, estimation, includes a real matrix class Operating Systems: - Unix - PC DOS Compilers: - Borland Turbo C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:A. Ronald Gallant FTP from ftp://ccvr1.cc.ncsu.edu/pub/arg/nlmdl FTP from ftp://ftp.uu.net/usenet/comp.sources.misc/volume16/nlmdl Email:arg@ccvr1.cc.ncsu.edu ------------------------------------------------------------------------ O-Matrix - RAD environment for scientific and engineering applications Harmonic Software has released O-Matrix 3.1 for Windows, a RAD environment (Rapid Application Development), for scientific and engineering applications. The new version of O-Matrix includes extensive capabilities for developing visually-oriented, easy-to-use technical applications. This enables the development of user-friendly applications significantly faster than traditional visually-oriented compilers and with performance that is dramatically faster than typical interpreted matrix languages. In addition O-Matrix version 3.1 includes an improved user interface for more productive application development and simplified interactive usage. Many functions have been added including routines for Kalman filtering, wavelet analysis and advanced statistics. Operating Systems: - PC Windows Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware Author:Harmonic Software Fax:1-206-367-1067 WWW http://world.std.com/~harmonic Email:harmonic@world.std.com Postal address:12223 Dayton Avenue North, Seattle, WA 98133 Tel:1-800-895-4546 ------------------------------------------------------------------------ OATH - Object oriented Abstract Type Hierarchy OATH was designed as an experiment in increasing object-oriented reuse. It has a fairly high learning curve, but potentially higher gains if you are looking for a more flexible and robust abstraction. It is completely unsupported. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://csc.ti.com/pub/oath.tar.Z ------------------------------------------------------------------------ Objtran and Objdce Objtran is a set of C++ class libraries that provide a higher-level abstraction for programmers developing applications using OSF's DCE and Transarc's Encina. Objtran actually consists of two separate libraries -- Objdce and Objtran. Objdce makes it easier to write DCE applications by abstracting some of the more complex aspects of DCE. A class is included that can manage an RPC server, interacting with the DCE Name Service and Security Service as desired. Another class manages a client's binding to a server and encapsulates Name Service lookups. Other classes allow the programmer to use threads and various forms of mutual-exclusion locks, report errors consistently, utilize Access Control Lists, handle timestamps from the DCE Time Service, and perform UUID manipulation. Objtran is built on top of Objdce, and adds support for the Encina distributed transaction service. It is intended to be used with C++ programs instead of the \"Transactional C\" macro package. It fully encapsulates the Encina TRAN and TRPC facilities with a few easy-to-use classes. It also provides an efficient recovery service for proper control of distributed transactions, and has support for the TM/XA service, allowing interoperability with XA-compliant databases. Support for the Encina Monitor is being implemented so programs may, with very few code changes, use either the smaller and more efficient bare Objtran environment or the more sophisticated Monitor. This software is Copyright 1993-1994 by Citibank, N.A. Permission is granted to use, copy, modify and distribute the software and its documentation without fee. The software is distributed with no warranty of any kind. Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware FTP from ftp://wilma.cs.brown.edu/pub/Objtran.tar.Z Email:objtran-comment@fig.citib.com ------------------------------------------------------------------------ OBST - Persistent object management system The persistent object management system OBST was developed by Forschungszentrum Informatik (FZI) as a contribution to the STONE project. Sites interested in getting information about new OBST developments are welcome to register in their mailing list by sending a mail with subject \"obst-mailing-list\" to stone@fzi.de. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Fax:++49-721-9654-609 FTP from ftp://gate.fzi.de/pub/OBST/ Email:stone@fzi.de Postal address:Forschungszentrum Informatik FZI, STONE Projekt, Haid-und-Neu-Strasse 10-14, D-7500 Karlsruhe 1, Germany Tel:++49-721-9654-601 ------------------------------------------------------------------------ Octave - Matlab like interactive system for numerical computations Includes C++ classes for matrix manipulation, numerical integration, and the solution of systems of nonlinear equations, ODEs and DAEs. Distributed under the GPL. Operating Systems: - Sparc - Dec Ultrix - Linux - Unix - IBM AIX Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : GNU copyleft Author:John W. Eaton FTP from ftp://ftp.che.wisc.edu/pub/octave/octave-M.N.tar.Z Email:jwe@che.utexas.edu ------------------------------------------------------------------------ Ode - Object database v2.0 Ode is an object-oriented database based on the C++ database model. The primary interface to Ode is the database programming language O++ which is based on C++. Ode is now available to Universities. The current version of Ode runs on Sun (Sparc) workstations and users must have C++ release 2.0 or a later release. Operating Systems: - Sparc Compilers: - Sun CC Added : 01/01/95 Amended : 01/01/95 Licencing : Education FTP from ftp://research.att.com./dist/ode2.0/2.0.oppbin.tar.Z Email:nhg@research.att.com Postal address:Narain Gehani, AT&T Bell Labs 3D-414, 600 Mountain Ave, Murray Hill, NJ 07974 ------------------------------------------------------------------------ ooMPEG - Berkeley MPEG decoder A reentrant, multi-threaded version of the Berkeley MPEG decoder Operating Systems: - Sun - Sparc - Solaris - HP UX - SGI Irix - SunOS Added : 05/02/96 Amended : 05/02/96 Licencing : Non commercial FTP from ftp://ftp.cs.brown.edu/pub/ooMPEG.tar.Z WWW http://www.cs.brown.edu/software/ooMPEG/ Email:lsh@cs.brown.edu ------------------------------------------------------------------------ Options - command-line option parsing library Options is a full-featured C++ class library for parsing options on the command-line. It uses the getopt() style of option parsing but provides a lot more features and has configurable behavior.es. Operating Systems: - OS/2 - PC DOS - PC Windows - Unix Compilers: - Borland C++ - Cfront - Gnu CC Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware WWW http://www.enteract.com/~bradapp/ftp/ - Options option parser ------------------------------------------------------------------------ OSE - C++ Library and Build Environment OSE is a development environment for C/C++ programmers. The major components of OSE are a generic C++ class library, documentation tools and build environment. The C++ class library includes support for error handling, error message logging, error recovery, program debugging, memory management, resource management, object containment, strings and symbols, pattern matching, operating system interfacing, simulation and event driven systems. OSE can be used with all major C++ compilers and UNIX platforms as well as Windows NT and Windows 95. OSE has been integrated for use with the ObjectStore OODBMS from Object Design. OSE was a winner at CODA '94, the ComputerWorld Object Developer Awards, held in conjunc! tion with ObjectWorld in Sydney, Australia. The category in which OSE was successful was \"Best implementation of a reuseable development environment for company deployment\". Operating Systems: - PC 32-bit Windows - Unix Compilers: - Cfront - Dec CC - Gnu CC - HP C++ - IBM xlC - SGI CC - SGI NCC - Sparcworks - Sun CC - Visual C++ - KAI CenterLine Novell Lucid ObjectStore - Borland C++ Added : 22/05/96 Amended : 22/05/96 Licencing : Copyright (other) Author: Graham Dumpleton FTP from ftp://ftp.dscpl.com.au/pub/ose WWW http://www.dscpl.com.au Email:info@dscpl.com.au ------------------------------------------------------------------------ P++ - Parallel Programming Classes for C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Dan Quinlan FTP from ftp://ftp.c3.lanl.gov/pub/dquinlan/ WWW http://www.c3.lanl.gov/~dquinlan/A++P++.html WWW http://www.c3.lanl.gov/~dquinlan/home.html Email:dquinlan@lanl.gov Email:dquinlan@c3serve.c3.lanl.gov ------------------------------------------------------------------------ paintlib - Image file decoding Paintlib is a C++ class library for image file decoding and manipulation. It currently supports the TGA, TIFF, JPEG/JFIF, Windows BMP, and Mac PICT formats. Data source and destination formats can be tailored as nessesary. Additionally, format-independent but fast bitmap manipulation classes are available. Although there are a few Windows-specific functions, the library is portable. Makefiles are included for Microsoft Visual C++ (Win32) and GNU C++ (DOS and SunOS). Prerequisite is a C++-compiler with standard C libraries and support for exception handling. The library also requires support for 32-bit memory addressing. Operating Systems: - PC 32-bit Windows - Solaris Compilers: - Gnu CC - Visual C++ Added : 19/03/97 Amended : 19/03/97 Licencing : Copyrighted freeware WWW http://www.cs.tu-berlin.de/~uzadow/paintlib - Paintlib web site. ------------------------------------------------------------------------ ParLib++ - Parallel Programming Classes for C++: Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:David Greco Email:David.Greco@crs4.it ------------------------------------------------------------------------ PARODY - C++ DATABASE LIBRARY Al Stevens has written a book on the subject called `Database programming in C++' or something. An article on the subject was printed in Doctor Dobbs Journal some time ago. The nice thing is that Stevens also wrote a C++ library adding persistence to C++, and the source is available. The library is called PARODY and compiles under most DOS-based C++ compilers. A slight rewrite of the GUI- routines has to be done to make it compile under GNU C. Operating Systems: - PC DOS - Unix Compilers: - Gnu CC - Borland C++ - Visual C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.mv.com/pub/ddj/1992/1992.12/parody.zip ------------------------------------------------------------------------ pC++ - A preprocessor for C++ that implements a data parallel extension Operating Systems: - CM5 - Paragon - KSR-1 - Sequent - BBNTC2000 - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Email:gannon@cs.indiana.edu ------------------------------------------------------------------------ PDBlib - Library for modeling a macromolecular structure PDBlib is a class library written in C++ for modeling a macromolecular structure at the level of detail (excluding symmetry information) found in a Protein Data Back (PDB) file. A class is supplied to read a PDB file into a PDBlib representation. This class is independent of the actual representation and other forms of input, for example from a relational database like SESAM, are possible. The library is made extensible by a close coupling between intrinsic and external classes. By writing only to the external classes you will remain compliant with future versions of the library. You don't get source code. This is a temporary situation while we attempt to centralize bug fixes and additions to the library. If you find this situation unworkable source code is available by signing a copyright agreement which is available with the distribution. The following files are available : - PDBLib.1.0.SGI.tar.Z Compressed tar file of PDB object classes library and header files for SGI. AT&T C++ release 2.1 & 3.0 compatible. - PDBLib.1.0.Sun.tar.Z Compressed tar file of PDB object classes library and header files for Sun Sparc station. AT&T C++ release 2.1 & 3.0 compatible. - PDBLib.1.0.Cvx.tar.Z Compressed tar file of PDB object classes library and header files for Convex. AT&T C++ release 2.1 compatible. - PDBLib.1.0.Alpha.tar.Z Compressed tar file of PDB object classes library and header files for Dec 3000 (Alpha AXP) with OSF1. Dec C++ (cxx) release 1.2 compatible. Operating Systems: - SGI Irix - Sparc - Convex - Dec Alpha Compilers: - Cfront - Dec CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyright (other) Author:Phil Bourne (general comments, criticisms, questions about future directions) Author:Ilya Shindyalov (PDBview) Author:Weider Chang (PDBlib) FTP from ftp://cuhhca.hhmi.columbia.edu/pub/programs/PDB/PDBlib/ Email:system@cuhhca.hhmi.columbia.edu Email:shindyal@cuhhca.hhmi.columbia.edu Email:weider@cuhhca.hhmi.columbia.edu ------------------------------------------------------------------------ Presto - C++ routines for lightweight threads on multiprocessors. C++ routines for fine-grained parallel programming (lightweight threads) on multiprocessors. Tuned for the Sequent machines, but highly adaptable and customizable. Systems : Unix-like OS on (moderate) multiprocessor machines Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Brian N. Bershad, Edward D. Lazowska, Henry M. Levy FTP from ftp://cs.washington.edu/pub/presto1.0.tar.Z ------------------------------------------------------------------------ Radix-2 - Fast Fourier Transform Radix-2 DFT of a real or complex sequence, or sin/cos/complex Fourier integral of an evenly tabulated function. The input can be either real or complex with/without zero padding, the full complex transform or only real/im/abs_value part of it can be obtained. Test drivers and test run outputs are included, too. Commented. Needs LinAlg.shar, v3.2 Operating Systems: - Unix - Mac Compilers: - Gnu CC - MetroWerks CodeWarrior Added : 01/01/95 Amended : 22/05/96 Licencing : Not known Author:Oleg Kiselyov Author:Oleg Kiselyov FTP from ftp://replicant.csci.unt.edu/pub/oleg/fft.tar.gz FTP from ftp://netlib.att.com/netlib/c++/fft.shar.Z WWW http:cpplibs2.html#LinAlg.shar Email:netlib@research.att.com Email:oleg@unt.edu Email:oleg@ponder.csci.unt.edu Email:oleg@ponder.csci.unt.edu ------------------------------------------------------------------------ Range - C++ class for range arithmetic. Associated with article in TOMS, Dec 1992 title \"Precise computation using range arithmetic, via C++\". Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Oliver Aberth and Mark J. Schaefer FTP from ftp://math.tamu.edu/pub/range/range.tar.Z ------------------------------------------------------------------------ RTTI implementation Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Arindam Banerji FTP from ftp://invaders.dcrl.nd.edu/pub/software/rtti.tar.Z Email:axb@cse.nd.edu Postal address:384 FitzPatrick Hall, Dept. of Computer Science & Engg., University of Notre Dame, Notre Dame, IN 46556 Tel:(219)-631-5772 Tel:(219)-631-5273 ------------------------------------------------------------------------ RTTI library Till RTTI becomes a part of regular compilers these RTTI libraries provide an excellent tool for the same purpose. The library is claimed to be portable. No licence restrictions. Added : 01/01/95 Amended : 01/01/95 Licencing : Public Domain Author:Arindam Banerji Fax:(219)-631-9260 FTP from ftp://invaders.dcrl.nd.edu/pub/software/rtti.tar.Z Email:axb@cse.nd.edu? Email:axb@defender.dcrl.nd.edu Tel:(219)-631-5273 ------------------------------------------------------------------------ SA - Library for simulated annealing Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/sa.zoo Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ Sdeint A Runge-Kutta like class for integrating systems of Stochastic Differential Equations. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Skip Carter FTP from ftp://usc.edu/pub/C-numanal/sdeint.tar.z Email:skip@taygeta.oc.nps.navy.mil ------------------------------------------------------------------------ SESAME - Neural net software ? Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:C. Tietz FTP from ftp://ftp.gmd.de//gmd/as/sesame ------------------------------------------------------------------------ simC - C/C++ function library for discrete simulation SimC is a function library for C/C++, providing support facilities for discrete and combined discrete-continuous simulation including set operations and data collection. Operating Systems: - PC Added : 19/03/96 Amended : 19/03/96 Licencing : Shareware Author:Toh Choon Swee FTP from ftp://garbo.uwasa.fi/pc/c-lang/simc100.zip Email:tohcs@pobox.org.sg Postal address:Toh Choon Swee, Serangoon Garden, P.O. Box 487, Singapore 915533 ------------------------------------------------------------------------ SIMEX - Helps develop discrete-event simulation models Provides classes that help a user develop discrete-event simulation models, with an emphasis on epidemiology and biology. Classes for random number generation, event and process management, user interface (commandline arguments, TTY, or Tcl/TK), aggregate statistics, basic data structures (list, strings, weighted ordered sets). Many examples. Operating Systems: - SunOS Compilers: - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Fax:(612) 625-7166 FTP from ftp://ftp.nmsr.labmed.umn.edu WWW http://www.nmsr.labmed.umn.edu Email:jan@simvax.labmed.umn.edu Email:michael@simvax.labmed.umn.edu Postal address:Box 511 UMHC, Div of Health Computer Sciences, U Minn, MPLS, MN 55455 Tel:(612) 625-3241 (Jan Marie Lundgren) ------------------------------------------------------------------------ Simpack - Tools for writing simulations with a EECS bias Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Paul A. Fishwick FTP from ftp://bikini.cis.ufl.edu/cis/tech-reports/tr92/tr92-022.ps.Z FTP from ftp://bikini.cis.ufl.edu/pub/simdigest/tools/simpack/ Email:fishwick@cis.ufl.edu ------------------------------------------------------------------------ SMURPH - A C++ library which could be useful for building a network simulator It comes with extensive documentation and examples. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://menaik.cs.ualberta.ca//pub/smurph/ ------------------------------------------------------------------------ SOCKET++ - C++ iostream like library for sockets and pipes Filename is socket++-XX.tar.gz (XX - version no). ameasures@cix.compulink.co.uk (Alastair Measures) reports :- An archie search (Imperial archie server) yielded the following: - ftp.informatik.fh-wiesbaden.de/pub/UNIX/comm/inet/socket++-1.10.tar.gz - rs104.hrz.th-darmstadt.de/pub/programming/languages/C++/class-libraries/networking/socket++-1.10.tar.gz - irz301.inf.tu-dresden.de/.4.1/vol4/unix/socket++-1.6.tar.gz - ftp.cso.uiuc.edu/pub/lang/C++/class-libraries/networking/socket++-1.10.tar.gz Have excluded the RPM based files from this list. In the actual event I found the latest edition seemed to be 1.11 which didn't seem too keen to clean compile on this 'ere RedHat4.0 Linux.... Having installed an RPM I found the documentation a bit faulty ... so back to the C API Added : 01/01/95 Amended : 19/03/97 Licencing : Not known FTP from ftp://ftp.virginia.edu/pub/ ------------------------------------------------------------------------ SPLASH - Small Perl-like List And String Handling class library SPLASH is a c++ class library that implements many of the Perl constructs and data types, including extensive regex regular expression pattern matching. For those not familiar with Perl, it is an excellent scripting language by Larry Wall and is available for most platforms. This Class library provides List, String, Regular Expression, and text manipulation handling capabilities based on those provided in Perl. File names are splashxxx.tar.Z or splashxxx.zip where xxx is the version number, currently 190 (for version 1.90). Also look for updates in the same directory. Operating Systems: - Unix - PC DOS Added : 01/01/95 Amended : 19/03/97 Licencing : Public Domain Author:Jim Morris FTP from ftp://ftp.wolfman.com/users/morris/public/splash/splash190.tar.gz - Unix version FTP from ftp://ftp.wolfman.com/users/morris/public/splash/update191.zip - DOS update patch FTP from ftp://ftp.wolfman.com/users/morris/public/splash/update191.tar.gz - Unix update patch FTP from ftp://ftp.wolfman.com/users/morris/public/splash/splash190.zip - DOS version WWW http://www.wolfman.com/splash.html - Article on SPLASH Email:splash@wolfman.com ------------------------------------------------------------------------ td.lib - C/C++ Programmers time, date, and cal lib (adtd) td.lib v2 is a small time and date library for C/C++ programmers. It contains practical time and date functions that overcome the limitations of the ANSI standard functions that ship with Borland, and Microsoft C++ compilers. Unlike the standard functions, td.lib allows the programmer to perform a variety of calculations using dates and times from Jan. 1, 1 A.D. to Dec. 31, 32766 and the ability to format and print the output of such calculations using ANSI format specifiers. Designed with the beginning programmer in mind, td.lib is easy to use and simplifies the process of coding time/date routines. The library is fully ANSI compliant and can be used with any standard C/C++ compiler. The source is freely available (mail the author). Special requirements: IBM compatible 386 PC. Operating Systems: - PC DOS Added : 19/03/97 Amended : 27/03/97 Licencing : Copyrighted freeware Author:Brady Tippit FTP from ftp://ftp.simtel.net/pub/simtelnet/msdos/c/adtdv2.zip WWW http://www.simtel.net/pub/simtelnet/msdos/c/adtdv2.zip Email:bt0202@broncho.ucok.edu ------------------------------------------------------------------------ Texas Persistant Store Texas is a free persistent store that can be used with standard C++ compilers, and works efficiently with very little modification to most C++ programs. It runs on several varieties of UNIX and should be very easy to port to most modern operating systems, such as OS/2, Windows NT, Mach, Windows 4.0, etc. (If things we hear are correct, Linux will provide the necessary virtual memory features soon, too, and Texas will be ported about fifteen minutes later. :-) Texas uses \"pointer swizzling at page fault time\", an address translation techique that converts pointers from an abstract format to actual virtual memory addresses when pages are first touched and brought into memory. (A similar technique, invented independently, is used in the market-leading persistent store/OODB, ObjectStore from Object Design Inc.) This allows Texas to be highly portable, avoiding any assumptions about where a page of data will be an a process' virtual memory address space; it can also support very large addresses spaces efficiently on stock 32-bit hardware. (It could also be used to efficiently provide shared address spaces across networked heterogenous machines with different hardware address sizes, e.g., across 32- and 64-bit machines.) Operating Systems: - Unix Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Author:Paul R. Wilson and Sheetal V. Kakkad FTP from ftp://ftp.cs.utexas.edu/pub/garbage/texaspstore.ps FTP from ftp://ftp.cs.utexas.edu/pub/garbage/swizz.ps FTP from ftp://ftp.cs.utexas.edu/pub/garbage/texas Email:oops@cs.utexas.edu Postal address:Object-Oriented Programming Systems research group, Computer Sciences Dept., University of Texas, Austin, Texas ------------------------------------------------------------------------ TOLKIEN - TOoLKIt for gENetics based applications The tool contains objects for both GA and classifier system applications. It's in some kind of alpha-status. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known Email:tang028@cs.cuhk.hk ------------------------------------------------------------------------ TSR100JE.ZIP - TSR class library DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://garbo.uwasa.fi/pc/c-lang/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ Types 1.0 Types is a Shareware library used to support the creation of reusable software components in C++. Full source code and documentation and examples are included. Types provides:Garbage Collector,recursive data estructures,encode and decode of polymorfic objects,encode and decoding to and from files or memory using external or local data representation, exceptions,... Types also include some classes implemented using types a double linked list, stack, btree, storage class, string and others. You can use and XDR representation for encode and decode objects this feature enable your data to be ported to other plataforms. Operating Systems: - PC Compilers: - Borland C++ 4.0 Added : 01/01/95 Amended : 01/01/95 Licencing : Shareware FTP from ftp://oak.oakland.edu/pub/simtelnet/msdos/cpluspls/typesc10.zip Email:malpica@mailer.main.conacyt.mx ------------------------------------------------------------------------ Unibase Framework - toolkit designed to simplify network programming The UniBase Framework is a platform-independent toolkit designed to simplify network programming. You use standard iostream-derived communication streams with standard io operators, instead of messy connect() and listen() calls. You can leverage on ALL the code you already have using standard fstreams and iostreams with little or no modification and make your program NETWORKED today! Unix versions due soon. Free for any purpose, with little requirements (see details at the downloading home page listed below). Operating Systems: - PC Windows Compilers: - Visual C++ Added : 05/02/96 Amended : 05/02/96 Licencing : Copyrighted freeware Author:John Chia-chin Wang WWW http://bbs.csie.ntu.edu.tw/~jcwang/unibase/index.cgi Email:jcwang@csie.ntu.edu.tw ------------------------------------------------------------------------ Unidraw - A graphical editor building library Unidraw is a graphical editor building library based on top of InterViews. Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://interviews.stanford.edu/ ------------------------------------------------------------------------ valarray\nAttempts at providing the functionality described in Chapter 26 of the draft C++ standard. None of the releases stick perfectly to the specifications of the proposed standard. Version 2.0 is a very deliberate step away from the draft as released in April 1995 for public comments in the USA: it is used as a proof of concept to support a revision of the original specs. Some characteristics: - heavy usage of templates and their automatic instantiation; - avoidance of temporary arrays in array expressions; - production of fast compact loops, but some overhead before entering those loops. Operating Systems: - Sun - Cray - PC Compilers: - Borland C++ 4.5 - Sun CC 4.x - Sun CC 3.x - CRI C++ (Cray) - IBM xlC - SGI NCC - Apogee CC Added : 01/01/95 Amended : 22/05/96 Licencing : Non commercial Author:David Vandevoorde FTP from ftp://ftp.cs.rpi.edu/pub/vandevod/Valarray Email:vandevod@cs.rpi.edu Postal address:Department of Computer Science, Rensselaer Polytechnic Institute, Troy, NY12180, USA ------------------------------------------------------------------------ wxWindows - C++ class library for building Motif, Open Look, Windows 3.1 and NT applications C++ class library for building Motif, Open Look, Windows 3.1 and NT applications from the same source code. One simple API is provided for all platforms. wxWindows supports objects such as frames, subwindows, buttons, list boxes, icons, and bitmaps, and supports drawing into canvases, PostScript files, Windows printers, metafiles and bitmaps using the same drawing primitives. wxWindows provides a hypertext help facility, and a utility for maintaining documentation in printed and three hypertext formats. It also provides an interprocess communication API based on DDE, that works under both Windows 3.1 and UNIX. Documentation is available in PostScript, RTF, Windows Help, wxHelp and HTML formats. Julian Smart, Artificial Intelligence Applications Institute, University of Edinburgh, 80 South Bridge, Edinburgh, Scotland, EH1 1HN, TEL: 031 650 2746 Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://ftp.aiai.ed.ac.uk/pub/packages/wxwin Email:J.Smart@ed.ac.uk Postal address:Julian Smart, Artificial Intelligence Applications Institute, University of Edinburgh, 80 South Bridge, Edinburgh, Scotland, EH1 1HN Tel:031 650 2746 ------------------------------------------------------------------------ XMS200JE.ZIP - XMS array class library Wrapper classes to access XMS, UMBs and the HMA, as well as a templated XMS array class. Test suites and timing programs provided for each class. Source included. Free. DOS PC/Borland C++ specific. Operating Systems: - PC DOS Compilers: - Borland C++ Added : 01/01/95 Amended : 01/01/95 Licencing : Not known FTP from ftp://garbo.uwasa.fi/pc/c-lang/ FTP from ftp://oak.oakland.edu/pub/msdos/cplusplus/ ------------------------------------------------------------------------ XRLCAD - CXrL CAD toolset This package contains a C++ class library to manipulate Structure (as in Calma/CIF) hierarchies. There is also loaders for CIF and Calma, as well as output drivers for these formats. A bunch of demo programs are included which I wrote when I was testing the library, and these programs turned out be quite useful tools. The library is still in its infancy, but it's reasonably solid; in a few months I'll take another look at it and probably overhaul it. Operating Systems: - sparc-sunos-4.1.3 - sparc-sunos-5 - rs6000-aix-3.2 - decstation-ultrix4.2 - hppa1.1-hpux9.05 Compilers: - Sun CC - Cfront - Gnu CC Added : 01/01/95 Amended : 01/01/95 Licencing : Copyrighted freeware Author:Mumit Khan Fax:+1 608 265 3811 WWW http://www.xraylith.wisc.edu/~khan/software/xrlcad/xrlcad.html Email:khan@xraylith.wisc.edu Postal address:Mumit Khan, Research Staff, Center for X-ray Lithography, University of Wisconsin-Madison Tel:+1 608 265 6075 ------------------------------------------------------------------------ YACL - Yet Another Class Library YACL is a freely available C++ class library that includes GUI classes based on the Model-View-Controller paradigm. The class protocols are designed in a platform independent manner, and are implemented under Motif 1.2 as well as under Microsoft Windows and OS/2. This makes it possible to maintain a single code base for an application that runs on all three platforms. YACL also includes a suite of container and data storage classes for general-purpose programming. Operating Systems: - Motif - PC Windows 3 - OS/2 - X Windows Added : 01/01/95 Amended : 05/02/96 Licencing : Not known Fax:(803) 777-3767 FTP from ftp://ftp.cs.sc.edu/pub/yacl WWW http://www.cs.sc.edu/~sridhar/yacl.html Email:sridhar@usceast.cs.sc.edu Postal address:M. A. Sridhar, Department of Computer Science, University of South Carolina, Columbia, SC 29208, USA Tel:(803) 777-2427 ------------------------------------------------------------------------ Trumphurst Home Page http://www.trmphrst.demon.co.uk/ Web version of this list http://www.trmphrst.demon.co.uk/cpplibs1 Mail amendments or additions to this list to cpplibs@trmphrst.demon.co.uk The C++ Usenet Newsgroup is comp.lang.c++ Copyright (c) 1997 Nikki Locke, Trumphurst Ltd. Permission is granted to distribute over the Internet without charge. The author's permission is required (and usually given) to distribute in any other way, including on CD. Mail the author at faqdist@trmphrst.demon.co.uk for permission to distribute\n"}, {"score": 91.50005, "uuid": "3e045989-d021-5bed-8cd7-7116592bd2e2", "index": "cw12", "trec_id": "clueweb12-1106wb-20-21106", "target_hostname": "www.apt-get.org", "target_uri": "http://www.apt-get.org/packages/460/", "page_rank": 1.1737072e-09, "spam_rank": 67, "title": "apt-get.org", "snippet": "The quality <em>of</em> the output <em>is</em> close <em>to</em> the printed output and <em>is</em> much <em>better</em> <em>than</em> an info-&gt;HTML gateway. . Compared <em>to</em> the output <em>of</em> `makeinfo --html&#x27;, texi2html&#x27;s output <em>is</em> more customizable and (subjectively) produces <em>better</em> output by default. .", "explanation": null, "document": "Description: Enlightened Sound Daemon - clients Utilities that control and interact with the Enlightened Sound Daemon.\nPackage: esound-common\nArchitecture: all\nVersion: 0.2.36-3.2\nDescription: Enlightened Sound Daemon - Common files This program is designed to mix together several digitized audio streams for playback by a single device. . This package contains the documentation and configuration files.\nPackage: etherboot\nArchitecture: amd64\nVersion: 5.4.2-1.2~1\nDescription: Bootstrapping for various network adapters Etherboot is a free software package for making boot ROMS for booting Linux and other operating systems on x86 PCs over a network using Internet Protocols, i.e. bootp/DHCP and tftp. . This package doesn't contains the documentation, if you need these files, you can install the package named etherboot-doc.\nPackage: etherboot-doc\nArchitecture: all\nVersion: 5.4.2-1.2~1\nDescription: Bootstrapping for various network adapters (documentation) Etherboot is a free software package for making boot ROMS for booting Linux and other operating systems on x86 PCs over a network using Internet Protocols, i.e. bootp/DHCP and tftp. . This package contains only the documentation for the software, you can install etherboot if you need the software itself.\nPackage: exim4\nArchitecture: all\nVersion: 4.63-17~bpo.1\nDescription: metapackage to ease exim MTA (v4) installation Exim (v4) is a mail transport agent. exim4 is the metapackage depending on the essential components for a basic exim4 installation. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-base\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: support files for all exim MTA (v4) packages Exim (v4) is a mail transport agent. exim4-base provides the support files needed by all exim4 daemon packages. You need an additional package containing the main executable. The available packages are: . exim4-daemon-light exim4-daemon-heavy . If you build exim4 from the source package locally, you can also build an exim4-daemon-custom package tailored to your own feature set. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-config\nArchitecture: all\nVersion: 4.63-17~bpo.1\nDescription: configuration for the exim MTA (v4) Exim (v4) is a mail transport agent. exim4-config provides the configuration for the exim4 daemon packages. The configuration framework has been split off the main package to allow sites to replace the configuration scheme with their own without having to change the actual exim4 packages. . Sites with special configuration needs (having a lot of identically configured machines for example) can use this to distribute their own custom configuration via the packaging system, using the magic available with dpkg's conffile handling, without having to do local changes on all of these machines. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-daemon-heavy\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: exim MTA (v4) daemon with extended features, including exiscan-acl Exim (v4) is a mail transport agent. This package contains the exim4 daemon with extended features. In addition to the features already supported by exim4-daemon-light, exim4-daemon-heavy includes LDAP, sqlite, PostgreSQL and MySQL data lookups, SASL and SPA SMTP authentication, embedded Perl interpreter, and the content scanning extension (formerly known as \"exiscan-acl\") for integration of virus scanners and spamassassin. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-daemon-heavy-dbg\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: debugging symbols for the exim MTA (v4) packages Exim (v4) is a mail transport agent. This package contains dbg debugging symbols for the binaries contained in the exim4-daemon-heavy package. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-daemon-light\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: lightweight exim MTA (v4) daemon Exim (v4) is a mail transport agent. This package contains the exim4 daemon with only basic features enabled. It works well with the standard setups that are provided by Debian and includes support for TLS encryption and the dlopen patch to allow dynamic loading of a local_scan function. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-daemon-light-dbg\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: debugging symbols for the exim MTA (v4) packages Exim (v4) is a mail transport agent. This package contains dbg debugging symbols for the binaries contained in the exim4-daemon-light package. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-dbg\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: debugging symbols for the exim MTA (v4) packages Exim (v4) is a mail transport agent. This package contains dbg debugging symbols for the binaries contained in the exim4 packages. The daemon packages have their own debug package. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: exim4-dev\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: header files for the exim MTA (v4) packages Exim (v4) is a mail transport agent. This package contains header files that can be used to compile code that is then dynamically linked to exim's local_scan interface. . The Debian exim4 packages have their own web page, http://pkg-exim4.alioth.debian.org/. There is also a Debian-specific FAQ list. Information about the way the Debian packages are configured can be found in /usr/share/doc/exim4-base/README.Debian.gz, which additionally contains information about the way the Debian binary packages are built. The very extensive upstream documentation is shipped in /usr/share/doc/exim4-base/spec.txt.gz. To repeat the debconf-driven configuration process in a standard setup, invoke dpkg-reconfigure exim4-config. There is a Debian-centered mailing list, pkg-exim4-users@lists.alioth.debian.org. Please ask Debian-specific questions there, and only write to the upstream exim-users mailing list if you are sure that your question is not Debian-specific. You can find the subscription web page on http://lists.alioth.debian.org/mailman/listinfo/pkg-exim4-users . exim is a drop-in replacement for sendmail/mailq/rsmtp. . Upstream URL: http://www.exim.org/\nPackage: eximon4\nArchitecture: amd64\nVersion: 4.63-17~bpo.1\nDescription: monitor application for the exim MTA (v4) (X11 interface) Eximon is a helper program for the exim MTA (v4). It allows administrators to view the mail queue and logs, and perform a variety of actions on queued messages, such as freezing, bouncing and thawing messages. . Upstream URL: http://www.exim.org/\nPackage: expect-tcl8.3\nArchitecture: i386\nVersion: 5.43.0-3\nDescription: A program that \"talks\" to other programs Expect is a program that \"talks\" to other interactive programs according to a script. Following the script, Expect knows what can be expected from a program and what the correct response should be. An interpreted language provides branching and high- level control structures to direct the dialogue. In addition, the user can take control and interact directly when desired, afterward returning control to the script.\nPackage: expect-tcl8.3-dev\nArchitecture: i386\nVersion: 5.43.0-3\nDescription: Development files for the expect package Expect is a program that \"talks\" to other interactive programs according to a script. Following the script, Expect knows what can be expected from a program and what the correct response should be. An interpreted language provides branching and high- level control structures to direct the dialogue. In addition, the user can take control and interact directly when desired, afterward returning control to the script. . This file provides the header files and libraries for developing expect applications.\nPackage: expectk-tk8.3\nArchitecture: i386\nVersion: 5.43.0-3\nDescription: A Tk/X11 version of the expect program Expect is a program that \"talks\" to other interactive programs according to a script. Following the script, Expect knows what can be expected from a program and what the correct response should be. An interpreted language provides branching and high- level control structures to direct the dialogue. In addition, the user can take control and interact directly when desired, afterward returning control to the script. . This package provides Tk hooks for expect.\nPackage: faac\nArchitecture: amd64\nVersion: 1.24-0.4.1\nDescription: an AAC audio encoder FAAC currently supports MPEG-4 LTP, MAIN and LOW COMPLEXITY object types and MAIN and LOW MPEG-2 object types. It also supports multichannel and gapless encoding. . http://faac.sourceforge.net/\nPackage: faad\nArchitecture: amd64\nVersion: 2.0.0+cvs20040908+mp\nDescription: freeware Advanced Audio Decoder player FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains a binary to play AAC or MP4 files.\nPackage: fam\nArchitecture: amd64\nVersion: 2.7.0-12~1\nDescription: File Alteration Monitor FAM monitors files and directories, notifying interested applications of changes. . This package provides a server that can monitor a given list of files and notify applications through a socket. If the kernel supports dnotify (kernels >= 2.4.x) FAM is notified directly by the kernel. Otherwise it has to poll the files' status. FAM can also provide an RPC service for monitoring remote files (such as on a mounted NFS filesystem).\nPackage: ffmpeg\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: multimedia player, server and encoder This package contains the ffplay multimedia player, the ffserver streaming server and the ffmpeg audio and video encoder. They support most existing file formats (AVI, MPEG, OGG, Matroska, ASF...) and encoding formats (MPEG, DivX, MPEG4, AC3, DV...).\nPackage: fileschanged\nArchitecture: amd64\nVersion: 0.6.5-1~2\nDescription: command-line utility that reports when files have been altered This software is a client to FAM (File Alteration Monitor). You can use fileschanged in shell scripts to take action when monitored files become altered. In it's simplest form, you can give filenames to monitor from standard-input, and it will report when those files have changed via standard-output. In a more complex usage, fileschanged can monitor command-line specified files recursively, while following symbolic links, while staying on the current filesystem, and reporting deleted files as well as created and changed files that haven't been written to for 2 seconds. . Homepage: http://fileschanged.sourceforge.net/\nPackage: fileutils\nArchitecture: all\nVersion: 5.97-5.3~1\nDescription: The GNU file management utilities (transitional package) Empty package to facilitate upgrades, can be safely removed.\nPackage: findutils\nArchitecture: amd64\nVersion: 4.2.28-1~bpo.1\nDescription: utilities for finding files--find, xargs, and locate These utilities find files meeting specified criteria and perform various actions on the files which are found.\nPackage: flac\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - command line tools FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the command-line tools flac (used for encoding and decoding FLACs) and metaflac (used for manipulating FLAC metadata.)\nPackage: freeradius\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: a high-performance and highly configurable RADIUS server A high-performance RADIUS server derived from Cistron's server, and generally similar to Livingston's 2.0 server, with support for... - many vendor-specific attributes - proxying and replicating requests by any criteria - authentication on system passwd, SQL, Kerberos, LDAP, users file, or PAM - multiple DEFAULT configurations - regexp matching in string attributes and lots more.\nPackage: freeradius-dialupadmin\nArchitecture: all\nVersion: 1.1.3-0.1\nDescription: set of PHP scripts for administering a FreeRADIUS server These scripts provide a web-based interface for administering a FreeRADIUS server which stores authentication information in either SQL or LDAP.\nPackage: freeradius-iodbc\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: iODBC module for FreeRADIUS server The FreeRADIUS server can use iODBC to access databases to authenticate users and do accounting, and this module is necessary for that.\nPackage: freeradius-krb5\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: kerberos module for FreeRADIUS server The FreeRADIUS server can use Kerberos to authenticate users, and this module is necessary for that.\nPackage: freeradius-ldap\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: LDAP module for FreeRADIUS server The FreeRADIUS server can use LDAP to authenticate users, and this module is necessary for that.\nPackage: freeradius-mysql\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: MySQL module for FreeRADIUS server The FreeRADIUS server can use MySQL to authenticate users and do accounting, and this module is necessary for that.\nPackage: freeradius-postgresql\nArchitecture: amd64\nVersion: 1.1.3-0.1\nDescription: PostgreSQL module for FreeRADIUS server The FreeRADIUS server can use PostgreSQL to authenticate users and do accounting, and this module is necessary for that.\nPackage: fuse-module-2.4.27-2-386\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-386 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-586tsc\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-586tsc . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-686\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-686 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-686-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-686-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-k6\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-k6 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-k7\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-k7 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.4.27-2-k7-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.4.27-2-k7-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.14-2-amd64-generic\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.14-2-amd64-generic . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.14-2-amd64-k8\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.14-2-amd64-k8 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.14-2-amd64-k8-smp\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.14-2-amd64-k8-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.14-2-em64t-p4\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.14-2-em64t-p4 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.14-2-em64t-p4-smp\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.14-2-em64t-p4-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-486\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-486 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-686\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-686 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-686-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-686-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-amd64-generic\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-generic . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-amd64-k8\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-k8 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-amd64-k8-smp\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-k8-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-em64t-p4\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-em64t-p4 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-em64t-p4-smp\nArchitecture: amd64\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-em64t-p4-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-k7\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-k7 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.15-1-k7-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.15-1-k7-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.8-2-386\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.8-2-386 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.8-2-686\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.8-2-686 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.8-2-686-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.8-2-686-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.8-2-k7\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.8-2-k7 . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-module-2.6.8-2-k7-smp\nArchitecture: i386\nVersion: 2.5.2-1\nDescription: Filesystem in USErspace (kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fuse kernel module, built for the kernel from the package kernel-image-2.6.8-2-k7-smp . Homepage: http://sourceforge.net/projects/avf\nPackage: fuse-source\nArchitecture: all\nVersion: 2.5.3-1bpo1\nDescription: Filesystem in USErspace (source for kernel module) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the source code for the fuse module. It is required to use fuse with a self-compiled kernel. . Homepage: http://fuse.sourceforge.net/\nPackage: fuse-utils\nArchitecture: amd64\nVersion: 2.5.3-4.2\nDescription: Filesystem in USErspace (utilities) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the fusermount utility which is necessary to mount fuse filesystems. . This utility is setuid by default. Use dpkg-statoverride if you want to change that. . Homepage: http://fuse.sourceforge.net/\nPackage: gabber\nArchitecture: i386\nVersion: 0.8.8-2\nDescription: A GNOME Jabber client Gabber is a Free and Open Source GNOME client for an instant messaging system called Jabber. Jabber is a Free and Open Source distributed instant messaging system. It does not rely on a single server, and the protocol is well documented. Jabber allows communication with many different instant messaging systems, including ICQ and AIM.\nPackage: gallery2\nArchitecture: all\nVersion: 2.2.1-3~1\nDescription: web-based photo album written in PHP Gallery2 is a web-based photo album with multiple user support. It provides users with the ability to create and maintain their own albums via an intuitive web interface. Photo management includes automatic thumbnail creation, image resizing, rotation, ordering, captioning, searching and more. Albums can have read, write and caption permissions per individual authenticated user for an additional level of privacy. . Gallery2 (G2) has been redesigned from the ground up and is database driven. Two years of design and development have gone into G2. It has customizable themes and layouts using XHTML compliant templates which make it much easier for you to personalize your G2 install. G2 is modularized and features can be enabled and disabled separately for maximum control. . The upstream web site is: http://gallery.sf.net\nPackage: gdeb\nArchitecture: i386\nVersion: 0.4.9-1.1.1\nDescription: graphical package inspection tool Gdeb is a small program for inspecting Debian software packages. It also provides an option to install the package.\nPackage: gdhcpd\nArchitecture: amd64\nVersion: 0.2.8-1bpo1\nDescription: GTK+ configuration tool for dhcpd3-server GDHCPD is an easy to use GTK+ frontend for ISC DHCPD, version 3.\nPackage: git-arch\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (arch interoperability) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides tools for importing development history from arch repositories.\nPackage: git-core\nArchitecture: amd64\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides the git core components.\nPackage: git-cvs\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (cvs interoperability) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides tools for importing development history from cvs repositories.\nPackage: git-daemon-run\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (git-daemon service) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides a git-daemon service.\nPackage: git-doc\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (documentation) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides the documentation.\nPackage: git-email\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (email add-on) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides tools for sending series of patch emails.\nPackage: git-svn\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (svn interoperability) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides tools for importing development history from subversion repositories.\nPackage: gitk\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (revision tree visualizer) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides the gitk program, a tcl/tk revision tree visualizer.\nPackage: gitweb\nArchitecture: all\nVersion: 1:1.4.4.3-1~bpo.1\nDescription: content addressable filesystem (web interface) This is a stupid (but extremely fast) directory content manager. It doesn't do a whole lot, but what it 'does' do is track directory contents efficiently. . Amongst other projects, the Linux kernel source tree is managed through the git content manager. . This package provides a web interface for browsing git repositories.\nPackage: gnome-apt\nArchitecture: i386\nVersion: 0.4.9-1.1.1\nDescription: graphical package manager Gnome-apt is a graphical package management program. It allows you to easily upgrade your Debian system, as well as install and uninstall packages using any of the methods that apt supports (http, ftp*, file). . Basically, gnome-apt provides the same features as the apt-get command line utility but coming in a handy GNOME-based GUI program.\nPackage: gnome-media\nArchitecture: i386\nVersion: 1.2.3-5\nDescription: Gnome Media Utilities (gmix, gtcd) Gnome is the \"GNU Network Object Model Environment\" . It is a project to build a complete, user-friendly desktop based entirely on free software. . This package contains: . gmix - a mixer gtcd - a cd player vumeter - watch sound output grecord - record sounds\nPackage: gnome-vlc\nArchitecture: i386\nVersion: 0.8.4.debian-2.1\nDescription: GNOME frontend for VLC (dummy legacy package) The gnome-vlc package has been discontinued. You should use the wxvlc package instead. . This package is only useful to ensure clean upgrades from old Debian releases and can be safely removed.\nPackage: gnomemeeting\nArchitecture: i386\nVersion: 1.0.2-1\nDescription: The GnomeMeeting Voice Over IP Suite H.323 compatible videoconferencing and VOIP/IP-Telephony application that allows you to make audio and video calls to remote users with H.323 hardware or software (such as Microsoft Netmeeting). . It supports all modern videoconferencing features, such as registering to an ILS directory, gatekeeper support, making multi-user conference calls using an external MCU, using modern Quicknet telephony cards, and making PC-To-Phone calls.\nPackage: gnugk\nArchitecture: amd64\nVersion: 2:2.2.3-2-2.1\nDescription: OpenH323 Gatekeeper - The GNU Gatekeeper GNU Gatekeeper is an open-source project that implements an H.323 gatekeeper. A gatekeeper provides call control services to the H.323 endpoints. It is an integral part of most useful internet telephony installations that are based on the H.323 standard. . According to Recommendation H.323, a gatekeeper shall provide the following services: . Address Translation Admissions Control Bandwidth Control Zone Management Call Control Signaling Call Authorization Bandwidth Management Call Management . The GNU Gatekeeper implements most of these functions based on the OpenH323 protocol stack. . Upstream Website: http://www.gnugk.org\nPackage: gnunit\nArchitecture: all\nVersion: 1.1.11-1\nDescription: frontend for running NUnit 2 test suites gnunit (formerly known as nunit-gtk) is a frontend for NUnit which uses the Mono class library version 1.0. . NUnit is a unit testing framework for all .NET languages. It serves the same purpose as JUnit does in the Java world. It supports test categories, testing for exceptions and writing test results in plain text or XML.\nPackage: gnunit2\nArchitecture: all\nVersion: 1.1.11-1\nDescription: frontend for running NUnit 2 test suites gnunit2 (formerly known as nunit-gtk) is a frontend for NUnit which uses the Mono class library version 2.0. . NUnit is a unit testing framework for all .NET languages. It serves the same purpose as JUnit does in the Java world. It supports test categories, testing for exceptions and writing test results in plain text or XML.\nPackage: gnupg\nArchitecture: amd64\nVersion: 1.4.5-1~bpo.1\nDescription: GNU privacy guard - a free PGP replacement GnuPG is GNU's tool for secure communication and data storage. It can be used to encrypt data and to create digital signatures. It includes an advanced key management facility and is compliant with the proposed OpenPGP Internet standard as described in RFC2440. . GnuPG does not use any patented algorithms so it cannot be compatible with PGP2 because it uses IDEA (which is patented worldwide).\nPackage: gnupg-idea\nArchitecture: amd64\nVersion: 1.4.1-1\nDescription: GNU privacy guard - a free PGP replacement GnuPG is GNU's tool for secure communication and data storage. It can be used to encrypt data and to create digital signatures. It includes an advanced key management facility and is compliant with the proposed OpenPGP Internet standard as described in RFC2440. . GnuPG does not use any patented algorithms so it cannot be compatible with PGP2 because it uses IDEA (which is patented worldwide).\nPackage: gnupg-udeb\nArchitecture: amd64\nVersion: 1.4.5-1~bpo.1\nDescription: GNU privacy guard - a free PGP replacement GnuPG is GNU's tool for secure communication and data storage. It can be used to encrypt data and to create digital signatures. It includes an advanced key management facility and is compliant with the proposed OpenPGP Internet standard as described in RFC2440. . This is GnuPG packaged in minimal form for use in debian-installer.\nPackage: gnutls-bin\nArchitecture: amd64\nVersion: 1.2.9-2.1\nDescription: the GNU TLS library - commandline utilities gnutls is a portable library which implements the Transport Layer Security (TLS) 1.0 and Secure Sockets Layer (SSL) 3.0 protocols. . This package contains a commandline interface to the GNU TLS library, which can be used to set up secure connections from e.g. shell scripts.\nPackage: gpgv-udeb\nArchitecture: amd64\nVersion: 1.4.5-1~bpo.1\nDescription: minimal signature verification tool GnuPG is GNU's tool for secure communication and data storage. It can be used to encrypt data and to create digital signatures. It includes an advanced key management facility and is compliant with the proposed OpenPGP Internet standard as described in RFC2440. . This is GnuPG's signature verification tool, gpgv, packaged in minimal form for use in debian-installer.\nPackage: greylistd\nArchitecture: all\nVersion: 0.8.3.0.1\nDescription: Greylisting daemon for use with Exim 4 This daemon provides a simple greylisting implementation for use with the Exim Mail Transport Agent (MTA), version 4. . Greylisting is a simple but highly effective means to weed out messages that are being delivered via spamware/ratware tools. The idea is to establish whether a prior relationship exists between the sender and the receiver of a message. Most of the time it does, and the delivery proceeds normally. . On the other hand, if no prior relationship exists, the delivery is temporarily rejected. Legitimate MTAs will treat this response accordingly, and retry the delivery in a while. In contrast, ratware will usually fail to retry the delivery in a normal fashion. As a result, greylisting is currently more than 90% effective in blocking incoming junk mail, while nearly all legitimate mail goes through. For more information, see Evan Harris' whitepaper at: http://projects.puremagic.com/greylisting/ . This daemon listens for sender and recipient data on a UNIX domain socket. Your MTA would query the daemon during the incoming SMTP transaction, and accept or defer the incoming message depending on its response. . This package contains a script to configure support for greylisting in Exim 4. It may be possible to use greylistd with other MTAs as well, though some work will probably be involved. Postfix users may want to check out the \"postgrey\" package instead of this one.\nPackage: gtk-sharp\nArchitecture: all\nVersion: 1:1.0.10-3.1\nDescription: Gtk# suite, CLI bindings for Gtk+ and GNOME Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries. . gtk-sharp is a metapackage containing dependencies for the Gtk# suite.\nPackage: gtk-sharp-examples\nArchitecture: all\nVersion: 1:1.0.10-3.1\nDescription: sample applications for the Gtk# toolkit Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries. . This package contains some example programs that are distributed with the Gtk# assemblies, including source to build them and learn from them.\nPackage: gtk-sharp-gapi\nArchitecture: amd64\nVersion: 1:1.0.10-3.1\nDescription: C source parser and C# code generator for GObject based APIs Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries. . The gtk-sharp-gapi package includes the parser and code generator used by the Gtk# project to parse and bind GObject libraries. Install gtk-sharp-gapi if you want to bind GObject-based libraries, or need to compile a project that uses it to bind such a library.\nPackage: gtkhtml3.6\nArchitecture: amd64\nVersion: 3.6.2-1.1\nDescription: HTML rendering/editing library - bonobo component binary This is GtkHTML, a lightweight HTML rendering/printing/editing engine. It was originally based on KHTMLW, but is now being developed independently.\nPackage: gvlc\nArchitecture: i386\nVersion: 0.8.4.debian-2.1\nDescription: GTK+ frontend for VLC (dummy legacy package) The gvlc package has been discontinued. You should use the wxvlc package instead. . This package is only useful to ensure clean upgrades from old Debian releases and can be safely removed.\nPackage: hddtemp\nArchitecture: amd64\nVersion: 0.3-beta15-12bpo1\nDescription: Utility to monitor the temperature of your hard drive hddtemp will give you the temperature of your IDE or SCSI hard drive by reading Self-Monitoring Analysis and Reporting Technology (S.M.A.R.T.) information (on drives that support this feature). Only modern hard drives have a temperature sensor. . Author: Emmanuel Varagnat <hddtemp@guzu.net> Homepage: http://www.guzu.net/linux/hddtemp.php\nPackage: hibernate\nArchitecture: all\nVersion: 1.12-1.1\nDescription: activates your computer's suspend functionality This package provides a way to activate the suspend functionality in the kernel. Currently it supports anything using the /sys/power/state interface (including ACPI suspend and the in-kernel software suspend), as well as Software Suspend 2 (which is available as a separate kernel patch). . Hibernate can take care of loading and unloading modules, various hacks needed to get some video cards to resume properly under X, restarting networking and system services. It can be extended by writing new \"scriplets\" which run at different parts of the suspend process.\nPackage: horde3\nArchitecture: all\nVersion: 3.1.3-2~1\nDescription: horde web application framework The Horde Framework is written in PHP, and provides the common tools a Web application requires: classes for dealing with preferences, compression, browser detection, connection tracking, MIME, and more. . The Horde Framework, by itself, does not provide any significant end user functionality; it provides a base for other applications and tools for developers. You will probably want to install some of the available Horde applications, such as IMP (a webmail client), or Kronolith (a calendar). . There is a list of Horde applications and projects at http://www.horde.org/projects.php.\nPackage: hotplug\nArchitecture: all\nVersion: 0.0.20040329-24.1\nDescription: Linux Hotplug Scripts This package contains the scripts necessary for hotplug Linux support, and lets you plug in new devices and use them immediately. It includes support for PCI, Cardbus (PCMCIA), USB and Firewire devices and can automatically configure network interfaces.\nPackage: idle\nArchitecture: all\nVersion: 2.3.5-2.1\nDescription: An IDE for Python using Tkinter (default version) IDLE is an Integrated Development Environment for Python. IDLE is written using Tkinter and therefore quite platform-independent. . This package is a dependency package, which depends on Debian's default Python version (currently v2.3).\nPackage: idle-python2.3\nArchitecture: all\nVersion: 2.3.5-15.1\nDescription: An IDE for Python (v2.3) using Tkinter IDLE is an Integrated Development Environment for Python (v2.3). IDLE is written using Tkinter and therefore quite platform-independent.\nPackage: ieee80211softmac-headers-2.6.15-1\nArchitecture: all\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC headers for Linux 2.6.15-1 This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the headers needed to built other modules (like bcm43xx) for Linux 2.6.15-1.\nPackage: ieee80211softmac-modules-2.6.15-1-486\nArchitecture: i386\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC kernel module for Linux 2.6.15-1-486 This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the compiled kernel module for 2.6.15-1-486\nPackage: ieee80211softmac-modules-2.6.15-1-686\nArchitecture: i386\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC kernel module for Linux 2.6.15-1-686 This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the compiled kernel module for 2.6.15-1-686\nPackage: ieee80211softmac-modules-2.6.15-1-686-smp\nArchitecture: i386\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC kernel module for Linux 2.6.15-1-686-smp This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the compiled kernel module for 2.6.15-1-686-smp\nPackage: ieee80211softmac-modules-2.6.15-1-k7\nArchitecture: i386\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC kernel module for Linux 2.6.15-1-k7 This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the compiled kernel module for 2.6.15-1-k7\nPackage: ieee80211softmac-modules-2.6.15-1-k7-smp\nArchitecture: i386\nVersion: 20060125-2.1\nDescription: IEEE 802.11 SoftMAC kernel module for Linux 2.6.15-1-k7-smp This package contains the kernel module for the IEEE 802.11 SoftMAC Wireless LAN stack. . This package contains the compiled kernel module for 2.6.15-1-k7-smp\nPackage: ieee80211softmac-source\nArchitecture: all\nVersion: 20060125-2.1\nDescription: Source for the ieee80211softmac driver This package provides the source code for the ieee80211softmac kernel modules. The ieee80211softmac package is also required in order to make use of these modules. Kernel source or headers are required to compile these modules.\nPackage: ifplugd\nArchitecture: amd64\nVersion: 0.28-2.1\nDescription: A configuration daemon for ethernet devices ifplugd is a daemon which will automatically configure your ethernet device when a cable is plugged in and automatically unconfigure it if the cable is pulled. This is useful on laptops with onboard network adapters, since it will only configure the interface when a cable is really connected. . Some features: * May beep when the cable is unplugged, plugged, the interface configuration succeeded or failed. * Syslog support * small * Multiple ethernet interface support * Support for wireless networking. Whenever an association to an AP is detected the network is configured. Have a look on waproamd if you need a facility to configure WEP keys before AP associations succeed. * Compatibility mode for network devices which do not support cable detection\nPackage: ilithuanian\nArchitecture: all\nVersion: 1.1+cvs20060719-0.1\nDescription: ispell dictionary for Lithuanian (LT) This is the Lithuanian dictionary, to be used with ispell to check and correct spelling in Lithuanian texts.\nPackage: imagemagick\nArchitecture: amd64\nVersion: 7:6.2.4.5.dfsg1-0.10\nDescription: Image manipulation programs Imagemagick is a set of programs to manipulate various image formats (JPEG, TIFF, PhotoCD, PBM, XPM, etc...). All manipulations can be achieved through shell commands as well as through an X11 graphical interface (display). . Possible effects: colormap manipulation, channel operations, thumbnail creation, image annotation, limited drawing, image distortion, etc... . This package suggests a postscript interpreter (gs) to read postscript files. It will however function happily without it (as long as you don't want to read postscript).\nPackage: imp4\nArchitecture: all\nVersion: 4.1.3-1~1\nDescription: webmail component for horde framework IMP is the Internet Messaging Program (formerly, among other things, the IMAP webMail Program), a PHP-based webmail system and a component of the Horde project. IMP, once installed, accesses mail over IMAP thus requiring little to no special preparations on the server on which mail is stored. . IMP offers most of the features users have come to expect from their conventional mail programs, including attachments, spell-check, address books, multiple folders, and multiple-language support.\nPackage: initramfs-tools\nArchitecture: all\nVersion: 0.85c\nDescription: tools for generating an initramfs This package contains tools to create and boot an initramfs for packaged 2.6 Linux kernel. The initramfs is a gzipped cpio archive. At boot time, the kernel unpacks that archive into RAM, mounts and uses it as initial root file system. The mounting of the real root file system occurs in early user space. klibc provides utilities to setup root. Having the root on EVMS, MD, LVM2, LUKS or NFS is also supported. Any boot loader with initrd support is able to load an initramfs archive.\nPackage: ipac-ng\nArchitecture: i386\nVersion: 1.31-1\nDescription: IP Accounting for iptables( kernel >=2.4) Inserts iptables rules to classify network traffic and monitors these rules, writing the data to a file at a certain interval. It will then allow one to calculate IP accounting data and statistics. . https://sf.net/projects/ipac-ng/\nPackage: ipac-ng-pgsql\nArchitecture: i386\nVersion: 1.27-5\nDescription: IP Accounting for iptables( kernel >=2.4) Inserts iptables rules to classify network traffic and monitors these rules, writing the data to a file at a certain interval. It will then allow one to calculate IP accounting data and statistics. . https://sf.net/projects/ipac-ng/\nPackage: ipp2p-module-2.6.15-1-486\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-486\nPackage: ipp2p-module-2.6.15-1-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-686\nPackage: ipp2p-module-2.6.15-1-686-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-686-smp\nPackage: ipp2p-module-2.6.15-1-amd64-generic\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-generic\nPackage: ipp2p-module-2.6.15-1-amd64-k8\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-k8\nPackage: ipp2p-module-2.6.15-1-amd64-k8-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-amd64-k8-smp\nPackage: ipp2p-module-2.6.15-1-em64t-p4\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-em64t-p4\nPackage: ipp2p-module-2.6.15-1-em64t-p4-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-em64t-p4-smp\nPackage: ipp2p-module-2.6.15-1-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-k7\nPackage: ipp2p-module-2.6.15-1-k7-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.15-1-k7-smp\nPackage: ipp2p-module-2.6.16-1-amd64-generic\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-amd64-generic\nPackage: ipp2p-module-2.6.16-1-amd64-k8\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-amd64-k8\nPackage: ipp2p-module-2.6.16-1-amd64-k8-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-amd64-k8-smp\nPackage: ipp2p-module-2.6.16-1-em64t-p4\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-em64t-p4\nPackage: ipp2p-module-2.6.16-1-em64t-p4-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-em64t-p4-smp\nPackage: ipp2p-module-2.6.16-1-vserver-amd64-k8\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-vserver-amd64-k8\nPackage: ipp2p-module-2.6.16-1-vserver-em64t-p4\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-1-vserver-em64t-p4\nPackage: ipp2p-module-2.6.16-2-486\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-486\nPackage: ipp2p-module-2.6.16-2-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-686\nPackage: ipp2p-module-2.6.16-2-686-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-686-smp\nPackage: ipp2p-module-2.6.16-2-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-k7\nPackage: ipp2p-module-2.6.16-2-k7-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-k7-smp\nPackage: ipp2p-module-2.6.16-2-vserver-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-vserver-686\nPackage: ipp2p-module-2.6.16-2-vserver-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-vserver-k7\nPackage: ipp2p-module-2.6.16-2-xen-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-xen-686\nPackage: ipp2p-module-2.6.16-2-xen-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-xen-k7\nPackage: ipp2p-module-2.6.16-2-xen-vserver-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.16-2-xen-vserver-686\nPackage: ipp2p-module-2.6.17-2-486\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-486\nPackage: ipp2p-module-2.6.17-2-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-686\nPackage: ipp2p-module-2.6.17-2-686-bigmem\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-686-bigmem\nPackage: ipp2p-module-2.6.17-2-amd64\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-amd64\nPackage: ipp2p-module-2.6.17-2-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-k7\nPackage: ipp2p-module-2.6.17-2-vserver-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-vserver-686\nPackage: ipp2p-module-2.6.17-2-vserver-amd64\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-vserver-amd64\nPackage: ipp2p-module-2.6.17-2-vserver-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-vserver-k7\nPackage: ipp2p-module-2.6.17-2-xen-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-xen-686\nPackage: ipp2p-module-2.6.17-2-xen-amd64\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-xen-amd64\nPackage: ipp2p-module-2.6.17-2-xen-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.17-2-xen-k7\nPackage: ipp2p-module-2.6.8-12-amd64-generic\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-12-amd64-generic\nPackage: ipp2p-module-2.6.8-12-amd64-k8\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-12-amd64-k8\nPackage: ipp2p-module-2.6.8-12-amd64-k8-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-12-amd64-k8-smp\nPackage: ipp2p-module-2.6.8-12-em64t-p4\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-12-em64t-p4\nPackage: ipp2p-module-2.6.8-12-em64t-p4-smp\nArchitecture: amd64\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-12-em64t-p4-smp\nPackage: ipp2p-module-2.6.8-2-386\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-2-386\nPackage: ipp2p-module-2.6.8-2-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-2-686\nPackage: ipp2p-module-2.6.8-2-686-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-2-686-smp\nPackage: ipp2p-module-2.6.8-2-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-2-k7\nPackage: ipp2p-module-2.6.8-2-k7-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-2-k7-smp\nPackage: ipp2p-module-2.6.8-3-386\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-3-386\nPackage: ipp2p-module-2.6.8-3-686\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-3-686\nPackage: ipp2p-module-2.6.8-3-686-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-3-686-smp\nPackage: ipp2p-module-2.6.8-3-k7\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-3-k7\nPackage: ipp2p-module-2.6.8-3-k7-smp\nArchitecture: i386\nVersion: 0.8.0-1\nDescription: IPP2P extension to iptables to identify P2P traffic module IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the ipp2p kernel module, built for the kernel from the package kernel-image-2.6.8-3-k7-smp\nPackage: ipp2p-source\nArchitecture: all\nVersion: 0.8.0-3\nDescription: IPP2P extension to iptables to identify P2P traffic module source IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains the prepared source for ipp2p kernel module. You can use the module-assistant tool to build the binary modules or compile them manually. If you are lucky, the module may already be available, watch out for ipp2p-module-* packages.\nPackage: ipp2p-utils\nArchitecture: amd64\nVersion: 0.8.0-3\nDescription: IPP2P extension to iptables to identify P2P traffic IPP2P, an extension to iptables to identify P2P traffic written by Eicke Friedrich. This software is under development but it seems to run pretty stable. Use at your own risk! . This package contains iptables module for the ipp2p kernel module. You will need that module to make them work, either from a patched kernel or building it from source with module-assistant (see ipp2p-source package). If you are lucky, the module may already be available, watch out for ipp2p-module-* packages.\nPackage: java-common\nArchitecture: all\nVersion: 0.30\nDescription: Base of all Java packages This package must be installed in the system if a Java environment is desired. It covers useful information for Java users in Debian GNU/Linux, including: * The Java policy document which describes the layout of Java support in Debian and how Java packages should behave. * The Debian-Java-FAQ which provides information on the status of Java support in Debian, available compilers, virtual machines, Java programs and libraries as well as on legal issues. * Information on how to create dummy packages to fulfill java2 requirements.\nPackage: kernel-doc-2.6.10\nArchitecture: all\nVersion: 2.6.10-7\nDescription: Linux kernel specific documentation for version 2.6.10 This package provides the various readme's in the 2.6.10 kernel Documentation/ subdirectory: these typically contain kernel-specific installation notes for some drivers for example. See /usr/share/doc/kernel-doc-X.X.XX/Documentation/00-INDEX for a list of what is contained in each file. Please read the Changes file, as it contains information about the problems, which may result by upgrading your kernel.\nPackage: kernel-doc-2.6.11\nArchitecture: all\nVersion: 2.6.11-7\nDescription: Linux kernel specific documentation for version 2.6.11 This package provides the various readme's in the 2.6.11 kernel Documentation/ subdirectory: these typically contain kernel-specific installation notes for some drivers for example. See /usr/share/doc/kernel-doc-X.X.XX/Documentation/00-INDEX for a list of what is contained in each file. Please read the Changes file, as it contains information about the problems, which may result by upgrading your kernel.\nPackage: kernel-doc-2.6.8\nArchitecture: all\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel specific documentation for version 2.6.8 This package provides the various readme's in the 2.6.8 kernel Documentation/ subdirectory: these typically contain kernel-specific installation notes for some drivers for example. See /usr/share/doc/kernel-doc-X.X.XX/Documentation/00-INDEX for a list of what is contained in each file. Please read the Changes file, as it contains information about the problems, which may result by upgrading your kernel.\nPackage: kernel-headers-2.6.10-1\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Header files related to Linux kernel version 2.6.10 This package provides kernel header files for version 2.6.10, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.10-1-386\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel headers 2.6.10 on 386 This package provides kernel header files for version 2.6.10 on 386, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.10-1-686\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel headers 2.6.10 on PPro/Celeron/PII/PIII/P4 This package provides kernel header files for version 2.6.10 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.10-1-686-smp\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel headers 2.6.10 on PPro/Celeron/PII/PIII/P4 SMP This package provides kernel header files for version 2.6.10 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4 with SMP support, for sites that want the latest kernel headers. SMP (symmetric multi-processing) is needed if you have multiple processors. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.10-1-k7\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel headers 2.6.10 on AMD K7 This package provides kernel header files for version 2.6.10 on AMD Duron/Athlon, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.10-1-k7-smp\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel headers 2.6.10 on AMD K7 SMP This package provides kernel header files for version 2.6.10 on AMD Duron/Athlon with SMP support, for sites that want the latest kernel headers. SMP (symmetric multi-processing) is needed if you have multiple processors. Please read /usr/share/doc/kernel-headers-2.6.10-1/debian.README.gz for details\nPackage: kernel-headers-2.6.8-12\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Header files related to Linux kernel version 2.6.8 This package provides kernel header files for version 2.6.8, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12/debian.README.gz for details.\nPackage: kernel-headers-2.6.8-12-amd64-generic\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 for generic x86_64 systems This package provides kernel header files for version 2.6.8 on all x86_64 systems, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12-amd64-generic/debian.README.gz for details.\nPackage: kernel-headers-2.6.8-12-amd64-k8\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers for version 2.6.8 on AMD64 systems This package provides kernel header files for version 2.6.8 on AMD Athlon64, Athlon FX and Opteron, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12-amd64-k8/debian.README.gz for details.\nPackage: kernel-headers-2.6.8-12-amd64-k8-smp\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers for version 2.6.8 on AMD64 SMP systems This package provides kernel header files for version 2.6.8 on AMD Opteron with SMP support, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12-amd64-k8-smp/debian.README.gz i for details.\nPackage: kernel-headers-2.6.8-12-em64t-p4\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers for version 2.6.8 on Intel EM64T systems This package provides kernel header files for version 2.6.8 on all Intel Pentium 4 and Xeon systems with EM64T extension, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12-em64t-p4/debian.README.gz for details.\nPackage: kernel-headers-2.6.8-12-em64t-p4-smp\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers for version 2.6.8 on Intel EM64T SMP systems This package provides kernel header files for version 2.6.8 on all Intel P4 and Xeon systems with EM64T extension, for sites that want the latest kernel headers. Please read /usr/share/doc/kernel-headers-2.6.8-12-em64t-p4/debian.README.gz for details.\nPackage: kernel-headers-2.6.8-3\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Header files related to Linux kernel version 2.6.8 This package provides kernel header files for version 2.6.8. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-headers-2.6.8-3-386\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 on 386 This package provides kernel header files for version 2.6.8 on 386. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-headers-2.6.8-3-686\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 on PPro/Celeron/PII/PIII/P4 This package provides kernel header files for version 2.6.8 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-headers-2.6.8-3-686-smp\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP This package provides kernel header files for version 2.6.8 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4 with SMP support. SMP (symmetric multi-processing) is needed if you have multiple processors. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-headers-2.6.8-3-k7\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 on AMD K7 This package provides kernel header files for version 2.6.8 on 32bit AMD Duron/Athlon/AthlonXP. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-headers-2.6.8-3-k7-smp\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel headers 2.6.8 on AMD K7 SMP This package provides kernel header files for version 2.6.8 on 32bit AMD Duron/Athlon/AthlonXP with SMP support. SMP (symmetric multi-processing) is needed if you have multiple processors. Please read /usr/share/doc/kernel-headers-2.6.8-3/debian.README.gz for details\nPackage: kernel-image-2.6-386\nArchitecture: i386\nVersion: 1:2.6.15-8.1\nDescription: Linux kernel 2.6 image on 486-class machines - transition package This package is for transition only.\nPackage: kernel-image-2.6-686\nArchitecture: i386\nVersion: 1:2.6.15-8.1\nDescription: Linux kernel 2.6 image on PPro/Celeron/PII/PIII/P4 machines - transition package This package is for transition only.\nPackage: kernel-image-2.6-686-smp\nArchitecture: i386\nVersion: 1:2.6.15-8.1\nDescription: Linux kernel 2.6 image on PPro/Celeron/PII/PIII/P4 SMP machines - transition package This package is for transition only.\nPackage: kernel-image-2.6-k7\nArchitecture: i386\nVersion: 1:2.6.15-8.1\nDescription: Linux kernel 2.6 image on AMD K7 machines - transition package This package is for transition only.\nPackage: kernel-image-2.6-k7-smp\nArchitecture: i386\nVersion: 1:2.6.15-8.1\nDescription: Linux kernel 2.6 image on AMD K7 SMP machines - transition package This package is for transition only.\nPackage: kernel-image-2.6.10-1-386\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel image for version 2.6.10 on 386. This package contains the Linux kernel image for version 2.6.10 on 386, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.10-1-686\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel image for version 2.6.10 on PPro/Celeron/PII/PIII/P4. This package contains the Linux kernel image for version 2.6.10 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.10-1-686-smp\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel image for version 2.6.10 on PPro/Celeron/PII/PIII/P4 SMP. This package contains the Linux kernel image for version 2.6.10 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4 with SMP support, the corresponding System.map file, and the modules built by the packager. SMP (symmetric multi-processing) is needed if you have multiple processors. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.10-1-k7\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel image for version 2.6.10 on AMD K7. This package contains the Linux kernel image for version 2.6.10 on AMD Duron/Athlon, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.10-1-k7-smp\nArchitecture: i386\nVersion: 2.6.10-7\nDescription: Linux kernel image for version 2.6.10 on AMD K7 SMP. This package contains the Linux kernel image for version 2.6.10 on AMD Duron/Athlon with SMP support, the corresponding System.map file, and the modules built by the packager. SMP (symmetric multi-processing) is needed if you have multiple processors. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-12-amd64-generic\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on generic x86_64 systems This package contains the Linux kernel image for version 2.6.8 on all x86_64 systems, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . This is the amd64 installer kernel, running on all currently available x86_64 CPUs. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-12-amd64-k8\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on AMD64 systems This package contains the Linux kernel image for version 2.6.8 on AMD Athlon64, Athlon FX and Opteron, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you have a single-processor, AMD based 64bit system, you might want to install this kernel. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-12-amd64-k8-smp\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on AMD64 SMP systems This package contains the Linux kernel image for version 2.6.8 on AMD Opteron, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you have a multi-processor, AMD based 64bit system, you might want to install this kernel. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-12-em64t-p4\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on Intel EM64T systems This package contains the Linux kernel image for version 2.6.8 on all Intel P4 and Xeon systems with EM64T extension, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you have a single-processor, Intel based 64bit system, and do not want to use the virtual second processor, use this kernel. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources. . This kernel version has no P4 Hyper-Threading support.\nPackage: kernel-image-2.6.8-12-em64t-p4-smp\nArchitecture: amd64\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on Intel EM64T SMP systems This package contains the Linux kernel image for version 2.6.8 on all Intel P4 and Xeon systems with EM64T extension, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you have a multi-processor, Intel based 64bit system, or want to use the virtual second processor in a single-CPU 64bit P4 system, you might want to install this kernel. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources. . This kernel version has SMP and HT support.\nPackage: kernel-image-2.6.8-3-386\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on 386. This package contains the Linux kernel image for version 2.6.8 on 386, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-3-686\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4. This package contains the Linux kernel image for version 2.6.8 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-3-686-smp\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on PPro/Celeron/PII/PIII/P4 SMP. This package contains the Linux kernel image for version 2.6.8 on Pentium Pro/Celeron/Pentium II/Pentium III/Pentium 4 with SMP support, the corresponding System.map file, and the modules built by the packager. SMP (symmetric multi-processing) is needed if you have multiple processors. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-3-k7\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on AMD K7. This package contains the Linux kernel image for version 2.6.8 on 32bit AMD Duron/Athlon/AthlonXP, the corresponding System.map file, and the modules built by the packager. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-image-2.6.8-3-k7-smp\nArchitecture: i386\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel image for version 2.6.8 on AMD K7 SMP. This package contains the Linux kernel image for version 2.6.8 on 32bit AMD Duron/Athlon/AthlonXP with SMP support, the corresponding System.map file, and the modules built by the packager. SMP (symmetric multi-processing) is needed if you have multiple processors. It also contains scripts that try to ensure that the system is not left in a unbootable state after an update. . If you wish to update a bootdisk, or to use a bootloader to make installing and using the image easier, we suggest you install the latest fdutils (for formatting a floppy to be used as boot disk), and LILO, for a powerful bootloader. Of course, both these are optional. . Kernel image packages are generally produced using kernel-package, and it is suggested that you install that package if you wish to create a custom kernel from the sources.\nPackage: kernel-package\nArchitecture: all\nVersion: 11.001~1\nDescription: A utility for building Linux kernel related Debian packages. This package provides the capability to create a debian kernel-image package by just running make-kpkg kernel_image in a kernel source directory tree. It can also package the relevant kernel headers into a kernel-headers package. In general, this package is very useful if you need to create a custom kernel, if, for example, the default kernel does not support some of your hardware, or you wish a leaner, meaner kernel. It also scripts the steps that need be taken to compile the kernel, which is quite convenient (forgetting a crucial step once was the initial motivation for this package). Please look at /usr/share/doc/kernel-package/Rationale.gz for a full list of advantages of this package.\nPackage: kernel-patch-debian-2.6.10\nArchitecture: all\nVersion: 2.6.10-7\nDescription: Debian patches to Linux 2.6.10 This package includes the patches used to produce the prepackaged kernel-source-2.6.10 package. Note that these patches do NOT apply against a pristine Linux 2.6.10 kernel but only against kernel-source-2.6.10_2.6.10.orig.tar.gz from the Debian archive.\nPackage: kernel-patch-debian-2.6.11\nArchitecture: all\nVersion: 2.6.11-7\nDescription: Debian patches to Linux 2.6.11 This package includes the patches used to produce the prepackaged kernel-source-2.6.11 package. Note that these patches are not intended to apply against a pristine Linux 2.6.11 kernel but only against kernel-source-2.6.11_2.6.11.orig.tar.gz from the Debian archive.\nPackage: kernel-patch-debian-2.6.8\nArchitecture: all\nVersion: 2.6.8-16sarge2.1\nDescription: Debian patches to Linux 2.6.8 This package includes the patches used to produce the prepackaged kernel-source-2.6.8 package. Note that these patches do NOT apply against a pristine Linux 2.6.8 kernel but only against kernel-source-2.6.8_2.6.8.orig.tar.gz from the Debian archive.\nPackage: kernel-source-2.6.10\nArchitecture: all\nVersion: 2.6.10-7\nDescription: Linux kernel source for version 2.6.10 with Debian patches This package provides the source code for the Linux kernel version 2.6.10. . You may configure the kernel to your setup by typing \"make config\" and following instructions, but you could get ncursesX.X-dev and try \"make menuconfig\" for a jazzier, and easier to use interface. There are options to use QT or GNOME based configuration interfaces, but they need additional packages to be installed. Also, please read the detailed documentation in the file /usr/share/doc/kernel-source-2.6.10/README.headers.gz. . If you wish to use this package to create a custom Linux kernel, then it is suggested that you investigate the package kernel-package, which has been designed to ease the task of creating kernel image packages.\nPackage: kernel-source-2.6.11\nArchitecture: all\nVersion: 2.6.11-7\nDescription: Linux kernel source for version 2.6.11 with Debian patches This package provides the source code for the Linux kernel version 2.6.11. . You may configure the kernel to your setup by typing \"make config\" and following instructions, but you could get ncursesX.X-dev and try \"make menuconfig\" for a jazzier, and easier to use interface. There are options to use QT or GNOME based configuration interfaces, but they need additional packages to be installed. Also, please read the detailed documentation in the file /usr/share/doc/kernel-source-2.6.11/README.headers.gz. . If you wish to use this package to create a custom Linux kernel, then it is suggested that you investigate the package kernel-package, which has been designed to ease the task of creating kernel image packages.\nPackage: kernel-source-2.6.8\nArchitecture: all\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel source for version 2.6.8 with Debian patches This package provides the source code for the Linux kernel version 2.6.8. . You may configure the kernel to your setup by typing \"make config\" and following instructions, but you could get ncursesX.X-dev and try \"make menuconfig\" for a jazzier, and easier to use interface. There are options to use QT or GNOME based configuration interfaces, but they need additional packages to be installed. Also, please read the detailed documentation in the file /usr/share/doc/kernel-source-2.6.8/README.headers.gz. . If you wish to use this package to create a custom Linux kernel, then it is suggested that you investigate the package kernel-package, which has been designed to ease the task of creating kernel image packages.\nPackage: kernel-tree-2.6.10\nArchitecture: all\nVersion: 2.6.10-7\nDescription: Linux kernel source tree for building Debian kernel images This meta package is used as a build dependency of Debian kernel-image packages to prevent a version discrepancy between the kernel-image and corresponding kernel-sources packages in the fast-moving unstable archive. The package's dependency relations are structured so that a kernel-image package's build dependencies can always be satisfied, even if the kernel-source package that had been used to compile the image has been superseeded by a newer Debian revision since the last build. . The package provides a list of virtual packages, corresponding to Debian revisions of a kernel-source package. The Debian kernel-patch contains the information needed to roll back the current kernel-source to any of the revisions identified by the provided virtual packages. Therefore, the kernel-tree package ensures the availability of the kernel source tree corresponding to each of the virtual packages listed. . The package serves no purpose outside of the Debian build and archive infrastructure.\nPackage: kernel-tree-2.6.11\nArchitecture: all\nVersion: 2.6.11-7\nDescription: Linux kernel source tree for building Debian kernel images This meta package is used as a build dependency of Debian kernel-image packages to prevent a version discrepancy between the kernel-image and corresponding kernel-sources packages in the fast-moving unstable archive. The package's dependency relations are structured so that a kernel-image package's build dependencies can always be satisfied, even if the kernel-source package that had been used to compile the image has been superseeded by a newer Debian revision since the last build. . The package provides a list of virtual packages, corresponding to Debian revisions of a kernel-source package. The Debian kernel-patch contains the information needed to roll back the current kernel-source to any of the revisions identified by the provided virtual packages. Therefore, the kernel-tree package ensures the availability of the kernel source tree corresponding to each of the virtual packages listed. . The package serves no purpose outside of the Debian build and archive infrastructure.\nPackage: kernel-tree-2.6.8\nArchitecture: all\nVersion: 2.6.8-16sarge2.1\nDescription: Linux kernel source tree for building Debian kernel images This meta package is used as a build dependency of Debian kernel-image packages to prevent a version discrepancy between the kernel-image and corresponding kernel-sources packages in the fast-moving unstable archive. The package's dependency relations are structured so that a kernel-image package's build dependencies can always be satisfied, even if the kernel-source package that had been used to compile the image has been superseeded by a newer Debian revision since the last build. . The package provides a list of virtual packages, corresponding to Debian revisions of a kernel-source package. The Debian kernel-patch contains the information needed to roll back the current kernel-source to any of the revisions identified by the provided virtual packages. Therefore, the kernel-tree package ensures the availability of the kernel source tree corresponding to each of the virtual packages listed. . The package serves no purpose outside of the Debian build and archive infrastructure.\nPackage: kismet\nArchitecture: i386\nVersion: 2006.04.R1-1.1\nDescription: Wireless 802.11b monitoring tool Kismet is a 802.11b wireless network sniffer. It is capable of sniffing using almost any supported wireless card using the Airo, HostAP, Wlan-NG, and Orinoco (with a kernel patch) drivers. . Can make use of sox and festival to play audio alarms for network events and speak out network summary on discovery. Optionally works with gpsd to map scanning.\nPackage: klibc-utils\nArchitecture: amd64\nVersion: 1.4.30-1~bpo.1\nDescription: small statically-linked utilities built with klibc This package contains a collection of programs that are statically linked against klibc. These duplicate some of the functionality of a regular Linux toolset, but are typically much smaller than their full-function counterparts. They are intended for inclusion in initramfs images and embedded systems.\nPackage: klibc-utils-udeb\nArchitecture: amd64\nVersion: 1.4.30-1~bpo.1\nDescription: small statically-linked utilities built with klibc This package contains a collection of programs that are statically linked against klibc. These duplicate some of the functionality of a regular Linux toolset, but are typically much smaller than their full-function counterparts. They are intended for inclusion in initramfs images and embedded systems.\nPackage: krb5-admin-server\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: MIT Kerberos master server (kadmind) Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the Kerberos master server (kadmind), which handles account creations and deletions, password changes, and other administrative commands via the Kerberos admin protocol. It also contains the command used by the master KDC to propagate its database to slave KDCs. This package is generally only used on the master KDC for a Kerberos realm.\nPackage: krb5-clients\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Secure replacements for ftp, telnet and rsh using MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains secure replacements for ftp, telnet, rsh, rlogin, and rcp that use Kerberos for authentication.\nPackage: krb5-doc\nArchitecture: all\nVersion: 1.4.4-5~bpo.1\nDescription: Documentation for MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the installation, administrator, and user reference manuals for MIT Kerberos and the man pages for the MIT Kerberos configuration files.\nPackage: krb5-ftpd\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Secure FTP server supporting MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains an FTP server that uses Kerberos for authentication.\nPackage: krb5-kdc\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: MIT Kerberos key server (KDC) Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the Kerberos key server (KDC). The KDC manages all authentication credentials for a Kerberos realm, holds the master keys for the realm, and responds to authentication requests. This package should be installed on both master and slave KDCs.\nPackage: krb5-rsh-server\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Secure replacements for rshd and rlogind using MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains replacements for rshd and rlogind that use Kerberos for authentication.\nPackage: krb5-telnetd\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Secure telnet server supporting MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains a replacement for telnetd that uses Kerberos for authentication.\nPackage: krb5-user\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Basic programs to authenticate using MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the basic programs to authenticate to MIT Kerberos, change passwords, and talk to the admin server (to create and delete principals, list principals, etc.).\nPackage: kvlc\nArchitecture: i386\nVersion: 0.8.4.debian-2.1\nDescription: KDE frontend for VLC (dummy legacy package) The kvlc package has been discontinued. You should use the wxvlc package instead. . This package is only useful to ensure clean upgrades from old Debian releases and can be safely removed.\nPackage: lame\nArchitecture: i386\nVersion: 3.96.1-1\nDescription: LAME Ain't an MP3 Encoder Lame is a program which can be used to create compressed audio files. (Lame aint MP3 encoder). These audio files can be played back by popular mp3 players such as mpg123. To read from stdin, use \"-\" for <infile>. To write to stdout, use a \"-\" for <outfile>. . This package contains the frontend encoder binary.\nPackage: lame-extras\nArchitecture: i386\nVersion: 3.96.1-1\nDescription: LAME Ain't an MP3 Encoder Lame is a program which can be used to create compressed audio files. (Lame aint MP3 encoder). These audio files can be played back by popular mp3 players such as mpg123. To read from stdin, use \"-\" for <infile>. To write to stdout, use a \"-\" for <outfile>. . This package contains a streming server (mp3rtp) and a graphical frame analysis tool (mp3x) for mp3 files.\nPackage: laptop-detect\nArchitecture: amd64\nVersion: 0.12.1.1\nDescription: attempt to detect a laptop Laptop mode attempts to determine whether it is being run on a laptop or a desktop and appraises its caller of this.\nPackage: laptop-detect-udeb\nArchitecture: amd64\nVersion: 0.12.1.1\nDescription: attempt to detect a laptop Laptop mode attempts to determine whether it is being run on a laptop or a desktop and appraises its caller of this. . This contains the udeb, which is used for the debian-installer installation system. It won't work well on a normal debian system.\nPackage: lbxproxy\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Low Bandwidth X (LBX) proxy server Applications that would like to take advantage of the Low Bandwidth extension to X (LBX) must make their connections to an lbxproxy. These applications need know nothing about LBX, they simply connect to the lbxproxy as if were a regular X server. The lbxproxy accepts client connections, multiplexes them over a single connection to the X server, and performs various optimizations on the X protocol to make it faster over low bandwidth and/or high latency connections.\nPackage: ld10k1\nArchitecture: amd64\nVersion: 1.0.11-1.1\nDescription: ALSA emu10k1/2 patch loader A patch loader for use with the emu10k1 ALSA driver. Supports Sound Blaster Live!, Audigy and Audigy 2. . Homepage: http://ld10k1.sourceforge.net/\nPackage: lemon\nArchitecture: amd64\nVersion: 3.3.5-0.1bpo1\nDescription: The Lemon Parser Generator Lemon is an LALR(1) parser generator for C or C++. It does the same job as bison and yacc. But lemon is not another bison or yacc clone. It uses a different grammar syntax which is designed to reduce the number of coding errors. Lemon also uses a more sophisticated parsing engine that is faster than yacc and bison and which is both reentrant and thread-safe. Furthermore, Lemon implements features that can be used to eliminate resource leaks, making is suitable for use in long-running programs such as graphical user interfaces or embedded controllers.\nPackage: liba52-0.7.4\nArchitecture: i386\nVersion: 0.7.4-2\nDescription: Library for decoding ATSC A/52 streams. liba52 is a free library for decoding ATSC A/52 streams. The A/52 standard is used in a variety of applications, including digital television and DVD. It is also known as AC-3.\nPackage: liba52-0.7.4-dev\nArchitecture: i386\nVersion: 0.7.4-2\nDescription: Development library and headers for liba52 liba52 is a free library for decoding ATSC A/52 streams. The A/52 standard is used in a variety of applications, including digital television and DVD. It is also known as AC-3. . The test programs a52dec and extract_a52 is also included in this package.\nPackage: libaa-bin\nArchitecture: amd64\nVersion: 1.4p5-30.1\nDescription: sample programs using aalib AAlib is a portable ascii art graphics library. Internally, it works like a graphics display, but the output is rendered into gorgeous platform independent ascii graphics. . This package contains a few sample programs that use aalib.\nPackage: libaa1\nArchitecture: amd64\nVersion: 1.4p5-30.1\nDescription: ascii art library AAlib is a portable ascii art graphics library. Internally, it works like a graphics display, but the output is rendered into gorgeous platform independent ascii graphics.\nPackage: libaa1-dev\nArchitecture: amd64\nVersion: 1.4p5-30.1\nDescription: ascii art library, development kit AAlib is a portable ascii art graphics library. Internally, it works like a graphics display, but the output is rendered into platform-independent ascii graphics. . This package contains the static library and header files used in development, plus developer's documentation.\nPackage: libapache-mod-php4\nArchitecture: i386\nVersion: 4:4.3.10-22.1\nDescription: server-side, HTML-embedded scripting language (apache 1.3 module) This package provides the PHP4 module for the Apache 1.3 webserver (as found in the apache, apache-ssl, and apache-perl packages). To use php4 with Apache 2.0, you probably want libapache2-mod-php4 instead. . Compiled in extensions include: bcmath, bz2, calendar, ctype, dba, dbx, exif, filepro, ftp, gettext, iconv, mbstring, mime_magic, openssl, overload, pcre, posix, session, shmop, sockets, standard, sysvmsg, sysvsem, sysvshm, tokenizer, wddx, xml, xmlrpc, yp, zip, and zlib. . PHP4 is an HTML-embedded scripting language. Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in. The goal of the language is to allow web developers to write dynamically generated pages quickly. . Homepage: http://www.php.net/\nPackage: libapache-mod-php5\nArchitecture: amd64\nVersion: 5.1.6-1~bpo.1\nDescription: server-side, HTML-embedded scripting language (apache 1.3 module) This package provides the PHP5 module for the Apache 1.3 webserver (as found in the apache, apache-ssl, and apache-perl packages). To use php5 with Apache 2.0, you probably want libapache2-mod-php5 instead. . The following extensions are built in: bcmath bz2 calendar ctype date dba dom exif filepro ftp gettext hash iconv libxml mbstring mime_magic openssl pcre posix Reflection session shmop SimpleXML soap sockets SPL standard sysvmsg sysvsem sysvshm tokenizer wddx xml xmlreader xmlwriter zlib. . PHP5 is an HTML-embedded scripting language. Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in. The goal of the language is to allow web developers to write dynamically generated pages quickly. . Homepage: http://www.php.net/\nPackage: libapache2-mod-php4\nArchitecture: i386\nVersion: 4:4.3.10-22.1\nDescription: server-side, HTML-embedded scripting language (apache 2.0 module) This package provides the PHP4 module for the Apache 2.0 webserver (as found in the apache2-mpm-prefork package). Please note that this package ONLY works with Apache's prefork MPM, as it is not compiled thread-safe. To use php4 with Apache 1.3, you probably want libapache-mod-php4 instead. . Compiled in extensions include: bcmath, bz2, calendar, ctype, dba, dbx, exif, filepro, ftp, gettext, iconv, mbstring, mime_magic, openssl, overload, pcre, posix, session, shmop, sockets, standard, sysvmsg, sysvsem, sysvshm, tokenizer, wddx, xml, xmlrpc, yp, zip, and zlib. . PHP4 is an HTML-embedded scripting language. Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in. The goal of the language is to allow web developers to write dynamically generated pages quickly. . Homepage: http://www.php.net/\nPackage: libapache2-mod-php5\nArchitecture: amd64\nVersion: 5.1.6-1~bpo.1\nDescription: server-side, HTML-embedded scripting language (apache 2.0 module) This package provides the PHP5 module for the Apache 2.0 webserver (as found in the apache2-mpm-prefork package). Please note that this package ONLY works with Apache's prefork MPM, as it is not compiled thread-safe. To use php5 with Apache 1.3, you probably want libapache-mod-php5 instead. . The following extensions are built in: bcmath bz2 calendar ctype date dba dom exif filepro ftp gettext hash iconv libxml mbstring mime_magic openssl pcre posix Reflection session shmop SimpleXML soap sockets SPL standard sysvmsg sysvsem sysvshm tokenizer wddx xml xmlreader xmlwriter zlib. . PHP5 is an HTML-embedded scripting language. Much of its syntax is borrowed from C, Java and Perl with a couple of unique PHP-specific features thrown in. The goal of the language is to allow web developers to write dynamically generated pages quickly. . Homepage: http://www.php.net/\nPackage: libapache2-svn\nArchitecture: amd64\nVersion: 1.2.3dfsg1-2bpo1\nDescription: apache modules for Subversion (aka. svn) Subversion is a version control system much like the Concurrent Versions System (CVS). Version control systems allow many individuals (who may be distributed geographically) to collaborate on a set of files (typically source code). Subversion has all the major features of CVS, plus certain new features that CVS users often wish they had. . This package provides the mod_dav_svn and mod_authz_svn modules for the apache web server. These modules authorize and translate requests from Subversion clients into operations on a Subversion repository. This is useful if you want to make a Subversion repository available over the Internet using the HTTP-based WebDAV/DeltaV protocol sometimes also called DAV. . Homepage: http://subversion.tigris.org\nPackage: libapt-pkg-dev\nArchitecture: amd64\nVersion: 0.6.44.2bpo1\nDescription: Development files for APT's libapt-pkg and libapt-inst This package contains the header files and libraries for developing with APT's libapt-pkg Debian package manipulation library and the libapt-inst deb/tar/ar library.\nPackage: libapt-pkg-doc\nArchitecture: all\nVersion: 0.6.44.2bpo1\nDescription: Documentation for APT development This package contains documentation for development of the APT Debian package manipulation program and its libraries.\nPackage: libapt-pkg-perl\nArchitecture: amd64\nVersion: 0.1.17bpo1\nDescription: Perl interface to libapt-pkg A Perl interface to APT's libapt-pkg which provides modules for configuration file/command line parsing, version comparison, inspection of the binary package cache and source package details.\nPackage: libarchive-dev\nArchitecture: i386\nVersion: 1.2.53-1.1\nDescription: Single library to read/write tar, cpio, pax, zip, iso9660, etc. The libarchive library provides a flexible interface for reading and writing streaming archive files such as tar and cpio. The library is inherently stream-oriented; readers serially iterate through the archive, writers serially add things to the archive. In particular, note that there is no built-in support for random access nor for in-place modification. . libarchive can read at least five tar formats, four cpio formats, ISO9660 CD/DVD images (including RockRidge extensions), and ZIP files. . libarchive can write two tar formats (ustar and pax), one cpio format (odc/POSIX), and two types of shar files (with and without uuencoding). . The bsdtar Debian package, which is the default tar(1) on FreeBSD, is built using libarchive. . There is also a manpage, tar(5), in libarchive1 that provides an excellent description of the various tar file formats.\nPackage: libarchive1\nArchitecture: i386\nVersion: 1.2.53-1.1\nDescription: Single library to read/write tar, cpio, pax, zip, iso9660, etc. The libarchive library provides a flexible interface for reading and writing streaming archive files such as tar and cpio. The library is inherently stream-oriented; readers serially iterate through the archive, writers serially add things to the archive. In particular, note that there is no built-in support for random access nor for in-place modification. . libarchive can read at least five tar formats, four cpio formats, ISO9660 CD/DVD images (including RockRidge extensions), and ZIP files. . libarchive can write two tar formats (ustar and pax), one cpio format (odc/POSIX), and two types of shar files (with and without uuencoding). . The bsdtar Debian package, which is the default tar(1) on FreeBSD, is built using libarchive. . There is also a manpage, tar(5), that provides an excellent description of the various tar file formats.\nPackage: libarts1\nArchitecture: amd64\nVersion: 1.5.0-2bpo1\nDescription: aRts sound system core components aRts is a short form for \"analog realtime synthesizer\". aRts is highly modular, creating and processing sound using small modules performing specific tasks. These may create a waveform (oscillators), play samples, filter data, add signals, perform effects like delay/flanger/chorus, or output the data to the soundcard. . This package contains the aRts sound system, its libraries and binaries, including the aRts daemon, artsd. . The 'akode' package adds several plug-ins to arts that can dramatically improve performance and help maintain uninterrupted playback. Its use with aRts is recommended. . This package is part of KDE, and a component of the KDE aRts module. See the 'kde' and 'arts' packages for more information.\nPackage: libarts1-dev\nArchitecture: amd64\nVersion: 1.5.0-2bpo1\nDescription: development files for the aRts sound system core components This package contains the header files needed to build applications that use the aRts sound system. . This package is part of KDE, and a component of the KDE aRts module. See the 'kde' and 'arts' packages for more information.\nPackage: libartsc0\nArchitecture: amd64\nVersion: 1.5.0-2bpo1\nDescription: aRts sound system C support library This package contains the C bindings for the aRts sound daemon. . This package is part of KDE, and a component of the KDE aRts module. See the 'kde' and 'arts' packages for more information.\nPackage: libartsc0-dev\nArchitecture: amd64\nVersion: 1.5.0-2bpo1\nDescription: development files for the aRts sound system C support library This package contains the header files needed to build applications that use the aRts sound daemon's C bindings. . This package is part of KDE, and a component of the KDE aRts module. See the 'kde' and 'arts' packages for more information.\nPackage: libasound2\nArchitecture: amd64\nVersion: 1.0.10-2.1\nDescription: ALSA library This package contains the ALSA library and its standard plugins. . ALSA is the Advanced Linux Sound Architecture.\nPackage: libasound2-dev\nArchitecture: amd64\nVersion: 1.0.10-2.1\nDescription: ALSA library development files This package contains files required for developing software that makes use of libasound2, the ALSA library. . ALSA is the Advanced Linux Sound Architecture.\nPackage: libasound2-doc\nArchitecture: all\nVersion: 1.0.11-2bpo1\nDescription: ALSA library developer documentation This package contains documentation for the ALSA library. . ALSA is the Advanced Linux Sound Architecture.\nPackage: libasound2-plugins\nArchitecture: i386\nVersion: 1.0.11-0bpo1\nDescription: ALSA library additional plugins This package contains plugins for the ALSA library that are not included in the main libasound2 package. . The ALSA library plugin \"jack\" allows the ALSA library to play or capture via JACK. (This should not be confused with the jackd output driver \"alsa\", included in the jackd package, which allows the JACK daemon to play back via the ALSA library.) . ALSA is the Advanced Linux Sound Architecture. JACK is the Jack Audio Connection Kit.\nPackage: libaspell-dev\nArchitecture: amd64\nVersion: 0.60.4-3.1\nDescription: Development files for applications with GNU Aspell support This package contains the headers and static libraries for developing applications with Aspell spell-checking support. . You need this package ONLY if you plan to build applications that link against the Aspell libraries. You do not have to install this package if all you want to do is use the Aspell program to spell-check documents.\nPackage: libaspell15\nArchitecture: amd64\nVersion: 0.60.4-3.1\nDescription: GNU Aspell spell-checker runtime library These are the runtime parts of the Aspell and pspell spell-checking toolkits, needed by applications that use the toolkits at runtime. . For a standalone spell-checker, install aspell as well.\nPackage: libaspell15c2\nArchitecture: all\nVersion: 0.60.4-3.1\nDescription: GNU Aspell spell-checker runtime library [dummy] This is a dummy package for reverting back the GCC 4.0 transition, which is not needed for Aspell. It may be safely removed if no packages depend upon it.\nPackage: libattr1\nArchitecture: i386\nVersion: 2.4.32-0.1\nDescription: Extended attribute shared library Contains the runtime environment required by programs that make use of extended attributes.\nPackage: libattr1-dev\nArchitecture: i386\nVersion: 2.4.32-0.1\nDescription: Extended attribute static libraries and headers attr-dev contains the libraries and header files needed to develop programs which make use of extended attributes. For Linux programs, the documented system call API is the recommended interface, but an SGI IRIX compatibility interface is also provided. . Currently only ext2, ext3, JFS and XFS support extended attributes. The SGI IRIX compatibility API built above the Linux system calls is used by programs such as xfsdump(8), xfsrestore(8) and xfs_fsr(8).\nPackage: libavcodec-dev\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: development files for libavcodec This is the codec library from the ffmpeg project. It supports most existing encoding formats (MPEG, DivX, MPEG4, AC3, DV...). . This package contains the header files and static libraries needed to compile applications or shared objects that use libavcodec.\nPackage: libavcodec0d\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: ffmpeg codec library This is the codec library from the ffmpeg project. It supports most existing encoding formats (MPEG, DivX, MPEG4, AC3, DV...). . This package contains a Debian-specific version of the libavcodec shared object that should only be used by Debian packages.\nPackage: libavformat-dev\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: development files for libavformat This is the demuxer library from the ffmpeg project. It supports most existing file formats (AVI, MPEG, OGG, Matroska, ASF...). . This package contains the header files and static libraries needed to compile applications or shared objects that use libavformat.\nPackage: libavformat0d\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: ffmpeg file format library This is the demuxer library from the ffmpeg project. It supports most existing file formats (AVI, MPEG, OGG, Matroska, ASF...). . This package contains a Debian-specific version of the libavformat shared object that should only be used by Debian packages.\nPackage: libbeecrypt6\nArchitecture: amd64\nVersion: 4.1.2-4.1\nDescription: open source C library of cryptographic algorithms BeeCrypt is an open source cryptography library that contains highly optimized C and assembler implementations of many well-known algorithms including Blowfish, SHA-1, Diffie-Hellman, and ElGamal. . Unlike some other crypto libraries, BeeCrypt is not designed to solve one specific problem, like file encryption, but to be a general purpose toolkit which can be used in a variety of applications. . There are also no patent or royalty issues associated with BeeCrypt, and it is released under the GNU LGPL license, which means it can be used for free in both open source and closed source commercial projects. . Homepage: http://sourceforge.net/projects/beecrypt\nPackage: libbeecrypt6-dev\nArchitecture: amd64\nVersion: 4.1.2-4.1\nDescription: header files for beecrypt, a library of cryptographic algorithms BeeCrypt is an open source cryptography library that contains highly optimized C and assembler implementations of many well-known algorithms including Blowfish, SHA-1, Diffie-Hellman, and ElGamal. . Unlike some other crypto libraries, BeeCrypt is not designed to solve one specific problem, like file encryption, but to be a general purpose toolkit which can be used in a variety of applications. . There are also no patent or royalty issues associated with BeeCrypt, and it is released under the GNU LGPL license, which means it can be used for free in both open source and closed source commercial projects. . Homepage: http://sourceforge.net/projects/beecrypt\nPackage: libbind-dev\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: Static Libraries and Headers used by BIND This package delivers archive-style libraries, header files, and API man pages for libbind, libdns, libisc, and liblwres. These are are only needed if you want to compile other packages that need more nameserver API than the resolver code provided in libc.\nPackage: libbind9-0\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: BIND9 Shared Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libbind9 shared library used by BIND's daemons and clients.\nPackage: libbio2jack0\nArchitecture: amd64\nVersion: 0.4-0.0\nDescription: oss/alsa to jack porting lib - runtime files A library that allows for simple porting of general purposed bio (blocked io) OSS/ALSA audio applications to Jack. . http://bio2jack.sourceforge.net/\nPackage: libbio2jack0-dev\nArchitecture: amd64\nVersion: 0.4-0.0\nDescription: oss/alsa to jack porting lib - development files A library that allows for simple porting of general purposed bio (blocked io) OSS/ALSA audio applications to Jack. . http://bio2jack.sourceforge.net/\nPackage: libcaca-dev\nArchitecture: amd64\nVersion: 0.9-5.1\nDescription: development files for libcaca libcaca is the Colour AsCii Art library. It provides high level functions for colour text drawing, simple primitives for line, polygon and ellipse drawing, as well as powerful image to text conversion routines. . This package contains the header files and static libraries needed to compile applications or shared objects that use libcaca.\nPackage: libcairo2\nArchitecture: amd64\nVersion: 1.0.4-1bpo1\nDescription: The Cairo 2D vector graphics library Cairo is a multi-platform library providing anti-aliased vector-based rendering for multiple target backends. Paths consist of line segments and cubic splines and can be rendered at any width with various join and cap styles. All colors may be specified with optional translucence (opacity/alpha) and combined using the extended Porter/Duff compositing algebra as found in the X Render Extension. . Cairo exports a stateful rendering API similar in spirit to the path construction, text, and painting operators of PostScript, (with the significant addition of translucence in the imaging model). When complete, the API is intended to support the complete imaging model of PDF 1.4. . This package contains the shared libraries.\nPackage: libcairo2-dev\nArchitecture: amd64\nVersion: 1.0.4-1bpo1\nDescription: Development files for the Cairo 2D graphics library Cairo is a multi-platform library providing anti-aliased vector-based rendering for multiple target backends. . This package contains the development libraries, header files needed by programs that want to compile with Cairo.\nPackage: libcairo2-doc\nArchitecture: all\nVersion: 1.0.4-1bpo1\nDescription: Documentation for the Cairo Multi-platform 2D graphics library Cairo is a multi-platform library providing anti-aliased vector-based rendering for multiple target backends. . This package contains the HTML documentation for the Cairo library in /usr/share/doc/libcairo2-doc/ .\nPackage: libcdio-cdda-dev\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read and control digital audio CDs (development files) This package contains development files (headers and static library) for the libcdio-cdda library. . This library is made to read and control digital audio CDs. It does not play such CDs, it only reads them digitally. As it uses libcdio as a backend, it supports the same kind of CDROM drives (and images) as libcdio.\nPackage: libcdio-cdda0\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read and control digital audio CDs This library is made to read and control digital audio CDs. It does not play such CDs, it only reads them digitally. As it uses libcdio as a backend, it supports the same kind of CDROM drives (and images) as libcdio.\nPackage: libcdio-dev\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read and control CD-ROM (development files) This package contains development files (headers and static library) for the libcdio library. . This library is to encapsulate CD-ROM reading and control. Applications wishing to be oblivious of the OS- and device-dependant properties of a CD-ROM can use this library. . Some support for disk image types like BIN/CUE and NRG is available, so applications that use this library also have the ability to read disc images as though they were CD's.\nPackage: libcdio-paranoia-dev\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read digital audio CDs with error correction (development files) This package contains development files (headers and static library) for the libcdio-paranoia library. . This library is made to read digital audio CDs, with error correction. It does its best to correct errors and jitter that happen when reading such discs. As it uses libcdio as a backend, it supports the same kind of CDROM drives (and images) as libcdio.\nPackage: libcdio-paranoia0\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read digital audio CDs with error correction This library is made to read digital audio CDs, with error correction. It does its best to correct errors and jitter that happen when reading such discs. As it uses libcdio as a backend, it supports the same kind of CDROM drives (and images) as libcdio.\nPackage: libcdio6\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to read and control CD-ROM This library is to encapsulate CD-ROM reading and control. Applications wishing to be oblivious of the OS- and device-dependant properties of a CD-ROM can use this library. . Some support for disk image types like BIN/CUE and NRG is available, so applications that use this library also have the ability to read disc images as though they were CD's.\nPackage: libclamav-dev\nArchitecture: amd64\nVersion: 0.91.2-1~bpo31+1\nDescription: clam Antivirus library development files Clam AntiVirus is an anti-virus toolkit for Unix. The main purpose of this software is the integration with mail servers (attachment scanning). The package provides a flexible and scalable multi-threaded daemon in the clamav-daemon package, a commandline scanner in the clamav package, and a tool for automatic updating via Internet through the clamav-freshclam package. The programs are based on libclamav2, which you can use in your own software. . The package contains the needed headers and libraries for developing software using the libclamav interface. . This library can be used to develop virus scanner applications.\nPackage: libclamav1\nArchitecture: amd64\nVersion: 0.88.7-1~bpo.1\nDescription: virus scanner library Clam AntiVirus is an anti-virus toolkit for Unix. The main purpose of this software is the integration with mail servers (attachment scanning). The package provides a flexible and scalable multi-threaded daemon in the clamav-daemon package, a commandline scanner in the clamav package, and a tool for automatic updating via Internet through the clamav-freshclam package. The programs are based on libclamav1, which you can use in your own software. . For programs written using the libclamav library. Libclamav may be used to add virus protection into software. The library is thread-safe, automatically recognizes and scans archives. Scanning is very fast - in many cases it won't be noticeable.\nPackage: libclamav2\nArchitecture: amd64\nVersion: 0.91.2-1~bpo31+1\nDescription: virus scanner library Clam AntiVirus is an anti-virus toolkit for Unix. The main purpose of this software is the integration with mail servers (attachment scanning). The package provides a flexible and scalable multi-threaded daemon in the clamav-daemon package, a commandline scanner in the clamav package, and a tool for automatic updating via Internet through the clamav-freshclam package. The programs are based on libclamav2, which you can use in your own software. . For programs written using the libclamav library. Libclamav may be used to add virus protection into software. The library is thread-safe, automatically recognizes and scans archives. Scanning is very fast - in many cases it won't be noticeable.\nPackage: libcompress-zlib-perl\nArchitecture: amd64\nVersion: 1.42-1~bpo.1\nDescription: Perl module for creation and manipulation of gzip files Compress::Zlib is a Perl external module which provides an interface to the info-zip zlib compression library. zlib is a general purpose compression library. . Some of the features provided by Compress::Zlib include: . * in-memory compression and decompression * read and write gzip (.gz) files directly.\nPackage: libcrypto0.9.8-udeb\nArchitecture: amd64\nVersion: 0.9.8a-8.1\nDescription: crypto shared library - udeb libcrypto shared library. . Do not install it on a normal system.\nPackage: libdb4.4\nArchitecture: amd64\nVersion: 4.4.20-2bpo1\nDescription: Berkeley v4.4 Database Libraries [runtime] This is the runtime package for programs that use the v4.4 Berkeley database library.\nPackage: libdb4.4++\nArchitecture: amd64\nVersion: 4.4.20-2bpo1\nDescription: Berkeley v4.4 Database Libraries for C++ [runtime] This is the runtime package for programs that use the Berkeley v4.4 database library. This is only for programs which use the C++ interface.\nPackage: libdb4.4++-dev\nArchitecture: amd64\nVersion: 4.4.20-2bpo1\nDescription: Berkeley v4.4 Database Libraries for C++ [development] This is the development package which contains headers and static libraries for the Berkeley v4.4 database library. This is only for programs which will use the C++ interface.\nPackage: libdb4.4-dev\nArchitecture: amd64\nVersion: 4.4.20-2bpo1\nDescription: Berkeley v4.4 Database Libraries [development] This is the development package which contains headers and static libraries for the Berkeley v4.4 database library.\nPackage: libdb4.4-tcl\nArchitecture: amd64\nVersion: 4.4.20-2bpo1\nDescription: Berkeley v4.4 Database Libraries for TCL [module] This package provides a TCL module suitable for accessing Berkeley v4.4 databases from within TCL programs.\nPackage: libdb4.6\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries [runtime] This is the runtime package for programs that use the v4.6 Berkeley database library.\nPackage: libdb4.6++\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for C++ [runtime] This is the runtime package for programs that use the Berkeley v4.6 database library. This is only for programs which use the C++ interface.\nPackage: libdb4.6++-dev\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for C++ [development] This is the development package which contains headers and static libraries for the Berkeley v4.6 database library. This is only for programs which will use the C++ interface.\nPackage: libdb4.6-dbg\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries [debug] This package provides the debug symbols for the Berkeley v4.6 database library.\nPackage: libdb4.6-dev\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries [development] This is the development package which contains headers and static libraries for the Berkeley v4.6 database library.\nPackage: libdb4.6-java\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for Java This package provides the Java interface for the Berkeley v4.6 database library.\nPackage: libdb4.6-java-dev\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for Java [development] This package provides the Java interface for the Berkeley v4.6 database library.\nPackage: libdb4.6-java-gcj\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for Java (native code) This package provides the Java interface for the Berkeley v4.4 database library. . This package contains the natively compiled code for use by gij.\nPackage: libdb4.6-tcl\nArchitecture: amd64\nVersion: 4.6.21-13\nDescription: Berkeley v4.6 Database Libraries for TCL [module] This package provides a TCL module suitable for accessing Berkeley v4.6 databases from within TCL programs.\nPackage: libdbus-1-2\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . D-BUS supports broadcast messages, asynchronous messages (thus decreasing latency), authentication, and more. It is designed to be low-overhead; messages are sent using a binary protocol, not using XML. D-BUS also supports a method call mapping for its messages, but it is not required; this makes using the system quite simple. . D-BUS is still under heavy development, but is expected to be widely used. It comes with several interfaces, including GLib. See the description of libdbus-glib-1-2 for more information about those. . The daemon can be found in the dbus package.\nPackage: libdbus-1-cil\nArchitecture: all\nVersion: 0.60-6.1\nDescription: CLI binding for D-BUS interprocess messaging system D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides a CLI binding to D-BUS, for use with Mono or other ECMA CLI implementations. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-1-dev\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (development headers) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-cil\nArchitecture: amd64\nVersion: 0.23.4-8.1\nDescription: CLI binding for D-BUS interprocess messaging system D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides a CLI binding to D-BUS, for use with Mono or other ECMA CLI implementations. . See the dbus-1 description for more information about D-BUS in general.\nPackage: libdbus-glib-1-2\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (GLib-based shared library) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides the GLib-based shared library for applications using the GLib interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-glib-1-dev\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (GLib interface) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides a GLib-style interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-qt-1-1c2\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (Qt-based shared library) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides the Qt-based shared library for applications using the Qt interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-qt-1-dev\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (Qt interface) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides a Qt-style interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-qt4-1-1\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (Qt4-based shared library) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides the Qt4-based shared library for applications using the Qt4 interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdbus-qt4-1-dev\nArchitecture: i386\nVersion: 0.60-6.1\nDescription: simple interprocess messaging system (Qt4 interface) D-BUS is a message bus, used for sending messages between applications. Conceptually, it fits somewhere in between raw sockets and CORBA in terms of complexity. . This package provides a Qt4-style interface to D-BUS. . See the dbus description for more information about D-BUS in general.\nPackage: libdc1394-13\nArchitecture: i386\nVersion: 1.1.0-3\nDescription: high level programming interface for IEEE1394 digital camera libdc1394 is a library that is intended to provide a high level programming interface for application developers who wish to control IEEE 1394 based cameras that conform to the 1394-based Digital Camera Specification (found at http://www.1394ta.org/). . This package contains shared libraries.\nPackage: libdc1394-13-dev\nArchitecture: i386\nVersion: 1.1.0-3\nDescription: high level programming interface for IEEE1394 digital camera libdc1394 is a library that is intended to provide a high level programming interface for application developers who wish to control IEEE 1394 based cameras that conform to the 1394-based Digital Camera Specification (found at http://www.1394ta.org/). . This package contains development files.\nPackage: libdc1394-examples\nArchitecture: i386\nVersion: 1.1.0-3\nDescription: high level programming interface for IEEE1394 digital camera libdc1394 is a library that is intended to provide a high level programming interface for application developers who wish to control IEEE 1394 based cameras that conform to the 1394-based Digital Camera Specification (found at http://www.1394ta.org/). . This package contains an example program.\nPackage: libdivx4linux\nArchitecture: i386\nVersion: 5.0.1-1\nDescription: DivX(tm) Codec 5.0 for Linux This is version 5.0.1 (2002-04-18 build) of the DivX(tm) codec for Linux. . This package includes the shared libraries.\nPackage: libdmx-dev\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Distributed Multihead X client library development files Header files and a static version of the DMX (Distributed Multihead X) client library are provided by this package. . See the libdmx1 package for further information.\nPackage: libdmx1\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Distributed Multihead X client library libdmx provides a client-side interface to the Distributed Multihead X system, which allows one X server to multiplex across multiple displays located on different machines.\nPackage: libdmx1-dbg\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Distributed Multihead X client library (unstripped) This package is useful to provide a backtrace with symbol names in a debugger; this facilitates interpretation of core dumps, and aids in finding logic errors in programs using this library (or the library itself). The library is installed in /usr/X11R6/lib/debug and can be used by placing that directory in the LD_LIBRARY_PATH environment variable when the code to be debugged is executed. . Non-programmers will likely have little use for this package. See the libdmx1 package for further information.\nPackage: libdns21\nArchitecture: i386\nVersion: 1:9.3.2-2.1\nDescription: DNS Shared Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libdns shared library used by BIND's daemons and clients.\nPackage: libdns22\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: DNS Shared Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libdns shared library used by BIND's daemons and clients.\nPackage: libdvbpsi3\nArchitecture: i386\nVersion: 0.1.4-2\nDescription: library for MPEG TS and DVB PSI tables decoding and generating libdvbpsi is a simple library designed for MPEG TS and DVB PSI tables decoding and generating. . This package contains the libdvbpsi3 runtime library.\nPackage: libdvbpsi3-dev\nArchitecture: i386\nVersion: 0.1.4-2\nDescription: development files for libdvbpsi3 libdvbpsi is a simple library designed for MPEG TS and DVB PSI tables decoding and generating. . This package contains the header files and static library needed to compile applications that use libdvbpsi3.\nPackage: libdvbpsi4\nArchitecture: amd64\nVersion: 0.1.5-1.1\nDescription: library for MPEG TS and DVB PSI tables decoding and generating libdvbpsi is a simple library designed for MPEG TS and DVB PSI tables decoding and generating. . This package contains the libdvbpsi4 runtime library.\nPackage: libdvbpsi4-dev\nArchitecture: amd64\nVersion: 0.1.5-1.1\nDescription: development files for libdvbpsi4 libdvbpsi is a simple library designed for MPEG TS and DVB PSI tables decoding and generating. . This package contains the header files and static library needed to compile applications that use libdvbpsi4.\nPackage: libebml-dev\nArchitecture: i386\nVersion: 0.7.6-2.1\nDescription: access library for the EBML format The libebml library allows to read and write files using EBML (the Extensible Binary Meta Language), a binary pendant to XML. Using libebml makes it easier to extend a file format without breaking support in older parsers. . This package contains the header files and static libraries needed to compile applications or shared objects that use libebml.\nPackage: libecpg-compat2\nArchitecture: amd64\nVersion: 8.1.8-1~bpo.1\nDescription: older version of run-time library for ECPG programs The libecpg_compat shared library is used by programs built with ecpg. (Embedded PostgreSQL for C). . PostgreSQL is an object-relational SQL database management system.\nPackage: libecpg-dev\nArchitecture: amd64\nVersion: 8.1.8-1~bpo.1\nDescription: development files for ECPG (Embedded PostgreSQL for C) This package contains the necessary files to build ECPG (Embedded PostgreSQL for C) programs. It includes the development libraries and the preprocessor program ecpg. . PostgreSQL is an object-relational SQL database management system. . Install this package if you want to write C programs with SQL statements embedded in them (rather than run by an external process).\nPackage: libecpg5\nArchitecture: amd64\nVersion: 8.1.8-1~bpo.1\nDescription: run-time library for ECPG programs The libecpg shared library is used by programs built with ECPG (Embedded PostgreSQL for C). . PostgreSQL is an object-relational SQL database management system.\nPackage: libesd-alsa0\nArchitecture: amd64\nVersion: 0.2.36-3.2\nDescription: Enlightened Sound Daemon (ALSA) - Shared libraries This program is designed to mix together several digitized audio streams for playback by a single device. . This package is for use with ALSA sound drivers.\nPackage: libesd0\nArchitecture: amd64\nVersion: 0.2.36-3.2\nDescription: Enlightened Sound Daemon - Shared libraries This program is designed to mix together several digitized audio streams for playback by a single device. . This package is for use with OSS sound drivers.\nPackage: libesd0-dev\nArchitecture: amd64\nVersion: 0.2.36-3.2\nDescription: Enlightened Sound Daemon - Development files This program is designed to mix together several digitized audio streams for playback by a single device. . This package contains the header files needed to compile applications that use libesd0.\nPackage: libfaac-dev\nArchitecture: amd64\nVersion: 1.24-0.4.1\nDescription: an AAC audio encoder - devel files FAAC currently supports MPEG-4 LTP, MAIN and LOW COMPLEXITY object types and MAIN and LOW MPEG-2 object types. It also supports multichannel and gapless encoding. . http://faac.sourceforge.net/\nPackage: libfaac0\nArchitecture: amd64\nVersion: 1.24-0.4.1\nDescription: an AAC audio encoder - library files FAAC currently supports MPEG-4 LTP, MAIN and LOW COMPLEXITY object types and MAIN and LOW MPEG-2 object types. It also supports multichannel and gapless encoding. . http://faac.sourceforge.net/\nPackage: libfaad2-0\nArchitecture: amd64\nVersion: 2.0.0+cvs20040908+mp\nDescription: freeware Advanced Audio Decoder - runtime files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files.\nPackage: libfaad2-dev\nArchitecture: amd64\nVersion: 2.0.0+cvs20040908+mp\nDescription: freeware Advanced Audio Decoder - development files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains development files.\nPackage: libfam-dev\nArchitecture: amd64\nVersion: 2.7.0-12~1\nDescription: Client library to control the FAM daemon - development files FAM monitors files and directories, notifying interested applications of changes. . This package provides header files and static libraries to allow the development of programs that interface FAM for file monitoring.\nPackage: libfam0\nArchitecture: amd64\nVersion: 2.7.0-12~1\nDescription: Client library to control the FAM daemon FAM monitors files and directories, notifying interested applications of changes. . This package provides a shared library to allow programs to connect to the FAM daemon and ask for files to be monitored.\nPackage: libfam0c102\nArchitecture: all\nVersion: 2.7.0-12~1\nDescription: Dummy package for libfam0 FAM monitors files and directories, notifying interested applications of changes. . This is a dummy package that installs libfam0; see README.Debian for libfam0 for details. You can safely remove this package once libfam0 is installed.\nPackage: libfame-0.9\nArchitecture: i386\nVersion: 0.9.0-0.1\nDescription: A video encoding library - runtime files It can currently encode MPEG-1 and MPEG-4 rectangular video, as well as MPEG-4 video with arbitrary shape.\nPackage: libfame-dev\nArchitecture: i386\nVersion: 0.9.0-0.1\nDescription: A video encoding library - devel files It can currently encode MPEG-1 and MPEG-4 rectangular video, as well as MPEG-4 video with arbitrary shape.\nPackage: libflac++-dev\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C++ development library FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the development library libFLAC++.\nPackage: libflac++5\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C++ runtime library FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the runtime library libFLAC++.\nPackage: libflac-dev\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C development library FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the development library libFLAC.\nPackage: libflac-doc\nArchitecture: all\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - library documentation FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the API documentation for all the FLAC libraries.\nPackage: libflac7\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - runtime C library FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the runtime library libFLAC.\nPackage: libflash-dev\nArchitecture: i386\nVersion: 0.4.13-5.1\nDescription: GPL Flash (SWF) Library - development files The GPL Flash library is a set of functions that can be used by applications to play Flash movies. The core of the library is a portable graphic renderer that can be used to add SWF support to an application. . This package contains static libraries and headers in order to build applications against the library.\nPackage: libflash-mozplugin\nArchitecture: i386\nVersion: 0.4.13-5.1\nDescription: GPL Flash (SWF) Library - Mozilla-compatible plugin The GPL Flash library is a set of functions that can be used by applications to play Flash movies. The core of the library is a portable graphic renderer that can be used to add SWF support to an application. . This package contains the Mozilla-compatible browser plugin, which will work with many browsers (Mozilla, Firefox, Konqueror, etc).\nPackage: libflash-swfplayer\nArchitecture: i386\nVersion: 0.4.13-5.1\nDescription: GPL Flash (SWF) Library - stand-alone player The GPL Flash library is a set of functions that can be used by applications to play Flash movies. The core of the library is a portable graphic renderer that can be used to add SWF support to an application. . This package contains the stand-alone SWF flash player, which can be used on the command-line, or integrated into browsers that do not support Mozilla-compatiable plugins (otherwise, see the libflash-mozplugin package).\nPackage: libflash0c2\nArchitecture: i386\nVersion: 0.4.13-5.1\nDescription: GPL Flash (SWF) Library - shared library The GPL Flash library is a set of functions that can be used by applications to play Flash movies. The core of the library is a portable graphic renderer that can be used to add SWF support to an application. . This package contains shared libraries needed to run programs that have been build against the library.\nPackage: libfs-dev\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: X Font Server library development files Header files and a static version of libFS are provided by this package. . See the libfs6 package for further information.\nPackage: libfs6\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: X Font Server library libFS is a library that provides various functions useful to font servers.\nPackage: libfs6-dbg\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: X Font Server library (unstripped) This package is useful to provide a backtrace with symbol names in a debugger; this facilitates interpretation of core dumps, and aids in finding logic errors in programs using this library (or the library itself). The library is installed in /usr/X11R6/lib/debug and can be used by placing that directory in the LD_LIBRARY_PATH environment variable when the code to be debugged is executed. . Non-programmers will likely have little use for this package. See the libfs6 package for further information.\nPackage: libfuse-dev\nArchitecture: amd64\nVersion: 2.5.3-4.2\nDescription: Filesystem in USErspace (development files) Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the files necessary to write applications in C or C++ using fuse. . Homepage: http://fuse.sourceforge.net/\nPackage: libfuse2\nArchitecture: amd64\nVersion: 2.5.3-4.2\nDescription: Filesystem in USErspace library Simple interface for userspace programs to export a virtual filesystem to the linux kernel. . This package contains the files necessary to write applications in C or C++ using fuse. . Homepage: http://fuse.sourceforge.net/\nPackage: libgconf-cil\nArchitecture: all\nVersion: 1:1.0.10-3.1\nDescription: CLI binding for GConf This package provides assemblies that allow CLI (.NET) programs to use the GConf configuration storage system. . Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries.\nPackage: libgcrypt11\nArchitecture: amd64\nVersion: 1.2.2-1.1\nDescription: LGPL Crypto library - runtime library libgcrypt contains cryptographic functions. Many important free ciphers, hash algorithms and public key signing algorithms have been implemented: arcfour, blowfish, cast5, DSA, des, 3DES, elgamal, MD5, rijndael, RMD160, RSA, SHA1, twofish, tiger.\nPackage: libgcrypt11-dbg\nArchitecture: amd64\nVersion: 1.2.2-1.1\nDescription: LGPL Crypto library - debugger files libgcrypt contains cryptographic functions. Many important free ciphers, hash algorithms and public key signing algorithms have been implemented: arcfour, blowfish, cast5, DSA, des, 3DES, elgamal, MD5, rijndael, RMD160, RSA, SHA1, twofish, tiger. . This package contains symbol tables for debugging.\nPackage: libgcrypt11-dev\nArchitecture: amd64\nVersion: 1.2.2-1.1\nDescription: LGPL Crypto library - development files libgcrypt contains cryptographic functions. Many important free ciphers, hash algorithms and public key signing algorithms have been implemented: arcfour, blowfish, cast5, DSA, des, 3DES, elgamal, MD5, rijndael, RMD160, RSA, SHA1, twofish, tiger. . This package contains header files and libraries for static linking.\nPackage: libgcrypt11-doc\nArchitecture: all\nVersion: 1.2.2-1.1\nDescription: LGPL Crypto library - documentation libgcrypt contains cryptographic functions. Many important free ciphers, hash algorithms and public key signing algorithms have been implemented: arcfour, blowfish, cast5, DSA, des, 3DES, elgamal, MD5, rijndael, RMD160, RSA, SHA1, twofish, tiger. . This package contains developer documentation.\nPackage: libgecko-cil\nArchitecture: all\nVersion: 0.6-3\nDescription: CLI binding for the GtkMozEmbed library This package provides assemblies that allow CLI (.NET) programs to use the GtkMozEmbed library.\nPackage: libglade-cil\nArchitecture: amd64\nVersion: 1:1.0.10-3.1\nDescription: CLI binding for the Glade libraries This package provides assemblies that allow CLI (.NET) programs to use the Glade libraries. . Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries.\nPackage: libglib-cil\nArchitecture: amd64\nVersion: 1:1.0.10-3.1\nDescription: CLI binding for the GLib utility library This package provides assemblies that allow CLI (.NET) programs to use the GLib utility library. This is mostly useful for the Gtk+, GNOME and GStreamer bindings. . Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries.\nPackage: libglib2.0-0\nArchitecture: amd64\nVersion: 2.10.2-0bpo1\nDescription: The GLib library of C routines GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME. . This package contains the shared libraries.\nPackage: libglib2.0-0-dbg\nArchitecture: amd64\nVersion: 2.10.2-0bpo1\nDescription: The GLib libraries and debugging symbols GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME. . This package contains unstripped shared libraries. it is provided primarily to provide a backtrace with names in a debugger, this makes it somewhat easier to interpret core dumps. The libraries are installed in /usr/lib/debug and can be used by placing that directory in LD_LIBRARY_PATH. Most people will not need this package.\nPackage: libglib2.0-data\nArchitecture: all\nVersion: 2.10.2-0bpo1\nDescription: Common files for GLib library GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME. . This package contains the common files which the runtime libraries need.\nPackage: libglib2.0-dev\nArchitecture: amd64\nVersion: 2.10.2-0bpo1\nDescription: Development files for the GLib library GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME. . This package is needed to compile programs against libglib2.0-0, as only it includes the header files and static libraries (optionally) needed for compiling.\nPackage: libglib2.0-doc\nArchitecture: all\nVersion: 2.10.2-0bpo1\nDescription: Documentation files for the GLib library GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME. . This package contains the HTML documentation for the GLib library in /usr/share/doc/libglib2.0-doc/ .\nPackage: libglib2.0-udeb\nArchitecture: amd64\nVersion: 2.10.2-0bpo1\nDescription: The GLib library of C routines This is a udeb, or a microdeb, for the debian-installer. . GLib is a library containing many useful C routines for things such as trees, hashes, lists, and strings. It is a useful general-purpose C library used by projects such as GTK+, GIMP, and GNOME.\nPackage: libglide2-dev\nArchitecture: all\nVersion: 2002.04.10-9\nDescription: graphics library for 3Dfx Voodoo based cards - development files This package contains the necessary header files, example programs, and documentation necessary to develop software for cards based on 3dfx Interactive, Inc's Voodoo chipsets.\nPackage: libglide3\nArchitecture: amd64\nVersion: 2002.04.10-9\nDescription: graphics library for 3Dfx Voodoo based cards - shared libraries This package allows you to use the 3D functions of cards based on 3dfx Interactive, Inc's Voodoo Banshee, Voodoo 3, Voodoo 4, and Voodoo 5, chipsets. You should install it if you have such a card. . NB: This package does NOT need device3dfx, as it is using DRI instead.\nPackage: libglide3-dev\nArchitecture: all\nVersion: 2002.04.10-9\nDescription: graphics library for 3Dfx Voodoo based cards - development files This package contains the necessary header files, example programs, and documentation necessary to develop software for cards based on 3dfx Interactive, Inc's Voodoo chipsets.\nPackage: libglu1-xorg\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Mesa OpenGL utility library [X.Org] The OpenGL utility library (GLU) offers simple interfaces for building mipmaps; checking for the presence of extensions in the OpenGL (or other libraries which follow the same conventions for advertising extensions); drawing piecewise linear curves, NURBS, quadrics and other primitives (including, but not limited to, teapots); tesselating surfaces; setting up projection matrices and unprojecting screen coordinates to world coordinates. . X.Org maintains its own version of the Mesa libraries; see the xlibmesa-gl package for further information. . This package was built using version 2 of the C++ ABI.\nPackage: libglu1-xorg-dbg\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Mesa OpenGL utility library (unstripped) [X.Org] This package is useful to provide a backtrace with symbol names in a debugger; this facilitates interpretation of core dumps, and aids in finding logic errors in programs using this library (or the library itself). The library is installed in /usr/lib/debug and can be used by placing that directory in the LD_LIBRARY_PATH environment variable when the code to be debugged is executed. . Non-programmers will likely have little use for this package. See the libglu1-xorg package for further information.\nPackage: libglu1-xorg-dev\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Mesa OpenGL utility library development files [X.Org] libglu1-xorg-dev provides static versions of the libraries provided in libglu1-xorg, as well as header files and manual pages. . See the libglu1-xorg package for further information.\nPackage: libgnome-cil\nArchitecture: amd64\nVersion: 1:1.0.10-3.1\nDescription: CLI binding for GNOME This package provides assemblies that allow CLI (.NET) programs to use the GNOME 2 UI libraries. . Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries.\nPackage: libgnutls-dev\nArchitecture: amd64\nVersion: 1.2.9-2.1\nDescription: the GNU TLS library - development files gnutls is a portable library which implements the Transport Layer Security (TLS) 1.0 and Secure Sockets Layer (SSL) 3.0 protocols. . Currently gnutls implements: - the TLS 1.0 and SSL 3.0 protocols, without any US-export controlled algorithms - X509 Public Key Infrastructure (with several limitations). - SRP for TLS authentication. - TLS Extension mechanism . This package contains the gnutls development files.\nPackage: libgnutls12\nArchitecture: amd64\nVersion: 1.2.9-2.1\nDescription: the GNU TLS library - runtime library gnutls is a portable library which implements the Transport Layer Security (TLS) 1.0 and Secure Sockets Layer (SSL) 3.0 protocols. . Currently gnutls implements: - the TLS 1.0 and SSL 3.0 protocols, without any US-export controlled algorithms - X509 Public Key Infrastructure (with several limitations). - SRP for TLS authentication. - TLS Extension mechanism . This package contains the runtime libraries.\nPackage: libgnutls12-dbg\nArchitecture: amd64\nVersion: 1.2.9-2.1\nDescription: GNU TLS library - debugger symbols gnutls is a portable library which implements the Transport Layer Security (TLS) 1.0 and Secure Sockets Layer (SSL) 3.0 protocols. . Currently gnutls implements: - the TLS 1.0 and SSL 3.0 protocols, without any US-export controlled algorithms - X509 Public Key Infrastructure (with several limitations). - SRP for TLS authentication. - TLS Extension mechanism . This package contains the debugger symbols.\nPackage: libgsf-1-114\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - runtime version The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. . This is the basic runtime version of libgsf. It does not provide GNOME-specific extensions.\nPackage: libgsf-1-114-dbg\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - debugging files (basic version) This package contains the files for debugging (applications that use the) the core parts of the GNOME Structured File Library. . To debug (applications that use the) GNOME extensions to this library, install libgsf-gnome-1-114-dbg as well.\nPackage: libgsf-1-common\nArchitecture: all\nVersion: 1.14.1-1.1\nDescription: Structured File Library - common files The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. . These are the architecture independent files that are part of libgsf, like translations of messages.\nPackage: libgsf-1-dev\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - development files (basic version) This package contains the development files used in building applications that use the GNOME Structured File Library. . The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. It is actively being developed and its API is still likely to undergo significant changes (in particular, extensions). . This is the basic development package for the GNOME Structured File library. It is not GNOME-specific and thus does not depend on GNOME libraries. For GNOME-specific extensions, use libgsf-gnome-1-dev.\nPackage: libgsf-bin\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - programs The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. . These are the programs that are shipped as part of libgsf.\nPackage: libgsf-gnome-1-114\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - runtime version for GNOME The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. . This version of libgsf makes use of Bonobo, GNOME's CORBA-based component architecture and of GNOME-VFS, the GNOME virtual file-system.\nPackage: libgsf-gnome-1-114-dbg\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - debugging files for GNOME This package contains the files for debugging (applications that use the) the GNOME extension parts of the GNOME Structured File Library.\nPackage: libgsf-gnome-1-dev\nArchitecture: amd64\nVersion: 1.14.1-1.1\nDescription: Structured File Library - development files for GNOME This package contains the development files used in building applications that use the GNOME Structured File Library. . The GNOME Structured File Library library aims to provide an efficient extensible I/O abstraction for dealing with different structured file formats. It is actively being developed and its API is still likely to undergo significant changes (in particular, extensions). . This package supports the use of Bonobo, GNOME's CORBA-based component architecture and of GNOME-VFS, the GNOME virtual file-system.\nPackage: libgsm-tools\nArchitecture: i386\nVersion: 1.0.10-13.1\nDescription: User binaries for a GSM speech compressor Contains user binaries for libgsm, an implementation of the European GSM 06.10 provisional standard for full-rate speech transcoding, prI-ETS 300 036, which uses RPE/LTP (residual pulse excitation/long term prediction) coding at 13 kbit/s. . GSM 06.10 compresses frames of 160 13-bit samples (8 kHz sampling rate, i.e. a frame rate of 50 Hz) into 260 bits; for compatibility with typical UNIX applications, our implementation turns frames of 160 16-bit linear samples into 33-byte frames (1650 Bytes/s). The quality of the algorithm is good enough for reliable speaker recognition; even music often survives transcoding in recognizable form (given the bandwidth limitations of 8 kHz sampling rate). . The interfaces offered are a front end modelled after compress(1), and a library API. Compression and decompression run faster than realtime on most SPARCstations. The implementation has been verified against the ETSI standard test patterns.\nPackage: libgsm1\nArchitecture: i386\nVersion: 1.0.10-13.1\nDescription: Shared libraries for GSM speech compressor Contains runtime shared libraries for libgsm, an implementation of the European GSM 06.10 provisional standard for full-rate speech transcoding, prI-ETS 300 036, which uses RPE/LTP (residual pulse excitation/long term prediction) coding at 13 kbit/s. . GSM 06.10 compresses frames of 160 13-bit samples (8 kHz sampling rate, i.e. a frame rate of 50 Hz) into 260 bits; for compatibility with typical UNIX applications, our implementation turns frames of 160 16-bit linear samples into 33-byte frames (1650 Bytes/s). The quality of the algorithm is good enough for reliable speaker recognition; even music often survives transcoding in recognizable form (given the bandwidth limitations of 8 kHz sampling rate). . The interfaces offered are a front end modelled after compress(1), and a library API. Compression and decompression run faster than realtime on most SPARCstations. The implementation has been verified against the ETSI standard test patterns.\nPackage: libgsm1-dev\nArchitecture: i386\nVersion: 1.0.10-13.1\nDescription: Development libraries for a GSM speech compressor Contains header files and development libraries for libgsm, an implementation of the European GSM 06.10 provisional standard for full-rate speech transcoding, prI-ETS 300 036, which uses RPE/LTP (residual pulse excitation/long term prediction) coding at 13 kbit/s. . GSM 06.10 compresses frames of 160 13-bit samples (8 kHz sampling rate, i.e. a frame rate of 50 Hz) into 260 bits; for compatibility with typical UNIX applications, our implementation turns frames of 160 16-bit linear samples into 33-byte frames (1650 Bytes/s). The quality of the algorithm is good enough for reliable speaker recognition; even music often survives transcoding in recognizable form (given the bandwidth limitations of 8 kHz sampling rate). . The interfaces offered are a front end modelled after compress(1), and a library API. Compression and decompression run faster than realtime on most SPARCstations. The implementation has been verified against the ETSI standard test patterns.\nPackage: libgtk-cil\nArchitecture: amd64\nVersion: 1:1.0.10-3.1\nDescription: CLI binding for the Gtk+ toolkit This package provides assemblies that allow CLI (.NET) programs to use the Gtk+ user interface toolkit. . Gtk# is a CLI (.NET) language binding for the Gtk+ toolkit and assorted GNOME libraries.\nPackage: libgtkhtml3.6-18\nArchitecture: amd64\nVersion: 3.6.2-1.1\nDescription: HTML rendering/editing library - runtime files This is GtkHTML, a lightweight HTML rendering/printing/editing engine. It was originally based on KHTMLW, but is now being developed independently.\nPackage: libgtkhtml3.6-dev\nArchitecture: amd64\nVersion: 3.6.2-1.1\nDescription: HTML rendering/editing library - development files This is GtkHTML, a lightweight HTML rendering/printing/editing engine. It was originally based on KHTMLW, but is now being developed independently.\nPackage: libice-dev\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Inter-Client Exchange library development files Header files and a static version of the ICE library are provided by this package. . See the libice6 package for further information.\nPackage: libice6\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Inter-Client Exchange library libICE provides an interface to ICE, the Inter-Client Exchange protocol. Motivated by issues arising from the need for X Window System clients to share data with each other, the ICE protocol provides a generic framework for building protocols on top of reliable, byte-stream transport connections. It provides basic mechanisms for setting up and shutting down connections, for performing authentication, for negotiating versions, and for reporting errors.\nPackage: libice6-dbg\nArchitecture: amd64\nVersion: 6.9.0.dfsg.1-6~bpo.4\nDescription: Inter-Client Exchange library (unstripped) This package is useful to provide a backtrace with symbol names in a debugger; this facilitates interpretation of core dumps, and aids in finding logic errors in programs using this library (or the library itself). The library is installed in /usr/X11R6/lib/debug and can be used by placing that directory in the LD_LIBRARY_PATH environment variable when the code to be debugged is executed. . Non-programmers will likely have little use for this package. See the libice6 package for further information.\nPackage: libid3-3.8.3-dev\nArchitecture: amd64\nVersion: 3.8.3-5\nDescription: ID3 Tag Library: Development Libraries and Header Files. This package contains the headers that programmers will need to develop applications which will use id3lib, the software library for ID3v1 and ID3v2 tag manipulation.\nPackage: libid3-3.8.3c2a\nArchitecture: amd64\nVersion: 3.8.3-5\nDescription: Library for manipulating ID3v1 and ID3v2 tags. This package provides a software library for manipulating ID3v1 and ID3v2 tags. It provides a convenient interface for software developers to include standards-compliant ID3v1/2 tagging capabilities in their applications. Features include identification of valid tags, automatic size conversions, (re)synchronisation of tag frames, seamless tag (de)compression, and optional padding facilities.\nPackage: libisc11\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: ISC Shared Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libisc shared library used by BIND's daemons and clients.\nPackage: libisccc0\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: Command Channel Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libisccc shared library used by BIND's daemons and clients, particularly rndc.\nPackage: libisccfg1\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: Config File Handling Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the libisccfg shared library used by BIND's daemons and clients to read and write ISC-style configuration files like named.conf and rndc.conf.\nPackage: libiso9660-4\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to work with ISO9660 filesystems This library is made to read and write ISO9660 filesystems; those filesystems are mainly used on CDROMs.\nPackage: libiso9660-dev\nArchitecture: amd64\nVersion: 0.76-1.1\nDescription: library to work with ISO9660 filesystems (development files) This package contains development files (headers and static library) for the libiso9660 library. . This library is made to read and write ISO9660 filesystems; those filesystems are mainly used on CDROMs.\nPackage: libjabberoo-dev\nArchitecture: i386\nVersion: 1.9.4+cvs20040709-3\nDescription: library to interact with Jabber A C++ implementation of the Jabber protocol. . This package contains the header files needed to develop programs using Jabberoo.\nPackage: libjabberoo0\nArchitecture: i386\nVersion: 1.9.4+cvs20040709-3\nDescription: library to interact with Jabber A C++ implementation of the Jabber protocol. . This package contains the shared libraries needed to run programs developed using Jabberoo.\nPackage: libkadm55\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: MIT Kerberos administration runtime libraries Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the administration runtime libraries, used by the kadmin protocol and the KDC.\nPackage: libklibc\nArchitecture: amd64\nVersion: 1.4.30-1~bpo.1\nDescription: minimal libc subset for use with initramfs klibc is intended to be a minimalistic libc subset for use with initramfs. It is deliberately written for small size, minimal entanglement, and portability, not speed. It is definitely a work in progress, and a lot of things are still missing.\nPackage: libklibc-dev\nArchitecture: amd64\nVersion: 1.4.30-1~bpo.1\nDescription: kernel headers used during the build of klibc This package contains the set of kernel headers that were required to build klibc and the utilities that ship with it. This may or may not be a complete enough set to build other programs that link against klibc. If in doubt, use real kernel headers instead.\nPackage: libklibc-udeb\nArchitecture: amd64\nVersion: 1.4.30-1~bpo.1\nDescription: minimal libc subset for use with initramfs klibc is intended to be a minimalistic libc subset for use with initramfs. It is deliberately written for small size, minimal entanglement, and portability, not speed. It is definitely a work in progress, and a lot of things are still missing.\nPackage: libkrb5-dbg\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Debugging files for MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the debugging information for the MIT Kerberos libraries. Install this package if you need to trace problems inside the MIT Kerberos libraries with a debugger.\nPackage: libkrb5-dev\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: Headers and development libraries for MIT Kerberos Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the symlinks, headers, and development libraries needed to compile and link programs that use the Kerberos libraries.\nPackage: libkrb53\nArchitecture: amd64\nVersion: 1.4.4-5~bpo.1\nDescription: MIT Kerberos runtime libraries Kerberos is a system for authenticating users and services on a network. Kerberos is a trusted third-party service. That means that there is a third party (the kerberos server) that is trusted by all the entities on the network (users and services, usually called \"principals\"). . This is the MIT reference implementation of Kerberos5. . This package contains the runtime libraries used by applications and Kerberos clients.\nPackage: liblablgl-ocaml\nArchitecture: i386\nVersion: 1.02-1.1\nDescription: Runtime libraries for lablgl LablGL is an OpenGL interface for Objective Caml. Since it includes support for the Togl widget, you can comfortably use it with LablTk. A GtkGlarea binding for use with lablgtk is also provided. . This package include only the dynamic libraries needed for running dynamic bytecode executables.\nPackage: liblablgl-ocaml-dev\nArchitecture: i386\nVersion: 1.02-1.1\nDescription: an OpenGL interface for Objective Caml LablGL is an OpenGL interface for Objective Caml. Since it includes support for the Togl widget, you can comfortably use it with LablTk. A GtkGlarea binding for use with lablgtk is also provided.\nPackage: liblablgtk2-gl-ocaml\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: runtime libraries for OCaml bindings to GtkGL lablgtk2 contains bindings for gtk+ 2.x and Objective Caml. . This package include only the dynamic libraries needed for running dynamic bytecode executables using GtkGL functionalities.\nPackage: liblablgtk2-gl-ocaml-dev\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: OCaml bindings to GtkGL lablgtk2 contains bindings for gtk+ 2.x and OCaml. . This package contains the development files of lablgtk for libraries using GtkGL.\nPackage: liblablgtk2-gnome-ocaml\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: runtime libraries for OCaml bindings to Gnome lablgtk2 contains bindings for gtk+ 2.x and Objective Caml. . This package include only the dynamic libraries needed for running dynamic bytecode executables using gnome functionalities (panel-applet, gnomeui, gnome-canvas, rsvg).\nPackage: liblablgtk2-gnome-ocaml-dev\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: OCaml bindings to Gnome lablgtk2 contains bindings for gtk+ 2.x and Objective Caml. . This package contains the development files of lablgtk for libraries using gnome functionalities (panel-applet, gnomeui, gnome-canvas, rsvg).\nPackage: liblablgtk2-ocaml\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: runtime libraries for OCaml bindings for Gtk+ version 2 lablgtk2 contains bindings for gtk+ 2.x and OCaml. . This package include only the dynamic libraries needed for running dynamic bytecode executables.\nPackage: liblablgtk2-ocaml-dev\nArchitecture: i386\nVersion: 2.6.0-6.1\nDescription: OCaml bindings to Gtk+ version 2 lablgtk2 contains bindings for gtk+ 2.x and OCaml. . This package contains the development files of lablgtk.\nPackage: liblame-dev\nArchitecture: i386\nVersion: 3.96.1-1\nDescription: LAME Ain't an MP3 Encoder Lame is a program which can be used to create compressed audio files. (Lame aint MP3 encoder). These audio files can be played back by popular mp3 players such as mpg123. To read from stdin, use \"-\" for <infile>. To write to stdout, use a \"-\" for <outfile>. . This package contains the static library and header files.\nPackage: liblame0\nArchitecture: i386\nVersion: 3.96.1-1\nDescription: LAME Ain't an MP3 Encoder Lame is a program which can be used to create compressed audio files. (Lame aint MP3 encoder). These audio files can be played back by popular mp3 players such as mpg123. To read from stdin, use \"-\" for <infile>. To write to stdout, use a \"-\" for <outfile>. . This package contains the dynamic libraries, which provides the encoding functionality of lame.\nPackage: liblo10k1-0\nArchitecture: amd64\nVersion: 1.0.11-1.1\nDescription: ALSA emu10k1/2 patch-loader library This is the runtime library for the ld10k1 patch loader for use with the emu10k1 ALSA driver. Supports Sound Blaster Live!, Audigy and Audigy 2. . Homepage: http://ld10k1.sourceforge.net/\nPackage: liblo10k1-dev\nArchitecture: amd64\nVersion: 1.0.11-1.1\nDescription: ALSA emu10k1/2 patch-loader library development files These are the development files for the ld10k1 patch loader for use with the emu10k1 ALSA driver. Supports Sound Blaster Live!, Audigy and Audigy 2. . Homepage: http://ld10k1.sourceforge.net/\nPackage: libltdl3\nArchitecture: i386\nVersion: 1.5.22-3.1\nDescription: A system independent dlopen wrapper for GNU libtool This package contains the run-time libltdl library. . A small library that aims at hiding the various difficulties of dlopening libraries from programmers. It is a system independent dlopen wrapper for GNU libtool. . It supports the following dlopen interfaces: * dlopen (Solaris, Linux and various BSD flavors) * shl_load (HP-UX) * LoadLibrary (Win16 and Win32) * load_add_on (BeOS) * GNU DLD (emulates dynamic linking for static libraries) * libtool's dlpreopen\nPackage: libltdl3-dev\nArchitecture: i386\nVersion: 1.5.22-3.1\nDescription: A system independent dlopen wrapper for GNU libtool This package contains the header files and static libraries for the libltdl package. . A small library that aims at hiding the various difficulties of dlopening libraries from programmers. It is a system independent dlopen wrapper for GNU libtool. . It supports the following dlopen interfaces: * dlopen (Solaris, Linux and various BSD flavors) * shl_load (HP-UX) * LoadLibrary (Win16 and Win32) * load_add_on (BeOS) * GNU DLD (emulates dynamic linking for static libraries) * libtool's dlpreopen\nPackage: liblwres9\nArchitecture: amd64\nVersion: 1:9.3.4-2~bpo.1\nDescription: Lightweight Resolver Library used by BIND The Berkeley Internet Name Domain (BIND) implements an Internet domain name server. BIND is the most widely-used name server software on the Internet, and is supported by the Internet Software Consortium, www.isc.org. . This package delivers the liblwres shared library used by BIND's daemons and clients.\nPackage: libmagick++9\nArchitecture: amd64\nVersion: 7:6.2.4.5.dfsg1-0.10\nDescription: The object-oriented C++ API to the ImageMagick library Magick++ supports an object model which is inspired by PerlMagick. Magick++ executes faster than PerlMagick since it is accessed from a compiled language rather than from a scripting language. This makes it more suitable for Web CGI programs which must start-up and execute quickly. Images support implicit reference counting so that copy constructors and assignment incur almost no cost. The cost of actually copying an image (if necessary) is done just before modification and this copy is managed automatically by Magick++. De-referenced copies are automatically deleted. The image objects support value (rather than pointer) semantics so it is trivial to support multiple generations of an image in memory at one time. . Magick++ provides integrated support for STL. This support allows Magick++ to be used with the Standard Template Library (STL) so that the powerful containers available (e.g. deque, vector, list, and map) can be used to write programs similar to those possible with PERL & PerlMagick. STL-compatible template versions of ImageMagick's list-style operations are provided so that operations may be performed on multiple images stored in STL containers.\nPackage: libmagick++9-dev\nArchitecture: amd64\nVersion: 7:6.2.4.5.dfsg1-0.10\nDescription: The object-oriented C++ API to the ImageMagick library--development This are the include files and static libraries needed to compile programs using libMagick++.\nPackage: libmagick++9c2a\nArchitecture: amd64\nVersion: 7:6.2.4.5-0.8.1\nDescription: The object-oriented C++ API to the ImageMagick library Magick++ supports an object model which is inspired by PerlMagick. Magick++ executes faster than PerlMagick since it is accessed from a compiled language rather than from a scripting language. This makes it more suitable for Web CGI programs which must start-up and execute quickly. Images support implicit reference counting so that copy constructors and assignment incur almost no cost. The cost of actually copying an image (if necessary) is done just before modification and this copy is managed automatically by Magick++. De-referenced copies are automatically deleted. The image objects support value (rather than pointer) semantics so it is trivial to support multiple generations of an image in memory at one time. . Magick++ provides integrated support for STL. This support allows Magick++ to be used with the Standard Template Library (STL) so that the powerful containers available (e.g. deque, vector, list, and map) can be used to write programs similar to those possible with PERL & PerlMagick. STL-compatible template versions of ImageMagick's list-style operations are provided so that operations may be performed on multiple images stored in STL containers.\nPackage: libmagick9\nArchitecture: amd64\nVersion: 7:6.2.4.5.dfsg1-0.10\nDescription: Image manipulation library LibMagick supports loading and saving a very large set of image formats. It allows a lot of image manipulation as well.\nPackage: libmagick9-dev\nArchitecture: amd64\nVersion: 7:6.2.4.5.dfsg1-0.10\nDescription: Image manipulation library -- development This package includes header files and static libraries needed to compile programs using libMagick.\nPackage: libmailtools-perl\nArchitecture: all\nVersion: 1.77-1~1\nDescription: Manipulate email in perl programs This is a set of perl modules which provide an easy interface to manipulating email in an object-oriented fashion. . Homepage: http://search.cpan.org/~markov/MailTools-1.74/\nPackage: libmono-dev\nArchitecture: amd64\nVersion: 1.1.13.2-1.1\nDescription: libraries for the Mono JIT - Development files Header files and static libraries for libmono and libmono-profiler-conv. . Mono is a platform for running and developing applications based on the ECMA/ISO Standards. Mono is an open source effort led by Novell. Mono provides a complete CLR (Common Language Runtime) including compiler and runtime, which can produce and execute CIL (Common Intermediate Language) bytecode (aka assemblies), and a class library.\nPackage: libmono0\nArchitecture: amd64\nVersion: 1.1.13.2-1.1\nDescription: libraries for the Mono JIT Shared libraries for Mono, used for embedding/hosting of the JIT. The package also contains libmono-profiler-cov used for optimisation work. . Mono is a platform for running and developing applications based on the ECMA/ISO Standards. Mono is an open source effort led by Novell. Mono provides a complete CLR (Common Language Runtime) including compiler and runtime, which can produce and execute CIL (Common Intermediate Language) bytecode (aka assemblies), and a class library.\nPackage: libmp4-0\nArchitecture: amd64\nVersion: 2.0.0-0.3.1\nDescription: freeware Advanced Audio Decoder - runtime files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains the MP4 (aka ACC) library.\nPackage: libmp4-dev\nArchitecture: amd64\nVersion: 2.0.0-0.3.1\nDescription: freeware Advanced Audio Decoder - development files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains the MP4 (aka ACC) development files.\nPackage: libmp4v2-0\nArchitecture: amd64\nVersion: 2.0.0+cvs20040908+mp\nDescription: MP4 container library - runtime files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains runtime files of the optional library for accessing MP4 files. Needed by the player plugins.\nPackage: libmp4v2-dev\nArchitecture: amd64\nVersion: 2.0.0+cvs20040908+mp\nDescription: MP4 container library - development files FAAD2 is the fastest ISO AAC audio decoder available. FAAD2 correctly decodes all MPEG-4 and MPEG-2 MAIN, LOW, LTP, LD and ER object type AAC files. . This package contains development files of the optional library for accessing MP4 files. Needed by the player plugins.\nPackage: libmpcdec-dev\nArchitecture: amd64\nVersion: 1.2.2-1.1\nDescription: Musepack (MPC) format library [development files] This package contains files used to develop or compile programs that use libmpcdec. . libmpcdec allows you to decode files in the Musepack audio format, which usually use the 'mpc' extension. MPC is a lossy compression format like MP3 or Ogg Vorbis. It is based on the MPEG-1 Layer-2 / MP2 algorithms, but has vastly improved.\nPackage: libmpcdec3\nArchitecture: amd64\nVersion: 1.2.2-1.1\nDescription: Musepack (MPC) format library libmpcdec allows you to decode files in the Musepack audio format, which usually use the 'mpc' extension. MPC is a lossy compression format like MP3 or Ogg Vorbis. It is based on the MPEG-1 Layer-2 / MP2 algorithms, but has vastly improved.\nPackage: libmysql++-dev\nArchitecture: amd64\nVersion: 2.0.7-2.1\nDescription: mysql C++ library bindings (development) Mysql++ is a complex C++ API for Mysql (And other SQL Databases Soon). The goal of this API is too make working with Queries as easy as working with other STL Containers. . This package provides development support. . Homepage: http://tangentsoft.net/mysql++/.\nPackage: libmysql++2c2a\nArchitecture: amd64\nVersion: 2.0.7-2.1\nDescription: mysql C++ library bindings (runtime) Mysql++ is a complex C++ API for Mysql (And other SQL Databases Soon). The goal of this API is too make working with Queries as easy as working with other STL Containers. . This package provides runtime support. . Homepage: http://tangentsoft.net/mysql++/.\nPackage: libmysqlclient15-dev\nArchitecture: amd64\nVersion: 5.0.24-1~bpo.1\nDescription: mysql database development files MySQL is a fast, stable and true multi-user, multi-threaded SQL database server. SQL (Structured Query Language) is the most popular database query language in the world. The main goals of MySQL are speed, robustness and ease of use. . This package includes development libraries and header files.\nPackage: libmysqlclient15off\nArchitecture: amd64\nVersion: 5.0.24-1~bpo.1\nDescription: mysql database client library MySQL is a fast, stable and true multi-user, multi-threaded SQL database server. SQL (Structured Query Language) is the most popular database query language in the world. The main goals of MySQL are speed, robustness and ease of use. . This package includes the client library.\nPackage: libmythes-dev\nArchitecture: amd64\nVersion: 1.0-2ubuntu2\nDescription: simple thesaurus library (development files) MyThes is a simple thesaurus that uses a structured text data file and an index file with binary search to lookup words and phrases and return information on part of speech, meanings, and synonyms . This package contains the static library and header file needed to develop applications using mythes.\nPackage: libmythes0\nArchitecture: amd64\nVersion: 1.0-2ubuntu2\nDescription: simple thesaurus library (development files) MyThes is a simple thesaurus that uses a structured text data file and an index file with binary search to lookup words and phrases and return information on part of speech, meanings, and synonyms . This package contains the static library and header file needed to develop applications using mythes.\nPackage: libneon25\nArchitecture: amd64\nVersion: 0.25.3.dfsg-1.1\nDescription: An HTTP and WebDAV client library neon is an HTTP and WebDAV client library, with a C language API. . WARNING: THE NEON API IS NOT YET STABLE. . Provides lower-level interfaces to directly implement new HTTP methods, and higher-level interfaces so that you don't have to worry about the lower-level stuff. . Current features: * High-level interface to HTTP and WebDAV methods (PUT, GET, HEAD etc) * Low-level interface to HTTP request handling, to allow implementing new methods easily. * persistent connections * RFC2617 basic and digest authentication (including auth-int, md5-sess) * Proxy support (including basic/digest authentication) * SSL/TLS support using OpenSSL (including client certificate support) * Generic WebDAV 207 XML response handling mechanism * XML parsing using the expat or libxml parsers * Easy generation of error messages from 207 error responses * WebDAV resource manipulation: MOVE, COPY, DELETE, MKCOL. * WebDAV metadata support: set and remove properties, query any set ofi properties (PROPPATCH/PROPFIND). * autoconf macros supplied for easily embedding neon directly inside an application source tree.\nPackage: libneon25-dbg\nArchitecture: amd64\nVersion: 0.25.3.dfsg-1.1\nDescription: Detached symbols for libneon25 This package contains the debugging symbols for libneon25, suitable for debugging. . Neon provides lower-level interfaces to directly implement new HTTP methods, and higher-level interfaces so that you don't have to worry about the lower-level stuff.\nPackage: libneon25-dev\nArchitecture: amd64\nVersion: 0.25.3.dfsg-1.1\nDescription: Header and static library files for libneon25 This package contains the headers and the static library for libneon25. . Neon provides lower-level interfaces to directly implement new HTTP methods, and higher-level interfaces so that you don't have to worry about the lower-level stuff.\nPackage: libnunit-cil\nArchitecture: all\nVersion: 2.2.0-1\nDescription: Unit test framework for .NET NUnit is a unit testing framework for all .NET languages. It serves the same purpose as JUnit does in the Java world. It supports test categories, testing for exceptions and writing test results in plain text or XML.\nPackage: libnunit-doc\nArchitecture: all\nVersion: 2.2.0-1\nDescription: Unit test framework for .NET NUnit is a unit testing framework for all .NET languages. It serves the same purpose as JUnit does in the Java world. It supports test categories, testing for exceptions and writing test results in plain text or XML. . This package contains the API documentation and examples.\nPackage: libogg-dev\nArchitecture: i386\nVersion: 1.1.3-2.1\nDescription: Ogg Bitstream Library Development The libogg-dev package contains the header files and documentation needed to develop applications with libogg.\nPackage: libogg0\nArchitecture: i386\nVersion: 1.1.3-2.1\nDescription: Ogg Bitstream Library Libogg is a library for manipulating ogg bitstreams. It handles both making ogg bitstreams and getting packets from ogg bitstreams.\nPackage: liboggflac++-dev\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C++ development library (ogg) FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the development library libOggFLAC++.\nPackage: liboggflac++2\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C++ runtime library (ogg) FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the runtime library libOggFLAC++.\nPackage: liboggflac-dev\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - C development library (ogg) FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the development library libOggFLAC.\nPackage: liboggflac3\nArchitecture: amd64\nVersion: 1.1.2-4.1\nDescription: Free Lossless Audio Codec - runtime C library (ogg) FLAC stands for Free Lossless Audio Codec. Grossly oversimplified, FLAC is similar to MP3, but lossless. The FLAC project consists of: . * The stream format * libFLAC, which implements a reference encoder, stream decoder, and file decoder * flac, which is a command-line wrapper around libFLAC to encode and decode .flac files * Input plugins for various music players (Winamp, XMMS, and more in the works) . This package contains the runtime library libOggFLAC.\nPackage: libopenh323-1.14.4\nArchitecture: i386\nVersion: 1.14.4.2-3\nDescription: H.323 aka VoIP library This package contains the shared version of the OpenH323 library. . The OpenH323 project aims to create a full featured, interoperable, Open Source implementation of the ITU H.323 teleconferencing protocol that can be used freely by everybody. This protocol is most used for Voice over IP (VoIP) conferencing. . For more information on the OpenH323 project visit them at http://www.openh323.org/\nPackage: libopenh323-dbg\nArchitecture: i386\nVersion: 1.14.4.2-3\nDescription: H.323 aka VoIP library development debug files This package contains the shared and static debug version of the OpenH323 library. . The OpenH323 project aims to create a full featured, interoperable, Open Source implementation of the ITU H.323 teleconferencing protocol that can be used freely by everybody. This protocol is most used for Voice over IP (VoIP) conferencing. . For more information on the OpenH323 project visit them at http://www.openh323.org/\nPackage: libopenh323-dev\nArchitecture: i386\nVersion: 1.14.4.2-3\nDescription: H.323 aka VoIP library development files This package contains the the headers and a static version of the OpenH323 library. . The OpenH323 project aims to create a full featured, interoperable, Open Source implementation of the ITU H.323 teleconferencing protocol that can be used freely by everybody. This protocol is most used for Voice over IP (VoIP) conferencing. . For more information on the OpenH323 project visit them at http://www.openh323.org/\nPackage: libopenh323-doc\nArchitecture: all\nVersion: 1.14.4.2-3\nDescription: H.323 aka VoIP library documentation files This package contains the documentation and samples to program with the OpenH323 library. . The OpenH323 project aims to create a full featured, interoperable, Open Source implementation of the ITU H.323 teleconferencing protocol that can be used freely by everybody. This protocol is most used for Voice over IP (VoIP) conferencing. . For more information on the OpenH323 project visit them at http://www.openh323.org/\nPackage: libpango1.0-0\nArchitecture: amd64\nVersion: 1.12.1-0bpo1\nDescription: Layout and rendering of internationalized text Pango is a library for layout and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed. however, most of the work on Pango-1.0 was done using the GTK+ widget toolkit as a test platform. Pango forms the core of text and font handling for GTK+-2.0. . Pango is designed to be modular; the core Pango layout can be used with four different font backends: - Core X windowing system fonts - Client-side fonts on X using the Xft library - Direct rendering of scalable fonts using the FreeType library - Native fonts on Microsoft backends . This package contains the shared libraries.\nPackage: libpango1.0-0-dbg\nArchitecture: amd64\nVersion: 1.12.1-0bpo1\nDescription: The Pango library and debugging symbols Pango is a library for layout and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed. however, most of the work on Pango-1.0 was done using the GTK+ widget toolkit as a test platform. Pango forms the core of text and font handling for GTK+-2.0. . Pango is designed to be modular; the core Pango layout can be used with four different font backends: - Core X windowing system fonts - Client-side fonts on X using the Xft library - Direct rendering of scalable fonts using the FreeType library - Native fonts on Microsoft backends . This package contains unstripped shared libraries. it is provided primarily to provide a backtrace with names in a debugger, this makes it somewhat easier to interpret core dumps. The libraries are installed in /usr/lib/debug and can be used by placing that directory in LD_LIBRARY_PATH. Most people will not need this package.\nPackage: libpango1.0-common\nArchitecture: amd64\nVersion: 1.12.1-0bpo1\nDescription: Modules and configuration files for the Pango Pango is a library for layout and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed. however, most of the work on Pango-1.0 was done using the GTK+ widget toolkit as a test platform. Pango forms the core of text and font handling for GTK+-2.0. . Pango is designed to be modular; the core Pango layout can be used with four different font backends: - Core X windowing system fonts - Client-side fonts on X using the Xft library - Direct rendering of scalable fonts using the FreeType library - Native fonts on Microsoft backends . This package contains the Pango modules and the configuration files which Pango needs.\nPackage: libpango1.0-dev\nArchitecture: amd64\nVersion: 1.12.1-0bpo1\nDescription: Development files for the Pango Pango is a library for layout and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed. however, most of the work on Pango-1.0 was done using the GTK+ widget toolkit as a test platform. Pango forms the core of text and font handling for GTK+-2.0. . Pango is designed to be modular; the core Pango layout can be used with four different font backends: - Core X windowing system fonts - Client-side fonts on X using the Xft library - Direct rendering of scalable fonts using the FreeType library - Native fonts on Microsoft backends . This package contains the header files and some files needed for development with Pango.\nPackage: libpango1.0-doc\nArchitecture: all\nVersion: 1.12.1-0bpo1\nDescription: Documentation files for the Pango Pango is a library for layout and rendering of text, with an emphasis on internationalization. Pango can be used anywhere that text layout is needed. however, most of the work on Pango-1.0 was done using the GTK+ widget toolkit as a test platform. Pango forms the core of text and font handling for GTK+-2.0. . Pango is designed to be modular; the core Pango layout can be used with four different font backends: - Core X windowing system fonts - Client-side fonts on X using the Xft library - Direct rendering of scalable fonts using the FreeType library - Native fonts on Microsoft backends . This package contains the HTML documentation for the Pango in /usr/share/doc/libpango1.0-doc/ .\nPackage: libpgtypes2\nArchitecture: amd64\nVersion: 8.1.8-1~bpo.1\nDescription: shared library libpgtypes for PostgreSQL 8.1 The libpgtypes shared library is used by programs built with ecpg. (Embedded PostgreSQL for C). . PostgreSQL is an object-relational SQL database management system.\nPackage: libphp-adodb\nArchitecture: all\nVersion: 4.93a-1~1\nDescription: The 'adodb' database abstraction layer for php A library for php, to allow for a universal way to access databases. ADODB stands for Active Data Objects Data Base. Currently supported databases are MySQL, PostgreSQL, Interbase, Oracle, MS SQL 7, FoxPro, Access, ADO, Sybase, DB2 and generic ODBC.\nPackage: libpostproc-dev\nArchitecture: amd64\nVersion: 0.cvs20060329-3bpo1\nDescription: development files for libpostproc This is the video postprocessing library from the ffmpeg project. . This package contains the header files and static libraries needed to compile applications or shared objects that use libpostproc.\nPackage: libpostproc0\n"}, {"score": 71.896484, "uuid": "fc793a35-d045-591b-a623-735e266356eb", "index": "cw12", "trec_id": "clueweb12-1510wb-63-24865", "target_hostname": "n3v.net", "target_uri": "http://n3v.net/resources/ldp/LDP/Linux-Dictionary/html/d.html", "page_rank": 1.1700305e-09, "spam_rank": 74, "title": "Linux System Administration :: Resources :: Ldp LDP Linux-Dictionary", "snippet": "<em>In</em> the DOM specification, the <em>term</em> &quot;document&quot; <em>is</em> used <em>in</em> the broad sense - increasingly, XML <em>is</em> being used as a way <em>of</em> representing many <em>different</em> kinds <em>of</em> information that may be stored <em>in</em> diverse systems, and much <em>of</em> this would traditionally be seen as data rather <em>than</em> as documents.", "explanation": null, "document": "Delay Locked Loop (GDR-SDRAM) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLL\nDynamic Link Library From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLL\nDynamic Link Loader (BS2000) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLL\nDynamically Linked Library, a library linked to an executable program at run-time. From NIS HOWTO http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndlocate\nfast alternative to dpkg -L and dpkg -S uses GNU locate to greatly speed up finding out which package a file belongs to (i.e. a very fast dpkg -S). many other uses, including options to view all files in a package, calculate disk space used, view and check md5sums, list man pages, etc. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLP\nDigital Light Processing (TI) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLP\nDiscrete Logarithmic Problem From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLPI\nData Link Provider Interface (X/Open) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLR\nDynamic Link Routine From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLS\nDOS LAN Services (IBM, LAN Server) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLS\nDownLoadable Sounds From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLSW\nData Link SWitching (APPN, MPTN, RFC 1795, SNA, NETBIOS), \"DLSw\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLT\nDigital Line Tape (DEC, Streamer) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDLX\nDLX is a full featured Linux system running on Intel PCs. DLX comes on a single 3.5\" floppy disk. DLX also supports a parallel-port ZIP-Drive drive. Good for network trouble-shooting and/or FTPing from a university pc-lab. Last new version was released in 1996. Distribution development is not all that active. http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDM\nDelta Modulation From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDM\nDeMilitarisierte zone (Firewall) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDM\nDevelopment Machine (Corel) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDM\nDisconnect Mode (LAPB) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMA\nDirect Memory Access (DMA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMAC\nDirect Memory Access Controller From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmachinemon\nNetwork-wide monitoring suite for monitoring machine status For monitoring a bunch of network-connected computers, dmachinemon is an ideal software. It can be used to show load average, available memory, and top processes running on each machine. Includes convenience scripts, and other tools. dmachinemon-html needs to be available on html-generating system From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmachinemon-gtkiface\nNetwork-wide monitoring suite for monitoring machine status For monitoring a bunch of network-connected computers, dmachinemon is an ideal software. It can be used to show load average, available memory, and top processes running on each machine. this package contains dmachinemon-gtkiface a GTK+ interface to dmachinemon From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmachinemon-master\nNetwork-wide machine monitoring suite -- master For monitoring a bunch of network-connected computers, dmachinemon is an ideal software. It can be used to show load average, available memory, and top processes running on each machine. This package includes dmachinemon-master, which needs to be installed on the master system. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmachinemon-servent\nNetwork-wide monitoring suite -- servent For monitoring a bunch of network-connected computers, dmachinemon is an ideal software. It can be used to show load average, available memory, and top processes running on each machine. This package includes dmachinemon-servent, for servent systems, which often are cluster nodes. A servent system is a node which does the role of a server and a client, providing and requesting information at the same time. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmachinemon-treeview\nNetwork-wide machine monitoring suite - topology viewer For monitoring a bunch of network-connected computers, dmachinemon is an ideal software. It can be used to show load average, available memory, and top processes running on each machine. Includes network topology debugging (tree structure viewing) suite. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmail\nprocmail Mail Delivery Module From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmalloc\nDebug memory allocation library (non-threaded) Drop in replacement for the system's `malloc', `realloc', `calloc', `free' and other memory management routines while providing powerful debugging facilities configurable at runtime. These facilities include such things as memory-leak tracking, fence-post write detection, file/line number reporting, and general logging of statistics. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMAP\nDECT Multimeda Access Protocol (DECT) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmapi\nData Management API runtime environment Files required by system software using the Data Management API (DMAPI). This is used to implement the interface defined in the X/Open document: Systems Management: Data Storage Management (XDSM) API dated February 1997. This interface is implemented by the libdm library. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMB\nDigital Multimedia Broadcasting (Telekom, Blaupunkt, DAB) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmbt\nDebian maintainer's bug-tool A GNOME-based tool and a set of perl packages to help a Debian maintainer manage the bugs reported against his/her packages. This software is in the very early stages of development. All feedback will be appreciated. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMC\nDesktop Multimedia Conferencing From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMCA\nDigital Millennium Copyright Act (USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMD\nDevice Manager Driver (OS/2) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMD\nDifferential Mode Delay (Gigabit-, ethernet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMD\nDigital Micromirror Device (IC, DLP, TI) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMD\nDirectory Management DOMAIN (OSI, DS) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMDAC\nDual MAC Dual Attached Concentrator (FDDI, DAC) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMDD\nDistributed Multiplexing Distributed Demultiplexing From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMDF\nDistributed Management Data Facility (DCE, DME) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDME\nDirect Memory Execution From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDME\nDistributed Management Environment (OSF) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMERT\nDuplex Multiple Environment, Real Time (OS, MERT) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmesg\nprint or control the kernel ring buffer From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMF\nDigest Message Format (Internet, RFC 1153) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMF\nDistribution Media Format [diskette] (FDD) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMI\nDefinition of Management Information (OSI) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMI\nDesktop Management Interface (DTMF, DMI, BIOS) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMI\nDigital Multiplexed Interface From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDML\nData Manipulation Language From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDML\nData Manipulation Logic From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDML\nDistributed Mode Loudspeaker (audio) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMOS\nDiffusion Metal Oxide Semiconductor (IC) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMP\nDot Matrix Printer From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndmp\ntranslate Troff output to low-level MetaPost input From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nData Management System From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nDefense Message System (mil., USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nDigital Multiplexed System From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nDisk Monitor System (OS, IBM) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nDistributed Media Services (COSE) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMS\nDocument Management System From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMSCMS\nDisplay Management System/Conversional Monitor System, \"DMS/CMS\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMSIG\nDefense Message System Implementation Group (org., DMS, mil., USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMSP\nDistributed Mail System Protocol (Internet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMSTWG\nDefense Message System Transition Working Group (org., DMS, mil., USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMT\nDiscrete Monitor Timings (VESA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMT\nDiscrete Multitone Technology (ADSL, Amati Communications, ANSI) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMTF\nDesktop Management Task Force From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMTU\nDefault Maximum Transmission Unit (MTU), \"D-MTU\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMU\nData Manipulation Unit From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMV\nDaten- und MedienVerlag From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMV\nDeutsche Mathematiker-Vereinigung (org.) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMZ\nDeMilitarized Zone (LAN, Internet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDMZ (Demilitarized Zone)\nIn firewalls, a DMZ is an area that is mostly public to the Internet. This is where a companies web, e-mail, and DNS servers are located. A DMZ often has some limited protection, but since it is very exposed to the Internet, the assumption is that the machines in the zone will eventually be compromised. Therefore, the machines often have as little connectivity to the private network as any other machine from the Internet. From Hacking-Lexicon http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDN\nDistinguished Name (X.500) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDN\nDistribution Network From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDN\nSee distinguished name (DN). From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNA\nDigital Network Architecture (DEC) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNA\nDirect Network Attach (Xyratex, RAID) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNA\nDistributed Network Architecture (NCR) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNAE\nDatenNetz-AnschlussEinrichtung (Telekom) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNAT\nDynamic Network Address Translation From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNC\nDirect Numerical Control (CNC) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNC\nDynamic Network Controller From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNCMPE\nDirect Numerical Control / ??? (CNC), \"DNC/MPE\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNCP\n[PPP] DECNet phase iv Control Protocol (RFC 1762, DECNET, PPP) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNCRI\nDivision of Networking and Communication Research and Infrastructure From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDND\nDen Norske Dataforening (org., Norway) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnet-common\nBase package for Linux DECnet This is the base package for Linux DECnet. it contains the necessary configuration files and a script to set up the MAC address of your ethernet card(s) at boot-up. You will also need to be running a 2.4+ kernel and have DECnet either built as a module or compiled into the kernel. To do useful work with DECnet you will need the libdnet package and probably also dnet-progs. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnet-progs\nDECnet user programs and daemons These tools are the application layer interface for DECnet on Linux systems. They provide file/terminal access facilities between OpenVMS and Linux and remote execution of commands. Also included is a Linux version of the VMS \"Phone\" utility and a VMSMail to SMTP gateway. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNHR\nDynamic Non Hierarchical Routing From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNI\nDe.Newusers.Info (Usenet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNI\nDECnet Network Interface From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNIC\nData Network Identification Code (X.121) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNQ\nDe.Newusers.Questions (Usenet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNR\nDigital Noise Reduction From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNS\nDOMAIN Name System (Internet, RFC 1034/1035, DNS) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNS\nSee domain name system (DNS). From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNS (Domain Name System)\nAnalogy: When calling somebody via the telephone, you can lookup their name in the phone book in order to find the telephone number. DNS is a similar directory service. When contacting a web site, your browser looks up the name in DNS in order to find the IP number. History: DNS is relatively new. When the Internet was small, every machine simply had a list of all other machines on the Internet (stored in /etc/hosts). Generally, people just had the IP addresses of machines memorized in much the same way that people memorize phone numbers today. Key point: DNS is not needed for communication. If a DNS server goes down, newbies will think that the entire network is down. Hackers frequently deal with raw IP addresses, and indeed often bypass DNS entirely as it may give off signs of an attack. Key point: The DNS hierarchy starts from the \"top level domains\" of .com, .net, .org, .edu, .giv, .mil, and the two-letter country codes (e.g. .us for United States, .jp for Japan). Misunderstanding: Both IP addresses and domain names use dots: \"www.robertgraham.com\" vs. \"192.0.2.133\". This has no significance; the usage of these dots is unrelated. Trying to match things up one-to-one is wrong (i.e. \".com\" == \"192.\"). Analogy: What is your phone number? If I asked you this, you could give me both your home number and your cell phone number. I can reach you at either one. In much the same way, the a domain name like http://www.yahoo.com/ can have multiple IP addresses. Every time you visit that site, you might go to a separate IP address. You can test this out yourself. Go to the command-line and type \"ping www.yahoo.com\". Notice how it comes back with an IP address that it pings. After that runs, try it again. Notice how the second time it is pinging a different IP address. Details: DNS provides a number of resource records (RR): A ^ The normal record that contain an name to IP address mapping. LOC ^ The geographic location containing latitude, longitude, altitude, and size. Altitude is meters above sea level. Size is the exponent in the in meters of the volumetric size of the object. Hackers sometimes use these records to find where you are located physically. Humor: The original name of this record was ICBM. HOST ^ HOST records can contain information about the machine, such as if it is a Windows or UNIX machine. Administrators probably should not fill them in; they are dangerous. PTR. From Hacking-Lexicon http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNS (Domain Name System)\nThis system maps hostnames to IP numbers. DNS is the Domain Name System. DNS converts machine names to the IP addresses that all machines on the net have. It translates (or \"maps\" as the jargon would have it) from name to address and from address to name, and some other things. This HOWTO documents how to define such mappings using Unix system, with a few things specific to Linux. A mapping is simply an association between two things, in this case a machine name, like ftp.linux.org, and the machine's IP number (or address) 199.249.150.4. DNS also contains mappings the other way, from the IP number to the machine name; this is called a \"reverse mapping\". DNS is, to the uninitiated (you ;-), one of the more opaque areas of network administration. Fortunately DNS isn't really that hard. This HOWTO will try to make a few things clearer. It describes how to set up a simple DNS name server, starting with a caching only server and going on to setting up a primary DNS server for a domain. For more complex setups you can check the qanda section of this document. If it's not described there you will need to read the Real Documentation. I'll get back to what this Real Documentation consists of in the last chapter. Before you start on this you should configure your machine so that you can telnet in and out of it, and successfully make all kinds of connections to the net, and you should especially be able to do telnet 127.0.0.1 and get your own machine (test it now!). You also need good /etc/nsswitch.conf, /etc/resolv.conf and /etc/hosts files as a starting point, since I will not explain their function here. If you don't already have all this set up and working the Networking-HOWTO and/or the Networking-Overview-HOWTO explains how to set it up. Read them. When I say `your machine' I mean the machine you are trying to set up DNS on, not any other machine you might have that's involved in your networking effort. I assume you're not behind any kind of firewall that blocks name queries. If you are you will need a special configuration --- see the section on qanda. Name serving on Unix is done by a program called named. This is a part of the ``BIND'' package which is coordinated by The Internet Software Consortium. Named is included in most Linux distributions and is usually installed as /usr/sbin/named, usually from a package called BIND, in upper or lower case depending on the whim of the packager. If you have a named you can probably use it; if you don't have one you can get a binary off a Linux ftp site, or get the latest and greatest source from ftp://ftp.isc.org/isc/bind9/. This HOWTO is about BIND version 9. The old versions of the HOWTO, about BIND 4 and 8, is still available at http://langfeldt.net/DNS-HOWTO/ in case you use BIND 4 or 8 (incidentally, you will find this HOWTO there too). If the named man page talks about (at the very end, in the FILES section) named.conf you have BIND 8; if it talks about named.boot you have BIND 4. If you have 4 and are security conscious you really ought to upgrade to the latest version of BIND 8. Now. DNS is a net-wide database. Take care about what you put into it. If you put junk into it, you, and others, will get junk out of it. Keep your DNS tidy and consistent and you will get good service from it. Learn to use it, admin it, debug it and you will be another good admin keeping the net from falling to its knees by mismanagement. Tip: Make backup copies of all the files I instruct you to change if you already have them, so that if after going through this nothing works you can get it back to your old, working state. From DNS-HOWTO http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndns-browse\nFrontends to DNS search. This package provides two programs to make user lookups on DNS servers: dns_tree and dns_browse. dns_tree is a command-line-based front-end to dig. It replaces the several dig invocations necessary to fetch a zone, and it formats the output in a somewhat sensible hierarchical style (a tree). dns_browse is a GUI front-end to dns_tree. It allows point-and-click DNS browsing and makes it easy to expand/compress hierarchies in one or more DNS zones. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndns-helper\nNon-blocking name resolver interface. From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnscvsutil\nMaintain DNS zone files under CVS control Maintain your DNS zone files under CVS control, and possibly automatically updating reverse zones. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnsdomainname\nshow the system's DNS domain name From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnsmasq\nA caching DNS forwarder. Dnsmasq is lightweight, easy to configure DNS forwarder designed to provide DNS (domain name) services to a small network where using BIND would be overkill. It can be have its upstream DNS servers automatically configured by PPP or DHCP and it can serve the names of local machines which are not in the global DNS. It can integrate with the ISC DHCP daemon to serve the names of local machines which are configured using DHCP. Dnsmasq is ideal for networks behind NAT routers and connected via modem, ISDN, ADSL, or cable-modem. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNSO\nDefense Network Systems Organization (org., USA, mil.) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNSO\nDomain Name Supporting Organization (org., ICANN) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNSSEC\nA secure form of DNS. Its primary use is for updating DNS servers. TODO Algorithms: RSA, MD5. From Hacking-Lexicon http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnssec-keygen\nDNSSEC key generation tool From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnssec-makekeyset\nDNSSEC zone signing tool From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnssec-signkey\nDNSSEC key set signing tool From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnssec-signzone\nDNSSEC zone signing tool From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNSTAN\nDigitale NebenSTellenANlagen (Telekom), \"DNStAn\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnstracer\nTrace DNS queries to the source dnstracer determines where a given Domain Name Server (DNS) gets its information from for a given hostname, and follows the chain of DNS servers back to the authoritative answer. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnsutils\nClients provided with BIND This package delivers various client programs related to DNS that are derived from the BIND source tree. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndnswalk\nChecks dns zone information using nameserver lookups dnswalk is a DNS debugger. It performs zone transfers of specified domains, and checks the database in numerous ways for internal consistency, as well as accuracy. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNUG\nDeusche Notes User Group [e.v.] (org., user group, Lotus) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDNX\nDepartmental Network eXchange [bridging router] (SNA, SDLC, Proteon) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDO\nDistributed Objects (NeXT) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOAM\nDistributed Office Applications Model (ISO, IEC, DIS 10031-1 f.) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoc\n/dok/ n. Common spoken and written shorthand for `documentation'. Often used in the plural `docs' and in the construction `doc file' (i.e., documentation available on-line). From Jargon Dictionary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOC\nDe.Org.CCC (Usenet, CCC) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoc++\nA documentation system for C/C++, IDL and Java DOC++ is a documentation system for C/C++, IDL and Java generating both LaTeX output for high quality hardcopies and HTML output for sophisticated online browsing of your documentation. The documentation is extracted directly from the C/C++/IDL header/source files or Java class files. Here are a list of the highlights: - hierarchically structured documentation - automatic class graph generation (as Java applets for HTML) - cross references - high end formating support including typesetting of equations For more information about DOC++ please take a look at it's home page at http://docpp.sourceforge.net/ From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoc-base\nUtilities to manage online documentation This package contains utilities to manage online documentation on a Debian system. If you want to get additional information about doc-base please check out the `Debian doc-base Manual' included in this package. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoc-central\nweb-based documentation browser Doc-Central is a tool to browse the documentation installed on your system using their doc-base entries. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoc-debian\nDebian Project documentation, Debian FAQ and other documents The Debian Project is an association of individuals who have made common cause to create a free operating system. In this package, you will find: * Debian Linux Manifesto, * Constitution for the Debian Project, * Debian GNU/Linux Social Contract, * Debian Free Software Guidelines. Additionally provided are: * Debian GNU/Linux Frequently Asked Questions (FAQ), * Debian Bug Tracking System documentation, and * Introduction to the Debian mailing lists. All of these files are available at ftp://ftp.debian.org/debian/doc/ and mirrors thereof. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook\nSGML DTD for authors of technical documentation DocBook is an SGML vocabulary particularly well suited to books and papers about computer hardware and software (though it is by no means limited to these applications). It has emerged as an open, standard DTD in the software industry, and is used to document many free software projects. This package contains the SGML DTD for DocBook, which describes the formal structure of documents complying this format. If you wish to author XML documents, see the 'docbook-xml' package. It is a part of Debian's SGML/XML infrastructure, along with other DTDs, tools for parsing, validating, and styling, and formatting SGML and XML documents. This package includes the 2.4.1, 3.0, 3.1, 4.0, and 4.1 versions of the DocBook SGML DTD. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-dsssl\nModular DocBook DSSSL stylesheets, for print and HTML This package enables the use of DSSSL styling (formatting for output) with DocBook SGML or XML files. This package contains two DocBook DSSSL stylesheets, one for \"print\" output and one for HTML. The print stylesheet can be used in conjunction with the RTF and the TeX back-ends that Jade provides to produce output suitable for printing. The HTML stylesheet can be used to convert DocBook documents into HTML. The stylesheets are modular in design so that you can extend and customize them. Author: Norman Walsh <ndw@nwalsh.com> Homepage: http://docbook.sourceforge.net/ From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-dtds\nThe DocBook Document Type Definition (DTD) describes the syntax oftechnical documentation texts (articles, books and manual pages). This syntax is XML-compliant and is developed by the OASIS consortium. This package contains SGML and XML versions of the DocBook DTD up toand including version 4.1.2. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-style-dsssl\nThis package contains DSSSL stylesheets for converting any DocBook document to another printed (for example, RTF or PostScript) or online (for example, HTML) format. These stylesheets are highly customizable. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-style-xsl\nThese XSL stylesheets allow you to transform any DocBook XML document to other formats, such as HTML, FO, and XHTML. They are highly customizable. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-to-man\nConverter from DocBook SGML into roff -man macros. The docbook-to-man tool is a batch converter that transforms UNIX-style manpages from the DocBook SGML DTD into nroff/troff -man macros. This is not the original version by Fred Dalrymple, but one with the ANS modifications by David Bolen. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-utils\nConvert Docbook files to other formats (HTML, RTF, Postscript, PDF) The docbook-utils is a set of a few small programs intended to ease everyday use of technical documentation software and more generally use of SGML and XML. Tasks they currently accomplish are: * jw: convert Docbook files to other formats (HTML, RTF, Postscript, PDF). * sgmldiff: detect the differences in markup between two SGML files. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-utils\nThis package contains scripts are for easy conversion from DocBookfiles to other formats (for example, HTML, RTF, and PostScript), andfor comparing SGML files. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-utils-pdf\nThis package contains a script for converting DocBook documents to PDF format. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-website\nXML Website DTD and XSL Stylesheets A docbook-derived XML DTD for building web sites. This package includes the xsl stylesheets for this DTD. This version is a customization of the DocBook XML V4.1.2 DTD. Author: Norman Walsh <ndw@nwalsh.com> Homepage: http://sourceforge.net/projects/docbook/ From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-xml\nXML DTD for DocBook, also known as DocBk XML An XML representation of the DocBook DTD, which is sometimes referred to as DocBk XML. This is a DTD widely used for documenting software and other technical topics. This package ships with the newest DocBook XML DTD, as well as a select set of legacy DTDs for use with older documents. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-xsl\nStylesheets for processing DocBook XML files to HTML and FO. These are modular XSL stylesheets for processing documents composed with the DocBook XML DTD and its derivatives (\"Simplified\" DocBook XML, JRefEntry DTD, etc.). The documentation is included in the package. The stylesheets provide XSLT transformations for both HTML and Formatting Object output. The latter can be further processed to a number of print formats using FOP or TeX-based tools. The stylesheets are modular in the sense that you can extend and, to some extent, customize them. Included are extension classes for the Saxon and Xalan2 XSLT processors. The documentation is included in this package. For quickstart instructions, see /usr/share/doc/docbook-xsl/README.Debian Author: Norman Walsh <ndw@nwalsh.com> Homepage: http://sourceforge.net/projects/docbook From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook-xsl-stylesheets\nStylesheets for processing DocBook XML files to HTML and FO. These are modular XSL stylesheets for processing documents composed with the DocBook XML DTD and its derivatives (\"Simplified\" DocBook XML, JRefEntry DTD, etc.). The documentation is included in the package. The stylesheets provide XSLT transformations for both HTML and Formatting Object output. The latter can be further processed to a number of print formats using FOP or TeX-based tools. The stylesheets are modular in the sense that you can extend and, to some extent, customize them. The documentation is included in this package. Author: Norman Walsh <ndw@nwalsh.com> Homepage: http://sourceforge.net/projects/docbook From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2dvi\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2html\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2man\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2pdf\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2ps\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2rtf\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2tex\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2texi\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocbook2txt\n(Jade Wrapper) converts SGML files to other formats From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOCC\nDISA Operations Control Complex (DISA, mil., USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocdiff\nCompares two text files by character or by word/morpheme Compares two text files by character or by word/morpheme, and output the result in pseudo HTML format. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOCSIS\nData Over Cable System Interface Specification From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndocumentation\nn. The multiple kilograms of macerated, pounded, steamed, bleached, and pressed trees that accompany most modern software or hardware products (see also tree-killer). Hackers seldom read paper documentation and (too) often resist writing it; they prefer theirs to be terse and on-line. A common comment on this predilection is \"You can't grep dead trees\". See drool-proof paper, verbiage, treeware. From Jargon Dictionary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDocumentation\nThe instructions, tutorials, and refernce information that provides you with the information you need to use a program or computer system effectively. Documentation can appear in printed form or in on-line help systems. From QUECID http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDODISS\nDepartment Of Defense Index of Specifications and Standards (mil., USA) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOE\nDepends On Experience From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOE\nDistributed Objects Everywhere (Sun) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndog\nEnhanced replacement for cat dog writes the contents of each given file, URL or standard input to standard output. It currently supports file, http and raw URLs. It is designed as a compatible, but enhanced replacement for cat. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOM\nDisk On Module From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOM\nDocument Object Model (MS) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOM (Document Object Model)\nAn application programming interface (API) for HTML and XML documents. It defines the logical structure of documents and the way a document is accessed and manipulated. In the DOM specification, the term \"document\" is used in the broad sense - increasingly, XML is being used as a way of representing many different kinds of information that may be stored in diverse systems, and much of this would traditionally be seen as data rather than as documents. Nevertheless, XML presents this data as documents, and the DOM may be used to manage this data. From Linux Guide @FirstLinux http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDomain\nAn internet 'domain' is a subsection of the internet. The primary domains of the internet are .COM, .NET, .MIL, and .ORG, which refer to Commercial, Network, Military, and Organization. These domains are administered by the Internic. Each domain has a primary and secondary Domain Name Server associated with it. From KADOWKEV http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOMAIN\nDistributed Operating Multi Access Interactive Network (Apollo, Internet) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDomain\nThe part of the Internet address that specifies your computer's location in the world. The address is written as a series of names separated by full stops. For example, the Domain name at Global SchoolHouse Foundation is www.gsh.org--this shows that Global SchoolHouse Foundation is an organization. The another example, www.statistik.uni-dortmund.de, shows that Statistics faculty is in the University of Dortmund, and the last de shows the it is in Germany (Deutschland). The German word for Germany is (de)utschland. The most common top level domains: .edu Educations(US).net network resource .com Commercial(US) www.aspensys.com .org Organization(US) .de (Code for Germany..) .gov Public bodies http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndomain\nThe site's name that an organization uses; for example, Red Hat has a domain name of redhat.com. From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDomain Name\nThe unique name that identifies an Internet site. Domain Names always have 2 or more parts, separated by dots. The part on the left is the most specific, and the part on the right is the most general. A given machine may have more than one Domain Name but a given Domain Name points to only one machine. For example, the domain names: matisse.net mail.matisse.net workshop.matisse.net can all refer to the same machine, but each domain name can refer to no more than one machine. Usually, all of the machines on a given Network will have the same thing as the right-hand portion of their Domain Names (matisse.net in the examples above). It is also possible for a Domain Name to exist but not be connected to an actual machine. This is often done so that a group or business can have an Internet e-mail address without having to establish a real Internet site. In these cases, some real Internet machine must handle the mail on behalf of the listed Domain Name. From Matisse http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDomain Name Server\nEach internet domain has two domain name servers, or DNS. The primary DNS for a domain is usually located on one of the machine in that network, you can often determine the server from the output of the nslookup command. From KADOWKEV http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndomain name system (DNS)\nA service database that translates an IP address into a domain name (like redhat.com). From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndomainname\nA name \"key\" that is used by NIS clients to be able to locate a suitable NIS server that serves that domainname key. Please note that this does not necessarily have anything at all to do with the DNS \"domain\" (machine name) of the machine(s). From NIS HOWTO http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndome\ncalculates and draws geodesic domes DOME is a program which calculates the properties of a geodesic dome symmetry triangle. DOME calculates spherical vertex coordinates, symmetry triangle topological abundance, and chord factors. DOME supports class I (alternate) and class II (triac on) breakdowns for Icosahedron, Octahedron and Tetrahedron polyhedron types. DOME also supports \"Buckyball\" formations as well as elliptical geodesics. See the Applied Synergetics Homepage (http://www.cris.com/~rjbono/index.html) for image samples and links to other Synergetics Web sites. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOME\nDistributed Object Management Environment (ORB) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOMF\nDistributed Object Management Facility (Sun) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndongle\n1. A connector that attaches a conduit (such as a phone line or Ethernet cable) to a PCMCIA card. 2. A hardware attachment that authorizes a computer system to run a particular application. From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndonkey\nOne Time Password calculator. Donkey is an alternative for S/KEY's \"key\" command. This means that donkey is also an alternative for \"keyinit\". Since the entry is printed to stdout (not to /etc/skeykeys), you can easily sent it to remote operator by e-mail (with PGP signature or something). So, it possible to initiate S/KEY without login from the console of the host. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOOM\nDecentralised Object Orientated Machine From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoomlegacy\nA port of the Doom engine that supports OpenGL Doom Legacy features 32-Player multiplayer over TCP/IP, high resolutions, OpenGL rendering, compatibility to most of the other ports extensions, and much more. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOP\nDirectory Operational binding management Protocol From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndopewars\nMake a fortune dealing drugs on the streets of New York dopewars is a UNIX rewrite of the MS-DOS program of the same name, which in turn was inspired by John E. Dell's \"Drug Wars\" game. You have one month to buy and sell drugs on the streets of New York, the aim being first to pay off your debt to the loan shark and then to make a fortune. And if you have to shoot a few cops in the process, well... The game includes TCP networking allowing you to meet (and shoot) other human drug dealers. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOS\nDenial Of Service [attack], \"DoS\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOS\nDisk Operating System (OS, IBM, MS, ..., PC, Apple, RCA Spectra 70) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDoS (Denial of Service)\nAn exploit whose purpose is to deny somebody the use of the service: namely to crash or hang a program or the entire system. Example: Some classes of DoS are: traffic flood Overwhelms the Internet connection. Because it is the Internet connection itself that is attacked, there isn't much the victim can do to stop the attack. A firewall might block the flood from going any further, but the Internet connection in front of the firewall is still overloaded. application floods or bombs Overwhelms a program with too many events. A firewall that allows the traffic cannot block these attacks. For example, a firewall configured to allow IRC cannot selectively block just the flood but allow all other traffic. Common services attacked this way are IRC, HTTP, and e-mail (SMTP). remote system crash/hang Historically, there have been a lot of ways of remotely crashing machines. These attack the TCP/IP stack within the system causing it to crash or hang. This affects all software running on the system. remote service crash Crashes just the application/service. This doesn't affect other software running on the system. Example: Some famous DoS attacks are: Ping of Death This exploit crashed most machines vintage 1995 by sending illegally fragmented packets at a victim. Even as late as 2000, some systems were vulnerable to variants of this DoS, such as the Jolt2 attack against Windows systems. SYN flood ping flood WinNuke Sending OOB/URG data across a TCP connection to Windows. teardrop Sends overlapping IP fragments at the victim. Overlapping IP fragments should normally never happen. This means that the code to handle them has never been tested -- and therefore many bugs exist. land (latierra) An attacker can forge a packet that is sent from the victim's machine to the victim's machine, which can cause it to reply back to itself in an infinite loop. targa A tool that includes many popular DoS attacks (by Mixter). Culture: A common word for DoS is \"nuke\", which was first popularized by the WinNuke program (a simple ping-of-death expoit script. These days, \"nukes\" are those DoS exploits that script kiddies in chat rooms use against each other. See also: SYN flood From Hacking-Lexicon http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOS15\nDisk Operating System - 15 (OS, DEC, PDP 15), \"DOS-15\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndos2unix\nThe dos2unix utility converts DOS or MAC format text files to UNIX format. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOS360\nDisk ??? Operating System / 360 (OS, IBM S/360), \"DOS/360\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoschk\nSYSV and DOS filename conflicts check Checks filenames for conflicts under 14-character SYSV and 8.3 DOS limitations. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndosemu\nThe Linux DOS Emulator DOSEMU is a PC Emulator application that allows Linux to run a DOS operating system in a virtual x86 machine. This allows you to run many DOS applications. - Includes the FreeDOS kernel. - Color text and full keyboard emulation (via hotkeys) via terminal. - Built-in X support, includes IBM character set font. - Graphics capability at the console with most compatible video cards. - DPMI support so you can run DOOM. - CDROM support. - Builtin IPX and pktdrvr support. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOSemu\nTo quote the manual, \"dosemu\" is a user-level program which uses certain special features of the Linux kernel and the 80386 processor to run MS-DOS/FreeDOS/DR-DOS in what we in the biz call a `DOS box.' The DOS box, a combination of hardware and software trickery, has these capabilities: the ability to virtualize all input/output and processor control instructions, the ability to support the word size and addressing modes of the iAPX86 processor family's \"real mode,\" while still running within the full protected mode environment, the ability to trap all DOS and BIOS system calls and emulate such calls as are necessary for proper operation and good performance, the ability to simulate a hardware environment over which DOS programs are accustomed to having control, the ability to provide DOS services through native Linux services; for example, dosemu can provide a virtual hard disk drive which is actually a Linux directory hierarchy.\" From DOSEMU-HOWTO http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndosfstools\nInside of this package there are two utilities to create and to check MS-DOS FAT filesystems on either harddisks or floppies under Linux. This version uses the enhanced boot sector/superblockformat of DOS 3.3+ as well as provides a default dummy boot sector code. From Mandrake 9.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndosfstools\nThe dosfstools package includes the mkdosfs and dosfsck utilities, which respectively make and check MS-DOS FAT filesystems on harddrives or on floppies. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndosfstools\nUtilities to create and check MS-DOS FAT filesystems Inside of this package there are two utilities to create and to check MS-DOS FAT filesystems on either harddisks or floppies under Linux. This version uses the enhanced boot sector/superblock format of DOS 3.3+ as well as provides a default dummy boot sector code. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOSS\nDedicated Office Systems and Services From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndossizola\nAn Isola board game with nice graphics. The goal of Do'SSi Zo'la is to block the opponent by destroying the squares which surround him. In each turn, each player must first move to one of the squares adjacent to his current position, and then destroy a square of his choice. The first player who is unable to move loses. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOSVS\nDisk ??? Operating System / Virtual Storage (OS, IBM S/370), \"DOS/VS\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOSVSE\nDisk ??? Operating System / Virtual Storage Extended (OS, IBM 43XX, DOS/VS, VSE), \"DOS/VSE\" From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndot file\nA file that is hidden from general file browsing partly because it contains important configuration options. From Linux Guide @FirstLinux http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDot file\nIn UNIX, a file thet has a name preceded by a dot. Such a file normally isn't displayed by UNIX file-listing utility progams. Dot files are frequently used for user configuration files, such as a file that lists the newsgroups the user regularly consults. From QUECID http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndot file\n[Unix] n. A file that is not visible by default to normal directory-browsing tools (on Unix, files named with a leading dot are, by convention, not normally presented in directory listings). Many programs define one or more dot files in which startup or configuration information may be optionally recorded; a user can customize the program's behavior by creating the appropriate file in the current or home directory. (Therefore, dot files tend to creep -- with every nontrivial application program defining at least one, a user's home directory can be filled with scores of dot files, of course without the user's really being aware of it.) See also profile (sense 1), rc file. From Jargon Dictionary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndot-matrix\nIn printing, a type of printer that uses tiny hammers that strike the printer paper to form characters and images. From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndotfile\nEasy configuration of popular programs through Tcl/Tk interface The Dotfile Generator is a configuration tool, which configures the basic features, and even more exotic features of your favorite programs. It translates information from check boxes, entries, menus etc. to some sort of code (eg. Lisp, C, the configuration language for the fvwm window manager, or any other textual code). This transformation is coded in modules, where the programmer tells which elements are to be shown (a check button, listbox, etc.) and gives some help on each element. With this release, modules exist for configuring bash, fvwm1, fvwm2, tcsh, elm, rtin, ipfwadm, procmail and canna, and they can be found in separate packages named dotfile-<program>. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndotlockfile\nUtility to manage lockfiles From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndouble-click\nTo tap the mouse button twice in succession to activate desktop objects. From Redhat-9-Glossary http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOV\nData Over Voice [MODEM] From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDOW\nDirect OverWrite (MO, ...) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDownload\nThe process of taking information stored on the internet and copying it to your computer's hard disk. You may find yourself downloading the latest shareware from a site such as http://www.search.com/. To transfer files from a server to a PC across a network (Internet). From Glossary of Distance Education and Internet Terminology http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndowntime\nThe length of time a computer is not functioning (down). It is the reverse of uptime. From Linux Guide @FirstLinux http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoxygen\nDocumentation system for C, C++ and IDL. Doxygen is a documentation system for C, C++ and IDL. It can generate an on-line class browser (in HTML) and/or an off-line reference manual (in LaTeX) from a set of documented source files. There is also support for generating man pages and for converting the generated output into Postscript, hyperlinked PDF or compressed HTML. The documentation is extracted directly from the sources. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoxygen\nDoxygen can generate an online class browser (in HTML) and/or a reference manual (in LaTeX) from a set of documented source files. The documentation is extracted directly from the sources. Doxygen can also be configured to extract the code structure from undocumented source files. From Redhat 8.0 RPM http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndoxymacs\nE-lisp package for making doxygen usage easier under Emacs. The purpose of the doxymacs project is to create a LISP package that will make using Doxygen from within {X}Emacs easier. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDP\nData Processing From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDP\nDetection Point (IN) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDP\nDraft Proposal (ISO) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPA\nDistributed Password Authentication From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpasswd\nchange dialup password From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPB\nDrive Parameter Block (DOS, BIOS, FDD, HDD) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPC\nDatabase Promotion Center (org., Japan, DB) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPD\nDifferential Phase Detection From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPE\nDistributed Processing Environment (IN) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPF\nDiscrete Packet Format (VXA, Streamer) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPG\nDeutsche Physikalische Gesellschaft (org.) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPI\nData Processing Installation From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPI\nDots Per Inch From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPI\n[SNMP] Distributed Program Interface (SNMP, RFC 1228) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\nDPI\n[SNMP] Distributed Protocol Interface (SNMP, RFC 1592) From VERA http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg\na medium-level package manager for Debian From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg\nPackage maintenance system for Debian This package contains the programs which handle the installation and removal of packages on your system. The primary interface for the dpkg suite is the `dselect' program; a more low-level and less user-friendly interface is available in the form of the `dpkg' command. In order to unpack and build Debian source packages you will need to install the developers' package `dpkg-dev' as well as this one. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg (Debian Package Manager)\nA packaging and installation tool for Internet downloads, included with Debian Linux but compatible with other distributions. It produces files with a .DEB extension. Similar to RPM. From I-gloss http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-architecture\nset and determine the architecture for package building From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-awk\nGawk script to parse /var/lib/dpkg/{status,available} and Packages This script can parse the dpkg database files. It can do regular expressions on the fields, and only get what you want. It can also be made to output certain fields. As an added bonus, there is an option to sort the output. 'dpkg-awk \"Status: .* installed$\" -- Package Version Status' will output all installed packages, with only the listed fields. 'dpkg-awk -f=/var/lib/dpkg/available \"Package:^[aA].*\" -- Package Version' will output all available packages that start with the letter 'A.' From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-buildpackage\nDebian source package tools From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-checkbuilddeps\ncheck build dependencies and conflicts From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-cross\nTools for cross compiling Debian packages dpkg-cross itself is a tool for installing libraries and headers for cross compiling in a way similar to dpkg. Furthermore, the functionality of dpkg-buildpackage and dpkg-shlibdeps is enhanced to support cross compiling. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-deb\nDebian package archive (.deb) manipulation tool From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-dev-el\nEmacs-related Debian development helpers This package contains the following Emacs-related stuff: debian-changelog-mode.el: a helper mode for Debian changelogs; debian-control-mode.el: a helper mode for debian/control files. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-distaddfile\nDebian source package tools From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-divert\noverride a package's version of a file From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-ftp\nFtp method for dselect. This package provides another method to dselect that uses the ftp protocol to fetch the desired packages from a debian ftp site. To access it select 'ftp' from the Access menu in dselect. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-genchanges\nDebian source package tools From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-gencontrol\nDebian source package tools From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-iasearch\nAn interface to find relevant packages in Debian. This package adds some tools to find relevant packages in Debian using simple queries, both in natural language and by keywords. It makes uses of the document-vectoring program arrow, adding scripts to make use of it to index the Packages database, and to make queries on to it. Its functionality is similar to dlocate but uses a different (more useful?) approach to make the binary database. This package is a proof-of-concept package, any kind of improvements are are welcomed, although this idea should be part of a dpkg frontend {T,G}UI. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-multicd\nInstallation methods for multiple binary CDs This package provides three new methods to be used within dselect in order to access Debian binary package stored on multiple binary CD ROMS. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-name\nrename Debian packages to full package names From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-parsechangelog\nDebian source package tools From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-preconfigure\nlet packages ask questions prior to their installation From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-reconfigure\nreconfigure an already installed package From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-repack\nputs an unpacked .deb file back together dpkg-repack creates a .deb file out of a debian package that has already been installed. If any changes have been made to the package while it was unpacked (ie, files in /etc were modified), the new package will inherit the changes. This utility can make it easy to copy packages from one computer to another, or to recreate packages that are installed on your system, but no longer available elsewhere, or to store the current state of a package before you upgrade it. From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-ruby\nruby interface for dpkg Contains ruby modules/classes for dpkg, the Debian package management system. It also provides dpkg-ruby( a dpkg-awk clone), dpkg.rb (a part of dpkg/dpkg-deb clone) and dpkg-checkdeps.rb (check utility of deb dependency problem) From Debian 3.0r0 APT http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-scanpackages\ncreate Packages files From whatis http://www.tldp.org/LDP/Linux-Dictionary/html/index.html\ndpkg-scansources\n"}], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], [], []]}