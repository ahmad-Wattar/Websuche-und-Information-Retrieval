{"number": "79", "title": "What AND is AND more AND interesting AND computer AND science AND or AND computer AND engineering", "results": 130151, "documents": [[{"score": 2469.212, "uuid": "a113943f-f38e-552a-85a3-ea54d91ca2ae", "index": "cw12", "trec_id": "clueweb12-0400wb-37-08322", "target_hostname": "ualr.edu", "target_uri": "http://ualr.edu/computerscience/assure/interesting-links/", "page_rank": 1.3905047e-09, "spam_rank": 98, "title": "<em>Computer</em> <em>Science</em> \u00bb <em>Interesting</em> Links", "snippet": "This device allows an investigator to remove a running <em>computer</em> from an incident scene without shutting it down. Linux based incident response and forensics tools. Current <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em> literature <em>is</em> available at this site.", "explanation": null, "document": "X-Ways Forensics is an advanced work environment for computer forensic examiners. It runs under Windows 2000/XP/2003/Vista*/2008*/7*, 32 Bit/64 Bit.\nArticles\nIEEE/IET Electronic Library (IEL)\nCurrent Computer Science and Electrical Engineering literature is available at this site.\nYou will need to access this site from within the UALR network or have your UALR library card id available.\n"}, {"score": 2464.4255, "uuid": "38e0bf9f-975d-562b-aea8-441df7f1dd15", "index": "cw12", "trec_id": "clueweb12-0405wb-61-13087", "target_hostname": "web.comlab.ox.ac.uk", "target_uri": "http://web.comlab.ox.ac.uk/admissions/ugrad/What_is_Computer_Science_about%3F", "page_rank": 9.470579e-09, "spam_rank": 94, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2464.279, "uuid": "9d2b1094-7d51-5341-b076-7ef8a17bcbfb", "index": "cw12", "trec_id": "clueweb12-0408wb-45-16233", "target_hostname": "web.comlab.ox.ac.uk", "target_uri": "http://web.comlab.ox.ac.uk/csatox/index.php?title=What_is_Computer_Science_about%3F&oldid=1377", "page_rank": 1.1700305e-09, "spam_rank": 96, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2462.8213, "uuid": "b53173d1-4799-556d-a690-17e8d50ee539", "index": "cw12", "trec_id": "clueweb12-0408wb-45-16234", "target_hostname": "web.comlab.ox.ac.uk", "target_uri": "http://web.comlab.ox.ac.uk/csatox/index.php?title=What_is_Computer_Science_about%3F&printable=yes", "page_rank": 1.1700305e-09, "spam_rank": 93, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2462.627, "uuid": "3f1c049f-9f4d-51bd-919e-72ba1fc42bde", "index": "cw12", "trec_id": "clueweb12-1303wb-05-32951", "target_hostname": "web.comlab.ox.ac.uk", "target_uri": "http://web.comlab.ox.ac.uk/csatox/index.php?title=What_is_Computer_Science_about%3F&printable=yes&printable=yes", "page_rank": 1.1700305e-09, "spam_rank": 95, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2463.4685, "uuid": "a74c36a7-95e4-5f93-8e1a-732e7e749d9b", "index": "cw12", "trec_id": "clueweb12-0503wb-23-15758", "target_hostname": "www.comlab.ox.ac.uk", "target_uri": "http://www.comlab.ox.ac.uk/csatox/index.php?title=What_is_Computer_Science_about%3F&printable=yes", "page_rank": 1.1700305e-09, "spam_rank": 95, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2462.627, "uuid": "0b60209b-dbaf-5f42-99b6-f2f56aae2764", "index": "cw12", "trec_id": "clueweb12-0503wb-23-15757", "target_hostname": "www.comlab.ox.ac.uk", "target_uri": "http://www.comlab.ox.ac.uk/csatox/index.php?title=What_is_Computer_Science_about%3F&oldid=1377", "page_rank": 1.1700305e-09, "spam_rank": 97, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2462.627, "uuid": "c1e2d2ee-da04-513a-bd03-80334fab46bb", "index": "cw12", "trec_id": "clueweb12-0502wb-20-25229", "target_hostname": "www.comlab.ox.ac.uk", "target_uri": "http://www.comlab.ox.ac.uk/admissions/ugrad/What_is_Computer_Science_about%3F", "page_rank": 8.83402e-09, "spam_rank": 96, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em> about? - <em>Computer</em> <em>Science</em> at Oxford", "snippet": "As a university subject, <em>Computer</em> <em>Science</em> goes far beyond the IT you can study at school; just as a course on transport <em>engineering</em> would go beyond <em>what</em> you might learn in your driving lessons <em>or</em> a car maintenance class.", "explanation": null, "document": "What is Computer Science about?\nFrom Computer Science at Oxford\nHome > What is Computer Science about?\nJump to: navigation , search\nComputer Science is about learning and understanding the mathematical, scientific and engineering principles underlying every kind of computing system, from mobile phones and the internet, via systems that interpret natural language, to the supercomputers that forecast tomorrow\u2019s weather or simulate the effects of disease on the human heart.\nTo be a successful Computer Science student, you will need a curiosity about how things work, and the ability to use mathematics to solve problems creatively. Our course starts with the fundamentals of computers and programming, so it is not necessary to have studied these subjects before coming to Oxford.\nAs a university subject, Computer Science goes far beyond the IT you can study at school; just as a course on transport engineering would go beyond what you might learn in your driving lessons or a car maintenance class.\nOur graduates go on to careers in many fields that need an understanding of computer systems, what they can (and cannot) do, and how to design them, from computer manufacturers and software firms to management consultancy, finance or teaching. But whatever you do after leaving Oxford, our Computer Science degree offers you the chance to spend three of four years studying a fascinating subject in one of the world\u2019s most beautiful and interesting cities.\nAn image from GeomLab\nIf you are going to study Computer Science at university, it's important to know what the subject is about. Here are notes and slides from two talks (prepared for open days in Oxford) that answer that question. Each talk focuses on a programming problem and how it is solved.\nGreatest common divisors .\nThere is also a page that examines four myths about Oxford , some false and some true.\nTo get an idea of some of the smaller programs you might work with in our courses, there is a page of Java-based software demonstrations .\nFor more exploration of Computer Science ideas in an accessible, interactive way, you might like to look at our GeomLab web site , where you can learn how to program a computer to draw pictures like the one shown on the right.\nWe also provide some suggestions for background reading for prospective undergraduate students wanting to learn more about Computer Science.\n"}, {"score": 2388.1755, "uuid": "bf734c28-f591-56eb-8b0c-ba66381e6c69", "index": "cw12", "trec_id": "clueweb12-0106wb-89-18871", "target_hostname": "www.cs.olemiss.edu", "target_uri": "http://www.cs.olemiss.edu/about/whatiscs", "page_rank": 1.2578938e-09, "spam_rank": 84, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em>? | <em>Computer</em> and Information <em>Science</em>", "snippet": "See the Academics page for <em>more</em> information about the <em>computer</em> <em>science</em> degree programs at The University of Mississippi (Ole Miss) and the Future Students page for information about admission and other aspects of studying <em>computer</em> <em>science</em> at Ole Miss.", "explanation": null, "document": "Alumni\nWhat is Computer Science?\nAt its core, computer science involves the rigorous study of processes. By a process, we mean a series of actions to achieve some desired result. This result may be as routine as keeping track of the running balance in a bank account or as spectacular as generating the 3D animations in the latest blockbuster movie.\nIn particular, computer science involves the study of processes that can be carried out by the devices we call computers. Computers work by encoding processes internally. A process is thus relatively easy to change as the desired result evolves.\nThe computer is an enabling technology of the modern world. It can be combined with preexisting technologies to enable some combination of increased functionality, decreased costs, and increased design flexibility. The computer can enable new technologies that might not have been possible otherwise.\nStudents in a computer science program learn how to define processes and encode them so that they can be carried out efficiently by computers. This involves such tasks as determining what result is needed (systems analysis), developing efficient and flexible software to encode the process (algorithm design, programming, and software engineering), and organizing the data needed and generated by the process (data structures and database management).\nStudents in computer science also learn about the computers and the communication technologies and the control programs that make them work together. They learn how to use these technologies effectively to achieve the desired results.\nSee the Academics page for more information about the computer science degree programs at The University of Mississippi (Ole Miss) and the Future Students page for information about admission and other aspects of studying computer science at Ole Miss.\nInteresting Links\n"}, {"score": 2346.959, "uuid": "f8d2b40a-55c0-58c1-8081-fe3d1bcb9a41", "index": "cw12", "trec_id": "clueweb12-0104wb-89-15545", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/csee/computer-engineering/", "page_rank": 1.2995256e-09, "spam_rank": 87, "title": "<em>Computer</em> <em>Engineering</em> | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "There are opportunities for <em>Computer</em> <em>Science</em>, <em>Computer</em> <em>Engineering</em>, Electrical <em>Engineering</em> and Information Systems majors and <em>more</em>. Food will be available and also chances to win cool prizes.", "explanation": null, "document": "posted Wednesday, February 8th, 2012\nA Self-Powered In-Vitro Biosensing Microsystem\nDr. Gymama Slaughter\nComputer Science and Electrical Engineering\nUniversity of Maryland, Baltimore County\n11:30am-12:45pm Friday, 10 February 2012, ITE 237\nRecent studies on biofuel cells have shown that energy can be harvested from biological compounds. Because of the recent biofuel cell discoveries, it possible to use inertial power scavenging design by converting interstitial glucose into energy through the coupling of enzymes and three-dimensional nanowire arrays. This talk will discuss our own contribution to identifying a pathway to embed sensing by eliminating the need for a potentiostat circuit and an external power source.\nThe self-powered biosensing microsystem consist of massively dense 3D nanowire cell structures fused with an energy harvesting circuit that maximizes power and energy densities while maintaining short ion transport distances, thus leading to dramatic improvement in both speed and energy efficiency of biofuel cells. Not only is such a paradigm extremely fast because of absence of a potentiostat circuit, but it is also extremely energy-efficient since the device operates at low voltage and current levels. As a result, the biosensing microsystem generates a drive signal in real-time and periodically powers an electrical device by generating and accumulating electrical power as a result of the catalysis of glucose.\nGymama Slaughter received her B.S. in Chemistry in 2001, M.S. in Chemical Engineering in 2003, and a Ph.D. in Computer Engineering from the Virginia Commonwealth University in 2005. She then joined Virginia State University as an Assistant Professor in Computer Engineering and Director of the Center for Biosystems and Engineering University. Finally, she joined the UMBC as Assistant Professor in Computer Engineering in August 2010.\nDr. Slaughter is currently the Director of the Bioelectronics Laboratory Group and oversees research and research outreach programs in the BEL Group. She develops and applies sensor-processor platforms, focusing on innovative contributions to identifying a pathway to embed sensing and processing functions in the same device to eliminate bottlenecks arising from communication between the sensor, transducer, and processor, thus, resulting in ultra-fast and ultra-low power devices.\nHer research has been supported by the NSF for her diabetes research that focuses on the design and development of glucose biosensor, especially in relationship to monitoring blood glucose in diabetics. Her research interests include biosensors, microsensors, microfabrication technology, and BioMEMS and design.\nHost: Prof. Joel M. Morris\n2012 Google Summer of Code program announced\nposted Sunday, February 5th, 2012\nIf you have good programming skills and are looking for an interesting alternative to the usual summer internship, you might check out the Google Summer of Code program. It pays student developers $5000 stipends to write code for various open source projects over the summer. Over the past seven years, it's brought together over 6,000 students with over 300 open source projects to create millions of lines of code.\nA set of open source projects (aka mentoring organizations) will be selected and announced in mid-March. Students apply to work on one of more of these and each mentoring organization ranks the students interested in working with them. Google facilitates the final selection and pairing. The mentoring organization works closely with the student to define tasks, check progress, help solve problems, etc. Typically the student works remotely, interacting with his or her mentor via email, chat, skype, etc.\nStudents can submit applications via the Google Summer of Code 2012 site from March 26 to April 6. Google says that that the best applications they receive are from students who took the time to interact with one of the participating mentoring organizations and discuss their ideas before submitting an application. About 1,100 students are expected to be funded this year.\nposted Tuesday, October 11th, 2011\nEE Graduate Seminar\nUMBC Center for Advanced Sensor Technology\n11:30am-12:45pm, Friday 14 October 2011, ITE 231\nInteraction of the light with the matter is one of the fundamental interactions in the nature. It is used in a variety of fields, stretching from telecommunications to life sciences. In this talk, the use of luminescence for sensing purposes will be highlighted. In particular, fluorescence spectroscopy will be illustrated. Multiple examples that employ different characteristics of the fluorescence (excitation and emission spectrum, decay time, polarization, and combination thereof) will be given. The presented sensing principles are used for measurements of oxygen, pH, CO2, ethanol, etc. As an optical chemical sensor requires successful interweaving of elements from 5 different scientific areas (analytical chemistry, polymer science, optics, electronics and computer science), the problems and the requirements for system integration are discussed.\nDr. Yordan Kostov received his B.Sc. and M.Sc. with honors in 1987 from Department of Electrical Engineering, Odessa Politechnic Institute, Former USSR. He received a Ph.D. Degree in Electrical/Chemical Engineering from Bulgarian Academy of Sciences for his work in the area of optical chemical sensors and biosensors. After that, Dr. Kostov spent an year as a post-doctoral fellow at the Institute for Technical Chemistry, University of Hanover, Germany. In 1994 he accepted a position as an Assistant Professor in the Department of Biotechincs, Sofia Technical University, Bulgaria. In 1999 he became a post-doctoral fellow at University of Maryland Biotechnology Institute, at the Medical Biotechnology Center. He joined the UMBC Department of Chemical and Biochemical Engineering as a Research Assistant Professor in 2000, and is now Research Associate Professor since 2006. Dr. Kostov also holds a position as an Assistant Director of the Center for Advanced Sensor Technology at UMBC. He is involved in the development of chemical and biochemical sensors for biotechnology, bioengineering and biomedical applications.\nSeminar Host: Prof. Joel M. Morris\nDelali Dzirasa (\u201904, Computer Engineering) receives 2011 UMBC Young Alumni Rising Star Award\nposted Tuesday, October 11th, 2011\nUMBC Alumni Association presents awards each year honoring alumni for their professional and personal achievements and service to the University. This year's Young Alumni Rising Star Award is being given to Delali Dzirasa (\u201904, Computer Engineering) who is the founder and president of Fearless Solutions , LLC.\nWhile an undergraduate, Delali Dzirasa was a member of the inaugural entrepreneurship classes at UMBC, developing two companies before graduating. Today, he is founder and president of Fearless Solutions, a cybersecurity start-up housed at UMBC\u2019s @bwtech cybersecurity research and technology park.\nIn addition to making waves in the Maryland cybersecurity community (Dzirasa recently met Maryland governor Martin O\u2019Malley at UMBC\u2019s Advantage Incubator launch), the two-year-old company employs a number of UMBC graduates and current students. In addition to serving as SGA speaker of the senate and helping to plan UMBC\u2019s first Homecoming, Dzirasa also received the following honors as a student: Golden Key Honor Society (2001), Student Ambassador, Presidents Board of Visitors (2003), Most inspiring lead award (2003), USAA All American Scholar Award (2001), and NSBE Torchbearer Award for students possessing a GPA of 3.25 and above (2001). Following graduation, he worked at RABA technologies for fellow alumnus Rob Baruch.\nDzirasa is married to UMBC alumna Letitia Dzirasa \u201903, biological sciences, and he has one son, Dominic Williams-Dzirasa. He follows in the footsteps of brothers Mawuli Dzirasa \u201900, mechanical engineering, and Dr. Kafui Dzirasa \u201901, chemical engineering, in graduating from UMBC. He enjoys giving back to the community within his church.\nThe 2011 awards will be presented on Thursday, October 14, 2011, at an awards ceremony in the Albin O. Kuhn Library on the UMBC campus. To attend, please RSVP online .\nConsidering graduate school in a computing field?\nposted Wednesday, September 21st, 2011\nThe Computing Community Consortium has a new web site for undergraduates in computing fields hoping to learn more about doing research, summer research opportunities, and the process for applying to graduate school. The website contains:\nA section on what graduate school in computer science is all about, including frequently asked questions with answers by current graduate students and faculty\nInformation, advice, and insights on how to apply to graduate school in computer science including a FAQ by students who have just been through the process as well as faculty\nA set of pages with information on undergraduate research and summer research positions nationwide.\nIt's a good resource if you want to get involved in research and/or considering going on to graduate school. If you are interested in grad school and graduating this Spring, now is the time to start thinking about it. A way to start is by talking with your adviser.\nposted Tuesday, September 13th, 2011\nUMBC CSEE Colloquium\n"}], [{"score": 2270.679, "uuid": "42743fb9-bf71-54e2-9d4a-80b9f9173cd3", "index": "cw12", "trec_id": "clueweb12-0409wb-78-07833", "target_hostname": "www.fie-conference.org", "target_uri": "http://www.fie-conference.org/fie95/4b2/4b21/4b21.htm", "page_rank": 1.36512e-09, "spam_rank": 83, "title": "<em>Computer</em> <em>Science</em>: Developing Three", "snippet": "The EECS Department now offers three bachelor of <em>science</em> degrees in electrical <em>engineering</em>, <em>computer</em> <em>engineering</em>, and <em>computer</em> <em>science</em>, as well as masters and doctoral degrees in electrical <em>engineering</em> and <em>computer</em> <em>science</em>.", "explanation": null, "document": "Electrical Engineering vs. Computer Engineering vs. Computer Science: Developing Three Distinct but Interrelated Curricula\nKenneth R. Demarest, James R. Miller,\nJames A. Roberts, and Costas Tsatsoulis\nDepartment of Electrical Engineering and Computer Science\nThe University of Kansas, Lawrence\nAbstract:\nIn 1993, the University of Kansas merged the Department of Computer Science in the College of Liberal Arts and Sciences with the Department of Electrical and Computer Engineering in the School of Engineering. The resulting department, called the Department of Electrical Engineering and Computer Science, resides in the School of Engineering and brings together the broad fields of electrical technology, computing, telecommunications, and information science. Among other things, the merger enabled the consolidation of courses, enhanced classroom experiences for the students, and expanded research opportunities. The EECS Department now offers three bachelor of science degrees in electrical engineering, computer engineering, and computer science, as well as masters and doctoral degrees in electrical engineering and computer science. This paper first describes the philosophy we applied in developing the three programs as they now stand. We then describe the curricula themselves. We point out where the curricula are the same, where they are only similar, and where they are distinctly different. Finally, we discuss future changes that we anticipate in the programs. We feel that the merger has created the opportunity for significantly improved teaching and research. This paper shares some of our experience and ideas.\nBackground\nIn 1993, the University of Kansas (KU) merged the Department of Computer Science (CS) in the College of Liberal Arts and Sciences into the Department of Electrical and Computer Engineering (ECE) in the School of Engineering. The Department of electrical engineering was established at KU in 1887, and the university has awarded approximately 4300 bachelors, masters, and doctoral degrees in electrical engineering since that time. In 1985, the Kansas Board of Regents approved the addition of the bachelor of science in computer engineering degree (BSCoE) to the department and the subsequent name change to Electrical and Computer Engineering. Computer science began at KU in the 1960's as an interdisciplinary program combining faculty from mathematics, electrical engineering, business, and others. It was formally established as a department in 1969 as part of the College of Liberal Arts and Sciences, offering only the doctoral degree at first; the bachelors and masters degrees were soon added, and computer science as a major grew quickly to the same size as electrical engineering. In 1992, the Board of Regents mandated a special review of all academic programs at all Regents institutions. One of the results of that review was a decision by the university administration to merge the CS and ECE departments.\nFollowing the merger decision, the combined faculty voted to name the new department Electrical Engineering and Computer Science (EECS) even though computer engineering would continue to be offered as a third undergraduate major. (Only computer science and electrical engineering have graduate programs at this time.) We based this decision on the precedent set at other institutions, e. g. MIT and California-Berkeley, with combined departments.\nCurricular Philosophy\nBoth the BSEE and BSCoE degree programs were reviewed and modified just prior to the merger. In addition to changes that reflect the continual evolution of both professions, there was an underlying philosophy to expose students to a larger breadth of material through required courses. This was accomplished by reducing the numbers of elective courses in both curricula. Efforts were also made to make the two degrees more distinct.\nThe BSCS degree underwent changes just after the merger. Some changes were the result of the merger itself in that a few courses previously taught in the BSCS and BSCoE curricula were merged. Also, a significant change was made in the way computer problem solving is introduced. Rather than focusing on traditional, imperative programming, we now introduce a variety of problem solving techniques. This was done, in part, to better prepare students for later courses in the curriculum that deal with comparative programming techniques.\nAs with any curriculum revision, we struggled with the competing goals of ensuring that the students are exposed to important material, allowing some flexibility in the course selection, and not expanding the required number of hours beyond reason. Of course, accreditation requirements played an important role in the development of all three curricula. Table 1 summarizes the requirements of our three new undergraduate degree programs.\nBSEE Curriculum\nSince it is the oldest degree offered within the department, our reevaluation of the BSEE was conducted in light of the ongoing evolution of this degree program. Of the many questions we asked during this process, two of the most important were ``how can our curriculum reflect the technical changes that are occurring within the profession?'' and ``how can our curriculum best prepare our students for the recent changes in employment opportunities?''\nWhile addressing the first question, it was obvious to us that the number of technical sub-disciplines within the electrical engineering profession is expanding rapidly. To address each of these areas within a four year curriculum would be difficult, if not impossible. Hard choices were required in order to give each student sufficient breath and depth.\nThe question pertaining to employment opportunities also sparked some interesting discussion. In particular, we found that an increasing number of our BSEE graduates are finding employment in small companies, rather than in large companies or in government agencies. Small companies typically have smaller engineering staffs, and require a knowledge of a broader range of technologies in both design and manufacturing activities.\nBased on our discussions on these and other considerations, we decided to move from a largely elective based program, in which each student to declared an area of specialization, to one that provides a broad-based exposure to the major areas within the profession, largely through required courses. Specialization would be reserved for graduate study.\nTable 1 shows the course requirements for the new BSEE degree. This sequence consists of a total of 134 semester course hours, which can be completed in four years. As can be seen, the vast majority of courses within the school of engineering are required courses. The list of required courses was chosen to include elements of all the areas that we felt were generic to the electrical engineering profession. Hence, the required sequence includes courses in circuits (5 hours), electronics (10 hours), digital systems (8 hours), programming and software (6 hours), electromagnetics (7 hours), communication systems (4 hours), control systems (3 hours), electrical energy conversion (3 hours), electrical properties of materials (3 hours), and a capstone design experience (5 hours). In addition to these required courses are two technical elective courses (6 hours).\nThe BSEE and BSCoE curricula are roughly common for the first two years, including courses in mathematics, science, circuits, digital electronics, and programming. After this common core, the BSEE curriculum diverges to introduce topics in electrical engineering that are not directly tied to digital circuits or computing.\nMost of the required courses for the BSEE already existed in the department, either as required or elective courses. One new course, an introduction to electrical engineering, computer engineering, and computer science, was added to reflect the interdisciplinary aspects of all three degree programs and to give incoming students an idea of the range of topics and disciplines encompassed within each degree program. Two other courses, electrical energy conversion and electrical properties of materials, were added specifically to broaden the exposure of each student to important areas of the discipline that are often ignored in favor of more specialized curricula.\nBSCoE Curriculum\nOur re-evaluation of the BSCoE curriculum was prompted by similar issues, i.e., preparing students for the technological changes they will face throughout their careers, while making them immediately marketable. At the same time, the BSCoE was a much more recent degree at KU, and this lack of local tradition allowed us to take a less constrained look at it; instead of tinkering with details, we decided to start from scratch.\nMany computer engineering programs are born in traditional electrical engineering departments and tend to took like electrical engineering education with a few more programming courses thrown in. Our old program was not an exception; our BSCoE had the same number of required credit hours in electronics as the BSEE and the same requirements on signals and probability, communication, and control. The old programs differed primarily in the BSCoE's emphasis on digital hardware, an addition of two software courses, and not requiring electromagnetics.\nOur faculty, after studying various BSCoE programs across the country, and after looking at current and future technological trends, decided to completely restructure the BSCoE curriculum. The radical changes were assisted by the ECE/CS merger, which made it possible for the computer engineering students to take computer science-oriented courses without having to rely on the academic resources of a different department.\nThe new curriculum, summarized in Table 1, was guided by our belief that computer engineering resides between pure electrical engineering and pure computer science, sharing elements of both, while having a distinct identity. The freshman courses offer the traditional science background and an introduction to computing (currently taught in C++). The sophomore courses finish the science background, and cover circuits and digital networks. Up to this level, the BSEE and BSCoE curricula are almost identical. By the end of their third semester, computer engineering students have acquired the fundamental mathematical, physical and electronics principles that will support their further studies. In other words, our BSCoE views the electrical engineering-related courses (circuits, electronics, electronics laboratory) as another kind of necessary background, similar in value to the one offered by calculus or physics.\nDuring their third year, the BSCoE and BSEE curricula begin to diverge. Computer engineering-oriented courses include microprocessors, digital system design, software engineering, and databases. At the same time, some remaining fundamental courses are also taken (signals, probability and materials). At the end of their junior year the students have all the basic science and electrical engineering background and all the software and hardware background needed for their final year.\nIn their senior year, BSCoE majors concentrate on integration topics, i.e. the study of the fundamental tradeoffs of hardware and software integration required to build large systems that have computing as their basic function. Courses include VLSI design, computer architecture, artificial intelligence, computer networking, operating systems, and programming languages. All these courses build on previous classes and integrate either software concepts (e.g. the class on programming languages), hardware concepts (e.g. the class on VLSI design) or both hardware and software concepts (e.g. the classes on computer networks and operating systems). The students also have to enroll in a two-course, one-year sequence (EECS 541 and 542) that is the capstone, team-design laboratory for the BSCoE degree. In these classes students design, implement, and test a complex system consisting both of hardware and software components. We believe that we have created an improved BSCoE curriculum, responsive to the field and its future.\nBSCS Curriculum\nFollowing the merger of computer science into the School of Engineering, we reexamined the BSCS curriculum. A major reason for the examination was that all undergraduate degree programs in the School are ABET accredited and we felt it was important to have CSAB accredit the BSCS as well. In addition, we wanted to restructure the required introductory sequence and merge courses which had significant overlap of material with courses taught in the former ECE department. The modified curriculum was put in place for majors entering the program in the Fall of 1994.\nThere are three primary components of the BSCS degree: required courses in the major, technical coursework outside of EECS, and breadth in the liberal arts. Within the computer science component of the requirements, we have always striven for a balance among theory, applications, and systems. We believe we have preserved this balance in the new curriculum while addressing a shortcoming related to large-scale design. We have established a required software engineering course targeted towards juniors in the program.\nA significant change was made in the way the field of computer science is introduced in the beginning sequence. Prior to the revision, our introductory sequence followed the traditional CS1-CS2 approach where principles of algorithm design using the imperative programming style (with Pascal) were presented. This style was reinforced throughout the student's career until late in their junior or early in their senior year at which time they were hit with the programming languages course in which other problem solving paradigms (functional, object-oriented, logic, etc.) were introduced. A large number of students had difficulty with the material in this course, because they could not force themselves to think of problem solutions in terms other than those supported by language constructs in C or Pascal. For this and other related reasons, we decided to try what several other universities-in the U.S. as well as throughout the world-were doing: provide an intensive breadth-first approach to problem solving followed by an in-depth treatment of imperative and object-oriented approaches. Hence was born the two-course introductory sequence which is only taken by computer science majors at this time.\nThe BSCS curriculum mirrors the BSEE and BSCoE curricula in that most of the major courses are required with only minimal elective major courses, six hours in this case. However, the BSCS requires a fewer number of hours in the major than do the BSEE or the BSCoE. We currently require 49 semester hours of EECS coursework. The six elective hours are satisfied by selecting two courses from a pool of upper level electives which currently include introductions to database systems, artificial intelligence, communications networks, and computer graphics.\nThe second primary component of the BSCS degree is technical coursework outside of EECS. There are 21 hours of mathematics required: three semesters (15 hours) of calculus and linear algebra, mathematical logic (3 hours), and probability and statistics (3 hours). In the sciences we require the first year of calculus-based physics and two additional science courses selected from a pool of courses required of majors in the respective departments.\nThe third and final component of the BSCS degree is breadth in the liberal arts. Whereas we require 22 hours of liberal arts for the BSEE and the BSCoE, we require 30 hours for the BSCS, a holdover from the former home of computer science in the College of Liberal Arts and Sciences. Included are English courses (9 hours), oral communications (3 hours), ethics in computer technology (3 hours), and 18 hours of humanities and social sciences electives. The BSCS degree requires a total of 128 semester hours.\nConclusions\nThe merger which brought together electrical engineering, computer engineering, and computer science in the same department at the University of Kansas has already brought benefit to the programs, among them collaborative research efforts, restructuring of courses, elimination of duplicate courses, and a wider range of educational opportunities for students. The similarities and differences between the three undergraduate curricula are summarized in Figure 1. This Venn diagram illustrates the central position of computer engineering with its strong overlap with both electrical engineering and computer science. However, there is very little overlap between the latter two themselves. In fact, the BSEE and BSCS share only two common required EECS courses: the introduction to EE, CoE, and CS course and the microprocessor course, both taken by computer engineering majors as well. We believe these curricular differences and similarities reflect the differences and similarities between the three professional fields.\nWe continue to evolve the three degree programs. For example, we are currently discussing whether or not to require the electrical engineering and computer engineering majors take the same two-course introductory computing sequence that we developed for the computer science majors. In addition, we are considering the addition of a senior capstone design course for the computer science majors, similar to the ones for the electrical engineering and computer engineering majors. We will also continue to examine other potential course consolidations such as probability and statistics, data structures, and data bases. At some point, we will take up the issue of the liberal arts component of all three degrees; for example, the ethics, speech, and technical writing courses would be valuable for the BSEE and BSCoE majors, and the economics course would be valuable for the BSCS majors. And of course the curricula will continue to evolve in response to the rapid pace of technological change and new demands from our constituents.\nmort@etp.com\n"}, {"score": 2250.4995, "uuid": "5e1555de-37ae-5ece-99a7-c2ed84c685cf", "index": "cw12", "trec_id": "clueweb12-0002wb-39-15423", "target_hostname": "iae-pedia.org", "target_uri": "http://iae-pedia.org/What_is_Computer_Science%3F", "page_rank": 1.2093477e-09, "spam_rank": 92, "title": "<em>What</em> <em>is</em> <em>Computer</em> <em>Science</em>? - IAE-Pedia", "snippet": "Quoting from the article: Leading universities report that enrollment in <em>computer</em> <em>science</em> and <em>engineering</em> courses <em>is</em> up significantly this year among students pursuing <em>computer</em> <em>science</em> majors as well as those studying other subjects, particularly <em>science</em> <em>or</em> business.", "explanation": null, "document": "11 Author or Authors\nIntroduction\nThe history of mechanical aids to computation is quite long. The abacus was (still is) a wonderful aid to calculation. A nice summary of the history of calculators is available in the Wikipedia. Mechanical, electromechanical, and then electronic computers are natural extensions of calculators.\nA computer can automatically, rapidly, and with great accuracy follow a step by step set of instructions specifying a sequence of calculations and other manipulations of numerical and alphabetic characters. While initially conceived of mainly as an automated calculator, it soon became evident that a computer could be used to solve or help solve wide range of problems in many different disciplines. For example, a computer can store the types of material that are stored in a library, and can aid in the processing and retrieval of such digitized materials.\nThis wide range of uses and potential uses of computers led to the development of programs of study, and then degree programs in the field of computer science. At the time this was occurring, relatively few people thought about whether computer science is a science, or whether an academic department and a field of research should be built around a machine.\nPerhaps part of the issue is just the choice of a name for the discipline or disciplines such departments focused on. If the new department was mainly business oriented, it might have be called a Department of Business Data Processing. If the new department was mainly engineering oriented, it might have been called the Department of Computer Engineering. If formed in under the bailiwick of liberal arts, it might have been called the Department of Computer Science or the Department of Computer and Information Science.\nComputer Science\nThe business-oriented, engineering-oriented, and liberal arts-oriented types of departments approached the disciple from different points of view. A business-oriented computer science discipline of study merged the computer and its capabilities into the overall discipline of business. Computers can be use d to represent and to solve or help solve a wide range of business problems. The emphasis was on the representation and solution of business problems. Computers and computer science were tools that aided in this process.\nThis approach to computers is now common throughout all academic disciplines. For example, consider computers and music or computers and the graphic arts. Both music and the graphic arts existed as major disciplines in their own rights long before electronic digital computers came on the scene. Both continue as major disciplines of study\u2014but both have been influenced by computers. We also see this in each of the sciences ad in mathematics. We now have major subdivisions of each of these disciplines that are called \"Computational\" as in Computational Physics or Computational Mathematics.\n\"Computational\" has gained additional credibility through the Computational Thinking work of Jennette Wing and others. Students in each discipline of study are faced by the challenge of deciding what and how much to learn about computers.\nComputer engineering focuses on the theory and practice of designing and building computer hardware components and entire computer systems. This discipline has been very successful and has brought us a steady stream of major improvements in the cost effectiveness and reliability of computer systems.\nComputer and Information Science Departments have prospered. A discipline was developed that was far more than computer programming and solving application problems in various other disciplines.\nSomeDefinitions\nHere is a short definition from a 1985 article written by Peter J. Denning:\nDenning, Peter J. (September 1985). What is Computer Science. American Scientist 73 No. 1 (Jan-Feb 1985). Retrieved 2/16/08: ntrs.nasa.gov/archive/nasa/casi.ntrs.nasa.gov/19900067426_1990067426.pdf\nComputer Science is the body of knowledge dealing with the design, analysis, implementation, efficiency, and application of processes that transform information. The fundamental question underlying all of computer science is, \u201cWhat can be automated?\u201d This discipline was born in the mid-1940s with the invention of the stored-program electronic computer and has grown rapidly ever since.\nThe key issues is, what can be automated. We are used to the idea of automating physical activities. Thus, we had automated factory equipment long before we had electronic digital computers. One way to think about computers is in terms of how they aid in the automation of physical activities and how they aid in the automation of mental activities. Nowadays, when we talk about factory automation, we generally mean use of computerized equipment, including a wide range of robots. That role of computers in automation is well established and is a clear extension of factory automation that came before the existence of electronic digital computers.\nThe automation of mental activities is, in some sense new. Sure, we had aids to mental activities. A math table is a example. But, it was a person and the table working together that accomplished the desired task.\nNow, we are automating mental tasks that are beyond what a human brain can do, and in many cases the computer functions without human intervention.\nSome Other Definitions\nHere are a few of the definitions produced from a Google search on define: computer science.\nOrganizations that conduct research in the area of science that addresses the study of data and information storage and processing systems including hardware, software, basic design principles, user requirements analysis and related economic and policy issues. nccs2.urban.org/ntee-cc/u.htm\nThe study of computers, including both hardware and software design. Computer science is composed of many broad disciplines, including artificial intelligence and software engineering. Most universities now offer bachelor, master, and doctorate degrees in computer science. www.faxswitch.com/Definitions/telecom_dictionary_c.html\nComputer science, or computing science, is the study of the theoretical foundations of information and computation and their implementation and application in computer systems. ... en.wikipedia.org/wiki/Computer science\nIs Computer Science Science?\nOver the years, people have argued whether Computer Science deserves to be called a science. The following article by Peter J. Denning addresses this issue:: Denning, Peter J. (April 2005. Is Computer science Science?. Communications of the ACM. Retrieved 2/16/08: www.cs.gmu.edu/cne/pjd/PUBS/CACMcols/cacmApr05.pdf.\nThis article discusses various aspects of the disicpline of computre science and certainly helps to give a definition of the field. The article is written in the form of an interview (in essence, the author interviewing himself). Here is the beginning of he article:\nWhat is your profession?\nOh? Is that a science?\nSure, it is the science of information processes and their interactions with the world.\nI\u2019ll accept that what you do is technology; but not science. Science deals with fundamental laws of nature. Computers are man made. Their principles come from other fields such as physics and electronics engineering.\nHold on. There are many natural information processes. Computers are tools to implement, study, and predict them. In the U.S. alone, nearly 200 academic departments recognize this; some have been granting CS degrees for 40 years.\nHas computer science already made all the big discoveries it\u2019s going to? Is incremental progress all that remains? Has computer science bubbled up at the end of the historical era of science?\nI think not. Horgan argues that the number of scientific fields is limited and each one is slowly being exhausted. But computer science is going a different way. It is constantly forming relationships with other fields; each one opens up a new field.\nComputer Science Degree and Jobs\nMarsan, Carolyn Duffy (2/22/2010). Want a job? Get a computer science degree. Network World. Retrieved 2/24/2010 from http://www.networkworld.com/news/2010/022210-computer-science.html . Quoting from the article:\nLeading universities report that enrollment in computer science and engineering courses is up significantly this year among students pursuing computer science majors as well as those studying other subjects, particularly science or business.\n\"I think the job market is what's driving the growth,\" says Professor Bruce Porter, Chair of the Department of Computer Sciences at the University of Texas at Austin, which has seen its enrollment increase more than 5% this year. \"The government has made it clear that computer science is a growth field, and I think that message is getting back to students and their parents.\"\nCorporate recruitment of top computer science grads has remained steady throughout the economic downturn. Last spring, at the height of the recession, Georgia Tech's College of Computing had the highest job placement rate of any major on campus and the highest starting salary.\nTeaching Computer Science\n\"It goes against the grain of modern education to teach children to program. What fun is there in making plans, acquiring discipline in organizing thoughts, devoting attention to detail, and learning to be self-critical?\" ( Alan Perlis; American Computer Scientist; 1922\u20131990.)\nWhat constitutes good teaching of computer and information science, and what can be done to improve teaching in this field?\nFirst note that this same type of question is applicable in every discipline. Indeed, each discipline of study puts some effort into helping people learn about the discipline.\nConsider the challenge this places on teacher who teach a number of different disciplines, such a the typical elementary school teacher. If it is difficult to have the knowledge, skills, and experience to be a good teacher in a single discipline such as computer science, imagine trying to be a good teacher over the full range of disciplines that a typical elementary school teacher faces. Moreover, think about the fact that this elementary teacher is laying the foundations for a student's future learning in each of the disciplines that he or she teaches.\nBack in the \"good old days, there was quite a large push to teach BASIC and/or Logo programming to elementary and middle school students. I (David Moursund) remember the stories that came out of Texas. There, quite a few physical education teachers were given two weeks of instruction on computer literacy and then put to work as computer literacy teachers. That approach did a major disservice both to the teachers and to their students.\nEach academic discipline includes a focus on representing and solving the types of problems and challenges that are part of the discipline. That is, problem solving is core to each discipline. Research on problem solving identifies domain specific and domain independent ideas relevant to problem solving. To a large extent, it takes considerable domain-specific knowledge in a disincline to be a good problem solver within the discipline.\nAnd, as an aside, consider the challenge of transfer of learning of one's domain-specific problem solving expertise to other disciplines. This challenge is particularly severe in disciplines such as computer science and math that have widespread applicability and a relatively deep vertical structure.\nHere is an article that some readers will find useful:\nAMEInfo (2/10/2009). Researcher calls for new approach in computer education. Retrieved 2/11/2009: http://www.ameinfo.com/184306.html . The following quoted material is from the introduction to the paper.\nDr. Uma Gunasilan, senior lecturer in the School of Engineering and Information Sciences at Middlesex University Dubai, was honoured for presenting best paper at the Seventh Worldwide Conference on Education and Culture, held recently in Rome, Italy.\nThe paper entitled 'Towards Improving the Teaching and Learning Experience in Computer Programming: A Case Study in Middlesex University Dubai' won much acclaim at the international conference, which was organised by the Worldwide Conference on Education and Culture series, based in Virginia, USA.\nIn her paper, the researcher stated that students should be allowed to 'construct knowledge' rather than to acquire, apply and retain knowledge that is given by educator. Although this is acknowledged and works effectively in science and mathematics education, there is a discrepancy, specifically in computer science.\nDr. Gunasilan was appreciated by academics from across the world, for her effort in highlighting the problems and arguments in the pedagogy of computer programming in the Middle-Eastern region and outlining active elements that play a significant role in teaching and learning in the UAE.\nComputer Programming\nA computer program is a step by step set of instructions that can me interpreted by a carried out by a computer. Computer programmers draw on four skill sets:\n1. Problem solving\u2014with special emphasis on problem solving within the discipline or disciplines that encompass the problem to be solved.(Think in terms of designing a method to solve a general class or problems or accomplish a general class of tasks, and then designing a computer system than can effectively implement the design.)\n2. Relatively detailed knowledge of and skill in using both programming languages in general and the specific programming language being used in the project one is addressing.\n3. The ability to work individually and in team environments.\n4. The ability to learn new programming languages, new programming ideas, new problem-solving ideas, and new problem areas.\nAs you can see, computer programming (sometimes called software engineering) is a very challenging discipline. The capabilities and productivity of \"professional\" programmers vary widely.\nThe discipline of computre programming has made considerable progress over the years. A Google search of waterfall programming Wikipedia returns a number of intersting hits. Quoting from the Wikipedia:\nThe waterfall model is a sequential software development process, in which progress is seen as flowing steadily downwards (like a waterfall) through the phases of Conception, Initiation, Analysis, Design, Construction, Testing and Maintenance.\nThe waterfall development model has its origins in the manufacturing and construction industries; highly structured physical environments in which after-the-fact changes are prohibitively costly, if not impossible. Since no formal software development methodologies existed at the time, this hardware-oriented model was simply adapted for software development.\nThe first formal description of the waterfall model is often cited to be an article published in 1970 by Winston W. Royce,[1] although Royce did not use the term \"waterfall\" in this article. Royce was presenting this model as an example of a flawed, non-working model (Royce 1970). This is in fact the way the term has generally been used in writing about software development\u2014as a way to criticize a commonly used software practice.[2]\nModern approaches to computer programming place a very high emphasis on maintainability and modifiability of a computer program.\nPrecollege Computer Science Education\nA number of states have local and state organizations that foster and promote students learning computer and information science. Oregon provides a good example. The following segments are quoted from an email message set by /Ron Tennison to David Moursund on 3/16/2009.\nI still am interested in trying to do some work with you \u2013 particularly the oral history project that we discussed. Right at the moment, I have gotten myself so involved in the Oregon CS Taskforce /OCSTA?TechStart projects that my wife wonders if I am actually retired.\nI included a copy of the OCSTA newsletter (below) that I write so you can see what I am/have been up to. It is not as elegant as yours,[the Information Age Education Newsletter ] but it gets the communication done. By the way, OCSTA traces its lineage back to OCCE, so in a way you are partly responsible for this too.\nThe Oregon Game Programming Challenge (OGPC) is a competition for your students and is currently scheduled for May 16, but you need to be forming teams and starting now. The challenge problem for the year will be announced this weekend. All the details, registration information, and extensive materials are available on the website at http://www.techstart.org/ogpc .\nWe hear that nationally, Oregon is the \u201chot spot\u201d when it comes to CS activity. OCSTA is the longest running state CS teacher\u2019s organization, and was the first official chapter in the National CSTA. We are reported to have more competing robotics teams than any other state. Our annual SuperQuest summer institute has been running 14 years. All of this activity is due to a unique combination of OCSTA, TechStart, and OPAS/ETIC CS Taskforce, but it all runs on volunteers.\nHere is a reference about declining opportunities for precollege students to learn about Computer and Information Science:\nCrawford,Amy (2/20/2011). Few students make time to study computer science. Pittsburgh Tribune-Review. Retrieved 2/23/2011 from http://www.pittsburghlive.com/x/pittsburghtrib/news/pittsburgh/s_723777.html .\nQuoting from the article:\nAs computers have become ubiquitous in Americans' daily lives, computer science is declining in public schools. It's an irony that troubled the authors of a recent report, \"Running on Empty,\" published by the Association for Computing Machinery, a membership organization for people who work in the industry, and the Computer Science Teachers Association.\n\"As the digital age has transformed the world and work force, U.S. K-12 education has fallen woefully behind in preparing students with the fundamental computer science knowledge and skills they need for future success,\" the study's authors wrote.\nThe authors found that between 2005 and 2009 the number of secondary schools offering introductory computer science courses dropped by 17 percent. The number of high schools offering Advanced Placement computer science plummeted by 35 percent\nWhat is Artificial Intelligence?\nFor an insightful interview of Ed Feigenbaum, one of the AI pioneers, see Shustek (2010).\nThe following references are suitable for use with middle school students and were provided by Dr. Art Farley, an AI researcher in the Department of Computer and Information Science, University of Oregon 3/6/08.\nOverview for students: http://library.thinkquest.org/2705/\n"}, {"score": 2242.3618, "uuid": "1a6ce427-2ac3-5014-9b5c-29935a0b7e79", "index": "cw12", "trec_id": "clueweb12-0104wb-60-18752", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/csee/computer-science/", "page_rank": 1.2995449e-09, "spam_rank": 88, "title": "<em>Computer</em> <em>Science</em> | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "The website contains: * A section on <em>what</em> graduate school in <em>computer</em> <em>science</em> <em>is</em> all about, including frequently asked questions with answers by current graduate students and faculty * Information, advice, and insights on how to apply to graduate school in <em>computer</em> <em>science</em> including a FAQ by students", "explanation": null, "document": "2012 Google Summer of Code program announced\nposted Sunday, February 5th, 2012\nIf you have good programming skills and are looking for an interesting alternative to the usual summer internship, you might check out the Google Summer of Code program. It pays student developers $5000 stipends to write code for various open source projects over the summer. Over the past seven years, it's brought together over 6,000 students with over 300 open source projects to create millions of lines of code.\nA set of open source projects (aka mentoring organizations) will be selected and announced in mid-March. Students apply to work on one of more of these and each mentoring organization ranks the students interested in working with them. Google facilitates the final selection and pairing. The mentoring organization works closely with the student to define tasks, check progress, help solve problems, etc. Typically the student works remotely, interacting with his or her mentor via email, chat, skype, etc.\nStudents can submit applications via the Google Summer of Code 2012 site from March 26 to April 6. Google says that that the best applications they receive are from students who took the time to interact with one of the participating mentoring organizations and discuss their ideas before submitting an application. About 1,100 students are expected to be funded this year.\nACM Queue programming challenge\nposted Tuesday, December 20th, 2011\nIf you\u2019re at loose ends for the semester break and want to sharpen your programming slils, you might try competing in the ACM Queue Magazine online programming competition . You will program a player that will compete with others in the game of Coercion . The competition opens January 15 and closes at midnight GMT on February 12.\n\u201cThe game of Coercion takes place on a square field that is divided into regions, which vary by height and slope of the field. Each player controls three movable playing pieces called pushers, using them to push little doughnut-shaped markers around. Players use the markers to claim new territory on the playing field. The player with the most territory at the end of the match wins. The game rules will describe how to control your team, score points, and win. A double elimination tournament follows the coding phase, to determine the top four places.\u201d\nYou can create your entry in in C++, C#, Java, Python or JavaScript. Preliminary matches will take place during the one-month coding phase will that will let you know how well your player is doing. A final double-elimination competition among all the submitted players will decide whose player is best.\nQueue is the ACM\u2019s magazine for practicing software engineers. Written by engineers for engineers, it focuses on the technical problems and challenges that loom ahead, helping readers to sharpen their own thinking and pursue innovative solutions.\nUMBC team places second in the DARPA Shredder Challenge\nposted Saturday, December 3rd, 2011\nJust over a month ago, DARPA announced The Shredder Challenge competition to develop a system to solve puzzles by reassembling images of shredded documents with a $50,000 prize for the winning entry. Yesterday the prize was won by All Your Shreds Are Belong to U.S., a San Francisco-based team that was the first to correctly reconstructed each of the five challenge documents.\nUMBC Assistant VP\u00a0for\nResearch Don\u00a0Engel\nIt's unfortunate that there was no prize for second place, because that honor was won by Schroddon , a two-person effort including UMBC Assistant Vice President for Research Don Engel. While most of the top teams had a handful of software engineers and used commercial crowdsourcing services, Schroddon was a part-time effort by Dr. Engel and his wife, Dr. Marianne Engel.\nBoth Don and Marianne have Ph.D.s in Physics, but Don also has an undergraduate degree in Computer Science, did graduate work in computational linguistics, and develops software in his spare time for fun. Two of his active software development projects are ShowMe3D , an application for Mac and iOS that can be used to take and view 3D photos, and When2meet , a free web-based tool for finding the best time for a group to meet.\nThe Shredder Challenge was the latest competition run by DARPA as a low cost way to spur research on new problems. The press release describes it this way.\n\"The Shredder Challenge represents a preliminary investigation into the area of information security to identify and assess potential capabilities that could be used by war fighters operating in war zones to more quickly obtain valuable information from confiscated, shredded documents and gain a quantitative understanding of potential vulnerabilities inherent to the shredding of sensitive U.S. National security documents.\"\n\"Lots of experts were skeptical that a solution could be produced at all let alone within the short time frame,\u201d said Dan Kaufman, director, DARPA Information Innovation Office. \u201cThe most effective approaches were not purely computational or crowd-sourced, but used a combination blended with some clever detective work. We are impressed by the ingenuity this type of competition elicits.\"\nOver 9,000 teams registered for the Shredder Challenge and it is quite an achievement for the Engles to have placed second, especially against many much larger teams. If you are interested in seeing what the data is like, you can download it from the DARPA site.\nThese challenge competitions are becoming more common and are a great way for students to get involved in independent research and maybe win fame and fortune.\nposted Tuesday, November 29th, 2011\nMS Thesis Defense\nAnalyzing the Growth of Hoeffding Trees\nMayank Sawhney\n12:00-1:30pm Thursday 1 December 2011, ITE 346\nMining high speed data streams has become a necessity because of the enormous growth in the volume of electronic data. In the past decade, researchers have suggested various models for learning in both stationary and concept drifting data streams. Hoeffding Trees (Domingos & Hulten 2000) are one such model for mining stationary data streams. Several modifications of the nave Hoeffding Tree algorithm have been proposed to study data streams.\nOur work analyzes the behavior of Hoeffding Trees when they are trained on infinite and experiments, we show that the Hoeffding bound suffers from an inherent shortcoming. Even after reaching a stage where accuracy asymptotes, Hoeffding Trees continue to grow. We examine this behavior in data streams with both nominal and numeric attributes. We also study enhancements made to the naive Hoeffding Tree algorithm and also evaluate different discretization methods.\nIn our work, we analyze how the Hoeffding bound relates to the information gain when splits are made and also when we send a random distribution as a data stream. We conclude that this behavior is a result of decisions made for the early growth of Hoeffding Trees and the induced randomness in an online setting. We also argue that the presence of this behavior will impact the use of Hoeffding algorithms in real world online applications.\nCommittee Members\n"}, {"score": 2145.1912, "uuid": "eb9d03b9-a8f0-57c1-b5da-3c2578862a69", "index": "cw12", "trec_id": "clueweb12-0507wb-76-11224", "target_hostname": "www.latrobe.edu.au", "target_uri": "http://www.latrobe.edu.au/cs/prospective_students/undergraduate/graduate_profiles/", "page_rank": 1.1807426e-09, "spam_rank": 99, "title": "Undergraduate - Graduate Profiles - Department of <em>Computer</em> <em>Science</em> &amp; <em>Computer</em>", "snippet": "Department of <em>Computer</em> <em>Science</em> &amp; <em>Computer</em> <em>Engineering</em> I&#x27;ve found the course at La Trobe to be challenging and <em>interesting</em>, and good preparation for a career in the IT industry.", "explanation": null, "document": "Undergraduate - Graduate Profiles\nDepartment of Computer Science & Computer Engineering\nI've found the course at La Trobe to be challenging and interesting, and good preparation for a career in the IT industry. I've also had the opportunity to complete an industry cadetship program organized by the Faculty of Science, Technology and Engineering with the Bureau of Meteorology. This has led to an offer of a full-time position with the Bureau at the end of my course.\nScott Anderson\nBachelor of Computer Science\nI studied Computer Science at Latrobe. The course taught me a variety of areas of IT, from Multimedia Technology to Network Protocols. For someone like myself, who was unsure of what area I felt I should specialize in, the course gave me good flexibility in choosing subjects in which I was interested, rather than being forced down a single stream. The theory that I have learnt from those subjects can easily be applied again and again when using different platforms and languages. I have found that the third year project was extremely important as it taught me to work in as close to an industry environment as possible  in a team.\nOverall, La trobe was the best experience of my life. It has provided me not only with a great job and education, but more importantly, wonderful memories and fantastic friends, who I now consider best friends.\nMark Stewart\nBachelor of Computer Science\nDeloitte Consulting\nI have recently completed the Bachelor of Computer Science (Hons)/Bachelor of Electronic Engineering double degree, specialising in Networking and Communications Engineering. Coming to La Trobe is undoubtedly a great career move. The teaching staff are exceptional, both in the quality of teaching and the support they give students.\nI particularly enjoyed the peaceful surroundings that allow you to relax when things get hectic throughout the year. The facilities available to students are first class, and are available 24 hours a day which is a great help when it comes down to finishing off a project on the weekend. I was headhunted by the Aspect Computing as soon as I completed my studies and currently working with Telstra.\nKarol Szwed\nBachelor of Computer Science (Honours)/ Bachelor of Electronic Engineering\nTelstra\nThe university life and Games Technology course offered at La Trobe is great. The course caters for those who have a keen interest in computer and video games and in no time at all it is possible to see what you have created come to life.\nBrendan Scott\nBachelor of Computer Science majoring in Games Technology\nI completed the Bachelor of Computer Science degree in 2003 and am now currently pursuing my honours year. Before beginning my course, I was awarded a departmental scholarship. In first year, I gained entrance into the Golden Key Honours Society and for each year of my course, I was awarded a place on the Dean's Honours List. After completing my degree, I was awarded the Alumni Association prize, the Australian Computer Society (Victoria Branch) Award in Computer Science and the Department Prize in Computer Science. After applying to several graduate positions, I earned one of four places in the Telstra Graduate Program.\nAll the aforementioned prizes and achievements would not have been possible without the outstanding course available at La Trobe University. During my course, I acquired a broad range of skills which are relevant within the professional workforce. I received support by the highly qualified teaching staff that the university has to offer and was made to feel comfortable when asking questions. The range of subjects available allows one to specialise in the exact field they are interested in, whist ensuring that the foundations of all aspects of Computer Science are understood. If one chooses to continue with honours, the department offers many innovative and exciting thesis topics to choose from and also allows the student to create their own, given adequate supervision. The advanced topic subjects in the honours year are taught by industry professionals which prove invaluable as they give students a direct view of the workforce.\nFotis Gimian\nBachelor of Computer Science\nTelstra\nThe Bioinformatics/Science degree offered at La Trobe University is very flexible. It allows a student to specialize in a combination of fields  IT, Biochemistry, Genetics or Mathematics. Overall the course is quite challenging and interesting.\nCurrently I am studying my honours year. My project topic is pattern recognition in DNA (promoter) sequences using neural networks. I believe my topic is an invaluable opportunity to start my career in Bioinformatics.\nAlso the facilities and support available at La Trobe are great, especially the 24 hour access to the labs.\nNermin Celik\nBachelor of Bioinformatics/Bachelor of Science (Honours)\nI have completed the Bachelor of Information Systems/Bachelor of Business and currently doing Masters by research. The high level of expertise of academic and technical staff within the Department of Computer Science and Computer Engineering has enabled me to achieve my highest potential, being offered an invitation to Golden Key Honour Society in my first year of study. The degree emphasises both individual and team based projects allowing for different working environments. The highlight of my study was to achieve one of the best software engineering projects which involved building a web based application in a group of six members. I have accepted an Australian Postgraduate Industry scholarship to undertake a Masters Degree in the area of Web technology. Due to the highly skilled academics and technical staff in the department I have been awarded the Australian Computer Society Outstanding Student Award' and the Australian Computer Society (Victorian Branch) Outstanding Student' award for best final year student in my degree. I have also had the opportunity of being the Fourth Year Honours and Postgraduate Student Representative.\nBehzad Kateli\nMaster of Science by Research\nI chose the Cognitive Science/Computer Science double degree because of the diversity it offered. In the degree I have had the opportunity to study subjects as diverse as linguistics, psychology, computer science, neuroscience, maths, philosophy and Spanish. The degree really does provide a fascinating combination and I often find that my skills in one discipline compliment and extend those in another. My computer studies, for example, have provided logical and problem solving skills which can be applied to almost any problem domain. On the other hand, the study of Psychology helps to give a greater appreciation of human factors when designing software. Highlights of the course for me have been the software engineering project, where we were able to present our final system before industry representatives, the multidisciplinary subject 'Topics in Cognitive Science' and the third year psychology research project which provides a great 'hands on' experience. I would recommend the degree to anyone who feels comfortable with computers but also enjoys the challenge of learning and thinking broadly.\nNiall Gregory Ridge\nBachelor of Cognitive Science/Bachelor of Computer Science\nMy 4 years at La Trobe was a fantastic learning experience. From meeting life long friends to having a terrific social life on and off campus, I also got a degree as part of the process - not without a lot of hard work however! Since graduating I have worked as an IT consultant for various companies and government agencies in Australia and in the UK and authored technical book. Currently I work for an investment bank in London as an Internet/Web Consultant.\nMatthew Gillard\nBachelor of Computer Systems Engineering\nInvestment Bank, United Kingdom\nWhile at high school I was aware that there were many different areas of computing, but what made me focus on a degree combining both computer science and electronic engineering was how well they compliment each other. When applying for a place at university, La Trobe courses were listed as my top 4 preferences. I was and still am very impressed with the quality of the course, industry collaboration, the focus on industry-accredited projects, the lifestyle and environment.\nOne of the most important aspects of my undergraduate course was that it focused on making people more employable by providing many opportunities to develop communication, research, practical and team working skills.\nI completed my undergraduate course last year and immediately found employment as a graduate engineer with Vision Systems Limited. While working for Vision Systems, I decided to pursue a postgraduate qualification by research at La Trobe. Because of La Trobe's commitment to encouraging industry collaboration and research, I was able to arrange to undertake a research topic that was of interest to my employer. Thus, currently I am doing my Master of Engineering by research, while working part time as an engineer. La Trobe is flexible enough to allow me to develop both academically and professionally.\nVela Georgiev,\nGraduate of Bachelor of Computer Science / Bachelor of Electronic Engineering\nVision Systems\nPage maintained by: Applications Programmer\nLast Updated: 14 October, 2009\nUndergraduate Information\n"}, {"score": 2113.9688, "uuid": "ca70b030-4540-5f8f-a89e-02d790a6842d", "index": "cw12", "trec_id": "clueweb12-0508wb-23-22478", "target_hostname": "www.latrobe.edu.au", "target_uri": "http://www.latrobe.edu.au/cs/prospective_students/international/graduate_profiles/", "page_rank": 1.1807426e-09, "spam_rank": 99, "title": "Undergraduate - Graduate Profiles - Department of <em>Computer</em> <em>Science</em> &amp; <em>Computer</em>", "snippet": "Department of <em>Computer</em> <em>Science</em> &amp; <em>Computer</em> <em>Engineering</em> Arriving in Australia as an international student I was told to brace myself for the proverbial \u2018culture shock&#x27;.", "explanation": null, "document": "International - Graduate Profiles\nDepartment of Computer Science & Computer Engineering\nArriving in Australia as an international student I was told to brace myself for the proverbial \u2018culture shock'. However, having resided in Glenn College (one of the on-campus accommodation sites) for the duration of the course, I can say with utmost confidence that the learning environment at this university is most conducive. Especially in the Department of Computer Science and Computer Engineering, the level of interaction that both academic and non-academic staff have with continuing and past students is truly amazing. The sense of community that is built up over the years helps to enrich and broaden your horizons.\nLa Trobe qualification helped to get permanent resident status in Australia and presently I am working with the Deloitte Consulting (one among the top fives) as a consultant.\nAnirban Bhattacharya\nBachelor of Computer Systems Engineering\nDeloitte Consulting\nComing to La Trobe for higher studies has been quite an enriching experience for me. La Trobe offers a perfect combination of lectures with class tutorials and labs which enables students to build on theoretical concepts whilst also gaining practical experience. Lecturers in the Computer Science department encourage open discussion and are willing to clarify issues with students in a friendly and helpful manner. The library at La Trobe is one of the best resourced libraries I have seen. Their extensive collection of journals and papers is of invaluable assistance to students undertaking research related studies.\nPrakash Srivastav\nMaster of Computer Science\nMy experience as an international student doing Bachelor of Computer Science at La Trobe University has been really rewarding. The course structure gives you the opportunity to choose from variety of areas, helping you to develop skills that are going to decide your career path. The lecturers and tutors are easily approachable, and you can overcome any situation with their help and guidance.\nOverall, I enjoy being a computer science student at La Trobe University, because I feel that when I finish this course, I will have all the skills needed to be an excellent Computer Scientist.\nLuisa Ramirez\nBachelor of Computer Science\nLa Trobe gave me the opportunity to work in an interesting topic of neural networks and to take part at some of the many activities on the campus during my spare time.\nI am a student of Computer Science Department at the University of Applied Sciences in Landshut, Germany. I have been to La Trobe University in Australia to do an internship for 6 months and it has been a wonderful opportunity to meet with some of the top scholars in a particular area.\nPhilipp Mergenthaler\nExchange Student, University of Applied Sciences, Landshut, Germany\nThe truly international environment at the campus here opens a world of opportunities for you and learning in such an environment broadens your horizons and career prospects.\nEven after having five years of experience in IT, I still feel that after completing this course I will be able to handle the latest technological advancements in the field of IT in a more professional and efficient way.\nSidhartha Ghosh\nMaster of Information Technology\nAfter completing my Bachelors degree I was not really contented. Thus when I was offered a place in honours, I grabbed the opportunity. Doing honours and masters was an eye opener to the new world of research and technical writing and greatly increased my confidence in my area of interest. On top of that, they also increased my understanding of presenting new ideas.\nCurrently I am doing a PhD and I am very thankful to my Supervisors and La Trobe for their guidance and support in assisting me in achieving my goals.\nXavier Simon\nMasters by Research, Singapore\nComing from a non-it background and to a new educational environment, I wasn't sure what to expect in the beginning.\nAt La Trobe, the experienced and helpful staff, excellent facilities, a broad subject choice and lots of interaction with staff and students have given me the opportunity to develop both my personal and professional skills.\nManpreet Bhanot\nMaster of Information Technology\nAfter completing a Master of Computer Science Engineering in France, I have chosen to travel to strengthen my international experience. La Trobe University is an international university because one of its pillars is to be international.\nAfter more than one year at La Trobe the experience that I have been getting is invaluable and immeasurable. As an international student you will be living with others students who have radical ways of working out issues, who have different backgrounds or motivations.\nGuy-Alexandre Suermondt\nExchange Student, France\nHaving graduated in a non-IT discipline, I was concerned about a smooth transition to the computing domain. My successful completion of the two-year Master of Information Technology (MIT) programme at La Trobe has not only helped me build a strong foundation, but has also allowed me to specialise in a particular area through the completion of a minor thesis component. The flexible structure of the MIT offers a wide range of choices both for those who are inclined towards research and also for those who wish to follow subjects of a more practical nature.\nLa Trobe has provided me with the opportunity to undertake research in synchrony with reputed academics and senior PhD students. My academic qualifications and experience during the last two years has resulted in me obtaining Australian residence status and also an Australian Post-Graduate Award (APA) to commence doctoral studies.\nMehul Bhatt\nBCom Mumbai, MIT, PhD Scholar La Trobe\nStudying at La Trobe has been one of the most memorable and rewarding experiences of my life. I chose to enrol in the Master of Information Technology at La Trobe on the recommendation of a friend. One of the things I enjoyed most about La Trobe was the campus environment, with its open areas of grassland, bushland and waterways. In addition to this, the friendliness of the people at La Trobe added to the positive atmosphere, ensuring La Trobe was a unique learning and social environment.\nMy experience in the Department of Computer Science and Computer Engineering was very rewarding and has left a lasting impression on me. The lecturers, administration and technical staff, the resources and the infrastructure were all of extremely high quality. The courses focussed on applied knowledge, and through the completion of this course and the assignments, I've developed the ability to think flexibly, apply various solutions in the problem solving process and to be analytical in the work environment rather than simply referring to a text book.\nRovita Almeida\nB.E (Electronics & Telecommunications) Bombay, MIT La Trobe\nContent Approved by: Head of School\nPage maintained by: Applications Programmer\nLast Updated: 14 October, 2009\nInternational Information\n"}, {"score": 2114.466, "uuid": "45b72d20-42d4-5af9-b30d-0afc6e70cac2", "index": "cw12", "trec_id": "clueweb12-1313wb-65-15171", "target_hostname": "virtualschool.edu", "target_uri": "http://virtualschool.edu/mon/SoftwareEngineering/CSIsDead.html", "page_rank": 1.2494622e-09, "spam_rank": 66, "title": "<em>Computer</em> <em>science</em> <em>is</em> dead.", "snippet": "Even so, the evidence <em>is</em> strong that the academic discipline of <em>computer</em> <em>science</em> <em>is</em> in trouble.", "explanation": null, "document": "by Phil Agre in The Network Observer VOLUME 2, NUMBER 6 JUNE 1995\nAlso see response by Brad Cox\nI have a doctoral degree in computer science, but I now teach in a social sciences department. Though I would like to think I'm starting a trend, the evidence is not strong. Even so, the evidence is strong that the academic discipline of computer science is in trouble. I was first alerted to this fact a few years ago when my officemate from graduate school quit a top-rank computer science faculty position to work for Microsoft because he wanted to be where the action is. He's right: the agenda for computer science research has shifted from academia to industry.\nBut the problem runs deeper than that, and I think that computer science needs to fundamentally reinvent itself to avoid shrinking into irrelevance. Here's the problem: we are told that computer technology is being continually revolutionized, but it doesn't really work that way. Instead, computer science has historically laid down one layer after another of settled art, little of which must be greatly revised later on. Lots of people got tenure for designing parsers, for example, and now we know how to do that. An earthquake did occur at the fault line between processor design and compiler design in the 1980's, but that has settled down. Programming language design was a difficult matter once, but now it isn't, and the market has decided that it's satisfied with C and C++ anyway. There's no accounting for taste, but there it is. (For a more general analysis see Andrew Friedman's brilliant historical book \"Computer Systems Development\", which I recommended in TNO 1(9). See also Peter Denning's recent articles about the future of the engineering field generally.)\nSo what happens next? The technical methods of computing are like a lake that is silting: once somebody finally figures out how to make distributed operating systems, it'll be all over. The most likely exception is in the theory of computation -- the mathematical foundations of the field, where really interesting research on \"interactive proof\" methods will probably bring us a lot more useful stuff from the same place that public-key cryptography came from. Plenty of other computer research will remain to be done, of course, but the emphasis may shift elsewhere. No longer will the world need hordes of computer scientists who know a little about medicine or engineering or business; instead, it will need hordes of doctors and engineers and business people who know a little about computers and a great deal about a particular world where computers are used.\nThe field of computer science can save itself, though, if it gets a new attitude. It has to stop looking at the whole world as a bunch of technology-driven \"application domains\" and instead develop a spirit of partnership with people who know substantive things -- things about organizations, about managing information, about sickness and health, about democracy. Although numerous computer people are sympathetic to such an approach, many of the basic concepts and methods of computer science make it difficult to put into practice. One obstacle is the field's understanding of formalization: to implement something on a computer, you have to translate it into mathematical terms that can be coded. But the resulting formalisms rarely correspond to the way that users think about things. Furthermore, computer scientists know almost nothing about how computer use fits into the lives and activity systems of the people who use them. Instead, generations of systems analysts have used models that derive from industrial automation -- rather than from the intention of providing support for skilled people with complex lives. The approach, whether explicitly or implicitly, is not \"we will work with you and help you build tools\" but \"we will represent you and replace you\".\nBut an attitude of symmetrical partnership, necessary as it is, will not suffice in itself. We also need what I call \"bridging concepts\" -- that is, medium-sized concepts that make it easy to move back and forth between serious ideas about technology and serious ideas about the social worlds where technology is used. Listening to the speakers at the conference on Society and the Future of Computing that we recently organized in Colorado, and reflecting on other valuable things I've read lately, I managed to articulate ten candidates for these bridging concepts, which I'll present here in the form of imperatives for the field of computer science:\n(1) Designers must rethink the physical forms of interaction with computers.\nAt the conference, Joy Mountford from Interval described some of the ways that professional designers were doing just this. The existing physical forms of interaction with computers (keyboards and screens) are alright for some purposes, but for many others they lead to hand and eye injuries. Though I am hardly the most overworked computer user in the world, I had prescription glasses made (out of my own pocket) to help correct an atrophy in the muscles that shift focus from near to far. Computer scientists don't think much about the physical form of interaction with computers because, by and large, they imaginatively identify with the systems themselves rather than with the lives of the people using them. Research on interfaces for people with disabilities is helping to stimulate thinking about alternatives, but much more remains to be done for everyone else.\n(2) Systems must fit into users' diverse ways of life.\nPeople from different backgrounds -- cultures, professions, and so on -- live different lives, and so it seems likely that they will need different computers. But how do computers and ways of life fit together? A focus on individual users' thought processes does not suffice to answer the question; indeed, it can contribute to weird stereotypes about the different thought styles or learning rates of different groups of people. What about people who must switch back and forth between tasks on their computer and tasks on other machines? What about people who share a computer with several others? What about people who maintain relationships with others through several different media, including both computer and non-computer media? How do different cultures organize the teaching and learning of family members? And so on. A major problem is that nobody can get tenure in a computer science department, at least in the United States, for investigating such questions. This needs to change.\n(3) Workplace computing must provide tools for people, not automation that replaces people.\nMuch of computer science derives historically from industrial automation, and the idea that computers are meant to replace people is more deeply ingrained in the field's methods and concepts than many computer scientists want to admit. The big news, though, is that the old assumptions behind automation no longer hold. So many activities have become automated by now that today's jobs require highly skilled workers to keep track of complex processes while participating in constant change. Interface designers like Ben Shneiderman have emphasized this shift from the technical side, while industrial researchers like Patricia Sachs and labor researchers like Joel Yudken are remarkably unanimous about the point as well. Computer scientists often do make representations of people's work, but these representations have largely been preludes to software specs -- to automation. The hard problem, which new research is only beginning to address, is how such representations can support work by supporting the thinking and group effort of the people who are doing the work.\n(4) Interface design must move beyond a focus on users to a focus on learning communities.\nEven when they live or work alone, people are very much bound up in social networks. As Jonathan Grudin has pointed out, \"the user\" is a dangerous fiction. This fiction did have some truth to the extent that computer-using jobs were rationalized, using the \"one best way\" prescribed by time and motion experts. But in the new world, the emphasis is shifting to continual learning. The best learning is that which takes place through dealing with actual problems. People who work together routinely teach and learn informally, for example, by telling stories about their experiences. How can technology support this kind of informal learning in communities? Roy Pea and Elliot Soloway are studying this question in classroom settings, and Julian Orr and others are studying it in workplace settings. Computer science, though, has a hard time conceiving of social relationships and processes that are not directly captured by computers. This will need to change.\n(5) The new technologies of privacy protection must replace system designers' habit of tracking human activities in ever-greater detail.\nPublic-key cryptography and the whole world of related emerging privacy technologies have, as Marc Rotenberg points out, changed the way we think about technology itself. Many theorists have associated technology with social oppression, so that critics of oppression have found themselves positioned as anti-technology. Now the tables are turned: the bureaucracies that resist strong cryptography are the real anti-technologists. But the field of computer science has plenty of catching up to do as well. For the most part, the use of computers to invade privacy doesn't result from a conscious decision to invade privacy. The situation is actually much worse, since the most basic step in system design is to choose which entities in the world to represent (people, vehicles, packages, transactions, etc) and to create identifiers for them. The resulting records end up in databases that then get reused for secondary purposes and merged with other databases. But public-key cryptography lets us start over by designing in privacy protection from the start. This won't be easy, and it will require much more innovation so that designers can produce systems that collect precisely the minimum amount of information necessary to serve a given function. But I think it can be done.\n(6) Technologists must respect and support the extensive expertise of information management professionals.\n... that is to say, librarians. It is embarrassing to watch computer scientists reinvent indexing and retrieval technologies that librarians discarded in the 1950's. I don't think most computer scientists have realized that, as Christine Borgman and others have persuasively argued, managing large collections of information is a specialized skill that is quite independent of the (equally valuable) skills of computer people. The emergence of digital library research may redress the problem; the big question is whether computer scientists will pay attention and give due respect, or whether this research will move into other fields and other departments.\n(7) As distributed information technology is used to reduce transactions and coordination costs, it must not undermine workers and their families.\nElectronic commerce promises to interconnect buyers' and sellers' computers, thereby removing a lot of useless paperwork from the world's business operations. As Rolf Wigand points out, one effect of this innovation is to reduce transaction costs: the costs of making contracts in the market. This is good when it brings lower prices at the consumer's end of the whole pipeline. But economic theory predicts that reduced transaction costs will have other effects. One of these, potentially, is an increase in contingent work: that is, work that people do on a \"flexible\" short-term contract basis. This system is great for people who want flexibility in their working lives. But it's lousy for people who need stability -- most especially people with kids. Children need security, and we should worry whether they can get it in a world where parents must change jobs every few months, weeks, or days. Distributed computing also reduces coordination costs, which are the costs of holding a far-flung business operation together. To some extent this effect counteracts the reduction in transaction costs. But it also gives centralized management much better tools for controlling work at a distance. Computer people should become aware of how these forces play out in practice, and they should investigate how their systems might help increase efficiency without also increasing the control and instability in people's lives.\n(8) Technical standards-setting processes must be opened to a broader range of stakeholders --- long before the standards become irreversibly entrenched in the market.\nTechnological markets need standards so that products can work together and so that people can know what they are buying. Standards have enormous consequences, since it is easy for a standard to become entrenched in the market without necessarily being compatible with the best technical solution or the most humane social arrangements. Standards are still largely set by remarkably informal voluntary arrangements. Plenty of power politics is often going on behind the scenes, of course, but standards-setting processes still seem like one venue where social concerns can be explored before designs become faits accomplis. It is possible, for example, that many standards can be influenced toward privacy protection -- simply because nobody had been thinking about privacy before, or because nobody had been adequately informed about technical options for protecting privacy. Who, we might ask, are the full range of stakeholders in technical standards-setting, and what would it take to get them a place at the table? Some plane tickets would help, and regular reports about standards activities on the Internet would help too, but substantive dialog is needed as well.\n(9) Citizens and professionals alike must become aware of the ways that information infrastructure architectures either support or inhibit democratic participation.\nComputer people have been talking about democracy a lot lately, influenced in part by organizations like CPSR and EFF who have articulated connections between information infrastructure and democratic participation. The Clinton administration has done little of substance, but their NII rhetoric has stimulated some remarkably broad-based discussion of telecommunications policy issues. At the top of the list is the distinction between a symmetrical switched architecture, in which anyone can produce their own content, and an asymmetrical architecture like the US regional phone companies want to use to deliver \"interactive\" video services. Of course, only a few percent of the population understand this distinction. But that's a good start, and more can be done to spread the word.\n(10) Information technologists must recognize that the success of democracy depends most crucially on citizens' experience of empowerment and skills of organizing.\nAll this talk about democracy, though, can get shallow. Langdon Winner has pointed out the sometimes facile connections between information, knowledge, power, and democracy that often make the issues seem easier than they are. In the end, what really matters is whether people feel empowered to organize themselves to exert some control over their own lives. The best technology you can possibly build is useless unless people have these social and political skills and feel that it would make some difference to try using them. Perhaps learning how to use the net can be an occasion to reinvent the skills of democracy, and perhaps the skills of democracy will help us understand what kinds of information infrastructure we should be building next.\nThe conservative culture wars.\nAfter the Internet community and civil libertarians spent months busting their butts trying to defeat the Communications Decency Act, Newt Gingrich just about killed it with one breath. Never mind that the bill was introduced by a retiring Democrat; the real political action around the CDA was among conservatives. By threatening to shut down the whole Infobahn in the name of morality, the Act precisely diagnosed a huge division within the conservative movement.\nThe conservatives have assembled a formidable coalition around an anti-government agenda. But simmering beneath this relatively smooth surface is a cultural division between authoritarians and libertarians. Once the conservative coalition destroys the liberal establishment -- for example by sending the auditors from hell after every liberal non-profit organization that ever got a dime from the government -- then American politics will turn into a subterranean battle between these two forces. Each side will call itself conservative, but they will mean different things by the term. Most corporate leaders, for example, are economic conservatives and cultural libertarians who want opportunities for their daughters and worry that nationalist xenophobia will interfere with the country's participation in the global economy. Many of them are concerned that Pat Robertson and his followers might actually believe the things he writes in his books.\nLikewise, the ideological libertarians who define the culture of the high tech world are generally focused on entrepreneurship, contemptuous of government economic intervention, supportive of gay rights, and more interested in freedom for kids than in patriarchal family values. The problem, of course, is that these folks don't have the votes. Libertarian think tanks have unprecedented visibility, but that just means that their ideas are selectively harvested in support of a culturally conservative agenda. Privatization, yes -- but forget about legalizing drugs. The people who run the Republican Party -- including the pundits and theorists and the conservative foundations who fund them -- are well aware that conservative Christians control dozens of state Republican party organizations, and they take great care to make the ideology appeal to them. This leads to some strange results -- for example, the libertarian conservative magazine The National Review has run articles fretting over university radicals' antipathy to science and explaining the threat to society posed by the theory of evolution.\nThe Exon bill provided another such result. Its main grassroots support came from the Christian Coalition, whose lobbyists were squarely focused on pedophiles \"stalking\" children on the net. Now, I happen to believe that pedophiles are real and dangerous. But did the Christian Coalition people understand that the Exon bill would have basically no effect against pedophiles, who are surely smart enough to confine themselves to innocent-sounding interactions in cyberspace? I don't know. While the Senate debate was going on, it was certainly frustrating to have people (small numbers of them to be sure) respond to the Voters' Telecom Watch alerts on the CDA with messages like, \"So you're against decency?\". On the other hand, why did it take the Exon bill for the major net providers to address people's concerns by getting visible about their efforts to implement real technical solutions to the potential problems? This issue will be back.\nComputing as a popular technology.\nComputing, perhaps more than any other technology in history, is a popular technology. By \"popular\" I don't mean \"popular\" as in \"so-and-so is a popular movie star\". Instead I mean the original sense of the word -- \"of the people\". Although we think of computers as impossibly esoteric, the fact is that ordinary people have begun to take hold of computing at a tremendous rate. Computing is a highly plastic technology, meaning that its forms can be changed and adapted endlessly, and it is time to start tracing all the ways in which people taken hold of computing for their own purposes and have then had an influence on their design. Here are a few:\nUser groups. People are getting together in groups for mutual assistance, exchanging software, grouching about bugs, helping one another find good deals and avoid bad deals, and so forth. User groups are becoming powerful distribution channels in the market, like the buyers' cooperatives that have been an important part of community organizing forever.\nResistance. People can put up a fuss when computers are used to invade their privacy or otherwise offend them. Sometimes this resistance is organized, as when telephone workers have tried to reduce surveillance of their work by managers. Sometimes it is spontaneous and unorganized, as when people avoid entering data into machines, use the machines in a superficial manner, modify the programming to suit them, and so on.\nFree software. Lots of free software is circulating in the world, much of it written by people who just want to share. A program circulated on the Internet can be used by many thousands of people in short order, and a whole volunteer distribution system has arisen.\nMarket choice. As individual consumers, people can buy stuff that's good and refuse to buy stuff that's lousy. To do this, of course, they need to talk to one another. As computer knowledge diffuses through communities and social networks, markets will have to respond better to people's needs. Informed people can also make a difference in their workplaces by politicking for the purchase of good systems that support productivity rather than lousy ones that drive people crazy.\nGuerilla networking. Fidonet began as a political project to provide cheap digital communications to everyone. Regardless of what you think of its quality control, Usenet is very much a democratic \"underground\". Hundreds of social movements across the political spectrum are getting on the net, supported by specialized organizations such as the Institute for Global Communications. Thousands and thousands of individual computer enthusiasts have set up BBS's in their communities, often with the intention of serving particular interest groups such as SF readers or labor unionists.\nInterest-group organizing. The 1994 Communications Act, which failed in the last minutes of that Congress despite bipartisan support, was shaped in some ways by a remarkably broad alliance of public interest groups, many of which coordinated their efforts under the umbrella of the Telecommunications Policy Roundtable. Similar projects have begun regionally. Other groups, such as the Electronic Privacy Information Center and Voter's Telecom Watch, have fought legislation that would have antidemocratic effects on information infrastructure, and a wide variety of people have responded to their calls for political action on these issues.\nCommunity networking. As I reported in TNO 2(5), people building computer networks to support their communities are rapidly learning what it takes to actually serve people with technology. Their experience will increasingly feed back into the design of software to support communities.\nI think this is a pretty impressive list. Many others will disagree, either because they think that technology charges forward according to its own internal logic or because they think that the whole world is totally dominated by corporations. There's a grain of truth in each of these assertions, of course, but if we believe them then we might as well give up now. It's important to believe that people can act together to take some control over their lives, not only because it's a necessary belief to stay sane -- but also because it's true.\n"}, {"score": 2106.6797, "uuid": "2061abf7-3c07-5820-8e4f-bfb652b38dab", "index": "cw12", "trec_id": "clueweb12-0408wb-52-35050", "target_hostname": "www.cse.buffalo.edu", "target_uri": "http://www.cse.buffalo.edu/~rapaport/584/S07/whatisacomputer.html", "page_rank": 1.1700305e-09, "spam_rank": 97, "title": "<em>WHAT</em> <em>IS</em> A <em>COMPUTER</em>?", "snippet": "Harnish, Robert M. (2002), &quot;Coda: Computation for Cognitive <em>Science</em>, <em>or</em> <em>What</em> <em>IS</em> a <em>Computer</em>, Anyway?&quot;", "explanation": null, "document": "What is a computer?\u2014Philosophy\n(click image to enlarge)\n"}, {"score": 2104.0732, "uuid": "961d1532-f740-56de-a89f-0eb289637b95", "index": "cw12", "trec_id": "clueweb12-1005wb-91-14086", "target_hostname": "compsci.ca", "target_uri": "http://compsci.ca/blog/choosing-between-computer-science-and-computer-engineering/", "page_rank": 1.4474052e-09, "spam_rank": 93, "title": "Choosing between <em>Computer</em> <em>Science</em> and <em>Computer</em> <em>Engineering</em> | CompSci.ca", "snippet": "<em>Computer</em> <em>Science</em> <em>is</em> <em>interesting</em> in a way that it has much <em>more</em> flexibility. This allows to both avoid dull subjects and to pick up courses in the areas of interest.", "explanation": null, "document": "By Tony \u22c5 December 27, 2009 \u22c5 Post a comment\nThe subtle differences between various Computer related majors are confusing, especially at the age when one makes their University choices. 6 Degrees of Computer Science is a good place to start, but the choice is not always clear. Some delegate the choice of their program to luck \u2014 apply to all, and see which one they are accepted at from the University of their choice. This does not necessary work if ones academic performance is well enough to earn multiple offers. Now what?\nI think I have a tip for making this choice. Unfortunately I came to understand it only a few years after entering the University myself. Looking back, this would likely have helped me make a better choice to begin with (and saved me the trouble of figuring out the differences years later, and going through a complicate process of changing majors). The approach is simple, yet time consuming; though I guarantee that this will be faster than spending a year (or two!) switching majors.\nSample checklist for Computer Science vs. Computer Engineering courses\nGo to the website for your top University of choice. (That decision is a topic for another discussion.)\nFind a course calendar for two programs you want to compare.\nIgnore the courses that overlap in content, and write out all other notable courses. Depending on the level of detail you want to go into, you can pull in all of the course combinations, including minors and options, though a less detailed bird-view might be enough to steer one towards their preference.\nAssign positive points to courses of interest and negative points to required courses that you would rather avoid.\nSum up the results.\nOriginally, I was thinking of comparing Computer Science to Software Engineering, but there was too much overlap to make a good example. Though this previous article could be of interest \u2014 The spirit of Software Engineering .\nI think it should also be noted that some of the Computer Engineering courses are accessible to Computer Science students via the Digital Hardware Option, at least at the University of Waterloo, which was taken as basis for this comparison (on the grounds of me attending that University).\nHere I\u2019ve discovered that ECE courses put emphasis on energies inside the systems \u2014 power management, thermodynamics, magnetic fields. Also, I\u2019m not a fan of required Chemistry course . Personally, I\u2019m not that interested in such level of detail, especially when the area of application leaves computers and gets into power-plant scales of energy transfers. The better circuit design courses are available via an option, so the key question becomes: how fascinating are those 4th year courses?\nComputer Science is interesting in a way that it has much more flexibility. This allows to both avoid dull subjects and to pick up courses in the areas of interest. On the flip side, there are certain elective requirements that need to be fulfilled, such as the courses from the so-called \u201carts groups\u201d.\nPersonally, I\u2019m really interested in getting to Compilers via the CS route; even if that doesn\u2019t earn me an Iron Ring.\nRead more\n"}, {"score": 2008.1766, "uuid": "8a409836-2e84-528a-83bc-be1389b6a658", "index": "cw12", "trec_id": "clueweb12-0501wb-26-04886", "target_hostname": "www.cse.unsw.edu.au", "target_uri": "http://www.cse.unsw.edu.au/information/current-students/undergraduate/programs/computer-science/", "page_rank": 1.2975725e-09, "spam_rank": 95, "title": "<em>Computer</em> <em>Science</em>", "snippet": "Information Systems BSc <em>Computer</em> <em>Science</em> <em>Computer</em> <em>Science</em> <em>is</em> the ultra-flexible Computing degree.", "explanation": null, "document": "Plan COMPA13529 - BSc Computer Science BCom\nComputer Science majors are also available within dual BE BSc programs from other Schools within the Faculty of Engineering:\nPlan COMPA13042 - BE Chemical Engineering BSc Computer Science\nPlan COMPA13102 - BSc Industrial Chemistry BSc Computer Science\nPlan COMPA13641 - BE Telecommunications BSc Computer Science\nPlan COMPA13725 - BE Electrical Engineering BSc Computer Science\nPlan COMPA13655 - BE Photovoltaics and Solar Energy BSc Computer Science\nPlan COMPA13730 - BE Civil Engineering BSc Computer Science\nPlan COMPA13711 - BE Aerospace/Manufacturing/Mechanical/Mechatronic/Naval BSc Computer Science\nPlan COMPA13746 - BE Surveying and Spacial Information Systems BSc Computer Science\nWhat is Computer Science?\nComputer Science is the ultra-flexible Computing degree. It has the flexibility that allows students to combine through electives learning about another discipline with learning how to design and implement software, or to specialise in one or two areas of Computing.\nCareer Opportunities\nDepending on the Specialisations studied, careers are extremely varied. Many graduates are employed as application programmers, systems analysts, user support or as database administrators. For students who complete the honours year, it is possible to continue studying for a postgraduate degree and to proceed to a research position at a university, in industry, or a government institution such as the CSIRO.\nProgram Content\nComputer Science is a three-year program with an optional fourth-year for Honours study. Students who perform at a superior level in the first three years are eligible for entry to the Honours year, which combines advanced coursework with a research project and thesis.\nProgram Flexibility\nComputer Science is UNSW's most flexible Computing degree. All students study the core subjects and then have many electives to study several of the application areas, or they may choose to specialise in one of the Specialisations or Minors.\nSpecialisations\nArtificial Intelligence\nCreating computer systems that can think is one of the more exciting and potentially rewarding challenges that we face today.\nComputer Games\nModern computer games are among the most challenging computer applications to create. They use advanced concepts from computer graphics to artificial intelligence and networks. They require the collaboration of teams containing programmers, game designers, and artists.\nComputer Networks\nConnecting separate physical devices through protocols to form a single logical network.\nDatabase Systems\nEvery interesting modern computer application requires the manipulation of large amounts of data (think: Google, Flickr, etc.). All of these applications require people who can build systems to organise and manipulate massive data sets efficiently and effectively. The database stream teaches you how to model, manage and analyse data in a variety of forms (relational tuples, images, documents) using existing database management systems (DBMSs), and even how to build DBMSs from the ground up.\neCommerce\nDevelopment of computer networks and applications for business systems in small, medium and large enterprises.\nHuman Computer Interaction\nThe most important component of any computer system is the user. Programmers skilled in user interface design are needed for successful interactive systems.\nRobotics\nRobotics is a sub-field of Artificial Intelligence with its own unique challenges.\nMinors\n"}, {"score": 2007.4009, "uuid": "e3467ff6-2cb1-5cbd-80e0-4ff47e8356b7", "index": "cw12", "trec_id": "clueweb12-0501wb-41-25011", "target_hostname": "www.cse.unsw.edu.au", "target_uri": "http://www.cse.unsw.edu.au/information/future-students/undergraduate/programs/computer-science/", "page_rank": 1.2946894e-09, "spam_rank": 96, "title": "<em>Computer</em> <em>Science</em>", "snippet": "Information Systems BSc <em>Computer</em> <em>Science</em> <em>Computer</em> <em>Science</em> <em>is</em> the ultra-flexible Computing degree.", "explanation": null, "document": "Plan COMPA13529 - BSc Computer Science BCom\nComputer Science majors are also available within dual BE BSc programs from other Schools within the Faculty of Engineering:\nPlan COMPA13042 - BE Chemical Engineering BSc Computer Science\nPlan COMPA13102 - BSc Industrial Chemistry BSc Computer Science\nPlan COMPA13641 - BE Telecommunications BSc Computer Science\nPlan COMPA13725 - BE Electrical Engineering BSc Computer Science\nPlan COMPA13655 - BE Photovoltaics and Solar Energy BSc Computer Science\nPlan COMPA13730 - BE Civil Engineering BSc Computer Science\nPlan COMPA13711 - BE Aerospace/Manufacturing/Mechanical/Mechatronic/Naval BSc Computer Science\nPlan COMPA13746 - BE Surveying and Spacial Information Systems BSc Computer Science\nWhat is Computer Science?\nComputer Science is the ultra-flexible Computing degree. It has the flexibility that allows students to combine through electives learning about another discipline with learning how to design and implement software, or to specialise in one or two areas of Computing.\nCareer Opportunities\nDepending on the Specialisations studied, careers are extremely varied. Many graduates are employed as application programmers, systems analysts, user support or as database administrators. For students who complete the honours year, it is possible to continue studying for a postgraduate degree and to proceed to a research position at a university, in industry, or a government institution such as the CSIRO.\nProgram Content\nComputer Science is a three-year program with an optional fourth-year for Honours study. Students who perform at a superior level in the first three years are eligible for entry to the Honours year, which combines advanced coursework with a research project and thesis.\nProgram Flexibility\nComputer Science is UNSW's most flexible Computing degree. All students study the core subjects and then have many electives to study several of the application areas, or they may choose to specialise in one of the Specialisations or Minors.\nSpecialisations\nArtificial Intelligence\nCreating computer systems that can think is one of the more exciting and potentially rewarding challenges that we face today.\nComputer Games\nModern computer games are among the most challenging computer applications to create. They use advanced concepts from computer graphics to artificial intelligence and networks. They require the collaboration of teams containing programmers, game designers, and artists.\nComputer Networks\nConnecting separate physical devices through protocols to form a single logical network.\nDatabase Systems\nEvery interesting modern computer application requires the manipulation of large amounts of data (think: Google, Flickr, etc.). All of these applications require people who can build systems to organise and manipulate massive data sets efficiently and effectively. The database stream teaches you how to model, manage and analyse data in a variety of forms (relational tuples, images, documents) using existing database management systems (DBMSs), and even how to build DBMSs from the ground up.\neCommerce\nDevelopment of computer networks and applications for business systems in small, medium and large enterprises.\nHuman Computer Interaction\nThe most important component of any computer system is the user. Programmers skilled in user interface design are needed for successful interactive systems.\nRobotics\nRobotics is a sub-field of Artificial Intelligence with its own unique challenges.\nMinors\n"}], [{"score": 1992.9978, "uuid": "1f8dbf18-5c77-5c15-9a0f-cc90491e6b26", "index": "cw12", "trec_id": "clueweb12-0305wb-75-25404", "target_hostname": "www.princeton.edu", "target_uri": "http://www.princeton.edu/oip/iip/internships/by_interest/engineering_compsci/", "page_rank": 1.3021181e-09, "spam_rank": 94, "title": "OIP: <em>Engineering</em>, Math, Physics, <em>Computer</em> <em>Science</em>", "snippet": "Academic background and&#x2F;<em>or</em> interest in <em>computer</em> <em>science</em> <em>or</em> finance&#x2F;accounting <em>is</em> preferred. Candidates should be proficient in Chinese.", "explanation": null, "document": "ALTIS GROUP\nLocation: Lima, Peru\nALTIS GROUP is a company with international experience in the design, management, and promotion of real estate projects in Peru. Through their work, they apply a dynamic and innovative approach from a human point of view to all kinds of challenges, maintaining a dialogue with clients and working with the agents needed to ensure the success of any project. IIP interns are required to think of all projects as open-ended opportunities to develop ideas that might contribute to the success of the projects. As a small office, the ALTIS GROUP offers a very personal service to its clients and involvement on\u00a0 projects is complete--from concept to business strategy to implementation. IIP interns with experience in AutoCAD, Photoshop, and a 3D program (3Dmax, Rhino) are preferred. Two placements have been established for International Internship Program (IIP) interns.\nBayer (China) Limited\nLocation: Shanghai, China\nBayer is represented in Greater China by its Bayer HealthCare, Bayer CropScience, and Bayer MaterialScience subgroups and the service company Bayer Technology Services, and operates several production facilities here. Bayer's links with China go back to 1882, when the company first began marketing dyes on the Chinese market. Bayer's interests in this exciting region(Mainland, Hong Kong, Taiwan) have grown steadily over the years, from step-by-step investment in the early 1990s to large-scale, world-class facilities today. With the commitment of \"Bayer's Solution for China's Needs,\" Greater China has now become Bayer's largest single market in Asia, with sales of around EUR 2.9 billion in 2010. Currently around 11,000 people work for Bayer in Greater China, which is also among the major focuses of the company\u2019s global investment. The intern will assist an internal project manager. All projects service internal customers. The intern would be serving in two general areas:\nAssistant to the team: Support in general administrative tasks and general office affairs (e.g. scheduling of meetings, etc.), document handling, provision of back office support (preparation of charts and presentations)\nProject Management: Possible projects would be SAP roll-out or servicing other specific needs of the finance department. The intern could be assigned a specific project management task that he/she will need to proactively engage\nOne placement has been created for an International Internship Program (IIP) intern. Academic background and/or interest in computer science or finance/accounting is preferred. Candidates should be proficient in Chinese.\nBridges to Prosperity\nLocation: Cochabamba, Bolivia; Maliana, East Timor; Matagalpa and Condega, Nicaragua; Kigali, Rwanda\nBridges to Prosperity provides isolated communities with access to essential healthcare, education, and economic opportunities by building footbridges over impassible rivers. By working within the local context and training local technicians, their programs aim to develop locally appropriate designs, which can be economically and safely replicated. The ideal candidates for this internship would have experience working in rural areas of the developing world and experience in basic construction and masonry skills. The interns will be expected to train and work on a cable-suspended bridge project, approximately 60 meters in span. The project will be under the guidance and, when necessary, supervision of the Bridges to Prosperity Program Manager. Candidates with an academic background in Civil Engineering are encouraged to apply. Interns should be prepared to live and work in a rural area, lacking electricity and running potable water. Four placements have been created for International Internship Program (IIP) interns. See the placement descriptions under IIP Placements by Region for details related to the specific locations.\nCEDESOL (Centro de Desarrollo en Energ\u00eda Solar)\nLocation: outside Cochabamba, Bolivia\nCEDESOL provides creative market practices to enable the people of Bolivia, regardless of their economic standing, to acquire an ecological stove that will significantly improve their quality of life. CEDESOL delivers the cooker to their community, covering 5 of the nine departments of Bolivia. Partnering with banks, micro-finance organizations, and other organizations working in this field, CEDESOL is able to offer micro-credit solutions to people who have little in the way of financial resources so that they are not excluded from the benefit of our cookers. IIP interns will develop their own project, according to their own abilities and interests and the needs of CEDESOL. In partnership with CEDESOL, the IIP intern should begin developing their project before arriving in Bolivia. Whatever their projects, IIP interns are encouraged to assist with demonstrations and trainings in the rural communities. In the past, IIP interns have constructed solar cookers in workshops, written grant applications, worked on the industrialization process of rocket stoves, created newsletters, edited television advertisements, assisted with cooker demonstrations and trainings, collected data on fuel savings, and evaluated the impact of stoves. IIP interns should be ready to lend a hand to other staff as needed, whether to review a project budget or scrub a stove clean after a demonstration. Spanish skills are not essential, but basic Spanish is desirable. Fluent Spanish would be very helpful to the organization. IIP interns must be adventurous, flexible, and their goals and expectations must be adaptable. Two placements have been established for International Internship Program (IIP) interns.\nDeNA\nLocation: Tokyo, Japan\nDeNA Co., Ltd. was founded in 1999 by Tomoko Namba, a former partner of McKinsey & Co. The name DeNA is a combination of the genetic term DNA and the \"e\" from e-commerce. Starting out as an e-commerce company, DeNA has expanded into broader areas of operations including services for mobile phone users, such as social networking services (SNS) and games. DeNA manages Japan\u2019s top mobile portal site \"Mobage-Town\" ( mbga.jp ), which provides users with access to games, social media, and community networking tools. As the No. 1 social gaming company in Japan, DeNA is now focusing on international business operations, centered on the U.S. and China. One placement has been established for an International Internship Program (IIP) intern.\u00a0The IIP internship is in Marketing and Strategy (Social Game Business Division, Smartphone Social Game Development Group, Platform Marketing Division, Advertising Sales Team). Projects may include researching and analyzing the global smartphone market, designing and developing DeNA\u2019s global marketing strategy for the U.S. and China, and driving the implementation of a new business scheme. Juniors interested in the global mobile industry, especially those pursuing concentrations/certificates in Electrical Engineering, Computer Science, Economics, Finance, and Mathematics, are encouraged to apply. Japanese language skills are required. Applicants should have a strong desire to work in Japan after graduating. One placement has been established for an International Internship Program (IIP) intern.\nDepartment of Telecommunications, AGH University of Science and Technology\nLocation: Krak\u00f3w, Poland\nThe Department of Telecommunications (AGH University of Science and Technology, Krakow, Poland) is an important center for education and research in communications technologies focusing on high-speed networking and services to the e-world. Specific research topics carried out at the Department of Telecommunications include multimedia communication systems, next generation Internet, and wireless 4G networks. Interns will be involved in one of the research projects (solving a specific task). Academic background in Electrical Engineering and Computer Science is preferred.\nDigital Solutions\nLocation: Entebbe, Uganda\nDigital Solutions (DS) is a Ugandan-based software development company. The company builds custom applications mainly for the telecom industry for clients in Africa, Asia and the United States.\nThe interns will join the DS team as it seeks to meet demanding client expectations. DS\u2019s\u00a0 work involves significant research and innovative approaches to application building. IIP interns responsibilities may include: co-leading a team as programmer on existing projects; programming skills transfer/lead on in-house training for staff; helping in the maintenance of system development process and controls; and providing an independent quality assurance on existing applications to improve security, quality of execution and to ensure up-to-date documentation.\u00a0 Specific projects may include MMS Gateway Development, Dynamic SIM Toolkit application development, and NFC programming. This placement is ideal for IIP interns with interest in computer science. Software development in C, Python, Ruby, or Java is required. Two placements have been established for International Internship Program (IIP) interns.\n\u00c9cole Nationale des Ponts et Chauss\u00e9es\nLocation : Marne-la-Vall\u00e9e, France (east of Paris)\nENPC is the oldest engineering school in France and one of the most prestigious Grandes \u00c9coles. The IIP placements are at the Joint Research Laboratory UMR-Navier. The IIP interns will participate on one of two research projects, which mainly concern mechanical vibrations of structures and modelling and identification of mechanical systems. Two placements have been created for International Internship Program (IIP) interns.\nThe first IIP placement: includes research on the civil engineering aspects of monitoring recent and aging works of art and the second IIP placement focuses on the detection and identification of damage detects on civil engineering structures. In the field of civil engineering, on the one hand, there have been studies conducted on recent art work that has become more and more sensitive to wind and thermal elements, and on the other hand, there are other studies on the impact of sensitivity during the aging process of existing works of art. Monitoring is useful since the commissioning of new works and becomes an important element of diagnosis in the choice of implementation of policies for maintenance of older works. Instrumentation systems developed for monitoring health of books require an optimization (number and position of sensors for example) to meet these new needs. In parallel, the need for global methods for the quantitative assessment of the health of the works has led the development and research methods which are usually based on change of vibration characteristics (frequencies, modal and deformed depreciation modal).\nThe goal of the second project is to propose new diagnosis techniques based on the exploitation of vibratory signals to improve the maintenance of the works and civil engineering equipment. Often the mechanical model of the structure or the machine is not necessarily known, and the identification of defects is based on the operation of identification algorithms. The specificity of this research is to define the principles and approaches of practical implementation of sensors in vibration for structural dynamics assessment, and in particular for the detection of damage. The lab is primarily interested in \"linear\" corruption, that is, the response of the structure can still be modeled retaining the linear form of the equations of motion.\nFor more specific details on the research projects, contact the IIP. A background in material behavior, civil engineering, or signal processing would be an asset as would MATLAB and scientific text editor skills and scientific curiosity. French language skills are not necessary.\n\u00c9cole Polytechnique (Research in Mathematics, Applied Mathematics, Mechanics, Physics, Chemistry, Biology, Computer Science, Economics)\nLocation: Palaiseau, France (near Paris)\n\u00c9cole Polytechnique is a state-run institution of higher education and research, renowned for its Ing\u00e9nieur Polytechnicien (polytechnic engineer) program. Established during the French Revolution in 1794, Polytechnique became a military school under Napoleon in 1804. It relinquished this status to become a public educational establishment in 1970, though it is still overseen by the Ministry of Defense. It is a founding member of the ParisTech grouping of leading Paris-area engineering schools, established in 2007. Students can apply for a research internship in any research group within one of the 22 laboratories at \u00c9cole Polytechnique (you may also want to peruse the internship subjects within the research groups ). Two placements have been created for International Internship Program (IIP) interns. French is not required. Do not fill out the application on the \u00c9cole Polytechnique website. If you are applying for this placement, put \u00c9cole Polytechnique on the IIP Placement application as your first or second choice and then indicate your top three choices of research groups in the \"additional information or comments\" section of the IIP Placement application. In your personal statement, be sure to clearly indicate why you are interested in these research groups and why you are qualified to work on such projects.\nEndeavor Chile\nLocations: Santiago, Temuco, Antofagasta, Puerto Varas, and Concepcion, Chile\nEndeavor transforms emerging countries by establishing high-impact entrepreneurship as the leading force for sustainable economic development. At Endeavor Chile, we search & select for high-impact entrepreneurs and then support them with services to improve their business models, expand their networks, and catalyze sustainable growth. IIP interns will have the opportunity to support the Search & Selection, Entrepreneur Services, Outreach, or Metrics Analysis team at one of the Endeavor offices. A detailed description of each position area is available in the IIP office.\u00a0 Endeavor Chile also spearheading an education initiative called \u201cAprendimiento\u201d. The \u201cAprendimiento\u201d program aspires to promote a culture of entrepreneurship within Chile by sponsoring programs that inspire and empower students to become responsible global citizens. The program supports IIP interns by fostering entrepreneurial values such as leadership, creativity, taking initiative, thinking \u201coutside the box\u201d, and trustworthiness. The IIP interns will learn to leverage their entrepreneurial spirit, identify opportunities for their future, and prepare for their future. IIP candidates interested in working on the education initiative would be staffed at the Puerto Varas office. This IIP placement is an ideal opportunity for IIP candidates with interests in entrepreneurship and Latin America. Skills and/ or experience in business would be an asset. Spanish proficiency is preferred, but not required. When applying interns should rank the offices at which they would be interested in working. IIP Interns should also specify if they are applying to work on the \u201cAprendimiento\u201d education initiative. If an IIP intern is not applying to work on the education initiative,please indicate if you have a strong preference for supporting Endeavor in a certain focus area: Search & Selection, Entrepreneurship Services, Outreach, & Metrics Analysis. This placement is ideal for students with interest in entrepreneurship; Latin America and Latin American development, economic development, microfinance, finance, economics, engineering, business, management, public policy and/or information technology. Good knowledge of Spanish is required. Three placements have been established for International Internship Program (IIP) interns.\nEnergy for Opportunity\nLocations: Freetown and Makeni, Sierra Leone\nEnergy for Opportunity (EFO) is a not-for-profit organization working to improve livelihoods in West Africa through the provision and installation of clean, sustainable, photovoltaic, electricity-generating infrastructure. Their strategy is to develop innovative ways to promote the use of renewable energy across the region with an emphasis on both solar installations and solar training projects. EFO\u2019s work addresses the need that comes with a large proportion of the world\u2019s population lacking access to modern forms of electricity, a problem that is particularly acute in West Africa, home to some of the least developed regions in the world. IIP interns will be based in EFO's offices in Freetown and Makeni and will work on a wide variety of areas relevant to EFO's work, including socio-economic research, project monitoring and evaluation, community training, report and proposal composition, and solar power installations. The IIP intern must be comfortable living in a rural African setting with basic amenities and must have previous research experience and strong writing skills. This placement is ideal for IIP candidates with interest in anthropology, engineering, development studies, or the social sciences. Prior travel experience in Africa is a must. Note: Placements for this internship are for a minimum of 10 weeks long. Two placements have been established for International Internship Program (IIP) interns. View a Powerpoint presentation (.pdf) by a past intern.\nFundaci\u00f3n Centro de Servicios Cristianos (FUNCEDESCRI)\nLocation: Nebaj, Cunen, and Campur, Guatemala\nFUNCEDESCRI is a non-profit ecumenical foundation that promotes food security and sovereignty and the support of integrated and sustainable development of the rural communities of Guatemala. They work with 56 indigenous Mayan communities (Quiches, Ixiles, and Q'eqchis) that live in the northwest sections of Guatemala, assisting them in a holistic manner in their own community development processes. The work of FUNCEDESCRI is organized into three target areas: Nebaj and Cunen, located in the department of Quiche, and Campur, located in the department of Alta Verapaz. FUNCEDESCRI seeks to promote the solidarity of the poor with the poor by means of the promotion of human development: promoting the technical training and the whole formation of men and women with the goal of helping them to develop their full potential to contribute to a just and inclusive society. IIP interns will have the opportunity to work on projects in the following areas: natural resource management, farming and agriculture, audiovisual materials and graphic design, development and fundraising, nutrition, engineering, research, social enterprise. Spanish proficiency in speaking, writing, and reading is recommended. An interest in sustainable agriculture, community development, international development, food security, non-profit management, and/or organic and local food would be relevant.\u00a0If you are interested in working on agricultural or water technology projects, a technical or engineering background would be helpful. Two placements have been established for International Internship Program (IIP) interns. This internship is offered in partnership with Princeton in Latin America. View Powerpoint presentations by past interns: Powerpoint #1 (.pdf) , Powerpoint #2 (.pdf) .\nGoogle\nLocation: Bangalore and Hyderabad, India\nGoogle's software engineers develop the next-generation technologies. In addition to revolutionizing search technology, their projects include working on advanced information-retrieval algorithms, massive scalability and storage solutions, and large-scale applications that enrich the user experience. They also work extensively on networking systems, advertising systems, and complex transaction systems in consumer applications. As a Software Engineering intern at Google India, the IIP interns could end up working on core products and services or those that support critical functions of engineering operations. Whether it's finding new and innovative ways to advance search quality, building computing platform and networking technologies, automating the indexing of videos, or continuing to refine and scale complex auction systems (just to name a few), the selected intern will be developing solutions to some of the most challenging technical problems out there. The IIP interns will research, conceive and develop software applications to extend and improve on Google's product offerings and collaborate on scalability issues involving access to massive amounts of data and information.\u00a0 Specific responsibilities include researching, conceiving and developing software applications to extend and improve on Google's product offering; contributing to a wide variety of projects utilizing natural language processing, artificial intelligence, data compression, machine learning and search technologies; collaborating on scalability issues involving access to massive amounts of data and information; solving all problems that come your way. They have both research-oriented and coding related projects. Tech areas the Google India is working on include Enterprise Apps and Cloud Computing, Google News, Google Maps/ Map Maker, Making the Web Faster (Google Search) etc.\u00a0 This placement is ideal for IIP candidates with interest in computer science.\u00a0 Technical skills in systems software, algorithms, C++, Java, Python, UNIX/Linux or Windows environments, APIs, TCP/IP and network programming would be an asset. Two placements have been established for International Internship Program (IIP) interns.\nHong Kong Applied Science and Technology Research Institute\nLocation: Hong Kong, China\nThe Hong Kong Applied Science and Technology Research Institute (ASTRI) was founded by the Government of Hong Kong Special Administrative Region in 2000 with a mission of enhancing Hong Kong\u2019s competitiveness in technology-based industries through applied research. In 2006, ASTRI was designated the Hong Kong Research and Development Centre for Information and Communications Technologies by the Innovation and Technology Commission with special goals to perform leading-edge R&D for technology transfer to industry, develop much needed technological human resources, and act as a focal point bringing together industry and university R&D assets. Since its inception, ASTRI has been delivering world-class technologies and customer-focused R&D catering to the needs of industry. Its R&D efforts traverse four interrelated areas, namely Communications Technologies, Enterprise & Consumer Electronics, IC Design and Material & Packaging Technologies. In 2009, the Board of Directors also approved the establishment of a small research team in Bio-Medical Electronics to meet the changing needs of the international communities. These IIP placements are part of the Princeton-HKUST/ ASTRI International Research Program (Reach) of the Keller Center for Innovation in Engineering Education. Click here to see the positions to which you can apply. Four placements have been created for International Internship Program (IIP) interns. Note: If you are applying for this placement, put\u00a0 Hong Kong Applied Science and Technology Research Institute on the IIP Placement application as your first or second choice and then indicate your top two choices of positions in the \"additional information or comments\" section of the IIP Placement application.\nInfosys Technologies Ltd.\nLocations: Bangalore, Mysore, Hyderabad, and Pune, India\nInfosys Technologies Ltd. designs and delivers technology-enabled business solutions and provides a complete range of services by leveraging domain and business expertise and strategic alliances with leading technology providers. Infosys' offerings span business and technology consulting, application services, systems integration, product engineering, custom software development, maintenance, re-engineering, independent testing and validation services, IT infrastructure services and business process outsourcing. Each intern will have his/her own project. IIP interns with interests in liberal arts may work in the following departments: Human Resources, Corporate Marketing, Education and Research, Domain Competency Group, Corporate Planning, Infosys Leadership Institute, Knowledge Management, the Diversity office and individual business office. Students with a technical background are offered the opportunity to work on projects involving cutting edge technologies such as Application QoS, Business Process Management, Collaboration Platforms, CRM, Enterprise Mobility, Environmental Engineering, Grid Computing, Information Management, Knowledge Engineering, Legacy Modernization, Mobile Computing, P2P, Pervasive Computing, Performing Engineering, Security, SOA, Web Services and Web 2.0. Five placements have been created for International Internship Program (IIP) interns. The engineering placements are part of the Preparing to Lead Program of the Keller Center for Innovation in Engineering Education and are reserved for engineering students only. Click here for more information about the Preparing to Lead Program .\nListing of projects for the summer of 2012. You may select any of the projects in India that are listed for BACHELOR\u2019S DEGREE. To search for projects, type BAC (not Bachelors) in the box for Academic Concentration and then scan through the listings. Internships at Infosys will be fully funded for any length of time 8 weeks and above.\nTo apply: On your IIP application, you should list Infosys as your first or second choice and then list your top two preferences for specific projects in the \"additional information/comments\" section of the IIP Placement application.\u00a0(Do not apply directly to Infosys!). You can either write a personal statement for each of your preferences or treat both preferences thoroughly in a single, longer statement.\nInnovations for Poverty Action\nLocation: Asunci\u00f3n, Paraguay\nInnovations for Poverty Action (IPA) is a non-profit organization that creates and evaluates solutions to social and development problems and works to scale up successful ideas through implementation and dissemination to policymakers, practitioners, investors, and donors. In Paraguay, interns will work on a project called Big Math Paraguay: In the education systems of the region there is much less interest for the development of mathematical competencies and abilities in preschool education than for the competencies in reading and writing. Emerging research on early childhood quantitative understanding indicates positive outcomes resulting from teaching math in early years. As a result, interest in early childhood education is on the rise. In the hope of facilitating the transition from preschool math (for example, counting) to primary-level math (for example, arithmetic), and reducing the number of students that need later intervention, the governments of many countries like Paraguay have shown an interest in introducing early childhood math in preschool education. In Paraguay the Ministry of Education and Culture of Paraguay and the Inter-American Development Bank are collaborating on the implementation of a pilot that seeks to adapt, develop, evaluate, and disseminate a curriculum for the teaching of mathematics in preschool, with emphasis on the development of learning strategies differentiated for each phase of childhood development. Interactive Radio Instruction (IRI) will be used to deliver the curriculum to the students. Interns will:\nParticipate in an on-going field experiment: Interns assist with overall project monitoring and implementation: coordinating between field survey teams, strategic partners, vendors, data entry teams, and other support staff; facilitating the data entry process; and contributing to data cleaning and analysis.\nConduct exploratory qualitative work: Interns may conduct open-ended interviews with school staff and communities to document puzzling facts or behaviors and help develop new research ideas and designs.\nCandidates should have course work or experience in research methods; coursework in econometrics, advanced knowledge of Stata or experience with data management; and Ffamiliarity with randomized control trials. Spanish fluency is required. Two placements have been created for International Internship Program (IIP) interns.\nInstituto Nacional de Matem\u00e1tica Pura e Aplicada Brazil (IMPA), OBMEP PROJECT\nLocation: Rio de Janeiro, Brazil\nInstituto Nacional de Matematica Pura e Aplicada (IMPA) is a teaching and research unit of the Ministry of Science and Technology. IIP interns will contribute to the Mathematical Olympiads for Public Schools (OBMEP) project, a project financed by the Brazilian Government, under responsibility of IMPA. The objective is to provide academic support for students who, due to social or economical conditions, cannot afford a good education. The Olympiad project has resulted in producing many talented students, from the public school system, usually from low income families. In this program the students receive a scholarship, for one year from the Government to improve their mathematical background and skills. The project involves a national examination, a special program for medalists of the three levels (Level III: High school, Level II: 8 and 9th grades, and Level I: 6th and 7th grades). Specific internship responsibilities include providing English training for selected medalists of OBMEP, presenting classes of workshops on elementary (but challenging) mathematical topics, and writing content about interesting elementary problems. This position is ideal for mathematics concentrators, especially those with interests in teaching and/or Latin American studies.\u00a0 An understanding of Spanish and Portuguese would be an asset, but is not required. Two placements have been established for International Internship Program (IIP) interns.\nInstituto Nacional de Matem\u00e1tica Pura e Aplicada Brazil, LUA PROJECT\nLocation\u00a0: Rio de Janeiro, Brazil\nInstituto Nacional de Matematica Pura e Aplicada (IMPA) is a teaching and research unit of the Ministry of Science and Technology that created and executed the \u201cLua\u201d programming language. Lua is a powerful, fast, lightweight, embeddable scripting language, which is ideal for configuration, scripting, and rapid prototyping. Lua has been used in many commercial applications (e.g., Adobe's Photoshop Lightroom), with an emphasis on embedded systems (e.g., the Ginga middleware for digital TV in Brazil) and games (e.g., World of Warcraft). Since 1999, LuaSocket has been the leading API for network access from within Lua. The library is divided into a core C module that provides basic functionality, supported by high-level libraries implementing protocols such as FTP, SMTP, HTTP etc. Although the library is still very popular, there has been growing demand for support for newer asynchronous APIs in the core module, such as kqueue or epoll on Unix, and I/O Completion Ports on Windows platforms. IIP interms will help design and implement the new-generation network support for the Lua programing language. Skills required for the first IIP internship include experience in computer programming in C ,and network programming and Lua programming are desirable. A second IIP internship focuses on state-of-the-art recursive filtering on CPUs and GPUs: Recursive filtering is a basic signal-processing operation that has many applications in computer graphics (e.g., summed-area tables, Gaussian blur, B-Spline interpolation). The dependent nature of the computation poses significant challenges to the parallelization of the computation. An algorithmic framework was recently proposed for GPU-efficient (i.e., massively parallel) computation of recursive filters. A CUDA implementation is being released to the public, but there is still room for contributions.\u00a0 For example, it would be interesting to provide ports to DirectX Compute Shaders, OpenCL, or C++ AMP or provide sample applications that showcase the technology (for example, for higher-quality re-sampling in open-source video players). Finally, the framework may also lead to a highly efficient multi-core SIMD CPU implementation. IIP interns will be mentored through any of these challenging possibilities. Skills required for this IIP placement include computer programming in C/C++, and CUDA.\u00a0 Knowledge in computer graphics or signal processing would be an asset. and Sao Paulo. Two placements have been established for International Internship Program (IIP) interns.\nInternational Water Association (IWA)\nLocation: The Hague, Netherlands\nIWA is one of the largest global networks of water professionals operating internationally, spanning research and practice disciplines and covering all facets of the water cycle. IWA collaborates with a range of organizations, including, amongst others: The World Bank, the World Health Organization, and the main UN agencies (UNHABITAT, UNESCO, UNICEF), dealing with water and sanitation on projects of common interest. The selected IIP intern will work primarily in the development of the regional programs for IWA, doing a mix of strategy, research, and marketing, Additionally, he/she will assist the development director on specific projects. This placement is for eight weeks at IWA's headquarters in The Hague, Netherlands. Additional placements in other countries are currently under negotiation and may include Singapore and Peru. French or Spanish competence is an advantage (though not essential). IIP candidates will work on a range of projects related to disaster recovery, water quality monitoring, climate change, sustainable sanitation, or young water professionals. Two placements have been created for International Internship Program (IIP) interns. Click here to view an IWA brochure (.pdf) .\nInternational Water Management Institute (IWMI)\nLocations: Hyderabad, India ; Pretoria, South Africa; Tashkent, Uzbekistan\nIWMI is an international scientific nonprofit organization. They undertake scientific research to help improve water management in developing countries. The key purpose of this is to improve the lives of the people in developing countries and reduce poverty, while still protecting the environment. The major outputs of the organization are the results of the scientific research. How these research results are communicated and the activities undertaken to promote the results and encourage action are critical to the work being able to have positive impact. In order to meet their mission, IWMI must continually be evaluating the effectiveness of its science communications. IIP interns play a key role in this process. Each IIP intern will conduct research in the country where he/she is placed. As part of a team, the IIP intern will contribute towards defining the main products/activities, target audiences, and aims of the different products/activities; designing the survey which will be based on face to face interviews; selecting the survey sample and planning the interview schedule; undertaking the survey; collating the data, analyzing the results, developing recommendations; presenting these and making recommendations for future marketing and communications. The IIP intern must be able to work well with people of different cultures, possess some evaluation experience (conducting surveys, facilitating focus groups, interviewing, data analysis, making presentations, etc.), and be a clear, concise report writer. See the listings in Placements by Region for descriptions of the specific projects available. View a Powerpoint presentation (.pdf) by a past intern.\nInvestors in Africa \u2013 Takura Ventures (PVT) LTD, an associate of African Century Group\nLocation: Harare, Zimbabwe\nAfrican Century is a visionary portfolio of sustainable investments in sub-Saharan Africa. Their aim is to build businesses of scale in specific sectors and geographies, which will create value for their investors and to create employment and lasting benefits for their partners and their communities. Takura Ventures is the Private Equity arm of African Century. The teams behind African Century and Takura Ventures have considerable combined experience of investment banking, private equity, corporate finance and operational management, and knowledge of business sectors and markets all over the world, including Africa. This IIP internship represents an exciting opportunity for a student to gain first-hand experience of private equity in a developing country and learn from leading professionals in the industry. The IIP intern will be closely involved in the day-to-day business of the company and will assist in areas such as analyzing existing and potential investments, assisting with research, and drafting and reviewing reports. They are looking for a dynamic, driven, bright and motivated IIP intern, who will be exposed to many aspects of businesses in Zimbabwe. Specifically, the IIP intern will assist the Chief Financial Officer and Investment Officer in evaluating potential private equity investment opportunities. This may involve macroeconomic research, sectoral analyses, basic financial modeling, assisting in the drafting of investment screening papers, developing strategies to assist the growth of portfolio companies etc. The IIP intern will also gain an appreciation for the running of a company in Zimbabwe by assisting in some of the day-to-day company management. This IIP placement is ideal for students with interests in finance, economics, mathematics and statistics. One placement has been established for an International Internship Program (IIP) intern.\nLafarge\nLocation: Saint-Quentin-Fallavier, France\nLafarge is one of the world\u2019s leading construction materials companies (#1 worldwide in cement, #2 in Concrete and Aggregates, and #3 in Gypsum Products), with a strong commitment to innovation and sustainable construction. Lafarge is supported by a substantial R&D effort with an annual budget of more than 170 million Euros, and mo240 researchers in the central research laboratory (LCR). Environmental considerations need to go faster in the development of innovative concretes having less impact without compromising the safety of the buildings. LCR has a 15 years experience in science-driven engineering of construction materials, starting with the launching, in 1999, of the first range of ultrahigh-performance concrete and, in 2000, with the first industrial range of self-placing concrete. Recently, they were able to put on the market a novel concrete with a thermal conductivity divided by three, which enables the development of several solutions for energy-efficient building, in partnership with French and Spanish contractors. This IIP placement includes research on the physical characterization of cementitious materials: applications, limits and synergies between three techniques BET, MIP and H+ NMR. The IIP intern will compare and combine the results of different analytical techniques (BET surface, mercury intrusive porosimetry, NMR cryoporometry) concerning porosity characterization in different cementitious materials. The IIP Intern will also improve the knowledge, and more particularly clarify the application range and the limits of each technique; define the synergy between these three techniques and suggest other techniques if necessary. One placement has been created for an International Internship Program (IIP) intern. This IIP placement is part a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education, and engineering students are preferred.\nMetis Gaia\nLocation: Lima and Arequipa, Peru\nMetis Gaia connects science and engineering for development in order to discover new and better ways to help societies progress with a baseline goal of corporate social responsibility. Metis Gaia is committed to promoting integrated work, empowerment, and diverse critical thinking to find innovative, context-specific, sustainable solutions for development. IIP interns can help produce: socioeconomic diagnosis, baseline studies, stakeholder analyses; help in the planning on: socioeconomic and productive development initiatives, corporate social responsibility, impact management, citizen participation programs; and contribute to the evaluation, monitoring, and communication for these issues. She or he might also work on projects related to impact analysis, alternatives and projections, risk and management; cost-benefit analysis; economic impact valuation; socioeconomic programs and projects and social and public policy formulation and advisory services. Other tasks the IIP intern might assist with are fundraising efforts, specifically in research, writing and submitting grants, taking the grant writing process from beginning to end.\u00a0 Interested interns will undergo an interview process through which Metis Gaia will discuss and determine which types of projects would be best for them personally based on their academic background and personal interests. Spanish proficiency (speaking, reading and writing) is a must. This placement is ideal for IIP candidates who demonstrate a commitment to development and have interests in economics, sociology, psychology or engineering. One placement has been established for an International Internship Program (IIP) intern.\nMiddle East Scientific Institute for Security (MESIS)\nLocation: Amman, Jordan\nAn NGO based in Amman, Jordan, MESIS is a joint initiative between the Royal Scientific Society and the U.S. Department of Energy. MESIS deals with a variety of issues on the regional level relating to energy, environment, and borders. MESIS\u2019 main role is to develop and implement regional training and engagement programs for experts and officials with a view to enhance the role of scientific and technological solutions to the region\u2019s challenges, specifically those that are cross-border by nature. The internship is flexible in the sense that the IIP intern can be involved in a number of issues. For instance, while planning and implementing a major international conference at MESIS, the IIP intern can be involved in budgeting, logistics, protocol, outreach, and customer relations and/or the content-side of the event (such as incorporating water modeling technologies into regional track II discussions on water, developing a regional response plan for a pandemic outbreaks/biohazard outbreaks/nuclear accidents, and testing infrasound technologies to be used for the comprehensive nuclear test ban treaty verification regime). The MESIS organization is small (about seven permanent staff members) but has a wide network of supporters and deals with high level officials. The team is quite ambitious and driven. All staff members are fluent in English. However, there is still opportunity for IIP interns to improve their Arabic language skills. This placement is ideal for IIP candidates with interests in international affairs, public policy, development, Middle East studies, hard sciences, management, marketing, science, and technology. Engineering and computer skills would be an asset, but are not required. Two placements have been created for International Internship Program (IIP) interns.\nNational Institute of Oceanography and Experimental Geophysics\nLocation: Trieste, Italy\nThe National Institute of Oceanography and Experimental Geophysics is a public-sector scientific institution that promotes, coordinates, and carries out research at the international level in the fields of physical, chemical and biological oceanography, marine geophysics, applied and exploration geophysics, and seismology. Humankind influences its environment to a significant extent and is in turn increasingly dependent on its changes. Climate change, increasing vulnerability to natural hazards, and other critical developments have been observed for decades, and important resources, such as drinking water, fertile soils, and energy sources threaten to become scarce. Consideration of all kinds of primary energy and the broad-based exploration of innovative technologies for the efficient and effective conversion, storage and use of energy forms is absolutely essential in this respect. This is why NIOGS is engaged in foresighted, preventive research for the future. This IIP internship provides a great opportunity for IIP candidates with interests in physics, engineering, oceanography, seismology, geophysics for environmental applications, marine biology, and earth sciences. The particular project can be tailored to the student\u2019s particular background/interest in the aforementioned areas. Basic math and physics, as well as a background in environmental sciences, are assets. Two placements have been created for International Internship Program (IIP) interns. View a Powerpoint presentation (.pdf) by a past intern.\nRuhr University Bochum, Research Internship with Chair for Embedded Security, Electrical Engineering and Information Sciences Department\nLocation: Bochum, Germany\nThe Chair for Embedded Security in the ECE Department of the Ruhr University Bochum is one of the leading groups in the area of applied cryptography and security in embedded devices. Its research typically incorporates advanced hardware and software implementation techniques with cryptography and algorithms. The Department frequently host foreign visitors and cooperates with the University of Massachusetts, Stanford University, the University of Waterloo, and WPI. The group is especially interested in IIP candidates with a background in EE/ECE, computer science, or mathematics. Possible research areas for the IIP intern include:\nSecurity analysis (including \"hacking\") of RFID tokens and wireless devices such as the ePassport or access tokens for buildings and cars\nHigh-performance FPGA-based computers for code breaking\nAnalysis of password choices by humans and improved password-search strategies\nEmbedded forensics for Blackberry-like devices\nComputer architectures for novel cryptographic schemes\nLightweight cryptographic implementation in software on embedded processors\nOne placement has been established for an International Internship Program (IIP) intern. This IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive on-site opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nRuhr University Bochum, Research Internship with Institute for Materials\nLocation: Bochum, Germany\nThe Institute for Materials has existed since the Ruhr-Universit\u00e4t was founded and is well known nationally and internationally. Today, the Institute for Materials consists of the Research Group for Materials Science and Engineering, the Research Group for Materials Technology, the Research Group for Materials Testing, and the Research Group for Materials for Microsystems. Directors from the Forschungszentrum J\u00fclich and the Max-Planck- Institute D\u00fcsseldorf are associated adjunct professors who cover the areas of Materials Processing and Interfaces, while an adjunct professor affiliated with the German Aerospace center (DLR) covers the area of Materials for Aerospace. The Institute for Materials is therefore large enough to perform high level materials research and teaching. In addition to the traditional fields of expertise (alloy steels, light metals, hard alloys, high temperature materials), research at the Institute for Materials also focuses on new multifunctional materials (especially shape memory alloys) and materials for small scale systems in harsh environments. IIP candidates should have a background in materials science. Possible areas of research for the IIP intern include:\n(Ferromagnetic) Shape memory alloys\nCombinatorial materials science\nOne placement has been established for an International Internship Program (IIP) intern.\nThis IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive on-site opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nSeureca\nLocation: Paris, France\nSeureca is Veolia Water's international consulting engineering subsidiary. The company focuses on international water development projects, targeting all stages of the water project development cycle (master planning, feasibility studies, financial feasibility, tendering, and construction supervision) and all disciplines within the water sector (institutional, technical, managerial/operational). Seureca has clients and colleagues worldwide, and the intern should be prepared to work on any aspect of projects on an as-needed basis. Seureca's offices work all over the world and are headquartered in Paris. This placement is for an engineering student to intern in the Paris offices and work on a variety of water-related projects. The IIP intern will work under the supervision of an engineer in the execution of one of many on-going projects in the water sector: drinking water and sanitation. Typical activities could include report/document reading and preparation, network or treatment plant modeling, technical/financial modeling, assistance with bids, translation, etc. MS Excel and basic programming, and engineering skills are helpful. Intermediate to advanced French is preferred; however, all language skills are useful (Portuguese, Russian, Kiswahili, Chinese, Hindi, Bulgarian, Arabic [ME/Algerian/Moroccan], etc.) and would therefore be an asset. Two placements have been created for International Internship Program (IIP) interns.\nTechnical University Dortmund, Research Internship with the Fraunhofer Institute for Material Flow and Logistics: Green Logistics Automotive Supply Chain\nLocation: Dortmund, Germany\nThe TU Dortmund is a technically oriented university that consists of 16 departments, including mathematics, physics, computer science, statistics, and engineering, but also non-technological departments such as education, sociology, journalism, history, music, or fine arts. The Fraunhofer Institute for Material Flow and Logistics (IML), based in Dortmund is one of Europe\u2019s largest application-oriented research organization. The Fraunhofer IML develops innovative solutions in the following fields of logistics: structural planning, system engineering and optimization of business processes; supply chain management, warehouse management, simulation; traffic systems and management and ecological logistic solutions. This IIP placement is on Green Logistics in Automotive Supply Chains. It is the task of the supply chain design (SCD) in combination with IT tools such as simulation programs to find appropriate network structures, number of echelons, stock levels along the supply chain and process structures that fulfill the respective requirements regarding performance, costs and ecology. Research for this IIP placement focuses on the development of methods for a \u201cgreen\u201d network design particularly in the automotive sector, the identification of general actions for the ecological adjustment of supply chains, and the creation of appropriate IT tools to support the planning. The IIP intern is expected to work within current research projects with the focus on Green SCD and to support the project team. This includes:\nThe analysis of data from German OEM\nThe conception of network design alternatives\nThe implementation of programming tasks\nThe processing of documents\nTo accomplish these tasks, the IIP intern will get support and guidance from a researcher as well as access to data and developed IT tools from a German OEM. IIP candidates with knowledge in the fields of logistics, supply chain modeling, and programming are encouraged to apply. One placement has been established for an International Internship Program (IIP) intern. This IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive on-site opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nTechnical University Dortmund, Research Internship with Department of Biochemical and Chemical Engineering, Process Dynamics and Operations Group (DYN)\nLocation: Dortmund, Germany\nWith more than 20 researchers, Process Dynamics and Operations Group (DYN), one of the largest of the 13 chairs that constitute the Department of Biochemical and Chemical Engineering of the TU Dortmund, offers interns the opportunity to participate in three ongoing research activities in the area of model-based design of complex systems, namely model transformations and the extension and optimization of a miniature pipeless plant. Besides the optimization and verification of hybrid systems,DYN's fields of research include the modeling, (logic) control, optimization, and operation of a variety of chemical processing systems, e.g. reactive distillation, chromatographic separations, and emulsion polymerization. Further research focuses on the scheduling of batch processes and the synthesis of integrated processes and process networks. DYN offers a variety of lectures in the fields of modeling, control, optimization, operation, and analytics of processing systems, many of which are held in English. The IIP intern will conduct research on one of the following three ongoing research areas:\nModel transformations:\nAlthough modeling, simulation, and analysis of complex dynamic systems is becoming increasingly popular in industry, most of the employed software tools (e.g. Dymola (Modelica), Matlab, gPROMS, EcosimPro etc.) are specialized in a certain field of application. In combination with limited model exchange capabilities and proprietary modeling languages, it is hardly possible to use the best tool for the different activities during the design cycle of a system. To relieve these restraints, algorithmic model transformations between a set of tools are currently developed. During the internship, interested students could work on: definition and formalization of reasonable subsets of modeling languages; development of transformations on subsets of different languages; extension of existing transformations with metadata This focus area is ideal for an IIP candidate with a background in Computer Science, Mathematics, or similar fields.\nOptimization of a Miniature Pipeless Plant\nAs a test bed for the model-based methods, a miniature pipeless plant was developed and built at DYN. It employs autonomous guided vehicles (AGVs) to transport vessels, which contain the process substances, between the process stations, where the unit operations are conducted. Students could work on one or several of the following topics: scheduling of AGVs and recipes; advanced AGV path-finding and collision avoidance algorithms; development of a hierarchical Programmable Logic Controller (PLC) system; application of model transformations in the design process. This focus area is ideal for an IIP candidate with a background in Computer Science, Mechanical, Electrical, or Chemical Engineering and interest in interdisciplinary work.\nAutomated testing of logic controllers:\nFaulty logic controllers frequently lead to undesired and very costly delays during the commissioning of e.g. automation systems of chemical processes. The manual testing of such complex automation system is tedious and can only involve subsets of all possible scenarios due to e.g. time restrictions. Automated testing algorithms will help the programmer to validate the correctness of the controller before commissioning. Students could work on one or several of the following topics: algorithmic generation of sets of test cases based on e.g. a formal specification of the desired behavior; automated testing procedures; analysis and visualization of the results of such an automated test This focus area is ideal for an IIP candidate with a background in Computer Science, Electrical, or Chemical Engineering and an interest in programming and interdisciplinary work.\nOne placement has been established for an International Internship Program (IIP) intern. This IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive on-site opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nUNICEF Madagascar\nLocation: Antananarivo, Madagascar\nOne of the biggest challenges facing UNICEF field operations in the developing world is access to accurate, reliable and timely information. With the recent proliferation of technology throughout the developing world, the ability to improve this access has become cheaper and the tools to do so more ubiquitous. In late 2007, UNICEF HQ began development of RapidSMS, an open-source Django-based framework supporting software programmers to quickly develop and customize specialized applications. Built to allow any mobile phone to interact with the web via SMS text messages, past projects have focused on creating tools for remote diagnostics, logistics coordination, community messaging, data collection and communication. In Madagascar, UNICEF is working to establish a standing RapidSMS \u2018hub\u2019 with which myriad customized applications of the framework can be deployed across UNICEF\u2019s program focus areas\u2014health, education, protection, youth participation, and communication for development\u2014in response to the diverse needs identified therein. The core objective of deploying RapidSMS in Madagascar is to improve access to information, streamline data management, and promote participatory development programming across multiple sectors at national level. By transforming the way data is collected and applied through its simple but dynamic two-way communication channels, RapidSMS aims to empower stakeholders\u2014duty-bearers and rights-claimers alike\u2014with unprecedented speed, efficiency, and accuracy in their day-to-day communication needs. As part of the Communication & Technology for Development (C4D/T4D) team, the intern would play a critical role in the technical development and deployment of UNICEF Madagascar\u2019s RapidSMS platform. Working directly with program specialists, development experts, and local partners\u2014both civil society and private sector agencies\u2014the intern would have the opportunity to bring projects from concept to completion and gain invaluable \u2018on-the-ground\u2019 experience in the developing world context. Applicants in computer science or engineering are preferred, but Interests should cut across the humanities and the engineering sciences, especially interest (and coursework experience) in both international development and computer programming. The intern should have experience with a mix of the following: Python or Ruby; Django (or extensive experience with a framework such as Cheetah, Camping, Rails); Source code management / Version control systems (Git); AJAX and JavaScript including libraries (such as jQuery and Mootools); mySQL (postgres); XHTML and CSS; XML. Fluency in English is required and basic French would be an asset.\nUniversity of Duisberg-Essen, Research Internship with Chair of Business Administration and Operations Management\nLocation: Essen, Germany\nThe Chair of Business Administration and Operations Management is part of the unit for Industrial Engineering within the Department of Mechanical and Process Engineering of the University of Duisburg-Essen. This research group is working on quantitative models and methods in manufacturing, including machine scheduling, supply chain co-ordination schemes etc. In their research work, they apply an integrated business and engineering perspective in their approach. IIP interns will work on projects related to one of the following areas:\nLot streaming, scheduling and due date related objectives in manufacturing\nHybrid flow shop scheduling problems with flow time objective\nMulti-criteria hybrid flow shop scheduling\nStatistical testing of hypotheses in numerical studies on manufacturing scheduling\nMulti-criteria machine scheduling including work-in-process\nOne placement has been created for an International Internship Program (IIP) intern. This IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive onsite opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nUniversity of Duisberg-Essen, Research Internship on the Electronic Properties of Semi-Conducting Nanoparticles\nLocation: Essen, Germany\nElectronic properties of semi-conducting nanoparticles: Semiconducting nanoparticles have a great potential for optical and electronic applications. The advantages of nanoscale particles combined with the properties of a semiconductor could be used in photovoltaics, light emitting and electronic devices. However the electronic band structure and the current transport mechanism are still not fully understood. The goal of this project is to characterize the electronic and optical properties of these particles through optoelectronic, electronic and magneto-transport measurements. The experiments are done in microoptical and high field magnetic measurement setup. Additional optical characterisation of the used nanoparticles by photoluminescence measurements will be conducted. The objective of the project involves sample design, sample preparation and electrical/optical characterization. This IIP intern will be involved with the following:\nDesign of a suitable sample and measurement geometry\nSample preparation (several clean-room-fabrication procedures such as: optical lithography, spin coating, and evaporation)\nElectrical and optical characterization of the device\nOne placement has been created for an International Internship Program (IIP) intern. This IIP placement is part of the Princeton-Con Ruhr International Research Fellowship Program (Reach), a joint initiative of the International Internship Program and the Keller Center for Innovation in Engineering Education and is reserved for engineering students only. This is an opportunity for selected Princeton University engineering student to participate in an eight-week research internship in their field of study that will provide them with hands-on experience with new technology and with international approaches to engineering sciences. The IIP intern will also receive onsite opportunities to improve cultural competence by taking German language course, attending lectures in European economics, policy and culture, and making site visits to German corporations, and participating in the international science conference.\nUniversity of Oslo, Department of Physics\nLocation: Oslo, Norway\nThe Complex Systems and Soft Materials group is one of the largest physics research networks in Norway ( www.complexphysics.org/ ). It consists of scientists from the University of Oslo, the Norwegian University of Science and Technology, and Institute for Energy Technology. A wide range of topics are pursued, including pattern formation in complex fluids, multiphase flows, granular materials, fracture, soft materials, and nanoscience. IIP interns will work as members of a dynamic research group and gain experience in planning and execution of projects at the forefront of international research on complex materials. The group has a range of advanced scientific instruments and imaging equipment available and strong activity in simulation and theoretical modeling of non-equilibrium systems. The IIP interns will be able to choose a project that they find interesting, run experiments, and analyze and present their findings. Typically a project involves building or modifying simple bench-top experimental setups and running a series of experiments where a few parameters of interest are varied. From the collected data, one then aims to build an understanding of the physical mechanisms and forces that generate the observed patterns. This placement is ideal for IIP candidates with interests in physics. Two placements have been established for International Internship Program (IIP) interns. Possible projects may include the following (several other projects will also be available):\nHydraulic fracturing: Study the dynamics of fracture propagation in deformable materials upon injection of pressurized fluids. Do the fractures behave differently if we change the rate of injection or the compressibility of the fluid?\nFrictional fingering: We have discovered a new pattern formation process that results in labyrinthine structures in fully dried out granular mixtures. But what happens if we instead inject air and let the structure grow freely? Will we get branching fractals?\nBraided rivers in the lab: We can make miniature rivers in the lab by letting a small stream of water flow across layer of granular material. How can we characterize the dynamics of this river, e.g. how often does it change direction, and what are the distributions of wet/dry periods for a given place?\nVisagio\nLocation: Rio de Janeiro, Brazil\nVisagio is a business consulting and information technology firm, specializing in operations strategy, process engineering, organization design, and supply chain and logistics optimization. The IIP intern with Visagio will engage in short-term business and technical consulting projects with Visagio\u2019s clients. Each IIP intern will be assigned to a primary consulting project in a market segment, such as manufacturing, mining and ferrous metallurgy, agribusiness, sugar and alcohol, oil and gas, retail, telecommunications, and finance, among others. Throughout the IIP experience, the intern may participate on the following activities:\nProject management: schedule design and implementation\nBusiness process management: process mapping and modeling\nOrganization design: area/department structuring and optimization\nSupply chain: logistics modeling and optimization\nBusiness planning: business plan development\nTool development: computer programming\nIIP candidates with interests in business, computer science, engineering, and economics are encouraged to apply. Basic speaking, reading, and writing skills in Portuguese and intermediate Spanish skills are highly recommended. One placement has been established for an International Internship Program (IIP) intern.\n\u00a9 2012 The Trustees of Princeton University\nLast update: December 15, 2011\n"}, {"score": 1990.1511, "uuid": "e34cb1de-c8b0-5a91-b0b0-6d8f22337d7b", "index": "cw12", "trec_id": "clueweb12-0104wb-45-11421", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/csee/electrical-engineering/", "page_rank": 1.299506e-09, "spam_rank": 83, "title": "Electrical <em>Engineering</em> | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "Tim Oates <em>is</em> an Associate Professor in the CSEE Department at UMBC. He received B.S. degrees in <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em> from North Carolina State University in 1989, and M.S. and PhD degrees from the Univ of Massachusetts Amherst in 1997 and 2000, respectively.", "explanation": null, "document": "UMBC Center for Advanced Sensor Technology\n11:30am-12:45pm, Friday 14 October 2011, ITE 231\nInteraction of the light with the matter is one of the fundamental interactions in the nature. It is used in a variety of fields, stretching from telecommunications to life sciences. In this talk, the use of luminescence for sensing purposes will be highlighted. In particular, fluorescence spectroscopy will be illustrated. Multiple examples that employ different characteristics of the fluorescence (excitation and emission spectrum, decay time, polarization, and combination thereof) will be given. The presented sensing principles are used for measurements of oxygen, pH, CO2, ethanol, etc. As an optical chemical sensor requires successful interweaving of elements from 5 different scientific areas (analytical chemistry, polymer science, optics, electronics and computer science), the problems and the requirements for system integration are discussed.\nDr. Yordan Kostov received his B.Sc. and M.Sc. with honors in 1987 from Department of Electrical Engineering, Odessa Politechnic Institute, Former USSR. He received a Ph.D. Degree in Electrical/Chemical Engineering from Bulgarian Academy of Sciences for his work in the area of optical chemical sensors and biosensors. After that, Dr. Kostov spent an year as a post-doctoral fellow at the Institute for Technical Chemistry, University of Hanover, Germany. In 1994 he accepted a position as an Assistant Professor in the Department of Biotechincs, Sofia Technical University, Bulgaria. In 1999 he became a post-doctoral fellow at University of Maryland Biotechnology Institute, at the Medical Biotechnology Center. He joined the UMBC Department of Chemical and Biochemical Engineering as a Research Assistant Professor in 2000, and is now Research Associate Professor since 2006. Dr. Kostov also holds a position as an Assistant Director of the Center for Advanced Sensor Technology at UMBC. He is involved in the development of chemical and biochemical sensors for biotechnology, bioengineering and biomedical applications.\nSeminar Host: Prof. Joel M. Morris\nposted Saturday, September 24th, 2011\nEE Graduate Seminar\nIntelligent Agents in the OntoAgent Cognitive Architecture\nProfessor Sergei Nirenburg\nDirector, Institute for Language and Information Technologies\nComputer Science and Electrical Engineering\nUniversity of Maryland, Baltimore County\n11:30am-12:45pm Friday 30 September 2011, ITE 231\nOntoAgent is a constantly evolving cognitive architecture that facilitates development of and experimentation with artificial intelligent agents (ontoagents). Distinguishing characteristics of Ontoagents include the following.\nThey model human information processing capabilities by simulating conscious perception and action, which involves reasoning and decision-making;\nThey are intended to operate in a hybrid network of human and artificial agents; and\nThey incorporate: (a) an ontological world model and a memory (fact repository) of instances of ontological objects, events and properties; (b) OntoSem, a natural language processing module that supports two-way translation between texts (including dialog turns) and their semantic and discourse/pragmatic meanings; (c) a goal- and plan-oriented reasoning module; (d) a decision theory for choosing goals, plans and individual actions that relies on knowledge (beliefs) about self, other agents, the ontological world model, the current world state and memory of past world states and past actions; (e) a capability for verbal, mental and simulated physical action; (f) (optionally) a physiological model, making them what we call double agents with simulated bodies as well as simulated minds and providing an additional channel of perception; and (g) (optionally) personality traits, preferences and psychological states that influence their overtly perceived or subconscious preferences in decision-making.\nOntoAgent has so far provided the basis for two proof-of-concept systems:\nMaryland Virtual Patient (MVP) modeling a patient and a tutor to help training in medical diagnostics and treatment; and\nCLinicians ADdvisor (CLAD) assisting clinicians by reducing their cognitive load.\nThis talk will give a brief introduction to OntoAgent functionalities implemented in MVP and CLAD.\nProfessor Nirenburg has worked in the areas of cognitive systems, artificial intelligence, and natural language processing (NLP) for over 30 years. His professional interests include developing computational models of human cognitive capabilities and implementing them in hybrid-engine models of societies of human and computer agents; computational studies of meaning in natural languages; and representation and management of knowledge about the world and about language. He is Member of the Intl Committee on Computational Linguistics (ICCL) and Honorary Editor of Machine Translation (served as Editor-in-Chief in 1987-96). He has been Program Committee Chair for: Machine Translation Summit III (Washington, DC, 1991), the Conference on Applied NLP sponsored by the Association for Computational Linguistics (Seattle, WA, 2000), and COLING 2004 in Geneva, Switzerland. He served as a director of two NATO-sponsored Advanced Studies Institutes on Language Engineering for Lesser-Studied Languages (Ankara, Turkey, 2000 and Batumi, Georgia, 2007).\n"}, {"score": 1982.7297, "uuid": "5e30a3cc-ede8-5dff-842e-e9ebc8656d27", "index": "cw12", "trec_id": "clueweb12-0200wb-23-17675", "target_hostname": "www.cs.grinnell.edu", "target_uri": "http://www.cs.grinnell.edu/~rebelsky/Courses/CS151/2008S/Outlines/outline.52.html", "page_rank": 1.1855406e-09, "spam_rank": 97, "title": "CS151.01 2008S : Class 52: <em>What</em> <em>is</em> <em>Computer</em> <em>Science</em>? Revisited", "snippet": ". * I&#x27;ve given you a simple definition: <em>Computer</em> <em>science</em> <em>is</em> the study of algorithms and data. * We&#x27;ve seen a bit <em>what</em> an algorithm <em>is</em> and <em>what</em> data are. * In late April and early May 2008, the SIGCSE (Special Interest Group in <em>Computer</em> <em>Science</em> Education) listserve had an <em>interesting</em> discussion about", "explanation": null, "document": "We started the course with this question.\nWe therefore start to end the class with a similar question.\nI've given you a simple definition: Computer science is the study of algorithms and data.\nWe've seen a bit what an algorithm is and what data are.\nBut how do we study them?\nHow have we studied them in this course?\nA Professional Discussion\nIn late April and early May 2008, the SIGCSE (Special Interest Group in Computer Science Education) listserve had an interesting discussion about the definition of CS, spurred, in part, by a comment on the role of Calculus in CS and ABET's decision to remove the Calculus requirement.\nABET is the engineering accrediting board\nI particularly like the following message.\nFrom: Michael Feldman Subject: Re: [SIGCSE-members] CS definitions Date: May 3, 2008 6:18:28 PM CDT To: SIGCSE-members\nComputing Curricula 2005 was developed by a joint task force of members from The Association for Computing Machinery (ACM), The Association for Information Systems (AIS), and The IEEE Computer Society (IEEE-CS).\nHere's the definition of Computer Science that appears in CC 2005, in the overview document at http://www.acm.org/education/curric_vols/CC2005-March06Final.pdf:\n\"Computer science spans a wide range, from its theoretical and algorithmic foundations to cutting-edge developments in robotics, computer vision, intelligent systems, bioinformatics, and other exciting areas.\n\"We can think of the work of computer scientists as falling into three categories.\n\"-- They design and implement software. Computer scientists take on challenging programming jobs. They also supervise other programmers, keeping them aware of new approaches.\n\"-- They devise new ways to use computers. Progress in the CS areas of networking, database, and human-computer-interface enabled the development of the World Wide Web. Now CS researchers are working with scientists from other fields to make robots become practical and intelligent aides, to use databases to create new knowledge, and to use computers to help decipher the secrets of our DNA.\n\"-- They develop effective ways to solve computing problems. For example, computer scientists develop the best possible ways to store information in databases, send data over networks, and display complex images. Their theoretical background allows them to determine the best performance possible, and tstudy of algorithms helps them to develop new approaches that provide better performance.\"\nI also think the CSAB definition at http://www.csab.org/comp_sci_profession.html bears repeating:\n\"Computer science is a discipline that involves the understanding and design of computers and computational processes. In its most general form it is concerned with the understanding of information transfer and transformation. Particular interest is placed on making processes efficient and endowing them with some form of intelligence. The discipline ranges from theoretical studies of algorithms to practical problems of implementation in terms of computational hardware and software. A central focus is on processes for handling and manipulating information. Thus, the discipline spans both advancing the fundamental understanding of algorithms and information processes in general as well as the practical design of efficient reliable software and hardware to meet given specifications. Computer science is a young discipline that is evolving rapidly from its beginnings in the 1940's. As such it includes theoretical studies, experimental methods, and engineering design all in one discipline. This differs radically from most physical sciences that separate the understanding and advancement of the science from the applications of the science in fields of engineering design and implementation. In computer science there is an inherent intermingling of the theoretical concepts of computability and algorithmic efficiency with the modern practical advancements in electronics that continue to stimulate advances in the discipline. It is this close interaction of the theoretical and design aspects of the field that binds them together into a single discipline.\n\"Because of the rapid evolution it is difficult to provide a complete list of computer science areas. Yet it is clear that some of the crucial areas are theory, algorithms and data structures, programming methodology and languages, and computer elements and architecture. Other areas include software engineering, artificial intelligence, computer networking and communication, database systems, parallel computation, distributed computation, computer-human interaction, computer graphics, operating systems, and numerical and symbolic computation.\n\"A professional computer scientist must have a firm foundation in the crucial areas of the field and will most likely have an in-depth knowledge in one or more of the other areas of the discipline, depending upon the person's particular area of practice. Thus, a well educated computer scientist should be able to apply the fundamental concepts and techniques of computation, algorithms, and computer design to a specific design problem. The work includes detailing of specifications, analysis of the problem, and provides a design that functions as desired, has satisfactory performance, is reliable and maintainable, and meets desired cost criteria. Clearly, the computer scientist must not only have sufficient training in the computer science areas to be able to accomplish such tasks, but must also have a firm understanding in areas of mathematics and science, as well as a broad education in liberal studies to provide a basis for understanding the societal implications of the work being performed.\"\nLet me pull out and emphasize one part of the 3rd paragraph, because (in my opinion) it's really the nub of the profession and consequently of our responsibility as educators:\n\"[A] well educated computer scientist should be able to apply the fundamental concepts and techniques of computation, algorithms, and computer design to a specific design problem. The work includes detailing of specifications, analysis of the problem, and provides a design that functions as desired, has satisfactory performance, is reliable and maintainable, and meets desired cost criteria.\"\nIf that's not a clear, crisp, understandable, effective definition of our profession, I don't know what is.\nMike Feldman\nSubfields of Computer Science\nIn part, the ways in which we study algorithms lead to different subfields of computer science. The domains we study also lead to different classes of algorithms.\nComputer scientists who emphasize organization and architecture study the ways in which algorithms and data may be implemented in hardware and the implications of particular implementations.\nExample: Representing integers and adding integers.\nGrinnell's course: CSC 211\nComputer scientists who emphasize operating systems study algorithms and data representations that permit programs to use the common resources (file system, processor, mouse, etc.)\nExample: Dining philosophers problem.\nGrinnell's course: CSC 213\nComputer scientists who emphasize software engineering look at the design of large computer applications. They may consider process, program segmentation, team aspects, or even social aspects.\nExample: Waterfall vs. Agile\nGrinnell's courses: CSC 323/335\nComputer scientists who emphasize artificial intelligence look for ways to either model the way the brain works or to build alternate simulations.\nExample: Genetic programming.\nGrinnell's course: CSC 261\nComputer scientists who emphasize algorithms tend to look for interesting problems for which to design algorithms. They also investigate general algorithm design strategies and prove things about the characteristics of problems and algorithms.\nExample: Lower-bound on the running time of a sorting algorithm.\nExample: The traveling salesman problem.\nGrinnell's' course: CSC 301\nComputer scientists who emphasize programming languages look at the design of the languages in which we express algorithms.\nExample: Paradigms\nCSC 362 considers who we implement these languages.\nComputer scientists who emphasize theory consider models of computation and the limits of these models.\nExample: The halting problem.\n"}, {"score": 1963.4354, "uuid": "eca347c9-ab7a-5358-8941-269b0a56f698", "index": "cw12", "trec_id": "clueweb12-0912wb-41-11738", "target_hostname": "www.pacific.edu", "target_uri": "http://www.pacific.edu/Academics/Schools-and-Colleges/School-of-Engineering-and-Computer-Science/Academics-/Majors/Computer-Science-.html", "page_rank": 1.2035044e-09, "spam_rank": 95, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The <em>Computer</em> <em>Science</em> major prepares you for a career as a <em>computer</em> scientist <em>or</em> software <em>engineering</em> professional with skills and experience in a variety of specializations <em>or</em> tracks. You may also design your own custom concentration.", "explanation": null, "document": "Networks & Security\nTheoretical Foundations\nWhat is Computer Science \u00c2 Computer Science is a discipline that explores how to use computers to solve real world problems.\u00a0 Computer Scientists create algorithms and write computer programs that help other people do their work more efficiently, understand scientific phenomenon, and make new discoveries that were not possible before the computer age. Chances are, whenever you use an electronic device, a computer scientist wrote the program that controls its behavior.\nCareers in Computer Science \u00c2 So you're interested in computing and think that computer science would be an interesting field to study.\u00a0 Your next question (or your parent's question) is probably about what you'll do after you get your degree.\u00a0 Will you be able to find a job with decent pay?\u00a0 Will it lead to a profitable career?\u00a0 Computer Scientists are in demand!\u00a0 Job opportunities in computing careers are expected to be among the fastest growing through 2014.\u00a0 Computer Scientists are also some of the best paid professionals in the workforce today and typically report high levels of job satisfaction.\u00a0 If you are looking for a career that is exciting, on the cutting edge, and always in demand, Computer Science might be for you!\nDegree Programs \u00c2 The Computer Science major provides a strong background in the theory and practice of computer science.\u00a0 The program includes a general education component, a math and science component, a computer science core component and electives selected according to the student's chosen area of concentration:\u00a0 Computational Modeling, Foundations, Games and Simulation, Information Systems, Networks and Security and Software Development.\nEarn While You Learn\nPacific's computer science students earn, on average, $18-20 per hour at paid-internships with industry leaders such as Cisco Systems, NVIDIA, Hewlett Packard, Lawrence Livermore National Laboratory and Sandia National Laboratories.\nExceptional Professional Outlook\nStarting salaries for Pacific computer science graduates average over $14,000 higher than the national average.\u00a0 Job opportunities in computing careers are expectied to be among the fastest growing through 2014.\u00a0 Computer Scientists are also some of the best paid professionals in the workforce today.\nUnique Program\nWith Pacific's five-year Blended Bachelor's and Master's Degree Program, you can increase your earning potential $10,000 - $12,000 per year.\u00a0 Pacific's Master's Degree Program allows students to begin graduate course work during their senior year at Pacific, completing both degrees in a total of five years!\n"}, {"score": 1951.5037, "uuid": "7425ceea-4ff9-54f7-abfc-1131473f937b", "index": "cw12", "trec_id": "clueweb12-0104wb-24-29601", "target_hostname": "www.chalmers.se", "target_uri": "http://www.chalmers.se/cse/EN/news", "page_rank": 1.6954741e-09, "spam_rank": 97, "title": "Chalmers: <em>Computer</em> <em>Science</em> and <em>Engineering</em>: News", "snippet": "Helena Holmstr\u00f6m Olsson, Associate Professor at the Department of <em>Computer</em> <em>Science</em> and <em>Engineering</em>, has studied improved and <em>more</em> flexible methods for software development since 2007, where much of the research <em>is</em> carried out in close collaboration with Ericsson AB.", "explanation": null, "document": "Pedagogical prize to Software teacher Carl Magnus Olsson\nThe University of Gothenburg has awarded Carl Magnus Olsson this year's individual pedagogical prize.\nEach year the University of Gothenburg awards teachers for excellent pedagogical contributions to education. This year the award goes to Carl Magnus Olsson for his work with developing the project course Industrial IT and Embedded Systems. He was nominated by students from the bachelor programme Software Engineering and Management.\nThe students themselves take active part in formulating the project within which they get the opportunity to really turn theoretical knowledge into practical solutions when developing software. The university's motivation reads \u201cCarl Magnus Olsson has clear visions on how to improve and develop IT education in order to better inspire students to real challenges and he possesses the ability to turn his ideas into tangible and inspiring teaching\u201d.\nWe are very proud that Carl is a member of our staff and very happy that we have students so engaged in their education to show their appreciation with their teacher and nominate him for this award.\n[101004]\nPer Stenstr\u00f6m constructs the computers of the future\nPer Stenstr\u00f6m, professor at the Department of Computer Science and Engineering, wants to find the optimal technology for the computers of the future. To design computers in alternative design materials, with higher performance AND\u00a0a sustainable energy comsumption is a major challenge for the researchers in the computer architecture field.\n[101001]\nThe Chalmers' pedagogical prize to Dag Wedelin\nDag Wedelin, Associate professor at the Department of Computer Science and Engineering, has been awarded the Chalmers pedagogical prize for 2010.\n[100930]\n\"Most Influential ICFP Paper Award\" to Koen Claessen and John Hughes\nKoen Claessen and John Hughes, Department of Computer Science and Engineering, have received the \"Most Influential ICFP Paper Award\" of 2010. The award is presented annually to the author(s) of a paper presented at the ICFP conference (International Conference on Functional Programming), held 10 years prior to the award year.\nCitation:\nThis paper presented a very simple but powerful system for testing Haskell programs that has had significant impact on the practice of debugging programs in Haskell. The paper describes a clever way to use type classes and monads to automatically generate random test data. QuickCheck has since become an extremely popular Haskell library that is widely used by programmers, and has been incorporated into many undergraduate courses in Haskell. The techniques described in the paper have spawned a significant body of follow-on work in test case generation. They have also been adapted to other languages, leading to their commercialisation for Erlang and C.\n[100930]\nArnar Birgirsson receives Google Europe Doctoral Fellowship\nArnar Birgirsson, doctoral student at the Department of Computer Science and Engineering, has received one of Google Europe Doctoral Fellowships for 2010. The prestigious award will finance the receiver's research during three years.\n[100826]\nThe 20th Haskell anniversary\nThe hbc compiler was written by Lennart Augustsson, a researcher at the Department of Computer Science at Chalmers University whose programming productivity beggars belief. The hbc was the first compiler written for the Haskell programming language and it was released on the 21 of August 1990.\nIn the end of the 80\u2019s Lennart Augustsson and Thomas Johnsson were working on development of compilers for lazy functional languages. They called their functional language LML and invented many important techniques that have become standard today. The functional language work involved many other people at the Department of Computing Science at the time, and several PhD students did their doctorates on the issue.\nSome researchers were working on similar things at other universities and a committee for people interested in functional languages was founded. The committee included Lennart Augustsson, Thomas Johnsson, and John Hughes for example (John Hughes was at Glasgow University, now at Chalmers University of Technology), and together they designed the Haskell language \u2013 the first complete compiler was Lennart\u2019s hbc released in 1990.\nThe Haskell programming language is now celebrating its 20th anniversary. Haskell has been widely spread in recent years, both within academia and industry, though of course still not as common as Java and C++.\nIn \u201c A History of Haskell: Being Lazy With Class \u201d Augustsson writes:\n\u201cDuring the spring of 1990 I was eagerly awaiting the first Haskell compiler, it was supposed to come from Glasgow and be based on the LML compiler. And I waited and waited. After talking to Glasgow people at the LISP & Functional Programming conference in Nice in late June of 1990 Staffan Truv\u00e9 and I decided that instead of waiting even longer we would write our own Haskell compiler based on the LML compiler.\nFor various reasons Truve\u0301 couldn\u2019t help in the coding of the compiler, so I ended up spending most of July and August coding, sometimes in an almost trance-like state; my head filled with Haskell to the brim.\nAt the end of August I had a mostly complete implementation of Haskell. I decided that hbc would be a cool name for the compiler since it is Haskell Curry\u2019s initials. (I later learnt that this is the name the Glasgow people wanted for their compiler too. But first come, first served.)\nThe first release, 0.99, was on August 21, 1990. The implementation had everything from the report (except for File operations) and also several extensions, many of which are now in Haskell 98 (e.g., operator sections).\u201d\n2010: Lennart Augustsson is back in Gothenburg and Sweden, still working on Haskell, but he is now employed by Standard Chartered Bank in London, who is using Haskell for modeling of financial products. Lennart has close connections to the department of Computer Science and Engineering where Haskell and functional programming still flourishes as a research theme. The Functional Programming group at the department consists of around 15 people.\nMore about Lennart Augustsson:\n"}, {"score": 1950.4753, "uuid": "9d9a0424-c6ff-5233-ab67-3784a7d16961", "index": "cw12", "trec_id": "clueweb12-0800wb-74-08969", "target_hostname": "www.ece.queensu.ca", "target_uri": "http://www.ece.queensu.ca/Future-Students/Undergraduate/compeng-Elective-Courses.html", "page_rank": 1.1890626e-09, "spam_rank": 93, "title": "<em>Computer</em> <em>Engineering</em> Program", "snippet": "Streams of Specialization for Elective Courses in <em>Computer</em> <em>Engineering</em> <em>Computer</em> <em>Engineering</em> students should select elective courses to satisfy the degree program and prerequisite requirements listed in the <em>Computer</em> <em>Engineering</em> section of the Applied <em>Science</em> Calendar.", "explanation": null, "document": "Contact\nStreams of Specialization for Elective Courses in Computer Engineering\nComputer Engineering students should select elective courses to satisfy the degree program and prerequisite requirements listed in the Computer Engineering section of the Applied Science Calendar .\nStudents are encouraged to consider the suggestions below for the different streams of specialization in Computer Engineering. For each area or stream of specialization, certain elective courses are categorized as having primary or secondary importance in the view of the Department.\u00a0Students are not obligated to follow these suggestions and are free to make their own choices, subject to the requirements in the Applied Science Calendar related to accreditation units and the distribution of courses between Elective Lists A, B, and C for Computer Engineering.\u00a0The general advice that the Department extends to students is to make selections based on their interests and aptitudes, as well as their desired or anticipated career directions.\nBroadly speaking, List A for Computer Engineering mostly contains courses that are related to components and systems from a physical perspective including more traditional areas such as microelectronics, communications, and control, as well as computer systems and networks. List A also contains one design course administered by the Faculty of Applied Science. On the other hand, Lists B and C for Computer Engineering mostly contain more abstract courses that are related to software and applications. List B contains courses with instructors that are registered professional engineers, which is not the case for List C, and there is a limit on the number of courses from List C that can be counted towards degree requirements.\u00a0The suggested streams of specialization that are provided below do not include all of the available courses from Lists A, B, and C, but students are encouraged to consider any courses from those lists that they find interesting or relevant to their technical or career interests.\nBecause it is not possible to guarantee that any elective course is offered every year or scheduled in a conflict-free manner with respect to all other courses, students are encouraged to plan their elective choices in a flexible manner in both years 3 and 4, taking advantage of the fact that certain courses could be taken in either year. Students should also be aware of prerequisite relationships when making their elective choices, i.e., ensuring that they take the appropriate courses in year 3 that are prerequisite for desired courses in year 4.\nStreams of Specialization\n"}, {"score": 1945.4021, "uuid": "2301184f-2026-5f76-9572-72f17b7bb30f", "index": "cw12", "trec_id": "clueweb12-0402wb-22-25570", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/visiting-faculty/7-computer-science.feed?type=atom", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "CS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\n"}, {"score": 1945.4021, "uuid": "476f58b5-4b74-5f2f-a7d8-f49b33353110", "index": "cw12", "trec_id": "clueweb12-0402wb-22-25556", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/7-computer-science.html", "page_rank": 1.1707811e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}, {"score": 1945.4021, "uuid": "8034d286-6138-5bbd-9aa6-d909757d94cc", "index": "cw12", "trec_id": "clueweb12-0402wb-30-28559", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/current-faculty/7-computer-science.feed?type=rss", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}, {"score": 1945.308, "uuid": "030507ea-c2fe-53de-bca8-9336424b408d", "index": "cw12", "trec_id": "clueweb12-0402wb-30-28560", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/current-faculty/7-computer-science.html", "page_rank": 1.1707779e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}], [{"score": 1945.308, "uuid": "e107a2d1-fe83-542b-88ef-0161eb3ece75", "index": "cw12", "trec_id": "clueweb12-0402wb-30-28568", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/visiting-faculty/7-computer-science.html", "page_rank": 1.1707922e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "CS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\n"}, {"score": 1945.2769, "uuid": "6a77f08b-996a-5a1e-80e9-cfd340106a13", "index": "cw12", "trec_id": "clueweb12-0401wb-96-10234", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/faculty-interns/7-computer-science.feed?type=rss", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "Department:\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011Career Fair Programming Competition\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\nImagine n\u00a0 red coins [ Read more... ]\nGet in Touch - Department of Computer Science\nInformation on how to contact the department goes here.\u00a0 Include information for students seeking academic advising, prospective academic collaborators.\u00a0 For people seeking faculty positions, direct them to the HR department and/or link them to [ Read more... ]\nMajors and Minors - Department of Computer Science\nThe department of Computer Science teaches course leading up to the following qualifications:\nMajor in Computer Science Minor in BComputer Science Major in Management Information Systems (taught jointly with the Business Administration [ Read more... ]\nComputer Science : Faculty and Staff\nDr. Nathan Amanquah\n"}, {"score": 1945.2769, "uuid": "63729d1a-664d-5ac2-9372-bda531247a34", "index": "cw12", "trec_id": "clueweb12-0401wb-96-10233", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/faculty-interns/7-computer-science.feed?type=atom", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "Department:\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011Career Fair Programming Competition\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\nImagine n\u00a0 red coins [ Read more... ]\nGet in Touch - Department of Computer Science\nInformation on how to contact the department goes here.\u00a0 Include information for students seeking academic advising, prospective academic collaborators.\u00a0 For people seeking faculty positions, direct them to the HR department and/or link them to [ Read more... ]\nMajors and Minors - Department of Computer Science\nThe department of Computer Science teaches course leading up to the following qualifications:\nMajor in Computer Science Minor in BComputer Science Major in Management Information Systems (taught jointly with the Business Administration [ Read more... ]\nComputer Science : Faculty and Staff\nDr. Nathan Amanquah\n"}, {"score": 1944.74, "uuid": "5538be0b-b3b8-50c9-9e22-786ca134c732", "index": "cw12", "trec_id": "clueweb12-0401wb-86-23459", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/faculty-interns/7-computer-science.html", "page_rank": 1.1707904e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "Department:\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011Career Fair Programming Competition\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\nImagine n\u00a0 red coins [ Read more... ]\nGet in Touch - Department of Computer Science\nInformation on how to contact the department goes here.\u00a0 Include information for students seeking academic advising, prospective academic collaborators.\u00a0 For people seeking faculty positions, direct them to the HR department and/or link them to [ Read more... ]\nMajors and Minors - Department of Computer Science\nThe department of Computer Science teaches course leading up to the following qualifications:\nMajor in Computer Science Minor in BComputer Science Major in Management Information Systems (taught jointly with the Business Administration [ Read more... ]\nComputer Science : Faculty and Staff\nDr. Nathan Amanquah\n"}, {"score": 1944.6647, "uuid": "5c5cf971-84bd-5d6c-b9d7-13c2f95c7ba6", "index": "cw12", "trec_id": "clueweb12-0402wb-15-19706", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/7-computer-science.feed?type=rss", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}, {"score": 1944.4192, "uuid": "81bdd6a1-bdaf-5b31-8429-a6e9f641dd17", "index": "cw12", "trec_id": "clueweb12-0402wb-22-25555", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/7-computer-science.feed?type=atom", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}, {"score": 1942.71, "uuid": "4d8a648b-e914-5bf4-b5be-760b8da504b1", "index": "cw12", "trec_id": "clueweb12-0402wb-30-28558", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/current-faculty/7-computer-science.feed?type=atom", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "The seminar gives students, faculty and members of [ Read <em>more</em>... CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. ", "explanation": null, "document": "Ph.D., Electronics & Electrical Engineering, University of Strathclyde, UK\nB.Sc., Electrical & Electronics Engineering, Kwame Nkrumah University of Science & [ Read more... ]\nIn addition to courses in the Liberal Arts Core, students majoring in Computer Science take the following courses:\nProgramming I Programming II Discrete Structures & Theory Programming III Data Structures & Algorithms Computer [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nDepartment of Computer Science\nWelcome. The department of Computer Science teaches course leading up to the following qualifications\nMajor in Computer Science Minor in Computer Science Major in Management Information Systems (taught jointly with Business [ Read more... ]\n"}, {"score": 1942.71, "uuid": "1604887a-7593-5fa6-9cf7-b6616e10d8c2", "index": "cw12", "trec_id": "clueweb12-0402wb-22-25571", "target_hostname": "www.ashesi.edu.gh", "target_uri": "http://www.ashesi.edu.gh/academics/faculty-profiles/visiting-faculty/7-computer-science.feed?type=rss", "page_rank": 1.1700305e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em>", "snippet": "CS Seminar series <em>is</em> a weekly campus event where member of the community and invited guest come to give a seminar on <em>interesting</em> topics from the field of <em>Computer</em> <em>Science</em>. The seminar gives students, faculty and members of [ Read <em>more</em>...", "explanation": null, "document": "CS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of Ashesi Community [ Read more... ]\nCS Department Events\nCS Seminar Series\nCS Seminar series is a weekly campus event where member of the community and invited guest come to give a seminar on interesting topics from the field of Computer Science. \u00a0The seminar gives students, faculty and members of [ Read more... ]\n2011 Career Fair Programming Competition\nQualification:\nAll Ashesi students registered this semester can participate.\nInstruction:\n"}, {"score": 1942.9447, "uuid": "61ebebe4-6efd-59dd-b748-11fc2d7b73f6", "index": "cw12", "trec_id": "clueweb12-0106wb-06-13263", "target_hostname": "www.cse.buffalo.edu", "target_uri": "http://www.cse.buffalo.edu/undergrad/courses.php", "page_rank": 1.3665418e-09, "spam_rank": 97, "title": "Courses - UB <em>Computer</em> <em>Science</em> and <em>Engineering</em>", "snippet": "Examines the nature of <em>computer</em> <em>science</em> (e.g., whether it <em>is</em> a <em>science</em> <em>or</em> a branch of <em>engineering</em>, whether it <em>is</em> the study of physical <em>computers</em> <em>or</em> abstract computing); the nature of computation, algorithms, and software, and their implementation in <em>computer</em> programs; the nature of <em>computer</em> programs", "explanation": null, "document": "More \u00bb\nSoftware designs produced in the prerequisite CSE 442 Software Engineering course are carried here to a complete hardware realization. Bringing skills learned from previous hardware and software-oriented courses, students form multidisciplinary workgroups and are given tools, parts, goals, and constraints, all of which define the integrated design setting. These workgroups identify, formulate, and solve the hardware and software problems posed by their project, and defend their realization concepts at key intervals during the project build-out. Projects are tested, and a report analyzing the level of satisfaction of design and performance specifications submitted. Each group prepares a \"rollout\" presentation, which includes a demonstration of their project in operation. This is a required course for CEN majors.\n"}, {"score": 1941.6267, "uuid": "71a77cc9-f97c-5c52-8334-3aaad3eecfb1", "index": "cw12", "trec_id": "clueweb12-1703wb-99-03819", "target_hostname": "nmnwse.org", "target_uri": "http://nmnwse.org/careers/HTML/C07COMPU.HTM", "page_rank": 1.298315e-09, "spam_rank": 84, "title": "<em>Computer</em> <em>Science</em> &#x2F; <em>Engineering</em>", "snippet": "Currently, many well-paying, <em>interesting</em> jobs require <em>computer</em> skills, and the <em>more</em> mathematics, computing, and <em>engineering</em> courses you have taken, the <em>more</em> choices you will have. CRA Committee on the Status of Women in <em>Computer</em> <em>Science</em> and <em>Engineering</em>: http:&#x2F;&#x2F;www.cra.org&#x2F;Activities&#x2F;craw&#x2F;", "explanation": null, "document": "Computer Science\u2009/\u2009Engineering\nWhat is a computer scientist/engineer?\nComputers are made up of hardware and software. The physical parts of the computer, for example, the keyboard, printer, connectors, and chips, are hardware. The software part of the computer is the collection of programs that make the computers useful. A program is a set of instructions that tells the computer how to perform a task such as how to play solitaire or how to check the spelling of a story you write. Computer engineers design and build computer hardware. Computer scientists (or software engineers) write computer programs.\nWhat makes a good computer scientist/engineer?\nIf you like to solve problems, you might become a successful computer scientist or computer engineer. It is important to think logically and to be able to break a problem up into its parts and to assemble a solution from these parts. It is also important to pay attention to details; in this field a small oversight can have disastrous consequences. These careers also require good communication skills, which are used to define the problem and to document your solutions.\nWhat is life as a computer scientist/engineer like?\nBoth computer scientists and engineers work primarily in groups that work together to define the problem, establish schedules, brainstorm the solution, and document the results. An individual group member will be responsible for one aspect of the problem. Computer engineers often spend some part of their time in laboratories building and testing prototype hardware devices. They may be responsible for overseeing manufacturing of the actual devices. A computer scientist will do most of her programming in an office using a computer workstation.\nHow do I become a computer scientist/engineer?\nIn high school take a broad selection of challenging courses that make you think. If possible, take mathematics classes including algebra, geometry, and trigonometry. High school physics gives a good introduction to electricity, which is the power behind computers. Don't forget to take courses that emphasize communication, both writing and public speaking. After high school, some two-year programs are available in computer electronics and computer technology. Most colleges and universities offer four-year programs leading to a degree in computer science and four- or five-year programs leading to a degree in electrical engineering or computer engineering. These programs require classes in mathematics, physics, and programming. Advanced degrees are available for those interested in careers in advanced research or college teaching.\nWhat/where are the jobs?\nJobs for computer scientists and engineers are everywhere: in schools, industry, government, and universities. Demand far exceeds supply, and this condition will continue for many years. Currently, many well-paying, interesting jobs require computer skills, and the more mathematics, computing, and engineering courses you have taken, the more choices you will have.\nFor more information\nCRA Committee on the Status of Women in Computer Science and Engineering: http://www.cra.org/Activities/craw/\nAssociation for Computing Machinery (ACM): http://www.acm.org\nDenise C. George\n"}], [{"score": 1927.3633, "uuid": "3331b016-bd14-5b90-ab7e-55513571a511", "index": "cw12", "trec_id": "clueweb12-0804wb-77-30837", "target_hostname": "www.ece.queensu.ca", "target_uri": "http://www.ece.queensu.ca/Future-Students/Undergraduate/compeng-Career-Opportunities.html", "page_rank": 1.1890986e-09, "spam_rank": 92, "title": "<em>Computer</em> <em>Engineering</em> Program", "snippet": "<em>What</em> distinguishes a <em>computer</em> engineer from a <em>computer</em> scientist, <em>is</em> that the <em>computer</em> engineer has a detailed knowledge of circuits, electronics, digital logic, and hardware design in addition to mastery of software design and implementation.", "explanation": null, "document": "Contact\nCareer Opportunities for Computer Engineering\nComputer engineers emerged in the middle of the 20th century as specialists in the areas of electrical engineering that relate to computer systems design and computer software development. What distinguishes a computer engineer from a computer scientist, is that the computer engineer has a detailed knowledge of circuits, electronics, digital logic, and hardware design in addition to mastery of software design and implementation. Furthermore, a computer engineer can have expertise in signal processing and communication systems for the broader application of computer hardware and software design, ranging from standalone embedded computers for intelligent sensing and control of physical systems such as those in automobiles to the protocols and complex software that manage the operation of the highly-interconnected global Internet. Computer engineers make important practical contributions in many other areas, as outlined below:\nharnessing the continuing improvements in computer systems performance for general-purpose, scientific, and multimedia applications,\nimplementing increasingly sophisticated single-chip embedded computing systems for a variety of consumer and industrial applications,\nimproving user interfaces in computers and other consumer electronic devices,\ndesigning reliable software systems for financial, transportation, and other critical applications,\ncreating more robust solutions for computer and network security,\nand developing innovative applications of wireless communication capabilities in computers and other electronic devices.\nThe Computer Engineering program at Queen's University provides a broad undergraduate education to develop analytical skills and practical design knowledge that ensure long-term career flexibility. Students begin with interesting and challenging core courses in circuits, electronics, digital logic, microprocessor systems, and the design of digital systems. Software courses are also prominent, ranging from low-level implementation of data structures to high-level software design. After completing their core courses, students can then select more advanced hardware and software courses in areas such as integrated circuit engineering, computer system architecture, computer networks, system modeling and simulation, database systems, and computer graphics. The program culminates with students working on a full-year team design project in order to apply all of the knowledge and skills that they have acquired.\nBefore graduating, students in the Computer Engineering program may also complement their university coursework with a 12-month or 16-month professional internship at a company to acquire valuable experience, make professional contacts, and earn an income by applying their technical knowledge.\nGraduates of the Computer Engineering program can move directly into technical careers in industry, branch into technical business management by pursuing an MBA degree, or continue on to Master's or Ph.D. degree for a research career in a university or in a company. Graduates of the Computer Engineering program also continue their education to move into other professions. Some become medical doctors to apply their expertise in hardware/software design in developing or using biomedical devices. Others become lawyers to apply their technical knowledge in handling patents and other legal issues involving intellectual property.\n"}, {"score": 1925.1177, "uuid": "02fa9ac3-ed41-5fb8-a377-edf764527539", "index": "cw12", "trec_id": "clueweb12-1801wb-64-11819", "target_hostname": "www.forumosa.com", "target_uri": "http://www.forumosa.com/taiwan/viewtopic.php?f=35&t=109066&p=1417424", "page_rank": 1.1700305e-09, "spam_rank": 96, "title": "FORUMOSA \u2022 Math <em>or</em> <em>Computer</em> <em>Science</em> teaching positions?", "snippet": "Having said that, teaching <em>is</em> probably the least lucrative way of using math <em>or</em> <em>computer</em> <em>science</em> skills.", "explanation": null, "document": "Re: Math or Computer Science teaching positions?\nby ironlady \u00bb 18 Apr 2012, 21:11\nMaster's = university or college teaching position if you can find one. I don't see it as being likely, since there are more than enough qualified (Ph.D bearing) Taiwanese competing for the same jobs, but that's not to say that you might not get lucky.\nFor buxiban (cram school) math, usually the math teachers are \"famous\" high school teachers from Taiwan who have a \"proprietary method\" of teaching specifically to the test. Unless you're dead fluent in Chinese I don't think there would even be a chance (when I taught test prep buxiban classes for TOEFL and GRE I lectured in Chinese because it was not an English class, it was a \"how to get a good score on the TOEFL\" class. My experience was a long time ago now, but I haven't seen a significant change in the ads for buxibans so I'm supposing the situation hasn't changed all that much.\nIt would be interesting to see if you could get private students tutoring Math in English, but if I were a parent, I probably wouldn't go for it since I'd put mutual understanding of Math mechanics above the longer-range benefit of learning English at the same time. And if you aren't a skilled language teacher to begin with, it would be hard to make the English for higher math comprehensible to someone at the level of a typical not-doing-so-well-in-school Taiwanese kid.\nTerry Waltz, Ph.D\n"}, {"score": 1924.5709, "uuid": "b836686c-9d32-57ce-bbc7-7dc6734ae36a", "index": "cw12", "trec_id": "clueweb12-1801wb-19-04184", "target_hostname": "www.forumosa.com", "target_uri": "http://www.forumosa.com/taiwan/viewtopic.php?f=35&t=109066", "page_rank": 1.1700305e-09, "spam_rank": 96, "title": "FORUMOSA \u2022 Math <em>or</em> <em>Computer</em> <em>Science</em> teaching positions?", "snippet": "Having said that, teaching <em>is</em> probably the least lucrative way of using math <em>or</em> <em>computer</em> <em>science</em> skills.", "explanation": null, "document": "Re: Math or Computer Science teaching positions?\nby ironlady \u00bb 18 Apr 2012, 21:11\nMaster's = university or college teaching position if you can find one. I don't see it as being likely, since there are more than enough qualified (Ph.D bearing) Taiwanese competing for the same jobs, but that's not to say that you might not get lucky.\nFor buxiban (cram school) math, usually the math teachers are \"famous\" high school teachers from Taiwan who have a \"proprietary method\" of teaching specifically to the test. Unless you're dead fluent in Chinese I don't think there would even be a chance (when I taught test prep buxiban classes for TOEFL and GRE I lectured in Chinese because it was not an English class, it was a \"how to get a good score on the TOEFL\" class. My experience was a long time ago now, but I haven't seen a significant change in the ads for buxibans so I'm supposing the situation hasn't changed all that much.\nIt would be interesting to see if you could get private students tutoring Math in English, but if I were a parent, I probably wouldn't go for it since I'd put mutual understanding of Math mechanics above the longer-range benefit of learning English at the same time. And if you aren't a skilled language teacher to begin with, it would be hard to make the English for higher math comprehensible to someone at the level of a typical not-doing-so-well-in-school Taiwanese kid.\nTerry Waltz, Ph.D\n"}, {"score": 1913.5763, "uuid": "580544ba-2d5c-5624-8e69-39bfb9c8ef4a", "index": "cw12", "trec_id": "clueweb12-1804wb-50-24536", "target_hostname": "www.ce.ucsb.edu", "target_uri": "http://www.ce.ucsb.edu/profiles/faculty/", "page_rank": 1.2756641e-09, "spam_rank": 79, "title": "<em>Computer</em> <em>Engineering</em> | Faculty Profiles", "snippet": "I think that <em>is</em> <em>what</em> I find so rewarding about my job, bringing students to the edge of human understanding in <em>science</em> and <em>engineering</em>, and then pushing on that edge until we can move it forward.", "explanation": null, "document": "Honors and Awards: NSF CAREER, CRA-W Anita Borg Early Career Award, UCSB Distinguished Teaching Award, COE Teaching Award, ACM & IEEE Senior member\nTell Us About Your Research:\nI'm interested in improving the performance, energy efficiency, and ease of use of software systems and applications. In particular, my group focuses on techniques that help us understand the behavior of and to optimize programs written in high-level languages (Java, Python, Ruby, and others) that execute over the internet and/or distributed computer systems. Our techniques efficiently monitor and predict the behavior of programs as they run, and use this information to optimize all layers of the software stack.\nMy group recently has developed a new computing platform for cloud systems called AppScale. AppScale facilitates cloud computing research and implements the Google App Engine (GAE) APIs (emulating the GAE cloud). AppScale implements a number of different database back-ends, a map-reduce interface, support for computational and data-intensive workloads, as well as performance and resource monitoring for automatic scaling. My group employs AppScale to investigate the next-generation of distributed programming systems.\nHow and Why Did You Get Into Your Area of Research?: I found my area of interest the way many students find theirs: by trying out different things. When pursuing my PhD, I started out in Artificial Intelligence (because the group gave away free pizza \u0097 all right, I was a starving student). I investigated information theory and cryptography because I found an amazing professor with whom I liked working. I then realized that my true calling was programming systems (because I wrote programs to implement the theory instead of coming up with the theory myself :) \u0097 and because the potential of Internet computing and related technologies was so compelling). My interests in this area have evolved but have not waned; my particular foci over time have included mobile computing, sensor network systems, managed runtime systems (Java/.Net virtual machines), hand-held and microcontroller-based systems, interpreted language runtimes (Python, Ruby), distributed/Internet computing, and cloud systems.\nWhat do you Find Particularly Rewarding about your Research?: I love being able to work on hard problems that are important to industry, researchers and developers, and to the world around us. Programming technologies and devices change rapidly so there are always interesting directions to pursue and learn about. I never get bored. In addition, I love the intellectual autonomy and challenges that research enables. Finally, I get to work on these problems with amazingly bright colleagues and students who constantly inspire and energize me.\nWhere Will Your Research Take You Next: My group and I are on the bleeding edge of cloud computing and programming systems \u0097 and, the two are intertwined. I plan to investigate how to make writing efficient programs for cloud systems easier so that doing so can be done by a broader user base (scientists, data analysts, students, artists, ...) so that we all can more easily take advantage of the vast resources and potential that cloud systems offer. I also plan to continue investigating clever and useful ways of making the programs that we write more energy efficient, performant, and scalable.\nMore on Chandra's Research\nDo you collaborate with industry? Other groups outside of UCSB?: I collaborate (and have collaborated in the past) with researchers at Microsoft Research, IBM Research, Google, Intel, and other companies. Our collaborations have targeted high-level language virtual machine technologies (profiling, dynamic and adaptive optimization of programs, and garbage collection).\nDo you collaborate with other UCSB faculty and departments?: I collaborate with multiple faculty at UCSB as well. We combine our expertise, experiences and interests to pursue research in systems and software (e.g. in the areas of cloud computing, sensor networking, hardware/software interoperation, and static and dynamic program analysis).\nChandra's Research Group and Thoughts on Working with Graduate Students\nMy research group typically consists of 4-5 PhD students, 4-5 MS students, and multiple undergraduates. My students work together or on their own depending on their interests, work styles, and experience. We have both group meetings and individual meetings depending on the needs of the students.\nSteve Butner, Professor, Electrical and Computer Engineering (interviewed Spring 2011)\nAbout Professor Butner:\nPh.D.: Stanford University, Electrical Engineering\nM.S. Degree: U. of Pennsylvania (Moore School), EE\nResearch Interests: Computer System Design, Special-purpose Processors, High-reliability Systems, Robotics, Image Acquisition\nLab / Group Name: UCSB Computer Architecture Lab\nIndustry Employment: consultant to InTouch Health, CaceTech, Siemens, Allen-Bradley, USN-Pacific Missile Test Center, Micron Technology, Hesson Labs\nAwards and Honors: UCSB Academic Senate Distinguished Teaching Award for 2006-2007 and Computer Engineering Outstanding Faculty Award in 2002, 2003, 2005-2010\nCourses of Instruction: Computer Engineering Senior Capstone Project (ECE 189A/B) and Sensor and Peripheral Interface Design (ECE153B)\nProfessor Butner was asked to profile his ECE 189A/B course for this spotlight. Steve has instructed the ECE version of the Senior Capstone Course / Project for nine of its 10 years.\nTell us about the Computer Engineering Senior Capstone course and project:\nThe Capstone project course (ECE 189A/B) is an opportunity for students to put into practice what they have learned throughout their undergraduate career by participating in a complete idea-to-prototype project development. Requirements for the course include working in a small group to create unique digital hardware and software and demonstrating it as a working project on Capstone Presentation Day.\nThe Senior Capstone course is a two quarter course, explain what students do each quarter:\nFall Quarter (ECE 189A): the project idea is developed and refined. Project groups are formed. Groups meet with the instructor and the teaching assistant to subdivide project goals into realizable subsystems. Group members are encouraged to specialize on a subsystem or two of their choice and gradually throughout the quarter the digital hardware design of the project starts to come together. There are many devices and parts to select and order. There are schematics to be drawn and ultimately, by the end of the quarter, the layout of a printed circuit board emerges. Final deliverables from fall quarter are the project schematics, the project bill of materials, and computerized artwork files for printed circuit fabrication and assembly. While students are taking other non-capstone classes, we arrange for the fabrication of the hardware that they designed during fall quarter.\nSpring Quarter (ECE 189B): When they come back for spring quarter there is much to do to power-up, debug, and verify the platforms. Once the hardware subsystems start to work reliably then the task of software creation and debugging begins. As entire subsystems start to realize their intended functionality, they are integrated to form one overall project. At the end, posters and a presentation are created. Everyone gets together on Capstone Presentation Day to explain and proudly display the results of more than two quarters of hard work.\nTell us about the Capstone Presentation Day: The Capstone event is a public gathering. Students from ECE189A/B combine with others from CS189A/B and ECE188A/B to make a full day of activities. Normally there are morning (CS189A/B) and afternoon (ECE189A/B & ECE188A/B) sessions comprised of 20-30 minute presentations about projects from the courses. There is a noon-time poster session where everyone demonstrates their projects to the public. Free pizza is provided and, all around, it is a festive atmosphere with attendance from other engineering departments, from local industry, and by parents and family for those who are close enough to make the trip.\nWhat is it like for students to work in a group?: There isn't really any \"magic\" formula for learning to work in teams. The best advice I can give is for each student to make his or her own commitments and then follow through on them such that the other team members develop a strong sense of trust and respect. Ultimately the entire team sinks or swims together so a sense of camaraderie and trust tends most often to lead to a job well done.\nWhat it's like to work in the lab: In the spring quarter especially the focus shifts from creating/designing to debugging/verifying. The Computer Engineering Instructional Lab (HFH-4118) becomes the place where each of the project pieces are powered up, then debugged, then ultimately integrated with others. By the middle part of spring quarter most projects are starting to take shape and teams start to build up subsystem tests and mini-demos. These lead to ever more full-scale project demonstrations until each and every aspect of the project is working. It is hard to answer the question \"what's it like in the lab?\" because every project and every group is different. There are groups who spend a significant fraction of their waking hours (and even some of their non-awake hours) while other groups are able to complete their check-out and integration in an efficient and timely manner. Learning to work effectively in the lab is an important side-effect of this course, though some students only seem to learn this by reflecting back on the whole experience.\nMost difficult concept for the students to learn: There are several areas that come to mind. First is time management. Second is learning to work effectively in groups. Third is learning to manage details and learning to conquer complexity by subdividing and taking a stepwise approach.\nExplain the role of the Teaching Assistant (TA): The teaching assistant works hand-in-hand with the instructor, doing everything except lecturing. Much of the spring quarter direct contact time is spent meeting with individual project groups to review current progress and suggest approaches to solving current problems. The TA is also an important source of help for the students while in the testing and integration phase.\nHave any of the projects spun off into start-ups?: I'm aware of a couple groups who spun off into a start-up. In each case it was not that the capstone project directly turned into a product but rather it was the people in the project group, who had learned to trust and respect one another enough that the group formed into a company. One example was Matt Vlasach, Taylor Boyko, Brian DeRenzi, S. Prasad, and David Trainor who did the InfoPoint project in 2005/2006. These students leveraged their ECE189 group chemistry to found Pacific Swell Networks in the Los Angeles area.\nYour favorite project, most difficult project, and favorite video:\nFavorite: It is difficult to choose a favorite though one project does seem to rise above the others... literally. A few years ago one of the projects purchased a mini-blimp kit. It was one of those radio-controlled helium-filled blimps that you might see flying around at an NBA game. The students took the electronics out of it and built their own controls, which included a small B/W camera and radio downlink.\nDifficult: It is a bit easier to choose the most difficult project. One that comes to mind first was called BalanceBot. It was a two-wheeled autonomous robot that was supposed to drive around on two wheels while maintaining balance. Unfortunately, the students who chose this project had not had enough controls courses; naturally they found it extra challenging to keep everything in balance. And, the homemade mechanical aspects of this project made their task even tougher. A word to the wise: make sure you choose a project that you can handle!\nFavorite video: Although there are many good videos, the first Capstone video \" Sentry Robot \" set the standard and capstone spirit that all videos aspire to capture.\nExplain how the field of computer engineering and the Capstone course and projects have evolved over the past 10 years: Naturally, in the time we have been doing capstone projects there has been a great deal of advancement in the computer industry. Integrated circuits, particularly processors, have become more capable and their packaging has dramatically shrunk in size. The packaging size change sounds like a good thing but in truth it makes our job harder. Working with aggressively small packaging makes prototyping much more difficult because individual signals and interfaces become increasingly harder to access due to their diminished size. To some extent the capstone projects over the years have followed the industry curve toward more complexity and capability, though the limitation that has the single strongest influence on capstone projects is the time available (still just 2 quarters) and that has not changed. In that sense we are doing a great deal more with less. We are taking on projects with increasing complexity which requires a lot more time to understand and to learn to apply the more capable technology even though the amount of time available has stayed the same.\nFor more information about the Capstone Course / Projects:\n"}, {"score": 1895.3296, "uuid": "c1918e4a-43db-58c1-a8d0-bd11f25d1436", "index": "cw12", "trec_id": "clueweb12-0104wb-53-20834", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/2011/06/", "page_rank": 1.2994859e-09, "spam_rank": 70, "title": "June | 2011 | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "Marc Olano <em>is</em> the director of the <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em> Department&#x27;s Game Development Track and has been pursuing research in <em>computer</em> graphics and <em>computer</em> hardware for <em>more</em> than twenty years.", "explanation": null, "document": "Dr. desJardins promoted to full professor\nposted Wednesday, June 29th, 2011\nThe CSEE Department wishes to extend its congratulations to Dr. Marie desJardins for her recent promotion from associate professor to full professor. Dr. desJardins began teaching at UMBC in 2001 as an assistant professor of Computer Science and Electrical Engineering, and since then has taught courses in areas such as artificial intelligence, multi-agent systems and computer programming. As director of the Multi-agent, Planning and Learning lab (MAPLE) at UMBC, Dr. desJardins works with students to find AI solutions to real world problems. In addition to teaching, Dr. desJardins has actively been pursuing research in the areas of multi-agent systems, machine learning, and planning.\nThroughout her decade-long career at UMBC, Dr. desJardins has been an active member of several university organizations and committees. From 2008 to 2010, she served as the Undergraduate Program Director for the Computer Science program. Currently, she is a member of the CSEE Executive Committee, the UMBC Faculty Affairs Committee and the CWIT Internal Advisory Board. Dr. desJardin\u2019s numerous contributions to the CSEE Department, whether through teaching, research or committee involvement, have not been overlooked and the Department is confident that she will excel as she takes on her new role this July.\nTo learn more about Dr. desJardins\u2019 research pursuits, read her research profile .\nFaculty Research Profile: Dr. Marc Olano\nposted Wednesday, June 29th, 2011\nDr. Marc Olano is the director of the Computer Science and Electrical Engineering Department's Game Development Track and has been pursuing research in computer graphics and computer hardware for more than twenty years. Currently, he is working at Firaxis Games on texture compression for the Civilization V video game and collaborating with Dr. Erle Ellis of the Geography and Environmental Systems Department on a project dubbed Ecosynth.\nTo read more about Dr. Olano's research pursuits, see his full research profile .\nFaculty research profile: Dr. Tim Oates\nposted Tuesday, June 28th, 2011\nDr. Tim Oates , associate professor of computer science, does research in the field of machine learning and is interested in understanding the development of the human brain. Dr. Oates is also fascinated by the idea of making robots that are capable of learning and exhibiting human characteristics.\u00a0 \u201cI don\u2019t know if we\u2019ll ever have androids walking among us that are indistinguishable from humans,\u201d says Dr. Oates, \u201cbut I bet we\u2019ll get pretty darn close.\"\nTo read more about Dr. Oates' research pursuits, see his full research profile .\nCSEE Department celebrates faculty research\nposted Monday, June 27th, 2011\nThe UMBC CSEE Department will be publishing a series of short research profiles describing the research activities of its faculty and students. The first features Professor M arie desJardins and the work of her Multi-Agent, Planning and Learning Lab at UMBC, where she works on developing A.I. solutions to real world problems. Dr. desJardins is especially interested in collaborating with students and helping them develop their own research interests. She says that nearly ninety-five percent of her research is with students. \u201cI like the students to learn about a problem and find something that they think is interesting,\u201d she says.\nDr. Marie desJardins\nposted Monday, June 27th, 2011\nDr. desJardins runs the Multi-Agent, Planning and Learning Lab (MAPLE) at UMBC, where she works on developing A.I. solutions to real world problems.\nDr. Marie desJardins, professor of computer science, is fascinated by the concept of Artificial Intelligence. She explains what she does as \u201ctrying to get computers to do things that you would think were smart if people did them.\u201d Dr. desJardins runs the Multi-Agent, Planning and Learning Lab (MAPLE) at UMBC, which focuses on developing A.I. solutions to real world problems. Within the realm of artificial intelligence, she has divided her research interests into the three areas within in her lab: Multiagent systems, Planning, and Machine Learning.\nMultiagent systems deals with the task of getting multiple intelligence systems, like humans or A.I.s, to solve problems together. Currently, Dr. desJardins is interested in the problem of trust. She is working to understand how to know which agents\u2014for example, restaurant or movie reviews, or travel services\u2013 in an online community are trustworthy and which are not. At the moment, she is working with a referring agent that she knows will overestimate an individual\u2019s ability and provide her with biased positive referrals. A biased agent, she explains, leads to the phenomenon of optimistic and pessimistic referrals.\nPlanning focuses on the \u201cproblem of trying to pre-plan in complex domains where planning is hard,\u201d says desJardins. She compares her work to the job of a logistics planner for a FedEx fleet who is bombarded with last minutes pick-ups and deliveries that dynamically change his anticipated plan. In both cases, the task is the same: \u201cWhat can you do in advance to anticipate what the likely kinds of requests are and be prepared to change things quickly?\u201d\nMachine Learning deals with building models to classify data or to make predictions. desJardins explains the concept with an example, no doubt, close to home: predicting whether or not students will pass a class. \u201cWhat are the attributes that actually lead to success or failure in that context,\u201d she says, \u201cThat\u2019s the model building question.\u201d But, in some cases, there is not enough data to build a model. If, for example, the model-builder does not know information like the amount of hours each student spends doing homework, it becomes difficult to predict their success in class. That\u2019s where \u201ccost sensitive feature acquisition\u201d comes into play. This means that certain information can be collected, but if the model relies on that acquired information, then the model becomes severely limited by its necessity to have that information for all future predictions.\nDr. desJardins is especially interested in collaborating with students and helping them develop their own research interests. She says that nearly ninety-five percent of her research is with students. \u201cI like the students to learn about a problem and find something that they think is interesting,\u201d she says.\n\u201cThe methodologies we use to identify and try to solve problems are things I\u2019m starting to think about more explicitly,\u201d says desJardins, who mentions that in the future she is interested in writing about how to do research effectively. Her ultimate vision, though she says it is probably too ambitious to realize, is an all-purpose A.I. that helps with computer maintenance and other tasks. \u201cWhat I would love to exist by the time that I retire is a true intelligent agent that would live on your laptop and monitor your life,\u201d she says.\nPython as the new Basic\nposted Saturday, June 25th, 2011\nComputerworld has a story that discussed the passing of the Basic programming language and asks How are students learning programming in a post-Basic world? .\nBasic was developed at Dartmouth in the mid 1960s as a language that would be easy to learn and use so that virtually anyone could learn to program. It was also relatively easy to implement a Basic interpreter for a new computer. Bill Gates and Paul Allen famously got their start by creating a Basic interpreter for one of the first micro-computers, the Altair 8800 . It was also useful. I remember helping on a complicated sponsored research project at the University of Illinois in the 1970s that was done in Basic on a Wang mini-computer using giant 8 inch floppy disks.\nThe subhead on the Computerworld story is \"Basic is (mostly) dead. Long live Python as the next starter language?\" and it describes how many universities are now using Python as the language of choice for introducing people to programming. Count the UMBC CMSC program among them. Two years ago we revamped CMSC201 to use Python as the language for teaching programming concepts and practices, ending a nearly 15 year run using C.\nWhat we liked about Python was that students can write simple, useful programs almost immediately without having to master a large number of new concepts or programming scaffolding. Its interactive, interpreter-based paradigm (just like Basic!) encourages students to explore and get \"close to the machine\" (just like Basic!). At the same time, Python is a powerful language that elegantly includes nearly all of the modern programming language ideas and also efficient enough for all but the most demanding applications. This combination of simplicity, power and efficiency combine to make Python very popular for software development in industry.\nposted Friday, June 17th, 2011\nMetabolic Profile in Personalized Medicine\nEddy Karnieli, MD\nDirector, Institute of Endocrinology, Diabetes and Metabolism\nRAMBAM Health Care Campus\nHaifa 31096, ISRAEL\n2:00pm Wednesday, 22 june 2011, ITE 325b, UMBC\nPersonalized Medicine is revolutionizing the medical world. Understanding and integrating genetic and molecular information with traditional clinical knowledge is the hallmark of this transformation. Currently, much of the medical practice is based on standards of care derived from the epidemiologic studies of large cohorts. These studies do not take into account the individual's genetic, proteomic, and metabolic characteristics. Hence, the gap continues to grow between knowledge accumulated from basic scientific and clinical research, newly discovered molecular mechanisms and therapeutic guidelines, and their implementation at the patient\u2019s bedside. Diabetes is the most common metabolic disease, and its complications have a significant economic impact on the health system. Prediction of diabetes in asymptomatic patients as well as its harsh complications in patients already diagnosed is becoming a necessity, with the considerable increase in the cost of the treatment. Thus, in the current presentation I will review some of the clinical, molecular, metabolic and genetic biomarkers that should be integrated in a future bio-informatic platform and decision support system to be used at the point of care and discuss the challenges we face in applying this vision of personalized medicine in diabetes into reality. Metabolic Profile in Personalized Medicine.\nProfessor Eddy Karnieli is a graduate of the Rappaport Faculty of Medicine at the Technion\u2013 Israel Institute of Technology in Haifa. He obtained clinical training in Internal Medicine and Endocrinology at the Rambam Medical Center and did his Post-Doctoral Fellowship in Diabetes, Obesity and Endocrinology at the National Institutes of Health in Bethesda, Maryland. He was a visiting scholar at the University of California at San Diego and at the National Institutes of Health. He is currently the Director of the Institute of Endocrinology, Diabetes and Metabolism at the Rambam Medical Center. Professor Karnieli's main research interests are the molecular mechanisms for regulating cellular glucose uptake and transporters and their implications in diabetes, obesity and insulin resistance; Gene therapy modalities to trans-differentiate human cells toward beta-cells as a potential cure for type 1 diabetes; Medical informatics, telemedicine and personalized medicine. He has published about 70 peer reviewed papers and reviews.Professor Karnieli serves on the editorial board of several scientific journals and review boards. Professor Karnieli is a retired Colonel from the Israel Defense Forces Medical Corps and is a former Deputy Director of the Rambam Medical Center.\nA \u2018Sputnik Moment\u2019 for Computer Science?\nposted Thursday, June 16th, 2011\nToday's New York Times has a \"Room for Debate\" opinion piece, Computer Science's 'Sputnik Moment'? , on the recent surge in interest in computing majors on US campuses. It asks \"Will the influx of students into the field last, and can it raise American educational achievement along the way?\" and features eight short essays incuding one by UMBC Professor of Sociology Zeynep Tufekci .\n\"Computer science is a hot major again. It had been in the doldrums after the dot-com bust a decade ago, but with the social media gold rush and the success of \"The Social Network,\" computer science departments are transforming themselves to meet the demand. At Harvard, the size of the introductory computer science class has nearly quadrupled in five years.\nThe spike has raised hopes of a ripple effect throughout the American education system \u2014 so much so that Mehran Sahami, the associate chairman for computer science at Stanford, can envision \"a national call, a Sputnik moment.\"\nWhat would a \"Sputnik moment\" entail today? Will the surge of students into computer science last, and could it help raise American educational achievement?\"\nThis complements the NYT article from last weekend, Computer Studies Made Cool, on Film and Now on Campus , about rising computer science enrollments.\n\u201d When Keila Fong arrived at Yale, she had never given much thought to computer science. But then last year everyone on campus started talking about the film \u201cThe Social Network,\u201d and she began to imagine herself building something and starting a business that maybe, just maybe, could become the next Facebook.\n\u201cIt\u2019s become very glamorous to become the next Mark Zuckerberg, and everyone likes to think they have some great idea,\u201d said Ms. Fong, a junior, who has since decided to major in Yale\u2019s newly energized computer science program.\nThree CSEE faculty and staff retire\nposted Thursday, June 16th, 2011\nThree long-time members of the CSEE community retired at the end of the Spring 2011 semester: Professor Sue Evans, Senior Lecturer, has taught Computer Science 201 since she began her teaching career at UMBC in 1997. Dr. John Pinkston, Professor, also came to UMBC in 1997 and served as the first Chair of the newly combined Computer Science and Electrical Engineering Department for seven years. Donna Myers, Business Services Specialist for the Computer Science Department, has kept CSEE payroll in order since she joineed the staff in 2001. These three invaluable members of the CSEE Faculty and Staff will be missed and the CSEE Department extends its congratulations and wishes for relaxing and fulfilling futures. \u00a0You can read more about their contributions and future plans here .\nposted Wednesday, June 15th, 2011\nMS Thesis Defense\nImage Classification and Automated Extraction\nof Collocated Actin/Myosin Regions\nRonil S. Mokashi\n10:00am Friday, 17 June 2011, ITE 325b\nThis study illuminates the aspects of cell migration, which is central to many biological processes. To understand cell migration we examine the relationship between local cytoskeletal features and local morphology. We demonstrate this relationship on cells stained for Actin and Myosin We connect the actin/myosin collocalizated structural organization to movements such as membrane protrusions. Membrane protrusions are good indicators of cell migration. Cells can sense the mechanical stiffness or the chemical identity of the surfaces they attach to. We show that these surfaces impact cytoskeletal structure. We develop a classifier to correlate the contextual features extracted from actin/myosin collocalized structure to different cell surfaces.\nWe also describe a new distance based metric to measure the strength of collocated multi-channel two dimensional data for user selected regions. We provide tools, implemented as plugins for the popular ImageJ toolkit, that are available for download by the general public. These tools allow biologists to specify and score regions of interest by drawing a polygon on their image with a point and click interface. Furthermore, we provide an algorithm that automatically identifies, annotates, and scores an interesting donut shaped region commonly occurring in vascular smooth muscle cells on extra cellular matrix such as dry collagen, wet collagen, fibronectin and monolayer collagen.\nCommittee:\n"}, {"score": 1894.1003, "uuid": "20b3d071-3b4e-5bf0-8831-d0b5dc874a56", "index": "cw12", "trec_id": "clueweb12-0105wb-55-08198", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/michael-barrett/", "page_rank": 1.2021723e-09, "spam_rank": 94, "title": "Michael Barrett | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "It was really rough, and I mean REALLY ROUGH, but it was a great class and one of the most <em>interesting</em> topics I have come across in the field. <em>What</em> do you like about the <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em> (CSEE) Department? Every teacher <em>is</em> approachable and understanding.", "explanation": null, "document": "Inspiring Innovation\nMichael Barrett\nOriginally from Columbia, Maryland, Michael is a Junior pursuing a major in Computer Science. When he's not studying, Michael likes to work on side projects and website development.\nAbout Michael\u2026\nWhen did you know that you wanted to study Computer Science?\nI knew from an early age that I wanted to be in CS. It all started when I learned a bit of HTML from my brother, and it snowballed from there.\nWhat area of Computer Science are you most interested in?\nI am absolutely in love with web development. When I was about fourteen, I somehow stumbled into an administrative position on a fairly large website. I eventually was granted access to the server and became a developer. I learned a lot from that, mainly just reading code and replicating methods to create new stuff.\nAre you part of any labs, clubs or organizations on campus?\nI am a part of the CWIT student board. (Center for Women and Information Technology. Yeah, guys are allowed in, too.) I will also be writing for the technology section of The Retriever Weekly .\nHave you had any internships?\nDuring the spring and summer of 2010, I was interning at Mindgrub LLC near campus as a web and flash developer. During the summer of 2011, I had an internship in Mountain View, California at Google. I will be heading back there this summer as well! There are plenty of opportunities out there.\nWhat are your plans after graduation?\nMy current plan is to either maintain my internship at Google and try to turn it into a full time job, or start a company of my own with my brother (also a computer scientist, he graduated a few years ago and is doing contracting work now). I don\u2019t plan on going to graduate school because I really enjoy working on products and projects, and I am able to obtain a position doing just that once I graduate.\nWhat is your dream job?\nMy dream job is to have my own successful company making innovative web and mobile products. I have been working on a lot of my own projects, and a little bit with my brother, but I want to turn this hobby into a career.\nOn UMBC and CSEE\u2026\nWhat was your first impression of UMBC?\nComing in, I heard the same thing from everyone: UMBC is a boring campus and everyone is gone on the weekend. To my surprise, my first few weeks at UMBC were extremely fun and packed with meeting new people. There is always plenty of stuff going on around the campus, and a lot of people to meet.\nWhy did you choose UMBC?\nI started at UMBC in the fall of 2009. Choosing UMBC was not a hard decision for me! In fact, I only applied to three schools: UMBC, College Park, and Towson. I only really applied to the other two as backups because I knew I wanted to be at UMBC. It is a close drive to go home (or have my parents take me out to dinner!) I also liked that it was a smaller campus so walking to class wouldn\u2019t take forever!\nWhat do you like about campus life?\nI like that there are a lot of people to see at any given time. I made a lot of good friends Freshman year and we have been hanging out ever since. There are also always clubs and whatnot to get into which you can use to occupy your free time, or you can just hang around and have fun.\nWhat was your first Computer Science course?\nMy first CS course was CMSC 201. It was a pretty big class. Unfortunately, I found that the majority of the content we covered I had already done prior, but I did learn a few things, and it was a good chance to start helping my classmates and friends. Since then, we\u2019ve all had our ups and downs in classes and have had equal chances to help each other!\nWhat was your favorite Computer Science course?\nGood question. I really don\u2019t know if I can decide. CMSC 313 was fun because we got to learn a lot of the really interesting lower level stuff in a computer. It becomes pretty mindblowing. However, I think Artificial Intelligence might take the cake just because of the amount of knowledge that class drops on you. It was really rough, and I mean REALLY ROUGH, but it was a great class and one of the most interesting topics I have come across in the field.\nWhat do you like about the Computer Science and Electrical Engineering (CSEE) Department?\nEvery teacher is approachable and understanding. If you attend class and make it a point to go to office hours, even just once or twice, the teachers will know your name and really help you out when you\u2019re in trouble. You quickly watch the class sizes shrink and become much more personable. Also, since there are a lot of internships and research opportunities around, knowing the teachers can be really beneficial for suggestions and recommendations.\nHow would you describe the professors in the department?\nWell, as in the previous question, very personable and reliable. Each one will really want to see you succeed if you put in the same effort they put in to teaching the class. It sounds corny, but it\u2019s true.\nWhat advice would you give to incoming students?\nCS majors, don\u2019t let programming just be a job, make it a hobby! The number one thing that has helped me do well has been to have a ton of side projects. Let your imagination wander, and when you have an idea, go for it! People love to see that you have your own stuff that you work on, because it shows that you are really dedicated to this field.\nIn general, stay on top of everything! Time gets scarce enough already, if you can plan ahead and make it easier for yourself, working now will make future you thrilled!\n"}, {"score": 1884.0184, "uuid": "ebd96f9b-4b7b-5c0e-b5a5-76dd853f6cb3", "index": "cw12", "trec_id": "clueweb12-0104wb-81-03000", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/articles/", "page_rank": 1.2994859e-09, "spam_rank": 84, "title": "Articles | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "Marie desJardins, professor of <em>computer</em> <em>science</em>, <em>is</em> fascinated by the concept of Artificial Intelligence. She explains <em>what</em> she does as \u201ctrying to get <em>computers</em> to do things that you would think were smart if people did them.\u201d", "explanation": null, "document": "Camilla Hyman joins CSEE staff\nposted Tuesday, September 6th, 2011\nMs. Camilla Hyman recently joined the Computer Science and Electrical Engineering Staff as the Business Services Specialist for the department. Ms. Hyman has replaced Ms. Donna Meyers, who retired at the end of Spring 2011.\nThis summer, Camilla Hyman joined the Computer Science and Electrical Engineering Department as Business Services Specialist\u2013a role that had been left vacant by Ms. Donna Meyers, who retired at the end of Spring 2011. Ms. Hyman, who has lived in Maryland her entire life, grew up just down the road from UMBC in Catonsville, MD and now lives in Baltimore City. Apart from being an expert at all things payroll, Ms. Hyman has served as a Girl Scout leader for the past seventeen years.\nBefore coming to UMBC, Ms. Hyman spent nine years working for the Goddard Earth Sciences and Technology (GEST) and Joint Center for Earth Sciences (JCET) departments at UMBC. Prior to that, she worked for the Division of Behavioral and Developmental Pediatrics and Adolescent Medicine departments at the University of Maryland, Baltimore (UMB). With less than a month of CSEE office life under her belt, Ms. Hyman already says that she finds the position enjoyable. The best part about her job, she says, is learning about different cultures from the Graduate Students that she interacts with every day.\nDr. Marie desJardins\nposted Monday, June 27th, 2011\nDr. desJardins runs the Multi-Agent, Planning and Learning Lab (MAPLE) at UMBC, where she works on developing A.I. solutions to real world problems.\nDr. Marie desJardins, professor of computer science, is fascinated by the concept of Artificial Intelligence. She explains what she does as \u201ctrying to get computers to do things that you would think were smart if people did them.\u201d Dr. desJardins runs the Multi-Agent, Planning and Learning Lab (MAPLE) at UMBC, which focuses on developing A.I. solutions to real world problems. Within the realm of artificial intelligence, she has divided her research interests into the three areas within in her lab: Multiagent systems, Planning, and Machine Learning.\nMultiagent systems deals with the task of getting multiple intelligence systems, like humans or A.I.s, to solve problems together. Currently, Dr. desJardins is interested in the problem of trust. She is working to understand how to know which agents\u2014for example, restaurant or movie reviews, or travel services\u2013 in an online community are trustworthy and which are not. At the moment, she is working with a referring agent that she knows will overestimate an individual\u2019s ability and provide her with biased positive referrals. A biased agent, she explains, leads to the phenomenon of optimistic and pessimistic referrals.\nPlanning focuses on the \u201cproblem of trying to pre-plan in complex domains where planning is hard,\u201d says desJardins. She compares her work to the job of a logistics planner for a FedEx fleet who is bombarded with last minutes pick-ups and deliveries that dynamically change his anticipated plan. In both cases, the task is the same: \u201cWhat can you do in advance to anticipate what the likely kinds of requests are and be prepared to change things quickly?\u201d\nMachine Learning deals with building models to classify data or to make predictions. desJardins explains the concept with an example, no doubt, close to home: predicting whether or not students will pass a class. \u201cWhat are the attributes that actually lead to success or failure in that context,\u201d she says, \u201cThat\u2019s the model building question.\u201d But, in some cases, there is not enough data to build a model. If, for example, the model-builder does not know information like the amount of hours each student spends doing homework, it becomes difficult to predict their success in class. That\u2019s where \u201ccost sensitive feature acquisition\u201d comes into play. This means that certain information can be collected, but if the model relies on that acquired information, then the model becomes severely limited by its necessity to have that information for all future predictions.\nDr. desJardins is especially interested in collaborating with students and helping them develop their own research interests. She says that nearly ninety-five percent of her research is with students. \u201cI like the students to learn about a problem and find something that they think is interesting,\u201d she says.\n\u201cThe methodologies we use to identify and try to solve problems are things I\u2019m starting to think about more explicitly,\u201d says desJardins, who mentions that in the future she is interested in writing about how to do research effectively. Her ultimate vision, though she says it is probably too ambitious to realize, is an all-purpose A.I. that helps with computer maintenance and other tasks. \u201cWhat I would love to exist by the time that I retire is a true intelligent agent that would live on your laptop and monitor your life,\u201d she says.\nCSEE faculty and staff say goodbye to UMBC\nposted Tuesday, June 14th, 2011\nThree members of the CSEE community retired at the end of the Spring 2011 semester: Professor Sue Evans, Senior Lecturer, has taught Computer Science 201 since she began her teaching career at UMBC in 1997. Dr. John Pinkston, Professor, also came to UMBC in 1997 and served as the first Chair of the newly combined Computer Science and Electrical Engineering Department for seven years until he decided to teach. Donna Myers, Business Services Specialist for the Computer Science Department, has kept CSEE payroll in order since she joineed the staff in 2001. These three invaluable members of the CSEE Faculty and Staff will be missed and the CSEE Department extends its congratulations and wishes for relaxing and fulfilling futures.\nSue Evans, Senior Lecturer, Computer Science\nIn 1980, Sue Evans got her first computer system\u2014an Atari 400\u2014and began to teach herself how to write basic programs. Her first programming success was a daily planner that reminded her of important events like birthdays and that played songs. \u201cWhat that taught me was that I loved computer science,\u201d says Evans, \u201cI loved to code. It was like solving puzzles.\u201d\nEvans\u2019 first foray into the computer science world was as a programmer for Crown Tool and Circuits Company. Afterwards, she spent five years working as a freelance application writer for small businesses. Her years of freelancing reignited an interest in teaching present since childhood. \u201cI really enjoyed teaching the secretaries in all these little companies how to use the program I just wrote,\u201d says Evans.\nIn order to pursue a teaching career, Evans enrolled at UMBC in 1991 as a Computer Science student, receiving her bachelor\u2019s and finally a master\u2019s degree in Computer Science in January 1998. Evans began teaching as a lecturer at UMBC in September 1997 and remembers telling Dr. Joel Morris, the department Chair at the time, that teaching Computer Science (CMSC) 201 was her goal.\n\u201cI was scared to death at first,\u201d says Evans of teaching CMSC 201, \u201cbut over the years I have certainly gotten the hang of it.\u201d Teaching a lecture hall filled with over two-hundred students takes some finesse, and Evans explains that she has to be \u201chalf-entertainer and half lecturer.\u201d \u201cOne of my favorite things to do is demonstrate binary search by ripping up a phone book,\u201d says Evans, \u201cand the students just go crazy for it.\u201d Apart from CMSC 201, Evans taught the First Year Seminar entitled Investigating Everyday Problems and their Current IT Solutions, and will continue to teach the course at UMBC every Spring.\nPost retirement, Evans and her husband look forward to relaxing. \u201cWe\u2019re just going to stay home and do gardening and work on craft projects,\u201d she says. Plus, she has a computer application in the works that combines her love for programming and country cross stitch.\nTo the students she\u2019s leaving behind, Evan\u2019s advice is to \u201cwork hard and go for help to your TA or instructor as soon as you need it.\u201d She says what she will miss most about UMBC are the friends she has made over the years. \u201cIt has been great,\u201d says Evans. \u201cI have loved this place and my job and certainly my students and it\u2019s going to be sad to go.\u201d\nJohn Pinkston, Professor, Computer Engineering\nDr. John Pinkston grew up in the small college town of Swarthmore, Pennsylvania. In 1964, he graduated from Princeton University with a degree in Electrical Engineering and later received his Ph.D. from MIT. Since then, Dr. Pinkston has actively been pursuing research, with a focus on superconducting electronics.\nWhen Dr. Pinkston retired as head of the office of research for the Federal Government in 1997, he was interested in a position in a university setting. \u201cI had always had a soft spot in my heart for academics,\u201d says Pinkston, \u201cand having done research all my life, I knew the business.\u201d So, when he learned that UMBC was searching for a Chair for their newly combined Computer Science and Electrical Engineering department, he jumped at the chance. Pinkston served as chair for seven years until he stepped down to become a professor.\n\u201cThe culture shock was essentially zero,\u201d says Pinkston of the transition between the governmental sphere and academia, \u201cResearch is research.\u201d During his teaching career at UMBC, Dr. Pinkston has taught roughly fourteen different courses, his favorites being CMPE 323: Signals and Systems and the Computer Engineering Capstone course. \u201cThe idea is to give the students an experience of actually designing and building something\u201d says Pinkston of the Capstone course, which he says is a rewarding experience when students get excited about their design projects.\nDr. Pinkston will continue to \u2018dabble\u2019 in research after retirement, he says. He is currently interested in cybersecurity, residue number systems and the future of computer transistors. \u201cSemiconductors are really approaching hitting the wall now and people are beginning to think hard about what comes after silicon transistors for making computer systems go even faster,\u201d he says. Apart from research, Dr. Pinkston looks forward to spending time with his family, the flexibility to travel and pursuing his hobbies, like ham radio.\nDonna Myers, Business Services Specialist\nDonna Myers first began working at UMBC\u2019s Systems Payroll office in March 1997. But, two years later, when colleague, Anne Pfrogner, said she was retiring from her job in the CSEE payroll office, Myers jumped at the chance to work in a more intimate work setting. Processing payroll was not something that Myers was especially interested in, but the position turned out to be a good fit. \u201cI\u2019m a very logical kind of person,\u201d explains Myers, \u201cSo, I like the logic of it, the routine of it.\u201d\nIn October 2001, Myers began her decade-long position as the Business Services Specialist for the Computer Science Department. The highlight of her job, she says, has been interacting with the Graduate Assistants who come to UMBC from around the globe. \u201cI find it fascinating,\u201d says Myers of the foreign students she meets daily, \u201cI think they each have a story to tell and I just love talking to them and helping them out.\u201d\nIn the Fall, Myers plans to continue taking courses at UMBC in pursuit of a Bachelor\u2019s degree in Management of Aging Services. Her interest in Senior healthcare was sparked in High School when she worked in the Pinky program at Baltimore\u2019s Union Memorial Hospital. Myers specifically remembers the day when Medicare started and suddenly the elderly were in beds filling the hallways. \u201cThat made such an impact on me,\u201d says Myers, who became instantly inspired to help the elderly population.\nAfter retiring, Myers hopes to relax with her husband who will also retire. Although she considers herself a Baltimore Girl, plans to move away from the area are still a lingering prospect. \u201cI like Maryland but I\u2019m ready to get out of the city and move to somewhere slower-paced\u201d she says. To the friends and colleges that she\u2019s leaving behind, Myers has a few words of parting advice: \u201cEveryone should get to retire because it\u2019s a great feeling. Don\u2019t ignore it. Go for it. It\u2019s great.\u201d\nRecent Posts\n"}, {"score": 1889.6833, "uuid": "f6499734-4e2d-5fd3-8d62-f7444e1c000f", "index": "cw12", "trec_id": "clueweb12-0106wb-70-16304", "target_hostname": "www.cse.buffalo.edu", "target_uri": "http://www.cse.buffalo.edu/graduate/courses.php", "page_rank": 1.3593041e-09, "spam_rank": 97, "title": "Courses - UB <em>Computer</em> <em>Science</em> and <em>Engineering</em>", "snippet": "Click the &quot;<em>More</em> \u00bb&quot; links to see <em>more</em> details and histories of course offerings. CSE 501 Introduction to Graduate Study in <em>Computer</em> <em>Science</em> &amp; <em>Engineering</em> This course gives necessary information about graduate studies in CSE for incoming Ph. D. students.", "explanation": null, "document": "More \u00bb\nProbabilistic analysis and randomized algorithms have become an indispensible tool in virtually all areas of Computer Science, ranging from combinatorial optimization, machine learning, data streaming, approximation algorithms analysis and designs, complexity theory, coding theory, to communication networks and secured protocols. This course has two major objectives: (a) it introduces key concepts, tools and techniques from probability theory which are often employed in solving many Computer Science problems, and (b) it presents many examples from three major themes: computational learning theory, randomized/probabilistic algorithms, and combinatorial constructions and existential proofs.\nIn addition to the probabilistic paradigm, students are expected to gain substantial discrete mathematics problem solving skills essential for computer scientists and engineers.\nThis course was formerly called CSE 594.\nCSE 696 Computational Complexity\nNonuniform classes: Circuit classes and relations to uniform classes; parallel complexity: Alternating Turing machines, uniformity conditions, NC; Probabilistic classes; Toda's Theorem, interactive protocols.\nCSE 700 Independent Study\nCourse description is currently unavailable.\nCSE 701 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 702 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 703 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 704 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 705 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 706 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 708 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 709 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 710 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 711 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 714 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 716 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 717 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 718 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 719 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 720 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 721 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 722 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 723 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 725 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 726 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 728 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 734 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 735 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 736 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 737 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 741 Seminars\nThis course is a seminar. Seminar topics change every semester. Please refer to seminar instance topics and descriptions by semester.\nCSE 799 Supervised Research\nCourse description is currently unavailable.\nCSE 800 Thesis Guidance\n"}, {"score": 1887.0813, "uuid": "e0bcc4c3-f219-5364-8cfe-5104be085478", "index": "cw12", "trec_id": "clueweb12-1014wb-28-02895", "target_hostname": "www.cse.usf.edu", "target_uri": "http://www.cse.usf.edu/newsarchives/", "page_rank": 1.1700305e-09, "spam_rank": 87, "title": "Department of <em>Computer</em> <em>Science</em> and <em>Engineering</em> :: newsarchives", "snippet": "\u00a9 2012 Department of <em>Computer</em> <em>Science</em> and <em>Engineering</em>. All rights reserved.", "explanation": null, "document": "Alfredo Weitzenfeld, PhD\n07.23.2007 Announcing a Professional Masters Program\nThe department of Computer Science and Engineering is proud to offer a new Professional Master's Program for working professionals. Please see the program's page here .\n06.18.2007 Jay Ligatti co-authors \"Fault-tolerant Typed Assembly Language.\" Submission recognized as Best-paper.\nCongratulations to Jay Ligatti for winning the best paper award at the prestigious ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), June 2007. The winning paper \"Fault-tolerant Typed Assembly Language\", a joint submission by Frances Perry, Lester Mackey, George Reis, Jay Ligatti, David August, and David Walker, was offered for submission in December of 2006 and selected by the PLDI Planning Committee for the June 2007 proceedings.\nThe official conference website states \"PLDI seeks original research papers that focus on the design, implementation, development, and use of programming languages. Emphasis is placed on innovative and creative approaches to compile-time and run-time technology, novel language designs and features, and results from implementations.\" PLDI submission requirements dictate that paper submission is double-blind, make no reference to the author(s) or institution(s), and must meet\u00c2\u00a0strict guidelines for formatting and content. http://ties.ucsd.edu/PLDI/papers.shtml\n\"This is a very impressive accomplishment for Jay who has just completed his first year at USF.\" -- Dr. Kasturi, Department Chair\nTo view \"Fault-tolerant Typed Assembly Language\": http://www.cse.usf.edu/~ligatti/papers/ft-tal.pdf\nTo read more about Jay Ligatti: http://www.cse.usf.edu/index.php?sec=25&sub=205\n06.06.2007 Dr. Nagarajan Ranganathan named 2007 Distinguished University Professor\nDr. Ranganathan is a computer engineer of international repute in the area of Very Large Scale Integration (VSLI) research. He is an accomplished scholar with 67 refereed articles (13 as lead author), three edited teaching books, four book chapters, and numerous conference papers, and he has seven patents to his name. He has brought in over $6.5 million in grant money from the National Science Foundation and private industry, and is a Fellow of the prestigious IEEE. His work is well-cited and he is a recognized leader in his field. Dr. Ranganathan\u2019s graduate teaching is outstanding, with 16 doctoral students, several of whom have won awards, and 65 completed masters degrees. In service, Dr. Ranganathan has played a major role as editor-in-chief of the most prominent international journal in his field, served on national review panels, and been coordinator and an active participant in many international conferences. Dr Ranganathan meets all the guidelines of a Distinguished University Professor and overall, the University Recommending Committee found him deserving of the award of Distinguished University Professor.\n05.02.2007 Dr. Robin Murphy to be Keynote Speaker at CRA-W Career Mentoring Workshop.\nCRA-W has sponsored a\u00c2\u00a0series of Career Mentoring Workshops, targeted to women in all stages\u00c2\u00a0 of their academic careers. Women often find themselves a minority in\u00c2\u00a0their own departments, and the CRA-W workshops bring them together\u00c2\u00a0with women already established in their fields. The established\u00c2\u00a0professionals provide practical information, advice, and support to\u00c2\u00a0their younger colleagues. Each of the workshops is associated with a\u00c2\u00a0major professional meeting, providing many attendees with the\u00c2\u00a0opportunity to attend technical talks and make contacts in their\u00c2\u00a0research areas.\nDr. Robin Murphy has been selected to be the Keynote Speaker at this year's workshop, which will be held June 9-10, 2007 at the Federated Computing Research\u00c2\u00a0Conference in San Diego.\n01.25.2007 Jeremy Rasmussen on Jeopardy!\nJeremy Rasmussen, a CSE faculty had the chance to be on the TV show Jeopardy on Jan 5th. After winning $28,001 and ending on the top spot on Jan 5th, his second apperance on the show was on Jan 8th, where he won $2000 and came in second spot, winding up with\u00c2\u00a0a total amount of $30,001.\nWe take this opportunity to congratulate him.\n12.06.2006 Dr. Goldgof elected as IEEE Fellow\nDr. Dmitry Goldgof has been elected as an IEEE Fellow for his contributions to computer vision and biomedical applications.\u00c2\u00a0IEEE bylaws stipulate that no more than one tenth of one percent of its members may be elevated to the Fellow grade in any year.\n12.04.2006 Outstanding Graduate Student Poster Competition Results Announced\nThe participants of the 3rd annual Computer Science and Engineering Department's Outstanding Graduate Research Award competition presented their research on Wednesday, November 29. There were some very interesting and informative posters presented.\nThere were 19 participants of which 15 were Ph.D. students.\nPhD Awards:\n1. Richard Garcia (Faculty Advisor: Dr. Valavanis)\n2. Matthew Long (Faculty Advisor: Dr. Murphy)\nM.S. Awards:\n1. Shyamala Doraimani (Faculty Advisor: Dr. Iamnitchi)\n2. Rodrigo Gutierrez (Faculty Advisor: Dr. Murphy)\nRichard Garcia\nMatthew Long\n10.05.2006 2005 USF Outstanding Staff Award\nDee Allen received the 2005 USF Outstanding Staff Award for her personal commitment and contribution to the University 's greater good, individual growth, and development\n10.02.2006 Best Paper Awards\nInternational Association for Pattern Recognition (IAPR) presented the best student paper award to Himanshu Vajaria, Tanmoy Islam, Sudeep Sarkar, Ravi Shankar and Rangachar Kasturi at the 18th International Conference on Pattern Recognition for their paper titled \"Audio Segmentation and Speaker Localization in Meeting Videos\".\nNarender Hanchate with N. Ranganathan received the best paper award for their paper entitled, \"A Linear Time Algorithm for Wire Sizing with Simultaneous Optimization of Interconnect Delay and Crosstalk Noise,\" Proc. Intl. Conference on VLSI Design in January 2006. It was ranked 1 out of 360 submissions.\n12.13.2006 Rangachar Kasturi elected 2008 President of the IEEE Computer Society\nRANGACHAR KASTURI, Professor and Chair of Computer Science and Engineering at the University of South Florida, has been elected as the 2008 President of the IEEE (Institute of Electrical and Electronics Engineers) Computer Society by its members in a world-wide election.\nKasturi received his B.E. (Electrical) degree from Bangalore University in 1968 and M.S.E.E. and Ph.D. degrees from Texas Tech University in 1980 and 1982 respectively. He served as a Professor at the Pennsylvania State University from 1982 to 2003. He served as a Fulbright Scholar in 1999.\nKasturi was president of the International Association for Pattern Recognition (IAPR) during 2002-04. He is a Fellow of both the IEEE and the IAPR.\nIEEE COMPUTER SOCIETY was founded in 1946. With nearly 100,000 members in some 140 countries, its vision is to be the leading provider of technical information, community services, and personalized services to the world's computing professionals.\nThe Society is dedicated to advancing the theory, practice, and application of computer and information processing technology. Through its conferences, applications-related and research-oriented journals, local and student chapters, distance learning campus, technical committees, and standards working groups, the Society promotes an active exchange of information, ideas, and technological innovation.\n09.21.2006 Welcome Dr. Jay Ligatti\nDr. Jay Ligatti joined the CSE department in Fall 2006 as Assistant Professor. Jay Ligatti received his Ph.D. in Computer Science from Princeton University in June 2006 and his B.M. in Music Composition from the University of South Carolina in May 2001. Dr. Ligatti's research interests are software security and programming languages, including language-based security and reliability, software monitoring, formal policy analysis, security automate, type systems, program transformations, and aspect-oriented and policy-specification languages.\n09.21.2006 CSE Achievement Gala\nThe Annual CSE Achievement Gala\u00c2\u00a0was\u00c2\u00a0held\u00c2\u00a0on Friday, September 22, 2006 to celebrate the achievements of faculty, staff, and students'.\nFor more details, click here .\n07.14.2006 USF CSE computer security team finishes second in security competition\nOn July 14, the USF Whitehatters Computer Security Club (WCSC) finished second out of 20 teams in the CIPHER2 computer security competition sponsored by RWTH-Aachen (Technical University of Aachen, Germany): http://www-i4.informatik.rwth-aachen.de/~lexi/cipher2.php?edit=0 .\n\u00c2\nA team from RWTH-Aachen won the competition, as it did in the 2005 International Capture the Flag (iCTF) hosted by University of California-Santa Barbara last fall ( http://www.cs.ucsb.edu/~vigna/CTF ).\u00c2\u00a0 However, the USF team's improvement from 14th place out of 22 teams in the iCTF to second out of 20 teams in CIPHER2 is remarkable, given that most of the same schools competed in both events.\n\u00c2\nThe CIPHER2 competition required each team to host a Linux installation with multiple application-layer vulnerabilities. The challenge was to exploit these vulnerabilities to gain \"flags\" from opponents' servers while finding and securing the weaknesses in their own server.\n\u00c2\nWCSC actually mounted the best offense by far of any team, submitting nearly 1600 flags during the 8-hour competition, which was about 400 more than RWTH-Aachen; however, the scoring system gave the edge to Aachen because it found exploits that were less widely known among all the competitors.\u00c2\u00a0 WCSC also received the top score for \"ethical\" behavior.\n\u00c2\nWCSC finished ninth of 69 teams in the DefCon CTF qualifier on June 9-11 ( https://www.kenshoto.com/ctf06/quals_final.html ) and second of seven teams in the 2006 Southeast Collegiate Cyber Security Competition at Kennesaw State University ( http://infosec.kennesaw.edu/SECCDC ).\u00c2\u00a0 The team plans to send a sizeable contingent to the DefCon 14 security conference in Las Vegas on August 4-6 and compete in the \"Amateur CTF\" contest ( https://www.dc949.org/aCTFII ).\n\u00c2\nNOTE: On July 11, the club was featured in a WTSP - Channel 10 news story about remote monitoring software. See the video segment here: http://www.tampabays10.com/video/news/?aid=30089&sid=35059\n06.01.2006 USF intelligent scarecrow travels world\nRandolph Fillmore\nhttp://usfnews.usf.edu/page.cfm?link=article&aid=1319\n(Tampa, Fla. June 1, 2006)\u00c2\u00a0 - An intelligent scarecrow, nicknamed J.J. - designed\u00c2\u00a0by four USF College of Engineering computer science and engineering students to protect both the investment of aqua-farmers and the lives of birds that may prey upon their fish - does not, unlike the scarecrow of Oz fame, have a \u201chead all full of stuffing.\u201d J.J. has a head all full of cameras and other hi-tech computer components that, for less than $500, will keep birds away from fish farm ponds without harming fish-seeking birds.\nThe smart scarecrow, disguised as a USF football player, was born as just one of the several novel projects during this semester\u2019s Senior Project (CIS 4930) in USF professor of computer science Ken Christensen\u2019s class, but J.J.\u2019s fame has taken him \u201caround the world\u201d in media coverage as the initial media release spread the word that scarecrow finally had a brain. (Going to Google News, and using \u201cintelligent scarecrow\u201d as a search term will provide a list of J.J.\u2019s media hops around the world.)\nRecently filmed by a crew from Discovery TV, Canada, ( http://www.exn.ca/dailyplanet/view.asp?date=5/24/2006 ) with two appearances on local TV ( http://www.tampabays10.com/news/local/afternoon/article.aspx?storyid=30525 ) and written about in newspapers and on websites throughout the U.S., Europe, Australia, the United Kingdom, the Middle East and Asia (including India and China), J.J.\u2019s next challenge is to win the 2006 Microsoft Windows Embedded Student Challenge World Finals on Microsoft\u2019s campus in Redmond, WA. The competition will be held June 23-24. Thirty student teams from around the world (China-14; India- 4; U.S.-5; Romania -3; Mexico -2; Brazil -1; Australia-1) will participate.\n\u201cThis project is an example of what USF engineering students can do,\u201d said Christensen. \u201cThey successfully generated requirements, produced a design and implemented it, then tested the implementation within strict time and cost constraints. They\u2019ve done a great job.\u201d\nAs one of only five U.S. teams selected, the USF team \u00e2\u0080\u0093 Albert Ng; Francisco Blanquicet; Jimal Ramsamooj; Scott Werner and USF professor and team faculty advisor, Christensen - will journey with J.J. to the Microsoft competition confident that their entry will more than live up to the Microsoft Challenge that requires students to use Windows CE to \u201cdesign a computer-based system that solves a real-world problem focused on preserving, protecting and enhancing the environment.\u201d First prize is $8,000.\n\u201cWe are honored to be finalists,\u201d said Ramsamooj.\nTheir project is all about saving protected bird species and also saving fish farmer's dollars.\n\u201cAquaculture, also known as fish farming, is a vital part of the world\u2019s fish production,\u201d said Christensen. \u201cThe outdoor farms are susceptible to predator birds. The students\u2019 intelligent scarecrow is designed to benefit farmers while protecting predator birds - many of which are protected species - from harm.\u201d\nHow does J.J., the intelligent scarecrow, do his scary thing? With computer programmed intruder identifiers, such as image processors, noisemakers and water cannons, J.J. can make an intelligent assessment of an intruder by color, programmed in ahead of his work shift. Fish farmers working around the ponds can wear orange vests to be identified as \u201cfriendlies.\u201d\n\u201cJ.J. is not just another motion-detector,\u201d said student Albert Ng. \u201cHe is capable of intelligent detection, deterrence and can also record the events.\u201d\nAccording to Ng, the scarecrow will detect motion and then use its cameras, equipped with image and color sensors, to discriminate between intruders and non-intruders using programmed color recognition. He is \u201carmed\u201d with a speaker system that blasts up to 120 decibels of gunshot sound and also hits approaching predator birds with high speed but harmless streams of water. Not one to keep secrets, the scarecrow then emails or calls the user\u2019s cell phone to let them know that he has been on the job and accomplished a hi-tech \u201cscare.\u201d\nThe experience, from drawing board to live tests, has provided a valuable experience for Blanquicet.\n\u201cIt has been great fun seeing how our concept \u00e2\u0080\u0093 first written on a piece of paper \u00e2\u0080\u0093 after a lot of hard work has been successful,\u201d said Blanquicet. \u201cWe\u2019ve had a lot of media attention already and really look forward to the Microsoft competition.\u201d\nThe USF computer science engineering wizards designed and tested J.J. in the lab before successfully testing and improving its function in real-time at the Wimauma, Fla. fish farm of John Skidmore, who was happy to accommodate the USF students who found him in the Yellow Pages and \u201ccold called\u201d him with an interesting proposal.\n\u201cWe lose three to five percent of our stock annually to predator birds,\u201d said Skidmore, owner of \u201cGolden Pond Tropicals,\u201d an eight acre, 97 pond fish farm. \u201cThe scarecrow has real potential.\u201d\nThe computer science engineering team also suggested that a similar system could be extended beyond fish farming to protect orchards and vineyards where farmers experience similar problems with deer, black bears and other pests or predator animals.\n\u201cImage processing has great potential for pest detection,\u201d concluded Christensen.\n06.30.2006 Hao Zheng Wins NSF CAREER Award\nAssistant Professor Hao Zheng has received an NSF CAREER Award for his project \"Methodologies and Tools for Large Real-Time Concurrent System Verification.\" The award is for 5 years (2006-2010), with total funding of $400,000.\nAccording to the NSF website, \"the Faculty Early Career Development (CAREER) Program is a Foundation-wide activity that offers the National Science Foundation's most prestigious awards in support of the early career-development activities of those teacher-scholars who most effectively integrate research and education within the context of the mission of their organization. Such activities should build a firm foundation for a lifetime of integrated contributions to research and education.\"\nDr. Zheng received his Ph.D. from the University of Utah in 2001.\u00c2\u00a0 He joined the USF Computer Science and Engineering Department in Fall 2004.\u00c2\u00a0 His research interests are VLSI design, computer architecture, asynchronous circuit design, and formal verification.\n11.05.2005 The Fall 2005 CSE Graduate Picnic was held November 4\n**The Fall 2005 CSE Graduate Picnic was held November 4** The Computer Science and Engineering Department's annual Graduate Program picnic was held November 4 at USF Riverfront Park.\u00c2\u00a0 More than 50 students, faculty, and staff enjoyed the gorgeous weather, delicious chicken and Indian food, and music, games and sports.\u00c2\u00a0 Activities included cricket, soccer, volleyball, frisbee, dancing, canoeing, and Sudoku. The winner of the \"Wacky Hat\" contest was Himanshu Vajaria. Special thanks go to Sergiy Fefilatyev, Upavan Gupta, Isabela Moura, Graciela Perera, Himanshu Vajaria, Pedro Wightman, and Rui Zhang for helping plan and organize the picnic activities.\n11.22.2005 CSE Graduate Student Research Competition Winners Announced\nThe participants of the 2nd annual Computer Science and Engineering Department's Outstanding Graduate Research Award competition presented their research on Tuesday November 22. There were some very interesting and informative posters presented. We want to thank all the participants for the creation and presentation of the posters reflecting their research work.\nThere were 11 participants of which 9 were Ph.D. students. The committee based their judgment on the following criteria:\n1. Quality and clarity of the poster.\n2. Clarity of the presentation.\n3. Potential impact of the work.\nThe award committee unanimously decided as follows:\nPhD Awards:\n1. Joshua Candamo (faculty advisor: Dr. Kasturi),\n2. Richard Garcia (faculty advisor: Dr. Valavanis ) MS Awards :\n1. George Lukachan (faculty advisor: Dr. Labrador )\n2. Laura Voicu (faculty advisor: Dr. Labrador )\nPlease join the committee in congratulating the winners!\n"}, {"score": 1887.0693, "uuid": "2276bd7f-6148-59d7-9bb2-4477b8483f22", "index": "cw12", "trec_id": "clueweb12-1013wb-39-19184", "target_hostname": "www.cse.usf.edu", "target_uri": "http://www.cse.usf.edu/newsarchives", "page_rank": 1.2101784e-09, "spam_rank": 87, "title": "Department of <em>Computer</em> <em>Science</em> and <em>Engineering</em> :: newsarchives", "snippet": "\u00a9 2012 Department of <em>Computer</em> <em>Science</em> and <em>Engineering</em>. All rights reserved.", "explanation": null, "document": "Alfredo Weitzenfeld, PhD\n07.23.2007 Announcing a Professional Masters Program\nThe department of Computer Science and Engineering is proud to offer a new Professional Master's Program for working professionals. Please see the program's page here .\n06.18.2007 Jay Ligatti co-authors \"Fault-tolerant Typed Assembly Language.\" Submission recognized as Best-paper.\nCongratulations to Jay Ligatti for winning the best paper award at the prestigious ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI), June 2007. The winning paper \"Fault-tolerant Typed Assembly Language\", a joint submission by Frances Perry, Lester Mackey, George Reis, Jay Ligatti, David August, and David Walker, was offered for submission in December of 2006 and selected by the PLDI Planning Committee for the June 2007 proceedings.\nThe official conference website states \"PLDI seeks original research papers that focus on the design, implementation, development, and use of programming languages. Emphasis is placed on innovative and creative approaches to compile-time and run-time technology, novel language designs and features, and results from implementations.\" PLDI submission requirements dictate that paper submission is double-blind, make no reference to the author(s) or institution(s), and must meet\u00c2\u00a0strict guidelines for formatting and content. http://ties.ucsd.edu/PLDI/papers.shtml\n\"This is a very impressive accomplishment for Jay who has just completed his first year at USF.\" -- Dr. Kasturi, Department Chair\nTo view \"Fault-tolerant Typed Assembly Language\": http://www.cse.usf.edu/~ligatti/papers/ft-tal.pdf\nTo read more about Jay Ligatti: http://www.cse.usf.edu/index.php?sec=25&sub=205\n06.06.2007 Dr. Nagarajan Ranganathan named 2007 Distinguished University Professor\nDr. Ranganathan is a computer engineer of international repute in the area of Very Large Scale Integration (VSLI) research. He is an accomplished scholar with 67 refereed articles (13 as lead author), three edited teaching books, four book chapters, and numerous conference papers, and he has seven patents to his name. He has brought in over $6.5 million in grant money from the National Science Foundation and private industry, and is a Fellow of the prestigious IEEE. His work is well-cited and he is a recognized leader in his field. Dr. Ranganathan\u2019s graduate teaching is outstanding, with 16 doctoral students, several of whom have won awards, and 65 completed masters degrees. In service, Dr. Ranganathan has played a major role as editor-in-chief of the most prominent international journal in his field, served on national review panels, and been coordinator and an active participant in many international conferences. Dr Ranganathan meets all the guidelines of a Distinguished University Professor and overall, the University Recommending Committee found him deserving of the award of Distinguished University Professor.\n05.02.2007 Dr. Robin Murphy to be Keynote Speaker at CRA-W Career Mentoring Workshop.\nCRA-W has sponsored a\u00c2\u00a0series of Career Mentoring Workshops, targeted to women in all stages\u00c2\u00a0 of their academic careers. Women often find themselves a minority in\u00c2\u00a0their own departments, and the CRA-W workshops bring them together\u00c2\u00a0with women already established in their fields. The established\u00c2\u00a0professionals provide practical information, advice, and support to\u00c2\u00a0their younger colleagues. Each of the workshops is associated with a\u00c2\u00a0major professional meeting, providing many attendees with the\u00c2\u00a0opportunity to attend technical talks and make contacts in their\u00c2\u00a0research areas.\nDr. Robin Murphy has been selected to be the Keynote Speaker at this year's workshop, which will be held June 9-10, 2007 at the Federated Computing Research\u00c2\u00a0Conference in San Diego.\n01.25.2007 Jeremy Rasmussen on Jeopardy!\nJeremy Rasmussen, a CSE faculty had the chance to be on the TV show Jeopardy on Jan 5th. After winning $28,001 and ending on the top spot on Jan 5th, his second apperance on the show was on Jan 8th, where he won $2000 and came in second spot, winding up with\u00c2\u00a0a total amount of $30,001.\nWe take this opportunity to congratulate him.\n12.06.2006 Dr. Goldgof elected as IEEE Fellow\nDr. Dmitry Goldgof has been elected as an IEEE Fellow for his contributions to computer vision and biomedical applications.\u00c2\u00a0IEEE bylaws stipulate that no more than one tenth of one percent of its members may be elevated to the Fellow grade in any year.\n12.04.2006 Outstanding Graduate Student Poster Competition Results Announced\nThe participants of the 3rd annual Computer Science and Engineering Department's Outstanding Graduate Research Award competition presented their research on Wednesday, November 29. There were some very interesting and informative posters presented.\nThere were 19 participants of which 15 were Ph.D. students.\nPhD Awards:\n1. Richard Garcia (Faculty Advisor: Dr. Valavanis)\n2. Matthew Long (Faculty Advisor: Dr. Murphy)\nM.S. Awards:\n1. Shyamala Doraimani (Faculty Advisor: Dr. Iamnitchi)\n2. Rodrigo Gutierrez (Faculty Advisor: Dr. Murphy)\nRichard Garcia\nMatthew Long\n10.05.2006 2005 USF Outstanding Staff Award\nDee Allen received the 2005 USF Outstanding Staff Award for her personal commitment and contribution to the University 's greater good, individual growth, and development\n10.02.2006 Best Paper Awards\nInternational Association for Pattern Recognition (IAPR) presented the best student paper award to Himanshu Vajaria, Tanmoy Islam, Sudeep Sarkar, Ravi Shankar and Rangachar Kasturi at the 18th International Conference on Pattern Recognition for their paper titled \"Audio Segmentation and Speaker Localization in Meeting Videos\".\nNarender Hanchate with N. Ranganathan received the best paper award for their paper entitled, \"A Linear Time Algorithm for Wire Sizing with Simultaneous Optimization of Interconnect Delay and Crosstalk Noise,\" Proc. Intl. Conference on VLSI Design in January 2006. It was ranked 1 out of 360 submissions.\n12.13.2006 Rangachar Kasturi elected 2008 President of the IEEE Computer Society\nRANGACHAR KASTURI, Professor and Chair of Computer Science and Engineering at the University of South Florida, has been elected as the 2008 President of the IEEE (Institute of Electrical and Electronics Engineers) Computer Society by its members in a world-wide election.\nKasturi received his B.E. (Electrical) degree from Bangalore University in 1968 and M.S.E.E. and Ph.D. degrees from Texas Tech University in 1980 and 1982 respectively. He served as a Professor at the Pennsylvania State University from 1982 to 2003. He served as a Fulbright Scholar in 1999.\nKasturi was president of the International Association for Pattern Recognition (IAPR) during 2002-04. He is a Fellow of both the IEEE and the IAPR.\nIEEE COMPUTER SOCIETY was founded in 1946. With nearly 100,000 members in some 140 countries, its vision is to be the leading provider of technical information, community services, and personalized services to the world's computing professionals.\nThe Society is dedicated to advancing the theory, practice, and application of computer and information processing technology. Through its conferences, applications-related and research-oriented journals, local and student chapters, distance learning campus, technical committees, and standards working groups, the Society promotes an active exchange of information, ideas, and technological innovation.\n09.21.2006 Welcome Dr. Jay Ligatti\nDr. Jay Ligatti joined the CSE department in Fall 2006 as Assistant Professor. Jay Ligatti received his Ph.D. in Computer Science from Princeton University in June 2006 and his B.M. in Music Composition from the University of South Carolina in May 2001. Dr. Ligatti's research interests are software security and programming languages, including language-based security and reliability, software monitoring, formal policy analysis, security automate, type systems, program transformations, and aspect-oriented and policy-specification languages.\n09.21.2006 CSE Achievement Gala\nThe Annual CSE Achievement Gala\u00c2\u00a0was\u00c2\u00a0held\u00c2\u00a0on Friday, September 22, 2006 to celebrate the achievements of faculty, staff, and students'.\nFor more details, click here .\n07.14.2006 USF CSE computer security team finishes second in security competition\nOn July 14, the USF Whitehatters Computer Security Club (WCSC) finished second out of 20 teams in the CIPHER2 computer security competition sponsored by RWTH-Aachen (Technical University of Aachen, Germany): http://www-i4.informatik.rwth-aachen.de/~lexi/cipher2.php?edit=0 .\n\u00c2\nA team from RWTH-Aachen won the competition, as it did in the 2005 International Capture the Flag (iCTF) hosted by University of California-Santa Barbara last fall ( http://www.cs.ucsb.edu/~vigna/CTF ).\u00c2\u00a0 However, the USF team's improvement from 14th place out of 22 teams in the iCTF to second out of 20 teams in CIPHER2 is remarkable, given that most of the same schools competed in both events.\n\u00c2\nThe CIPHER2 competition required each team to host a Linux installation with multiple application-layer vulnerabilities. The challenge was to exploit these vulnerabilities to gain \"flags\" from opponents' servers while finding and securing the weaknesses in their own server.\n\u00c2\nWCSC actually mounted the best offense by far of any team, submitting nearly 1600 flags during the 8-hour competition, which was about 400 more than RWTH-Aachen; however, the scoring system gave the edge to Aachen because it found exploits that were less widely known among all the competitors.\u00c2\u00a0 WCSC also received the top score for \"ethical\" behavior.\n\u00c2\nWCSC finished ninth of 69 teams in the DefCon CTF qualifier on June 9-11 ( https://www.kenshoto.com/ctf06/quals_final.html ) and second of seven teams in the 2006 Southeast Collegiate Cyber Security Competition at Kennesaw State University ( http://infosec.kennesaw.edu/SECCDC ).\u00c2\u00a0 The team plans to send a sizeable contingent to the DefCon 14 security conference in Las Vegas on August 4-6 and compete in the \"Amateur CTF\" contest ( https://www.dc949.org/aCTFII ).\n\u00c2\nNOTE: On July 11, the club was featured in a WTSP - Channel 10 news story about remote monitoring software. See the video segment here: http://www.tampabays10.com/video/news/?aid=30089&sid=35059\n06.01.2006 USF intelligent scarecrow travels world\nRandolph Fillmore\nhttp://usfnews.usf.edu/page.cfm?link=article&aid=1319\n(Tampa, Fla. June 1, 2006)\u00c2\u00a0 - An intelligent scarecrow, nicknamed J.J. - designed\u00c2\u00a0by four USF College of Engineering computer science and engineering students to protect both the investment of aqua-farmers and the lives of birds that may prey upon their fish - does not, unlike the scarecrow of Oz fame, have a \u201chead all full of stuffing.\u201d J.J. has a head all full of cameras and other hi-tech computer components that, for less than $500, will keep birds away from fish farm ponds without harming fish-seeking birds.\nThe smart scarecrow, disguised as a USF football player, was born as just one of the several novel projects during this semester\u2019s Senior Project (CIS 4930) in USF professor of computer science Ken Christensen\u2019s class, but J.J.\u2019s fame has taken him \u201caround the world\u201d in media coverage as the initial media release spread the word that scarecrow finally had a brain. (Going to Google News, and using \u201cintelligent scarecrow\u201d as a search term will provide a list of J.J.\u2019s media hops around the world.)\nRecently filmed by a crew from Discovery TV, Canada, ( http://www.exn.ca/dailyplanet/view.asp?date=5/24/2006 ) with two appearances on local TV ( http://www.tampabays10.com/news/local/afternoon/article.aspx?storyid=30525 ) and written about in newspapers and on websites throughout the U.S., Europe, Australia, the United Kingdom, the Middle East and Asia (including India and China), J.J.\u2019s next challenge is to win the 2006 Microsoft Windows Embedded Student Challenge World Finals on Microsoft\u2019s campus in Redmond, WA. The competition will be held June 23-24. Thirty student teams from around the world (China-14; India- 4; U.S.-5; Romania -3; Mexico -2; Brazil -1; Australia-1) will participate.\n\u201cThis project is an example of what USF engineering students can do,\u201d said Christensen. \u201cThey successfully generated requirements, produced a design and implemented it, then tested the implementation within strict time and cost constraints. They\u2019ve done a great job.\u201d\nAs one of only five U.S. teams selected, the USF team \u00e2\u0080\u0093 Albert Ng; Francisco Blanquicet; Jimal Ramsamooj; Scott Werner and USF professor and team faculty advisor, Christensen - will journey with J.J. to the Microsoft competition confident that their entry will more than live up to the Microsoft Challenge that requires students to use Windows CE to \u201cdesign a computer-based system that solves a real-world problem focused on preserving, protecting and enhancing the environment.\u201d First prize is $8,000.\n\u201cWe are honored to be finalists,\u201d said Ramsamooj.\nTheir project is all about saving protected bird species and also saving fish farmer's dollars.\n\u201cAquaculture, also known as fish farming, is a vital part of the world\u2019s fish production,\u201d said Christensen. \u201cThe outdoor farms are susceptible to predator birds. The students\u2019 intelligent scarecrow is designed to benefit farmers while protecting predator birds - many of which are protected species - from harm.\u201d\nHow does J.J., the intelligent scarecrow, do his scary thing? With computer programmed intruder identifiers, such as image processors, noisemakers and water cannons, J.J. can make an intelligent assessment of an intruder by color, programmed in ahead of his work shift. Fish farmers working around the ponds can wear orange vests to be identified as \u201cfriendlies.\u201d\n\u201cJ.J. is not just another motion-detector,\u201d said student Albert Ng. \u201cHe is capable of intelligent detection, deterrence and can also record the events.\u201d\nAccording to Ng, the scarecrow will detect motion and then use its cameras, equipped with image and color sensors, to discriminate between intruders and non-intruders using programmed color recognition. He is \u201carmed\u201d with a speaker system that blasts up to 120 decibels of gunshot sound and also hits approaching predator birds with high speed but harmless streams of water. Not one to keep secrets, the scarecrow then emails or calls the user\u2019s cell phone to let them know that he has been on the job and accomplished a hi-tech \u201cscare.\u201d\nThe experience, from drawing board to live tests, has provided a valuable experience for Blanquicet.\n\u201cIt has been great fun seeing how our concept \u00e2\u0080\u0093 first written on a piece of paper \u00e2\u0080\u0093 after a lot of hard work has been successful,\u201d said Blanquicet. \u201cWe\u2019ve had a lot of media attention already and really look forward to the Microsoft competition.\u201d\nThe USF computer science engineering wizards designed and tested J.J. in the lab before successfully testing and improving its function in real-time at the Wimauma, Fla. fish farm of John Skidmore, who was happy to accommodate the USF students who found him in the Yellow Pages and \u201ccold called\u201d him with an interesting proposal.\n\u201cWe lose three to five percent of our stock annually to predator birds,\u201d said Skidmore, owner of \u201cGolden Pond Tropicals,\u201d an eight acre, 97 pond fish farm. \u201cThe scarecrow has real potential.\u201d\nThe computer science engineering team also suggested that a similar system could be extended beyond fish farming to protect orchards and vineyards where farmers experience similar problems with deer, black bears and other pests or predator animals.\n\u201cImage processing has great potential for pest detection,\u201d concluded Christensen.\n06.30.2006 Hao Zheng Wins NSF CAREER Award\nAssistant Professor Hao Zheng has received an NSF CAREER Award for his project \"Methodologies and Tools for Large Real-Time Concurrent System Verification.\" The award is for 5 years (2006-2010), with total funding of $400,000.\nAccording to the NSF website, \"the Faculty Early Career Development (CAREER) Program is a Foundation-wide activity that offers the National Science Foundation's most prestigious awards in support of the early career-development activities of those teacher-scholars who most effectively integrate research and education within the context of the mission of their organization. Such activities should build a firm foundation for a lifetime of integrated contributions to research and education.\"\nDr. Zheng received his Ph.D. from the University of Utah in 2001.\u00c2\u00a0 He joined the USF Computer Science and Engineering Department in Fall 2004.\u00c2\u00a0 His research interests are VLSI design, computer architecture, asynchronous circuit design, and formal verification.\n11.05.2005 The Fall 2005 CSE Graduate Picnic was held November 4\n**The Fall 2005 CSE Graduate Picnic was held November 4** The Computer Science and Engineering Department's annual Graduate Program picnic was held November 4 at USF Riverfront Park.\u00c2\u00a0 More than 50 students, faculty, and staff enjoyed the gorgeous weather, delicious chicken and Indian food, and music, games and sports.\u00c2\u00a0 Activities included cricket, soccer, volleyball, frisbee, dancing, canoeing, and Sudoku. The winner of the \"Wacky Hat\" contest was Himanshu Vajaria. Special thanks go to Sergiy Fefilatyev, Upavan Gupta, Isabela Moura, Graciela Perera, Himanshu Vajaria, Pedro Wightman, and Rui Zhang for helping plan and organize the picnic activities.\n11.22.2005 CSE Graduate Student Research Competition Winners Announced\nThe participants of the 2nd annual Computer Science and Engineering Department's Outstanding Graduate Research Award competition presented their research on Tuesday November 22. There were some very interesting and informative posters presented. We want to thank all the participants for the creation and presentation of the posters reflecting their research work.\nThere were 11 participants of which 9 were Ph.D. students. The committee based their judgment on the following criteria:\n1. Quality and clarity of the poster.\n2. Clarity of the presentation.\n3. Potential impact of the work.\nThe award committee unanimously decided as follows:\nPhD Awards:\n1. Joshua Candamo (faculty advisor: Dr. Kasturi),\n2. Richard Garcia (faculty advisor: Dr. Valavanis ) MS Awards :\n1. George Lukachan (faculty advisor: Dr. Labrador )\n2. Laura Voicu (faculty advisor: Dr. Labrador )\nPlease join the committee in congratulating the winners!\n"}], [{"score": 1879.6533, "uuid": "1de2adfc-e376-55cb-9381-464426d27457", "index": "cw12", "trec_id": "clueweb12-0713wb-94-07341", "target_hostname": "blogs.ucl.ac.uk", "target_uri": "http://blogs.ucl.ac.uk/library-sci-eng/category/computer-science/", "page_rank": 1.5013497e-09, "spam_rank": 99, "title": "Library news for <em>Science</em> and <em>Engineering</em> \u00bb <em>Computer</em> <em>science</em>", "snippet": "The image used <em>is</em> \u2018Joy Goonies\u2019 and <em>is</em> available at Filed under 24 things, Chemistry, <em>Computer</em> <em>science</em>, Earth <em>Sciences</em>, Electronic resources, <em>Engineering</em>, Exam papers, General MAPS, Materials <em>Science</em>, Mathematics, Physics and Astronomy, Resources on the web, <em>Science</em> and Technology Studies, Space and", "explanation": null, "document": "Search blog\nAbout this blog\nLibrary news for Science and Engineering has been created by the Science Subject Librarian Team as a forum for information and news about the library for the staff and students of the UCL Faculty of Engineering and UCL Faculty of MAPS .\nIt includes regular posts on new library resources (both printed and electronic), Open Access, interesting events, useful websites and general library news.\nIf you would like to receive e-mail alerts when new posts are added to the blog, readers can subscribe here , or if you use an RSS feed reader it will tell you each time a new entry is added.\nRecent Posts\n"}, {"score": 1877.5978, "uuid": "e343bedc-aa29-5334-b2cb-a75c01ada246", "index": "cw12", "trec_id": "clueweb12-1411wb-96-17111", "target_hostname": "www.geekymomblog.com", "target_uri": "http://www.geekymomblog.com/2010/10/06/technology-computer-science-more-thoughts/", "page_rank": 1.1947489e-09, "spam_rank": 69, "title": "Technology, <em>Computer</em> <em>Science</em>, <em>More</em> thoughts | Geeky Mom", "snippet": "I have <em>more</em> specifics to say about the CSTA and other curricula, but I\u2019ll leave that for another day. * <em>Computer</em> <em>Science</em> for Fun \u2013 cs4fn: <em>Computer</em> <em>Science</em> and Electronic <em>Engineering</em>: The Women are here! Really smart post!", "explanation": null, "document": "06. October 2010 \u00b7 3 comments \u00b7 Categories: Uncategorized \u00b7 Tags: computerscience , computing , programming , teaching\nThere are quite a few conversations among computer science teachers and professors happening right now about the state of computer science in high schools.\u00a0 I just finished a draft of my own syllabus for Intro to CS and in doing so, I spent a lot of time looking at other people\u2019s syllabi, asking current teachers what they taught and why, and reading up on issues regarding teaching CS in high school. So this issue is in the forefront of my mind.\u00a0 Not being in this role for very long, my thoughts about what to teach, whether to require CS in high school, among other things are not fully formed.\u00a0 I wrote a little about this a while back , and I still hold that there\u2019s a difference between being tech/computer savvy and being a computer scientist, I\u2019m not entirely sure that we should privilege one over the other at the high school level.\nSo, let me present some other people\u2019s thoughts before I present my own.\u00a0 First, Douglas Rushkoff has a book out, called Program, or Be Programmed and wrote a brief piece for the Huffington Post about how he thinks programming should be required.\u00a0 I\u2019m in the middle of reading the, and so far, it has very little to do with programming and more to do with a more general understanding of how technology works.\u00a0 For example, he talks about how Facebook is not really interested in helping you build a community of friends, but in using your information and your connections to make money.\u00a0 Most of the changes they\u2019ve made to the site over the last few months have been designed specifically to facilitate their ability to make money.\nAlfred Thompson responded to Rushkoff\u2019s ideas in this post , which has some really interesting comments, with some people who think it\u2019s silly to suggest that we should teach programming in high school, some who think we should stick to teaching applications like Excel, and some who think we should definitely teach programming to every student.\nAnd then, today, the CSTA issued a report, which I have only skimmed I admit, called Running on Empty: The Failure to Teach K-12 Computer Science in the Digital Age .\u00a0 It\u2019s main argument is that the skills kids need to succeed in the 21st century are CS skills and those skills are not being taught in many schools and only required in 8 states.\u00a0 So, we need to work toward requiring schools to teach those skills.\u00a0 Now, the CSTA curriculum for CS, which I\u2019ve spent a lot of time with isn\u2019t just programming.\u00a0 There are lots of other computer skills in there like web design, binary, ascii code, ethics, networking, etc., so unlike Rushkoff, they\u2019re not necessarily advocating every learn to program in high school.\nOkay, so here\u2019s my thinking.\u00a0 I think everyone should know the difference between an operating system, an application, and a web browser.\u00a0 I think everyone should know several different operating systems, not inside out, but at least know that there are different ones, that there are similarities between them, etc.\u00a0 I think everyone should understand file structures.\u00a0 Where does that file go when I save it?\u00a0 I think everyone should be able to type in a web address and know what a url is.\u00a0 So many hours of people\u2019s lives are wasted searching for Google on Bing or vice versa.\u00a0 I think people should know how to find out how to use applications.\u00a0 Note, I did not say people should know how to use Word or Excel.\u00a0 Applications change.\u00a0 You should be able to feel your way around, use the help feature, or use a search engine to figure it out.\nBut those are not really computer science skills; however, I think it\u2019s hard to go to the CS skills if you don\u2019t have at least this groundwork laid.\u00a0 I articulate them because I\u2019ve spent a lot of time helping 6-8 graders and teachers alike figure out some of these things.\u00a0 When someone opens up Word to find their Google Doc, something is wrong.\nOn the other hand, I\u2019ve figured out a lot of what I know about using computers and doing some pretty darn complicated stuff with them without having any formal training in CS.\u00a0 But why did I learn those things? Why did I figure out HTML, CSS, Flash, & PHP? Why do I know what a C: drive is, what DOS is, and how to FTP?\u00a0 In part, because I was curious and I just wanted to know.\u00a0 But also because the computer, back when I first started using one, was a clunky thing, and didn\u2019t hide everything.\u00a0 No, I couldn\u2019t open up the uncompiled code, but I could see the computer\u2019s structure by listing directories. Often to run a program, you had to type a complicated series of backslashes and directory names.\u00a0 Back when I started working on the web, you could easily see the HTML and eventually, the CSS.\u00a0 And back when I got email, there was no \u201cYou\u2019ve Got Mail\u201d sound or envelope icon to double-click.\u00a0 You had to log in to a server, know the server\u2019s name, i.e. lblanken@dev.iu.edu.\u00a0 So, computers were more transparent and I wanted to learn more about how they worked because I could see some of that just in my basic interactions with the machine.\nThat interest did not translate into my learning programming at first.\u00a0 I was quite content just knowing my way around a computer and its (already made for me) programs.\u00a0 It got me good-paying work along the way and got me into the growing field of educational technology.\u00a0 I\u2019m leary of applying my own experience to the present day.\u00a0 For one, today\u2019s technology environment is very different from the late 80s one I grew up in. Knowing how to use a word processor or basic database program does not garner the amazement it did in 1989.\u00a0 Had I been in the right place at the right time, I might have ended up at Microsoft or Google, but we didn\u2019t have CS courses in college, much less high school.\u00a0 Today, it\u2019s still true that a student with the right CS skills could end up at a start-up (or starting their own) or at Google or Microsoft or any other company that needs programming/HCI/data analysis (almost all).\u00a0 But it\u2019s more likely now.\u00a0 It\u2019s more likely that a student will have access to a computer very early.\u00a0 I didn\u2019t even see one until I was 12 and then there were only three in our whole school.\u00a0 There were none in our high school.\u00a0 In college, we had VAX machines.\u00a0 I took a CS class on PCs my junior year and the next year, we finally got a mac lab.\u00a0 So younger students are exposed to the equipment, but what they see is a slick operating system that looks more like a tv than a computer (and sometimes it is).\u00a0 How many will want to dig around on their own?\u00a0 And how much more do they need to know to be able to do so?\u00a0 Computers are more complicated than they were.\u00a0 And the Internet has exploded and we have tiny little devices that are tiny little computers.\nSo I say it\u2019s not an either/or kind of question.\u00a0 Yes, we should teach people how to use their computers and the applications on them, but I believe in doing so at an abstract level as much as possible.\u00a0 And yes, I think we should teach programming.\u00a0 Will everyone become a programmer? No, but if we give them the opportunity, we might end up with more of them, and more women and more minorities in IT and CS fields as a result.\u00a0 If we wait till college, we\u2019ve already lost a lot of people.\nI have more specifics to say about the CSTA and other curricula, but I\u2019ll leave that for another day.\nRelated articles by Zemanta\n"}, {"score": 1877.4484, "uuid": "c8050aed-0124-5200-afbf-a68a2839b03b", "index": "cw12", "trec_id": "clueweb12-1214wb-49-01876", "target_hostname": "compsci.csuci.edu", "target_uri": "http://compsci.csuci.edu/about/why-cs.htm", "page_rank": 1.230335e-09, "spam_rank": 75, "title": "Why <em>Computer</em> <em>Science</em>? &gt; <em>Computer</em> <em>Science</em> &gt; CSU Channel Islands", "snippet": "Why Choose a Career in <em>Computer</em> <em>Science</em> and <em>Engineering</em> Videos from University of Washington about the bright prospects for <em>interesting</em> life as a <em>computer</em> <em>science</em> and <em>engineering</em> professional. eWeek on 10 Programming Languages You Should Learn Right Now Business 2.0, May 2006: 5 Out of 10 Fastest Growing", "explanation": null, "document": "Most Lucrative College Degrees\n\"What happened to well-rounded? There are far fewer people graduating with math-based majors, compared to their liberal-arts counterparts, which is why they are paid at such a premium. The fields of engineering and computer science each make up about 4% of all college graduates, while social science and history each comprise 16% [...]. As a result, salaries for graduates who studied fields like social work command tiny paychecks, somewhere in the vicinity of $29,000. English, foreign language and communications majors make about $35,000...\"\nComputer Science Major is Cool Again\n\"CRA said the popularity of computer science majors among college freshmen and sophomores is because IT has better job prospects than other specialties, especially in light of the global economic downturn. \"\n\"When you compare the demand for jobs with the production of computer science undergrads, we're way short. It's clear there's an opportunity here.\"\n"}, {"score": 1875.9039, "uuid": "5ee37972-62c6-53a3-80cd-f3124b08e112", "index": "cw12", "trec_id": "clueweb12-0812wb-79-27879", "target_hostname": "www.kavlifoundation.org", "target_uri": "http://www.kavlifoundation.org/print/extreme-machine-2009-kavli-futures-symposium", "page_rank": 1.1827379e-09, "spam_rank": 66, "title": "Extreme Machines: <em>What</em> <em>Science</em> Needs from <em>Computers</em>", "snippet": "Published on The Kavli Foundation (http:&#x2F;&#x2F;www.kavlifoundation.org) Home &gt; Extreme Machines: <em>What</em> <em>Science</em> Needs from <em>Computers</em> Extreme Machines: <em>What</em> <em>Science</em> Needs from <em>Computers</em> <em>Computers</em> are the workhorses of <em>science</em>.", "explanation": null, "document": "Published on The Kavli Foundation ( http://www.kavlifoundation.org )\nHome > Extreme Machines: What Science Needs from Computers\nExtreme Machines: What Science Needs from Computers\nComputers are the workhorses of science. Without their power to crunch numbers, control instruments, turn raw data into intelligible patterns or pictures and test theories with simulations, most of what we now know about ourselves and the universe might still be a mystery. But computing technology as we know it is reaching its limits, even as scientists look forward to new discoveries that are possible only with a great leap in computing power.\nHow can computing make that leap? That was the subject of the Kavli Futures Symposium, \u201cReal Problems for Imagined Computers,\u201d a meeting of minds between leading computer experts and scientists in disciplines such as cosmology and neuroscience that use computers to process huge quantities of data. \u201cComputing is something important that we have in common,\u201d says lead organizer Roger Blandford, head of the Kavli Institute for Particle Astrophysics and Cosmology (KIPAC) at Stanford University.\nA Rich New Dialogue\nThe Kavli Futures Symposia is an opportunity for small groups of leading scientists to envision new directions in the fields of astrophysics, nanoscience, neuroscience and theoretical physics. A uniquely focused and creative retreat, one of the keys to the symposia is gathering scientists in a setting where they can freely exchange ideas while together imagining the future of their disciplines.\n[1]\nThe roster of 22 participants (plus MIT astrophysicist Edward Farhi, joining by teleconference) represented three of the major fields studied by the 15 Kavli Institutes -- neuroscience, nanoscience and astrophysics \u2013 as well as some of the most advanced work in computer science and engineering.\nHeld over three days in the resort town of Muelle, Costa Rica, in January 2009, this was the second in the Futures series. Like the first, held in 2007 in Ilulissat, Greenland, on the interaction of biology and nanoscience, it brought different disciplines together to spur networking and sketch out a tentative road map for future thought and research.\nBlandford and other leaders of the symposium, Larry Abbott of Columbia University and Michael Roukes of the California Institute of Technology, say the conference was a success in surprising ways. Conceived as mostly an intellectual one-way street, with the users of computing looking for answers from the computer specialists, it turned into a something much richer; a dialogue in which both sides learned as well as taught.\n\u201cI think everybody came in with a fair level of ignorance,\u201d says Blandford. The computer users \u2013 astrophysicists, nanoscientists and neuroscientists \u2013 had their eyes opened to the real nature (and limitations) of computing power.\u00a0 \u201cI wasn\u2019t aware of all the computer issues that we faced,\u201d says Abbott, a professor of neuroscience at Columbia and a member of the university\u2019s Kavli Institute for Brain Science. Abbott says he learned more about the many the challenges associated with the shift to parallelism \u2013 an architecture in which multiple processors work simultaneously on a problem to boost computer power. Afterwards, he \u201cwent and bought a more parallel computer than I currently had.\u201d\nRoukes, who co-directs Caltech\u2019s Kavli Nanosciences Institute, says the symposium may have provided a reality check for scientists who were underestimating their future computing needs and overestimating the supply of computing power. \u201cThere are many disconnected areas of research that are extrapolating where they want to be tomorrow based on the computing power that they assume will be available to them,\u201d says Roukes. He says the symposium helped point the way toward \u201ca commonality of approach to assess realistically what we need.\u201d\nThe computer scientists got an education as well. \u201cArguably the most interesting connection was the one that was made between some of the computer scientists and the neuroscientist,\u201d says Blandford. \u201cIt got the computer scientists to ask what really goes on in the brain \u2026 A lot of them hadn\u2019t been exposed to this.\u201d\u00a0 Abbott says they got \u201csome idea of how neurosystems do [computation] differently,\u201d and this \u201cwas intriguing to everyone.\u201d\nComputing that Meets the Demands of Science\nThe roster of 22 participants (plus MIT astrophysicist Edward Farhi, joining by teleconference) represented three of the major fields studied by the 15 Kavli Institutes -- neuroscience, nanoscience and astrophysics \u2013 as well as some of the most advanced work in computer science and engineering. Several of the participants had backgrounds that bridged the gap between computer users and computer scientists. There was Tim Cornwall, for instance, a software designer for the Australia Telescope National Facility. Stanford\u2019s Tom Abel brought expertise in both astrophysics and supercomputing. Jacek Becla, also from Stanford, covered astrophysics and information systems. Several neuroscientists, including Abbott, Terry Sejnowski of San Diego\u2019s Salk Institute and Xiao-Jing Wang of Yale, billed their specialty as \u201cneurocomputation.\u201d\nAs these labels suggest, computer science has already made inroads into sciences that study the workings of the human brain and the physical laws that govern the universe. Fittingly, these are fields that make heavy demands on computers. They need plenty of computing power for simulations of the early universe or of neural circuits involving millions of neurons and synapses. Modern telescopes also create enormous data processing requirements. Blandford says the 8.4-meter Large Synoptic Surface Telescope (LSST) proposed for construction in Chile will produce three petabytes of data (more than 3 million gigabytes) in its first three years of operation.\nNanoscientists are computer users as well, but their most crucial role at the intersection of computing and sciences may be as developers of new, ever smaller physical structures for computing \u2013 such as single-atom memory and single-electron logic gates. \u201cNanoscience represents the next phase of miniaturization of electronic hardware that can be used for computation purposes,\u201d says Roukes.\nSuch devices may one day be the basis for so-called \u201cextreme\u201d computers \u2013 a thousand times more powerful, by one definition, than today\u2019s machines \u2013 but not before some daunting problems are solved. One of these is the challenge of just \u201cmoving data around,\u201d as Abbott puts it. Even if new processors were a thousand times faster, computers as designed today could not take advantage of that speed. The wattage used in moving data to and from the processors at such a blinding pace would require having an electric power plant next door.\nOne of the symposium participants, Stanford University computer scientist Bill Dally, summed up this conundrum with a slogan: \u201cFLOPS are free; free the FLOPS.\u201d\u00a0 As Roukes explains, the speed of processors (measured in floating-point operations per second, or FLOPS) is more than adequate. They can work so fast that FLOPS are virtually free. \u201cThe problem is that they are not capable of operating to their capacity because they are starved for local access to memory,\u201d he says. In effect, the FLOPS are confined by an architecture that needs too much energy to send, receive and store data.\nOne way around this rock in the road is via software that makes better use of the available hardware. \u201cThe computer scientists were in fact quite hardnosed about this,\u201d says Blandford. \u201cThey are very involved in integrating the hardware and the software.\u201d The future lies in finesse \u2013 enabled by advances in software \u2013 rather than raw power.\nThe Human Brain and Computer Architecture\nAnother route, not open today but maybe available in the longer run, is to change computer architecture. And the presence of neuroscientists at the symposium naturally brought up the architecture of the human brain. No artificial computer does so much with so little energy \u2013 15 watts -- as the brain does. The brain\u2019s tasks are different from the work that scientists demand of computers, and it\u2019s very slow at number-crunching. But it was a fascinating subject for the computer experts.\nThe brain\u2019s architecture is radically different from the standard computer model, with memory dispersed amid the millions of neuronal processors (most likely in the connections between neurons) rather than salted away in a dedicated space. In concept, Abbott says, this resembles an architecture called processor-in-memory (PIM), once proposed for computers but abandoned of the standard design that separates memory from the central processing unit. To mimic the brain, he says, \u201cyou would have to arrange processor and memory on every chip so that the processor and data it needs are in proximity.\u201d\nTwo of the discussions at the symposium approached this issue from the neuroscience side. Astrid Prinz of Emory University, a specialist in biocomputation, discussed the modeling of neurons and networks. Yale\u2019s Xiao-Jing Wang spoke on cortical dynamics. There was plenty to think about in contemplating the brain as a computing model. But modeling anything after the brain is problematic because there are so many unsolved mysteries about the brain itself. There is no \u201cstandard model\u201d of neuroscience, comparable to what exists in astrophysics, for example. Scientists are still working their way toward a shared view of how the brain works at the basic biochemical and electrical level. This makes neuroscience an exciting field, but it also means scientists have yet to decode the secret of brain computing so that it can be translated into new technology.\nRoukes says getting to the right question \u201cis sometimes 90 percent of the battle\u201d in science. To him and others, the symposium seemed to confirm that the question it started with \u2013 how shall science get the computing power it needs? \u2013 was indeed the right one, even if it has no clear answer yet. The symposium also highlighted the need for collaboration between communities that historically have done their work more or less separately. Sejnowski of the Salk Institute and Microsoft software architect Blaise Agueras y Arcas showed how scientists can bridge the divide between academia and commercial applications. The conference also showed how knowledge needs to flow across the gap between the computer users and the computer scientists. The scientists need to know exactly what the users require (not just any new computer will do). They can also pick up potentially fruitful ideas from the users\u2019 own research.\nThe extreme machines of the future may differ radically from the computers of today; and what shape they take is not yet known. But that was the point of the symposium. As Blandford points out, it was meant to start a process of thought and invention, not just to move computer design a step forward. \u201cWe took the charge to try and be visionary,\u201d he says, \u201cnot to extrapolate from what we\u2019re doing at the moment.\u201d\n"}, {"score": 1874.4304, "uuid": "f02ee8b4-5311-5110-9463-fc158593d5b4", "index": "cw12", "trec_id": "clueweb12-1410wb-05-03055", "target_hostname": "www.edmondschools.net", "target_uri": "http://www.edmondschools.net/memorial/Departments/Math/ComputerScience.aspx", "page_rank": 1.3738904e-09, "spam_rank": 87, "title": "<em>Computer</em> <em>Science</em>", "snippet": "Imagine <em>what</em> we can accomplish in the next 50 years! Congress recently passed H. Res. 558 designating the week of Dec. 7th as National <em>Computer</em> <em>Science</em> Education Week. ", "explanation": null, "document": "Come back later I will be adding more\n\"I believe there is a world market for maybe five computers\"\nThomas Watson, chair of IBM, 1943\nSince this time the computer has helped us: put a man on the moon; rovers on Mars; map the human genome; link people around the globe with the world wide web; save lives through improved weather forecasting\u00a0and robotic surgeries;\u00a0and make full length movies. Imagine what\u00a0we can accomplish in the next\u00a050 years!\nCongress recently passed H. Res. 558 designating the week of Dec. 7th as National Computer Science Education Week. Portions of the resolution are excerpted here:\n\u201cWhereas computing technology has become an integral part of culture and is transforming how people interact with each other and the world around them;\nWhereas computer science is transforming industry, creating new fields of commerce, driving innovation in all fields of science, and bolstering productivity in established economic sectors;\nWhereas National Computer Science Education Week can inform students, teachers, parents, and the general public about the crucial role that computer science plays in transforming our society and how computer science education enables innovation in all sciences, technology, engineering and mathematical disciplines and creates economic opportunities;\nWhereas all students deserve a thorough preparation in science, technology, engineering and mathematical education, including computer science at the elementary\u00a0 and secondary levels of education;\u201d\nThe emphasis is mine, for the complete text click here .\nAt Memorial you have a choice of four Computer Science classes.\nComputer Science: Game Programming\nAlgebra I prerequisite\nEarn \u00bd credit in Math and non-English Languages goes toward the\u00a02 credit requirement for graduation)\nLearn to make computer games with a variety of software\nNo homework\nComputer Science (formerly Computer Programming I)\nAlgebra I prerequisite\nEarn 1 credit in Math and non-English Languages(goes toward the\u00a02 credit requirement for graduation)\nNo experience necessary\nEasy entry into AP Computer Science\nNo homework, but expect to work in class\n"}, {"score": 1874.194, "uuid": "1e8e5cd2-966f-5e5a-ae36-b77e2c056a66", "index": "cw12", "trec_id": "clueweb12-0010wb-38-32381", "target_hostname": "spain.slu.edu", "target_uri": "http://spain.slu.edu/academics/degrees_&_programs/divisions/engineering/computer_science_degree.html", "page_rank": 1.1761275e-09, "spam_rank": 86, "title": "Degree in <em>Computer</em> <em>Science</em> \u00e2\u0080\u0093 Bachelor <em>Computer</em> <em>Science</em>", "snippet": "In the U.S. there are currently <em>more</em> <em>Computer</em> <em>Science</em> and Software <em>Engineering</em> jobs than all other <em>engineering</em> jobs combined. The Bureau of Labor Statistics predicts that over the next 10 years nearly 1 million new <em>Computer</em> <em>Science</em> and Software <em>Engineering</em> jobs will be added. So join us!", "explanation": null, "document": "Degree of Bachelor of Science in Computer Science\nWhat is Computer Science?\nComputer Science is an exciting, growing and challenging field that has impact in most aspects of everyday life. These areas include medicine, communications, automotive technology, weather forecasting, entertainment, mining, pharmacology, forensics, manufacturing, disaster recovery, security, law, business.\nFor practically any area you can think of there is an application of computer technology. Yet there are still many new computer applications to be discovered and implemented in that area, and you could be involved in that exciting endeavor and service to humanity.\nAs for growing fields related to computer science, one can mention Security Analysis and its applications in face recognition; email patterns; finding odd behavior in a crowd; breaking codes. Another growing field is Bioinformatics in analyzing gene sequence data to search disease markers. Game Programming is also a very fast growing field where games have surpassed movies in income production. Artificial intelligence in Medicine is used to build expert systems which make diagnoses or check for drug interactions. Medical imaging requires complicated 3-D image processing requires graphics and intense computing power. Communications indeed constitute a huge field and will remain a big employer. Issues that are addressed include networking, data encoding and encryption, wireless technology, and much more.\nThe impact of Computer Science and Software Engineering will only continue to grow. A recent report by the 2020 Science Group concludes that computing and computer science will become fundamental to all sciences, particularly the natural sciences.\nJob opportunities in Computer Science and Software Engineering are outstanding! In the U.S. there are currently more Computer Science and Software Engineering jobs than all other engineering jobs combined. The Bureau of Labor Statistics predicts that over the next 10 years nearly 1 million new Computer Science and Software Engineering jobs will be added. So join us!\nThe Major\nThe computer science program, jointly offered both SLU-Madrid Campus and the Department of Mathematics and Computer science of the College of Art and Science in Saint Louis, offers a Bachelor of Art (B.A) Degree as well as a Bachelor of Science (B.S) degree in Computer Science, both well respected by industry. The B.A. is useful for those students who want time to minor or major in an additional area such as biology, forensics, language, theology or mathematics. The B.S. is designed for the student who wants a greater depth study of Computer Science and is modeled for CSABET accreditation. The major is therefore designed and kept up to date to reflect the developments in computer science. Moreover, our computer science degrees both in Madrid and St. Louis offer a diversity of applied as well as theoretical courses.\nProgram Educational Objectives\nGraduates from the computer science program will be prepared for many types of careers in the computing industry and be prepared for graduate study in computer science and in closely related disciplines. In the early phases of their careers, we expect Saint Louis University computer science graduates to be:\nGraduate students and researchers.\nLeaders in government and law as government employees, policy makers, governmental advisors, and legal professionals.\nEntrepreneurial leaders.\nBusiness and technological leaders within existing organizations.\nActively involved in social and professional service locally, nationally, and globally.\nRecognized by their peers and superiors for their communication, teamwork, and leadership skills.\nSoftware professionals in a variety of organizations, including ones doing traditional software development, technological innovation, and cross-disciplinary work.\nUnique Features of this Program\nClasses are kept to small enrollments at all levels to allow for the best interaction between the teacher and\u00a0students.\nClasses are taught in computer classrooms whenever appropriate for the course.\nComputer science program involves substantial group work.\nStudents have interesting and fun hands-on work and projects.\nLectures and lab sessions are all taught either by\u00a0full time award-winning faculty or faculty with huge experience gained in industry.\nPossibility to develop strong written and oral communication skills in English and Spanish.\nCurriculum of Bachelor of Science Degree in Computer Science\nComputer Science Core\nCSCI-140: Introduction to Computer Science\n3\nCSCI-150: Introduction to Object Oriented Programming\n4\n"}, {"score": 1862.3018, "uuid": "4f029b04-dffb-5625-a7c4-566d81a46a84", "index": "cw12", "trec_id": "clueweb12-1103wb-99-13383", "target_hostname": "marknelson.us", "target_uri": "http://marknelson.us/category/computer-science/", "page_rank": 2.100433e-09, "spam_rank": 66, "title": "<em>Computer</em> <em>Science</em>", "snippet": "Tim teaches at the University of Canterbury in Christchurch, and <em>is</em> Deputy Head of the <em>Computer</em> <em>Science</em> and Software <em>Engineering</em> department. I got a chance to ask him about his work in data compression as well as one of his new areas of interest, <em>Computer</em> <em>Science</em> education.", "explanation": null, "document": "by Mark Nelson in Computer Science , Data Compression , People\nI was in Christchurch, New Zealand, recently and had a chance to meet Tim for the first time in person. Tim teaches at the University of Canterbury in Christchurch , and is Deputy Head of the Computer Science and Software Engineering department. I got a chance to ask him about his work in data compression as well as one of his new areas of interest, Computer Science education.\n"}, {"score": 1861.3787, "uuid": "b8adcf18-b057-5a88-b401-8e4e045d8def", "index": "cw12", "trec_id": "clueweb12-0607wb-15-15198", "target_hostname": "www.virtualschool.edu", "target_uri": "http://www.virtualschool.edu/mon/SoftwareEngineering/CSIsDeadResponse.html", "page_rank": 1.2792085e-09, "spam_rank": 77, "title": "Response to <em>Computer</em> <em>Science</em> <em>is</em> Dead", "snippet": "To my knowledge, this <em>is</em> quite literally the first time that mention of *people* has been allowed in a <em>computer</em> <em>science</em> publication. &gt; So <em>what</em> happens next?", "explanation": null, "document": "To: oscar@iam.unibe.ch (Oscar Nierstrasz), Laurent Dami\n, Matthias Ulrich Neeracher\nFrom: bcox@gmu.edu (Brad Cox) Subject: Response to Computer Science is Dead Cc: guerraoui@di.epfl.ch, Phil Agre\nBcc: X-Attachments:\nI've enclosed my response to an article by Phil Agre that might be an interesting topic for one or more stops on this visit. I'll enclose his original article in subsequent mail.\nBrad\nPhil: your article ties in with the brief discussion we had earlier so I thought I'd elaborate a response. This is actually quite timely. I've just been invited to argue this case in September to the high-energy physics group at CERN and to Nicklaus Wirth's group in Zurich in connection with an OO conference in Lausanne.\n> Computer science is dead.\nFirst, using your definition for 'computer science', which is the definition used throughout that field, I agree with every word. Remember, I've made the same transition you did, from techno-centric (OO programming language designer) to human-centric (organizational learning). My own transition was triggered by the conviction that what's broken here is not technology but organizations.\nHowever I've come at this issue from a different angle that leads to actionable, albeit hard to implement, conclusions. My viewpoint is not someone with a vested interest in computer science. My training was in quantum physics and neurophysiology, not CS. I spent my carrer as a practitioner; even built a company to buy and sell small granularity software components for its living. It comes from experiencing first hand why collaborative social orders, such as this company, is so hard for intangible goods.\nInstead of starting by broadening the focus to include people in the frame from the outset, I started by narrowing the focus to consider the differences in the fundamental particles that make up software vs tangible goods, i.e. bits vs atoms. Then I reason outward from this difference to how it affects people's behavior.\nMy comments come from applying the same definition for science that science has outside of computer science. Consider the failures of the baggage handling systems at Denver International Airport. The builders of the tangible components of this system, the baggage handling conveyor belts, airplanes and runways, the practitioners of physical science and engineering, accomplished their job in a timely cost-effective manner. The builders of the intangible components, the practitioners of computer \"science\" and software \"engineering\", did not.\nUsing the definition of computer science of this juxtaposition, the reason for the software crisis becomes clear. To wit, there never *has* been computer science, certainly not in the sense science holds in sucessful domains. Everything the computer scientist encounters is unique and unfamiliar, having been fabricated from first principles by some nerd as distinct from assembled from pre-existing components by some engineer. Computer science deals entirely with stuff (goods made of bits) that do not originate in nature, but come entirely from the creative urges of people.\nThus computer science isn't dead. Computer science has never existed. Not in the sense of a mature science, like post-Copernican astronomy, founded on experimental observation of pre-existing components (from nature or a market). Rather its name has been claimed by a pre-scientific pretender in exactly the sense that Ptolemaic pre-science predated Copernican science and quackery predated experimental medicine.\nThomas Kuhn covers the situation nicely. First there's \"normal science\" (computer \"science\" for the last half-century) whose failures (Denver Airport) leads to recognition of a \"crisis\" (software crisis) which ultimately triggers a \"revolution\" to an entirely new paradigm.\nThe core concept of this new paradigm I'm trying to bring about in my new book is that the virus that's causing the disease thats causing the symptoms we call the software crisis (and equally, and for the same reasons, the quality differences between internet and paper publishing) is that we're dealing with a substance that is made of bits instead of atoms, that originates entirely from people, not nature.\nBut since this substance doesn't abide by conservation of mass laws, the commercial mechanisms that incentivize people to work together for building pencils or baggage handling conveyor belts, entirely break down. Without commerce, advanced social orders can't evolve, so we're stuck in the primitive state where every nerd fabricates everything from first principles. Thus everything is unique, so there is nothing above the level of the bit that is consistent to warrant experimental study. This is why there's no such thing as computer science.\nIn other words, computer science is not an advanced science like post-Copernican astronomy. Its a pre-scientific pretender, like Ptolemaic astronomy or the witch-doctor's pig bladder rattle. The prerequisite to building a real science is to get to the point where there are non-unique pre-fabricated components for the scientist/engineer to study as Copernicus studied the heavens. This depends on development of a commercial incentive system to incentivize people to supply and maintain them, since people are the sole source of for such components, not nature.\nMy Wired article on superdistribution shows how this might be done in time. Also my new book.\n>  I have a doctoral degree in computer science, but I now teach\r>  in a social sciences department.  Though I would like to think\r>  I'm starting a trend, the evidence is not strong.  Even so, the\nI made the same transition so the trend includes at least two. Unclear who started it tho. ;-)\n>  evidence *is* strong that the academic discipline of computer\r>  science is in trouble.  I was first alerted to this fact a few\r>  years ago when my officemate from graduate school quit a top-rank\r>  computer science faculty position to work for Microsoft because\r>  he wanted to be where the action is.  He's right: the agenda for\r>  computer science research has shifted from academia to industry.\nThis isn't news. The focus has been in industry since the beginning. Xerox Parc, Bell Labs, IBM Watson Labs, Stepstone (my company), etc. Academia is notoriously slow getting the news.\n>  But the problem runs deeper than that, and I think that computer\r>  science needs to fundamentally reinvent itself to avoid shrinking\r>  into irrelevance.\nIt needs to be invented in the first place, not reinvented, and it has been irrelevant from the very beginning, in the same sense that alchemy was irrelevant to building a science of chemistry.\n>  Here's the problem: we are told that computer\r>  technology is being continually revolutionized, but it doesn't\r>  really work that way.  Instead, computer science has historically\r>  laid down one layer after another of settled art, little of which\r>  must be greatly revised later on.  Lots of people got tenure for\r>  designing parsers, for example, and now we know how to do that.\r>  An earthquake did occur at the fault line between processor\r>  design and compiler design in the 1980's, but that has settled\r>  down.  Programming language design was a difficult matter once,\r>  but now it isn't, and the market has decided that it's satisfied\r>  with C and C++ anyway.  There's no accounting for taste, but\r>  there it is.  (For a more general analysis see Andrew Friedman's\r>  brilliant historical book \"Computer Systems Development\", which\r>  I recommended in TNO 1(9).  See also Peter Denning's recent\r>  articles about the future of the engineering field generally.)\nYou'll like the latest ACM issue. To my knowledge, this is quite literally the first time that mention of *people* has been allowed in a computer science publication.\n>  So what happens next?  The technical methods of computing are\r>  like a lake that is silting: once somebody finally figures out\r>  how to make distributed operating systems, it'll be all over.\r>  The most likely exception is in the theory of computation -- the\r>  mathematical foundations of the field, where really interesting\r>  research on \"interactive proof\" methods will probably bring\r>  us a lot more useful stuff from the same place that public-key\r>  cryptography came from.  Plenty of other computer research\r>  will remain to be done, of course, but the emphasis may shift\r>  elsewhere.  No longer will the world need hordes of computer\r>  scientists who know a little about medicine or engineering or\r>  business; instead, it will need hordes of doctors and engineers\r>  and business people who know a little about computers and a great\r>  deal about a particular world where computers are used.\nThe electronic frontier metaphor is fruitful here. The indigeneous nerd tribe, and its pre-scientific witch-doctor sciences, is coming into conflict with hordes of property-conscious hard-working common-sense settlers, with entirely different scientific and engineering standards.\n>  The field of computer science can save itself, though, if it\r>  gets a new attitude.  It has to stop looking at the whole world\nEmphatically disagree. You can't save something that never existed. And \"saving itself\" is entirely the wrong theme. It needs to destroy its old self-centric paradigm and erect an entirely new one, ala Kuhn.\n>as a bunch of technology-driven \"application domains\" and instead\r>  develop a spirit of partnership with people who know substantive\r>  things -- things about organizations, about managing information,\r>  about sickness and health, about democracy.  Although numerous\nSee ACM!\n>  computer people are sympathetic to such an approach, many of the\r>  basic concepts and methods of computer science make it difficult\r>  to put into practice.  One obstacle is the field's understanding\r>  of formalization: to implement something on a computer, you have\r>  to translate it into mathematical terms that can be coded.  But\r>  the resulting formalisms rarely correspond to the way that users\r>  think about things.  Furthermore, computer scientists know almost\r>  nothing about how computer use fits into the lives and activity\r>  systems of the people who use them.  Instead, generations of\r>  systems analysts have used models that derive from industrial\r>  automation -- rather than from the intention of providing support\r>  for skilled people with complex lives.  The approach, whether\r>  explicitly or implicitly, is not \"we will work with you and help\r>  you build tools\" but \"we will represent you and replace you\".\r>\r>  But an attitude of symmetrical partnership, necessary as it is,\r>  will not suffice in itself.  We also need what I call \"bridging\r>  concepts\" -- that is, medium-sized concepts that make it easy to\r>  move back and forth between serious ideas about technology and\r>  serious ideas about the social worlds where technology is used.\r>  Listening to the speakers at the conference on Society and the\r>  Future of Computing that we recently organized in Colorado, and\r>  reflecting on other valuable things I've read lately, I managed\r>  to articulate ten candidates for these bridging concepts, which\r>  I'll present here in the form of imperatives for the field of\r>  computer science:\nPlease reflect on what I said earlier about the virus thats causing the disease in connection with the following list. You did mention electronic commerce once. However that term is generally understood as using electronic nets to buy/sell tangible things. If this was your meaning, your list failed to even mention the core of the problem as I've laid it out, our present inability to buy/sell/own goods made of bits.\n>    (7) As distributed information technology is used to reduce\r>    transactions and coordination costs, it must not undermine\r>    workers and their families.\r>\r>  Electronic commerce promises to interconnect buyers' and sellers'\r>  computers, thereby removing a lot of useless paperwork from the\r>  world's business operations.  As Rolf Wigand points out, one\nThe \"world business\" is buying/selling tangible stuff. The core of our disease is the absence of advanced social orders for electronic stuff, which is in turn triggered by inability to define buy/sell/own for goods made of bits.\nTHIS INABILITY IS FIXABLE, NOT INEVITABLE. See my web for details of how.\n"}, {"score": 1861.1709, "uuid": "267e7859-0ee3-540d-99f5-fa0fa48c7a1b", "index": "cw12", "trec_id": "clueweb12-0104wb-97-25578", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/2011/02/", "page_rank": 1.2994859e-09, "spam_rank": 97, "title": "February | 2011 | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "NSA would like to invite students who meet the following requirements: * Must be eligible to be granted a security clearance * Must be majoring in Electrical <em>Engineering</em>, <em>Computer</em> <em>Engineering</em>, <em>Computer</em> <em>Science</em>, <em>or</em> Math The Agenda for the Visit will include the following: * Internship and Cooperative", "explanation": null, "document": "CIA info session, 5-6:30pm Tue March 15th, ITE 456\nposted Monday, February 28th, 2011\nAre you interested in a career, internship or co-op position at the CIA or want to know if you qualify for a top secret clearance and employment opportunities at the CIA? If yes, we welcome you to attend an information session on Tuesday, March 15, 2011 in ITE 456 from 5pm-6:30pm. You are encouraged to visit the CIA career page before attending to view the internship and full-time opportunities.\nThe CIA seeks Computer Science, Computer Engineering, Electrical Engineering, and Information Systems majors for full-time positions and summer internships. Apply by midnight Wednesday March 2 via UMBCworks to participate in an on campus resume review and interview with the CIA. A 3.00 GPA and US Citizenship are required. See:\nCIA Undergraduate Internship/Co-op Position (UMBCworks Position ID- 9243367)\nCIA Undergraduate Full-Time Positions (UMBCworks Position ID- 9243369)\nThe CIA is an independent agency responsible for providing national security intelligence to senior US policymakers. They carry out \u201cthe intelligence cycle,\u201d the process of collecting, analyzing, and disseminating intelligence information to top US government officials.\n`,\nACM student chapter meets Wed 3/9 at Noon\nposted Friday, February 25th, 2011\nUMBC's ACM student chapter will hold a meeting at Noon on Wednesday, March 9 in ITE201 to discuss chapter activities and hold elections for the chapter's executive committee.\nACM , the Association for Computing Machinery, is the the world\u2019s largest educational and scientific computing society. It provides members with resources that advance computing both as a science and a profession. UMBC's chapter meetings are open to all undergraduate and graduate students of any major.\nThe main goal of the March meeting is to have a round-table discussion about where to take the chapter. It was created to bring students together to discuss interesting and relevant topics and share experiences. Come and share your opinions on the subjects that you would like to hear about in the coming semesters that will make the chapter exciting and relevant.\nWhile you do not need to join ACM to be a part of the local chapter, the annual membership dues for students is only $19, heavily discounted from the non-student rate. See the ACM site for more information on student membership and its benefits.\nThe election will be held by ballot and the winner determined by plurality, i.e. the person with the most votes. According to the chapter bylaws , only members who are also members of the National ACM are eligible to vote, so bring some proof of your National ACM membership (membership card, print out of current information, etc.) if you want to vote.\nIf you have any questions, you can send them to the acmofficers at lists.umbc.edu.\nCloudCamp Baltimore, 6-10pm Wed Mar 9, 2011\nposted Thursday, February 24th, 2011\nThere will be a free CloudCamp meeting in Baltimore from 6:000pm to 10:00pm Wednesday March 9th at the Baltimore Marriott Waterfront. Cloudcamps are participants-driven unconferences where users of Cloud Computing technologies meet to network and share ideas, experiences, challenges and solutions. The event is free but participants are asked to register to ensure there is enough food and refreshments. Here is the current, tentative schedule:\n6:00pm \u2013 Registration & Networking (food/drink)\n6:45pm \u2013 Lightning Talks (5 minutes each)\n7:30pm \u2013 Unpanel\n8:15pm \u2013 Unconference Breakout Session Round 1\n9:00pm \u2013 Unconference Breakout Session Round 2\n9:45pm \u2013 Wrap-up\n10:00pm \u2013 Find somewhere for post-event networking\nContact the organizers if you are interested in giving a five minute lightning talk or lead breakout session.\nSpring Dissertation House for Ph.D. students. Apply by March 4\nposted Thursday, February 24th, 2011\nUMBC will host a two day \u201cPre-Spring Break Dissertation House\u201d on Friday, March 11 and Saturday, March 12, 2011. Breakfast, lunch, and a snack will be served daily. This Dissertation House session will be held in lieu of the annual Dissertation House and Community Building Retreats at Coolfont and Rocky Gap. The event will take place from 9:00am to 5:00pm in the UMBC Commons.\nAt Dissertation House, Ph.D. students from Maryland\u2019s research campuses learn the skills of thesis-writing success. During the immersive twice-yearly four-day program, a group of about twenty graduate students share experiences, set transparent goals, and map out ways to get to the finish line of the doctoral dissertation.\nInterested Ph.D. students should follow the application guidelines and apply by Friday, 4 March 4 2011. For more information see the Dissertation House Blog .\nPractical steps for completing your thesis or dissertation, 4:30pm Thur 2/24\nposted Wednesday, February 23rd, 2011\nDr. Wendy Carter will talk on \"Practical Steps for Completing Your Thesis or Dissertation\" Thursday, February 24, 2011 from 4:30 to 6:00 in Commons 331. This is a seminar for all graduate students who will be writing a thesis or dissertation. Dinner will be served. Please RSVP ASAP.\nComputer Engineering Open House, 11:30-12:50 March 2, ITE 456\nposted Wednesday, February 23rd, 2011\nCurrent and prospective undergraduate Computer Engineering majors are invited to an informal open house meeting from 11:30am to 12:50pm on Wednesday, March 2nd in ITE 456. CSEE chairman Gary Carter and CMPE faculty will present information on the undergraduate program and its tracks and courses as well as offer academic and career advice. There will be ample time for questions, feedback, comments and discussion. Lunch will be provided.\nWe are also recruiting current majors for a student advisory panel to review the CMPE program and courses. To volunteer for the panel, please attend the meeting or contact the CMPE undergraduate program director, Professor Curtis Menyuk (menyuk at umbc.edu).\nposted Wednesday, February 23rd, 2011\nComputer Science and Electrical Engineering\nUniversity of Maryland, Baltimore County\nPrediction Markets for Fun, Feedback and the Future\nDr. Sanmay Das\n10:00-11:00am Thursday 17 March 2011\nroom 456 ITE, UMBC\nPrediction markets , when they work well, solve a fundamental problem: how to aggregate individual beliefs into a meaningful quantitative estimate of the probability that a given event will occur. They also provide incentives for people to disseminate privately-held information. I will describe one way to help these markets work better: incorporating a learning agent who provides liquidity, called a market maker. Along the way, the design of this agent raises and solves some fundamental problems in reinforcement learning and Bayesian reasoning. I will also discuss the deployment of this market-making agent in two different settings with human participants. One of these settings is a novel experiment for comparing market structures. Another one, the RPI Instructor Rating Market, allows students to trade on the ratings their professors will receive, thus providing dynamic feedback to instructors on the progress of their classes; we find that market prices are, in fact, better than past ratings at predicting future ratings.\nJoint work with Aseem Brahma, Mithun Chakraborty, Allen Lavoie, Malik Magdon-Ismail, and Yonatan Naamad.\nSanmay Das is an Assistant Professor of Computer Science at Rensselaer Polytechnic Institute. He received his Ph.D (2006) and S.M. (2003) degrees from MIT, where he was a student of Tomaso Poggio and Andrew Lo. Prior to that, he received his A.B. in Computer Science from Harvard College (2001). His research focuses on learning in social and economic systems. He has received an NSF CAREER award, is co-author on a paper nominated for the AAMAS Best Student Paper award, and has served as program co-chair for AMMA and workshops chair for the ACM EC conference.\nUndergraduate Research and Creative Achievement Day applications due 2/28\nposted Monday, February 21st, 2011\nThe fifteenth annual Undergraduate Research and Creative Achievement Day features research, scholarship, and creative work carried out by UMBC undergraduates. Student work is shared in many ways: oral presentations, poster sessions, artistic exhibits and performances, and film. Apply by 28 February.\nUndergraduate research award applications due March 3\nposted Monday, February 21st, 2011\nThe deadline for Undergraduate Research Award applications is Thursday, March 3.\u00a0URAs provide up to $1,500 to undergraduate students to support their research or creative work with a UMBC faculty mentor on an original project. Students of all years and disciplines are invited to apply, as long as they will continue at UMBC long enough to complete the proposed work.\nA student\u2019s application requires a letter of support from the faculty mentor indicating knowledge of the student and his or her abilities as well as support of the project. The letter can further explain the importance of the work, the appropriate preparation of the student, and the feasibility of the work. The mentor\u2019s commitment to working with the student must be included. For more information and\u00a0to apply visit the URA page or\u00a0contact Janet McGlynn (mcglynn at umbc.edu).\nIntern and coop opportunities at NSA\nposted Sunday, February 20th, 2011\nVisit the National Security Agency to learn about intern and cooperative education positions, 9:15am \u2013 3:00pm on Friday, March 11, 2011.\nChallenge the unknown. Solve the impossible. And at NSA, it's about protecting the Nation. A career at NSA offers the opportunity to work with the best, shape the course of the world, and secure your own future.\u00a0As a college undergrad, you can gain the experience you need while working toward your degree. And you'll get to experience first-hand what life at NSA is really like.\u00a0Participate in this Shriver on the Road Visit to learn about the internship and co-op programs offered by the NSA.\nThe core mission of the NSA is to protect U.S. national security systems and to produce foreign signals intelligence information.\u00a0NSA would like to invite students who meet the following requirements:\nMust be a U.S. citizen\nMust be eligible to be granted a security clearance\nMust be a freshman or sophomore\nMust have a GPA of 3.0 or higher\nMust be majoring in Electrical Engineering, Computer Engineering, Computer Science, or Math\nThe Agenda for the Visit will include the following:\nTour of the National Cryptologic Museum\nFree Lunch (Pizza, Cookies, Soda, etc)\nInternship and Cooperative Education Information Session\nNSA Intern/Co-op Meet and Greet\nSecurity Awareness Presentation\nQ and A Session\nTo participate: RSVP via UMBCcworks under Events (workshops) and send your resume to Casey Miller at The Shriver Center at UMBC, email: cmille1 at umbc.edu\n"}, {"score": 1859.7855, "uuid": "b87229a3-e79d-5f29-9530-5185f5ec7b14", "index": "cw12", "trec_id": "clueweb12-1313wb-54-00435", "target_hostname": "virtualschool.edu", "target_uri": "http://virtualschool.edu/mon/SoftwareEngineering/CSIsDeadResponse.html", "page_rank": 1.2792115e-09, "spam_rank": 77, "title": "Response to <em>Computer</em> <em>Science</em> <em>is</em> Dead", "snippet": "To my knowledge, this <em>is</em> quite literally the first time that mention of *people* has been allowed in a <em>computer</em> <em>science</em> publication. &gt; So <em>what</em> happens next?", "explanation": null, "document": "To: oscar@iam.unibe.ch (Oscar Nierstrasz), Laurent Dami\n, Matthias Ulrich Neeracher\nFrom: bcox@gmu.edu (Brad Cox) Subject: Response to Computer Science is Dead Cc: guerraoui@di.epfl.ch, Phil Agre\nBcc: X-Attachments:\nI've enclosed my response to an article by Phil Agre that might be an interesting topic for one or more stops on this visit. I'll enclose his original article in subsequent mail.\nBrad\nPhil: your article ties in with the brief discussion we had earlier so I thought I'd elaborate a response. This is actually quite timely. I've just been invited to argue this case in September to the high-energy physics group at CERN and to Nicklaus Wirth's group in Zurich in connection with an OO conference in Lausanne.\n> Computer science is dead.\nFirst, using your definition for 'computer science', which is the definition used throughout that field, I agree with every word. Remember, I've made the same transition you did, from techno-centric (OO programming language designer) to human-centric (organizational learning). My own transition was triggered by the conviction that what's broken here is not technology but organizations.\nHowever I've come at this issue from a different angle that leads to actionable, albeit hard to implement, conclusions. My viewpoint is not someone with a vested interest in computer science. My training was in quantum physics and neurophysiology, not CS. I spent my carrer as a practitioner; even built a company to buy and sell small granularity software components for its living. It comes from experiencing first hand why collaborative social orders, such as this company, is so hard for intangible goods.\nInstead of starting by broadening the focus to include people in the frame from the outset, I started by narrowing the focus to consider the differences in the fundamental particles that make up software vs tangible goods, i.e. bits vs atoms. Then I reason outward from this difference to how it affects people's behavior.\nMy comments come from applying the same definition for science that science has outside of computer science. Consider the failures of the baggage handling systems at Denver International Airport. The builders of the tangible components of this system, the baggage handling conveyor belts, airplanes and runways, the practitioners of physical science and engineering, accomplished their job in a timely cost-effective manner. The builders of the intangible components, the practitioners of computer \"science\" and software \"engineering\", did not.\nUsing the definition of computer science of this juxtaposition, the reason for the software crisis becomes clear. To wit, there never *has* been computer science, certainly not in the sense science holds in sucessful domains. Everything the computer scientist encounters is unique and unfamiliar, having been fabricated from first principles by some nerd as distinct from assembled from pre-existing components by some engineer. Computer science deals entirely with stuff (goods made of bits) that do not originate in nature, but come entirely from the creative urges of people.\nThus computer science isn't dead. Computer science has never existed. Not in the sense of a mature science, like post-Copernican astronomy, founded on experimental observation of pre-existing components (from nature or a market). Rather its name has been claimed by a pre-scientific pretender in exactly the sense that Ptolemaic pre-science predated Copernican science and quackery predated experimental medicine.\nThomas Kuhn covers the situation nicely. First there's \"normal science\" (computer \"science\" for the last half-century) whose failures (Denver Airport) leads to recognition of a \"crisis\" (software crisis) which ultimately triggers a \"revolution\" to an entirely new paradigm.\nThe core concept of this new paradigm I'm trying to bring about in my new book is that the virus that's causing the disease thats causing the symptoms we call the software crisis (and equally, and for the same reasons, the quality differences between internet and paper publishing) is that we're dealing with a substance that is made of bits instead of atoms, that originates entirely from people, not nature.\nBut since this substance doesn't abide by conservation of mass laws, the commercial mechanisms that incentivize people to work together for building pencils or baggage handling conveyor belts, entirely break down. Without commerce, advanced social orders can't evolve, so we're stuck in the primitive state where every nerd fabricates everything from first principles. Thus everything is unique, so there is nothing above the level of the bit that is consistent to warrant experimental study. This is why there's no such thing as computer science.\nIn other words, computer science is not an advanced science like post-Copernican astronomy. Its a pre-scientific pretender, like Ptolemaic astronomy or the witch-doctor's pig bladder rattle. The prerequisite to building a real science is to get to the point where there are non-unique pre-fabricated components for the scientist/engineer to study as Copernicus studied the heavens. This depends on development of a commercial incentive system to incentivize people to supply and maintain them, since people are the sole source of for such components, not nature.\nMy Wired article on superdistribution shows how this might be done in time. Also my new book.\n>  I have a doctoral degree in computer science, but I now teach\r>  in a social sciences department.  Though I would like to think\r>  I'm starting a trend, the evidence is not strong.  Even so, the\nI made the same transition so the trend includes at least two. Unclear who started it tho. ;-)\n>  evidence *is* strong that the academic discipline of computer\r>  science is in trouble.  I was first alerted to this fact a few\r>  years ago when my officemate from graduate school quit a top-rank\r>  computer science faculty position to work for Microsoft because\r>  he wanted to be where the action is.  He's right: the agenda for\r>  computer science research has shifted from academia to industry.\nThis isn't news. The focus has been in industry since the beginning. Xerox Parc, Bell Labs, IBM Watson Labs, Stepstone (my company), etc. Academia is notoriously slow getting the news.\n>  But the problem runs deeper than that, and I think that computer\r>  science needs to fundamentally reinvent itself to avoid shrinking\r>  into irrelevance.\nIt needs to be invented in the first place, not reinvented, and it has been irrelevant from the very beginning, in the same sense that alchemy was irrelevant to building a science of chemistry.\n>  Here's the problem: we are told that computer\r>  technology is being continually revolutionized, but it doesn't\r>  really work that way.  Instead, computer science has historically\r>  laid down one layer after another of settled art, little of which\r>  must be greatly revised later on.  Lots of people got tenure for\r>  designing parsers, for example, and now we know how to do that.\r>  An earthquake did occur at the fault line between processor\r>  design and compiler design in the 1980's, but that has settled\r>  down.  Programming language design was a difficult matter once,\r>  but now it isn't, and the market has decided that it's satisfied\r>  with C and C++ anyway.  There's no accounting for taste, but\r>  there it is.  (For a more general analysis see Andrew Friedman's\r>  brilliant historical book \"Computer Systems Development\", which\r>  I recommended in TNO 1(9).  See also Peter Denning's recent\r>  articles about the future of the engineering field generally.)\nYou'll like the latest ACM issue. To my knowledge, this is quite literally the first time that mention of *people* has been allowed in a computer science publication.\n>  So what happens next?  The technical methods of computing are\r>  like a lake that is silting: once somebody finally figures out\r>  how to make distributed operating systems, it'll be all over.\r>  The most likely exception is in the theory of computation -- the\r>  mathematical foundations of the field, where really interesting\r>  research on \"interactive proof\" methods will probably bring\r>  us a lot more useful stuff from the same place that public-key\r>  cryptography came from.  Plenty of other computer research\r>  will remain to be done, of course, but the emphasis may shift\r>  elsewhere.  No longer will the world need hordes of computer\r>  scientists who know a little about medicine or engineering or\r>  business; instead, it will need hordes of doctors and engineers\r>  and business people who know a little about computers and a great\r>  deal about a particular world where computers are used.\nThe electronic frontier metaphor is fruitful here. The indigeneous nerd tribe, and its pre-scientific witch-doctor sciences, is coming into conflict with hordes of property-conscious hard-working common-sense settlers, with entirely different scientific and engineering standards.\n>  The field of computer science can save itself, though, if it\r>  gets a new attitude.  It has to stop looking at the whole world\nEmphatically disagree. You can't save something that never existed. And \"saving itself\" is entirely the wrong theme. It needs to destroy its old self-centric paradigm and erect an entirely new one, ala Kuhn.\n>as a bunch of technology-driven \"application domains\" and instead\r>  develop a spirit of partnership with people who know substantive\r>  things -- things about organizations, about managing information,\r>  about sickness and health, about democracy.  Although numerous\nSee ACM!\n>  computer people are sympathetic to such an approach, many of the\r>  basic concepts and methods of computer science make it difficult\r>  to put into practice.  One obstacle is the field's understanding\r>  of formalization: to implement something on a computer, you have\r>  to translate it into mathematical terms that can be coded.  But\r>  the resulting formalisms rarely correspond to the way that users\r>  think about things.  Furthermore, computer scientists know almost\r>  nothing about how computer use fits into the lives and activity\r>  systems of the people who use them.  Instead, generations of\r>  systems analysts have used models that derive from industrial\r>  automation -- rather than from the intention of providing support\r>  for skilled people with complex lives.  The approach, whether\r>  explicitly or implicitly, is not \"we will work with you and help\r>  you build tools\" but \"we will represent you and replace you\".\r>\r>  But an attitude of symmetrical partnership, necessary as it is,\r>  will not suffice in itself.  We also need what I call \"bridging\r>  concepts\" -- that is, medium-sized concepts that make it easy to\r>  move back and forth between serious ideas about technology and\r>  serious ideas about the social worlds where technology is used.\r>  Listening to the speakers at the conference on Society and the\r>  Future of Computing that we recently organized in Colorado, and\r>  reflecting on other valuable things I've read lately, I managed\r>  to articulate ten candidates for these bridging concepts, which\r>  I'll present here in the form of imperatives for the field of\r>  computer science:\nPlease reflect on what I said earlier about the virus thats causing the disease in connection with the following list. You did mention electronic commerce once. However that term is generally understood as using electronic nets to buy/sell tangible things. If this was your meaning, your list failed to even mention the core of the problem as I've laid it out, our present inability to buy/sell/own goods made of bits.\n>    (7) As distributed information technology is used to reduce\r>    transactions and coordination costs, it must not undermine\r>    workers and their families.\r>\r>  Electronic commerce promises to interconnect buyers' and sellers'\r>  computers, thereby removing a lot of useless paperwork from the\r>  world's business operations.  As Rolf Wigand points out, one\nThe \"world business\" is buying/selling tangible stuff. The core of our disease is the absence of advanced social orders for electronic stuff, which is in turn triggered by inability to define buy/sell/own for goods made of bits.\nTHIS INABILITY IS FIXABLE, NOT INEVITABLE. See my web for details of how.\n"}], [{"score": 1857.4547, "uuid": "3539377b-059a-5b71-9728-079b95739ed5", "index": "cw12", "trec_id": "clueweb12-1805wb-14-15697", "target_hostname": "www.ce.ucsb.edu", "target_uri": "http://www.ce.ucsb.edu/profiles/graduate/index.php", "page_rank": 1.1821043e-09, "spam_rank": 90, "title": "<em>Computer</em> <em>Engineering</em> | Graduate Profiles", "snippet": "Jonny Valamehr, Electrical and <em>Computer</em> <em>Engineering</em>, M.S. D. Kunal Arya, Electrical and <em>Computer</em> <em>Engineering</em>, M.S. D. Peter Lisherness, Electrical and <em>Computer</em> <em>Engineering</em>, Ph. D. * Previous Degrees: BS and MS, both from UCSB (I can\u2019t get enough of this place!)", "explanation": null, "document": "Jonathan Valamehr - Graduate Student, Electrical & Computer Engineering\nAbout Jonny:\nStudy Area: Computer Architecture\nDegree Sought and Progress: PhD, 5th year\nPrevious Degrees: BS and MS, both from UCSB (I can\u2019t get enough of this place!)\nImportant Awards and Honors: Hearst Foundation Scholarship 2007, URCA Research Grant 2007\nProfessional Memberships: Institute of Electronic and Electrical Engineers (IEEE) and Association for Computing Machinery (ACM)\nTypes of Financial Aid Received: 3 TAships and many quarters of GSR funding. I have been fortunate enough to have had funding throughout my grad school career\nHobbies / Activities / Interests: Magic (not The Gathering), basketball, reading (non-fiction), psychology\nInteresting aside about Jonny: I used to produce hip hop music\nJonny's Research:\nAdvisor / Group: I am in the Architecture lab (Archlab) and I work with Tim Sherwood\nResearch Interests: Computer architecture, Security and Cryptography, High-performance computing, Trusted computing\nImportant Conferences Attended: I presented a paper at ACSAC 2010 and have attended several of the big architecture conferences such as ISCA and ASPLOS\nDissertation Topic: Novel Methods of Augmenting High Performance Processors with Security Hardware\nTitle of Most Important Publication to Date: \"Hardware Assistance for Trustworthy Systems through 3-D Integration\" (ACSAC 2010)\nUCSB Personal Website: Jonathan Valamehr\nTell us about your research: As modern high performance microprocessors increase in complexity, the way multiple programs of varying levels of trust interact with each other on a system can oftentimes become problematic. Information that one program may intend to keep secret may be read by a malicious program. This is no good! My research cuts across a few domains and attempts to leverage the benefits of hardware solutions to mitigate pervasive security challenges. My recent work applies emerging technologies in computer architecture to solve security vulnerabilities that affect microprocessors today. More details can be found in our ACSAC 2010 paper, where we are the first to propose using 3D die stacking to augment the capabilities of commodity processors to add security-related functionality.\nHow did you get into your area of research?: In high school, I was obsessed with building computers (before I had any idea how they worked) and always wanted to build a machine with the newest, fastest processor to crush my neighbors in the latest video games. Then in my junior year, I thoroughly enjoyed my Computer Architecture class (ECE 154) and after speaking with the instructor, he asked me if I wanted to do undergrad research. After doing that for a quarter, I was hooked. Through the project I was working on, I eventually met Tim and joined his lab.\nWhy you selected your department and UCSB in regards to your research area? One of the main reasons I chose ECE @ UCSB is because of the diversity in research and the freedom one has in choosing their projects here. While I started my graduate career working on architecture problems, I later became interested in security and cryptography as well. Now I am involved on several projects in these fields and get to work with other professors (not just my advisor) who are experts in them. There are a lot of opportunities to dive deep into one subject, or work on a breadth of topics. The sky is the limit here.\nThoughts on working in a group research environment and working with an advisor: Working with an advisor is an amazing experience because you have an expert to help you through the whole process of conducting novel research and shine light on things that would take you much more time (if ever) to do on your own. It is phenomenal. You get training and guidance from a master in the field. Think of it like \u201cThe Karate Kid\u201d, without the fence painting.\nWhat do you find particularly rewarding about your research?: Research is all about defining a problem and using all of your training towards solving it and its unique set of challenges. What I find especially rewarding is the ability to attack a problem that doesn\u2019t have a solution so far \u2013 there is no answer key in this business. I get to be creative and innovate on the cutting edge of technology. How many people can say that?\nUCSB prides itself on its collaborative atmosphere. Tell us about your collaborations: The collaborative nature at UCSB is amazing. One example of this \u2014 I am able to have Tim as my advisor, even though he is officially in the CS department and I am in the ECE department. Working with the right people on the right projects makes me happy and productive. UCSB has also allowed me to meet many researchers and work with many people outside of my group. I have collaborated on many of my lab members\u2019 projects. I also work with several professors in ECE and CS, as well as professors at UCSD and NPS and I have worked with several members from Microsoft Research. I get to hear lots of opinions on research directions as well as leverage the expertise of many others.\nWhat do you plan to do this Summer?: In 2010, I interned in the Architecture team at Intel Oregon. I worked on developing new features for the Atom line of processors. I was recruited by Intel because of my strong resume, which included architecture work at UCSB. In 2011, I interned at Microsoft Research working on hardware security problems. My advisor had previously worked at MSR and knew of an internship opportunity there, so he recommended me. This coming summer, I will be going back to Intel for another internship with the Architecture team.\nWhere will your research take you next?: I have interned at Intel and Microsoft Research, and I really enjoyed my time at both companies doing industry research. As much as I want to stay in academia forever and ever, I plan on joining a company and applying my expertise to shape the processors of tomorrow.\nJonny and Academics:\nWhat do you think are the strengths of the Electrical & Computer Engineering graduate program?: The main strength of the department is its faculty and staff support. You will get astounding work done working with coveted professors and have many people there to help you along the way with anything you need.\nFavorite Course: My favorite course at UCSB so far has been the Senior Capstone project class (ECE 189) with Steve Butner. I really enjoyed this class because we had the freedom to come up with any project we thought would be useful in everyday life and received money to build it from the ground up. Seeing a project from idea to blueprint to prototype to final product was very rewarding, eye-opening and fun.\nTeaching Assistant (TA) experience: I have been a TA three times for introductory Computer Architecture courses and I love it. I have organized and taught both lab sessions and discussion sections. TA\u2019ing is a great opportunity to relay the information you know about something and help students learn in a very low pressure situation. I think teaching is about finding the best way to get a student to intuitively understand a subject, rather than getting a superficial understanding in that moment. You want the lesson to stick for a long time, not disappear after the final exam.\nShare your experience about the PhD exams: I have taken the screening exam, and I am preparing for the qualifying exam. The screening exam was a lot of hard work, but it made me refresh my knowledge of Computer Engineering and allowed me to start my graduate studies with a solid foundation in all 5 subject areas I chose. Not only was the end goal of passing it completed, but the actual process of studying for it gave me confidence to start my graduate career on the right foot.\nSome Favorites Things About Being at UCSB:\nUCSB: The strong work/life balance at UCSB is unparalleled. I never feel like I am overwhelmed by work and never feel like my day stops when I leave campus.\nElectrical & Computer Engineering Department: The department really feels like a family. I know almost everyone on a first name basis, and they are always willing to have a chat or help if you need something. Also, our building is a 60-second stroll from the beach, so taking a break during work and walking to the ocean is very easy.\nSanta Barbara: The best part of Santa Barbara is the multitude of activities and events such as concerts, hiking trips, and barbecues. You will never be bored! There is always something to do and fun company to go along.\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: Quality of life as a grad student is astounding. I am able to do everything my heart desires. Rather than strive for a work/life balance, I like to strive towards having a work/life separation. This has really helped me in doing everything I want to do; I\u2019m able to hang out with friends, go visit family, exercise and spend time on my hobbies without worrying about my work. At the same time, this allows me to completely focus on my research while I am in my lab and work efficiently.\nWhat About Life in Santa Barbara?: I live in the San Clemente graduate apartments and I really enjoy it there. There are events thrown weekly such as bagel hours, barbecues, and social mixers, so it\u2019s very easy to meet a lot of other grad students and make friends. I also enjoy the nightlife in Downtown Santa Barbara and venture there every so often with my pals and have a blast. Living in Santa Barbara is awesome; it\u2019s why I\u2019ve been here for 9 years!\nAdvice to prospective graduate students: Enjoy your time here and plan out all of the things you want to do, because time flies in Santa Barbara. For the academic side of things, make it a point to talk to other students and any faculty whose work you are interested in, because you never know what cool project you could end up working on with them.\nKunal Arya - Graduate Student, Electrical and Computer Engineering\nAbout Kunal:\nHometown: Anaheim, CA\nStudy Area: System-level Synthesis\nDegree Sought and Progress: M.S. / Ph.D. in Electrical and Computer Engineering (in 5th year of program)\nPrevious Degrees: B.S., Computer Engineering, UC Santa Cruz\nActivities and Interests: playing music, biking, sketching\nProfessional Memberships: Institute of Electrical and Electronics Engineers (IEEE)\nInteresting aside about Kunal: I've been taking piano classes from the music department, which has been a great way to exercise different parts of my brain\nKunal's Research:\nAdvisor / Group: Professor Forrest Brewer\nResearch Interests: computer architecture, automated embedded system design, formal verification\nDissertation Title: \"Mixed Hardware-Software Synthesis\"\nTell us about your research: the research we do is a focused attempt at system-level synthesis. For applications of relatively manageable scale, we are creating tools that will allow designers to make large-scale, coarse-grained architectural decisions early on. By allowing them to reach working designs quickly, they can target optimizations where it really matters. If the optimization criteria is e.g. average energy dissipation against some average latency, it isn't obvious what sorts of choices about memory protocols, hardware/software partitioning, and architectural tricks (forwarding, speculation) will make the biggest impact on the end result. Our tools will bear the burden of cumbersome tasks (such as evaluating different memory interaction protocols) to make complex digital design more sensible and metric-driven, rather than heuristic and purely experience based.\nHow did you get into your area of research?: While I was doing research as an undergrad, I saw that newer, more powerful FPGA platforms had tremendous potential -- however, there was no easy way to realize complex designs on them, especially not for designers that don't have strong computer engineering fundamentals. I was interested in seeing what was possible. When I came to UCSB, I had no background in synthesis, so I didn't realize the sheer scale of the problem. It wasn't until after a few meetings with my advisor that I started to grasp just how difficult the problem really was. Despite that, he was enthusiastic and seemed willing to try a few things, so long as we trimmed the problem down to something much more realistic. In the end, I have a project which looks very promising, and we hope to have some pretty exciting results when we're done.\nWhy you selected your department and UCSB in regards to your research area? A few of the professors in ECE had strong ties to the synthesis community (specifically with programmable logic), so it seemed like a good fit. Also, the size of the department was a big factor: it is just the right medium between a large university with the resources to support pretty advanced research versus a smaller, accessible faculty that makes the experience more personal.\nWhat do you find particularly rewarding about your research?: There is a sense of pride when everything comes together and you have results that you can brag about. So far, I have enjoyed the freedom I've had in shaping where this work is headed, largely due to a good working relationship with my advisor (he is always open to new ideas).\nThoughts on working in a group research environment and working with an advisor: The great thing about working with an advisor is that you essentially get to piggyback on their experience. Left to my own devices, I would take the first, most obvious route that would likely go nowhere. On the other hand, when someone is there to give me insight into what kinds of problems I will face based on what I think are benign decisions, I find that I end up getting to the heart of the matter quickly. Eventually, the experience he brings (and his seemingly endless ability to see potential in a new idea) and the point-of-view I bring (from e.g. undergrad research) meet at our current research. As far as working in a group, I really enjoy the lab I work in because it's a great place to bound ideas off of other people. We're often engaged in some deep discussion about whatever new fascinating technologies have come out. I've noticed that people at UCSB share a certain enthusiasm about learning and a genuine intellectual curiosity. More importantly, they are willing to share what they know and provide input. I can always reliably get feedback from my labmates that makes me think about aspects of the problem which I otherwise wouldn't have considered.\nUCSB prides itself on its collaborative atmosphere. Do you collaborate with others?: Getting feedback from other research groups is helpful for two primary reasons. First, it gives us a fresh perspective from a person who has not sat through our meetings. A clean-slate description of the problem can often reveal potential drawbacks in the overall goals (e.g. leading us to ask, \"is this really the right way to solve the fundamental problem?\"). Second, their own experiences can guide where we target our work. If we want to solve real, on-the-ground problems, then we need to keep in mind which problems are actually important, thereby keeping the research relevant, applicable, and interesting.\nWhat did you do this past Summer?: I spent the summer finally making progress on my research. I also helped out as much as I could with the undergrads who were doing summer research in the lab; it's a welcome change of pace, and let's me practice teaching.\nWhere will your research take you next?: I will likely work in industry for a while, and maybe consider commercial options for my research if the opportunity presents itself. Academia is certainly an option down the line.\nKunal and Academics:\nWhat do you think are the strengths of the ECE graduate program?: For classes, generally there are resources if you're struggling with the course. The professors and TAs alike have reasonable office hours, and are receptive to questions via e.g. email. Additionally, the other grad students are friendly and helpful, and are usually willing to get together in study groups -- there isn't a sense of cut-throat, hostile competition, and in the end that means the student body as a whole does better academically. On the research front, there is a tremendous number of resources from the library, department, and faculty -- it's amazing how often it has helped me to speak to professors from other departments. Viewpoints from experts in those fields helps us think about the problem differently than we would otherwise.\nFavorite Course: It's difficult to choose one, so I'll mention a few -- Professor Sherwood's architecture course offered through the CS department showed me how to view the problem abstractly, while Professor Melliar-Smith's equivalent ECE architecture course showed me the nitty-gritty details. The two courses coupled well, and made it clear how real CPU designs are realized from abstract levels down to the gate-level. Professor Richard Wolski's Operating Systems course was also fantastic -- similarly to the architecture courses, it was a generalization of what was covered in undergrad courses.\nTeaching Assistant (TA) experience: I TA'ed a junior-level digital design course, and while I did spend quite a bit of time in the lab (especially near tests), it was an incredibly rewarding experience. It's also a great way to review material from undergrad -- it made that part of the screening exam a breeze. Moreover, learning to effectively communicate complex topics to someone who has never seen them turns out to be surprisingly useful for publishing. The undergraduates give you immediate feedback on what is or what is not clear, a luxury that you don't often get from academic reviewers.\nShare your experience about the PhD exams: The screening exam can be a source of stress, but it helps to form a study group with like-minded students that you know you are compatible with. Preparation is key.\nWhy Electrical and Computer Engineering and UCSB?: I chose UCSB's ECE department in part because I was impressed with how organized and well-run it is. During the first campus visit, the faculty, staff, and students were approachable and willing to help out however they could. When I met with a few professors to discuss possible research, they were open to the prospect of doing research that was more in line with my interests.\nSome Favorites Things About Being at UCSB:\nUCSB: It has a small-department feel with large-university resources -- so far, I've found the professors to be accessible, helpful, and genuinely concerned about students' well being. On the administrative side, the department is run like a well-oiled machine.\nElectrical and Computer Engineering Department: Aside from the friendly and helpful staff, the accessibility of professors. Also, the Arts & Lectures group brings big-name lecturers and performers to campus, and tickets for students are subsidized.\nSanta Barbara: The geography, bike paths everywhere, access to local farmers, perks of a large city (concerts, symphony, plays) without any of the drawbacks.\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: The key to staying sane is knowing your limits, and the easiest way to prevent getting burned out is making time for something you enjoy outside of class and research. Santa Barbara really has a lot to offer: athletics (from biking, running, to playing basketball, tennis, or soccer in a co-ed team), music (classes offered through the music department, social bands, choirs, quartets), dance (everything from ballroom to salsa to line dancing -- you can literally attend a social dancing lesson every day of the week), an active art scene (the first Thursdays of each month, they have a wine and art tour downtown), open mics, poetry readings, or just simple beach BBQs. Typically, you can incorporate your social life into what you enjoy doing, and when you need a break from the area, there's always the option of a short road trip down to LA with some friends. For people without cars, there's an affordable car sharing program through the university.\nWhat About Life in Santa Barbara?: I live in Ellwood, intentionally away from campus to create a clear distinction between campus and home, and to force myself to bike everyday. It's a beautiful bike ride, and works wonders for stress. It was probably the best decision I made here. My social life is as active as I want it to be -- between salsa dancing and having friends a short bike ride away for a board game night, I've rarely felt like I was missing out.\nAdvice to prospective graduate students: Santa Barbara is an interesting place, because it has much more to offer than it seems. While most people will initially focus on the beach, the weather, and the geography (rightfully so), this only begins to describe what the city has to offer. It is an incredibly diverse place -- academically and otherwise -- coupled with a well-run university.\nPeter Lisherness - Graduate Student, Electrical and Computer Engineering\nAbout Peter:\nStudy Area: Electronic Design Automation\nDegree Sought and Progress: Ph.D. in Electrical and Computer Engineering (in 4th year of program)\nPrevious Degrees: B.S. and M.S. in EE and MBA from U. of Louisville\nActivities and Interests: skiing, hiking, cooking, crossword puzzles\nProfessional Memberships: Institute of Electrical and Electronics Engineers (IEEE) Computer Society\nPeter's Research:\nAdvisor / Group: Tim Cheng / SoC Design and Test Lab\nResearch Interests: verification, validation, test, coverage metrics, reliability\nDissertation Title: \"Validation Coverage Metrics and their Applications\"\nTitle of Most Important Publication to Date: Peter Lisherness and Kwang-Ting (Tim) Cheng. 2010. SCEMIT: A SystemC Error and Mutation Injection Too l. In Proceedings of the 47th Design Automation Conference (DAC '10). ACM, New York, NY, USA, 228-233.\nImportant Awards & Honors: 2008-09 Outstanding Computer Engineering Teaching Assistant\nImportant Conferences Attended: Design Automation Conference (DAC) - paper; IEEE International High Level Design Validation and Test Workshop (HLDVT) - paper; International Test Conference (ITC); and IEEE VLSI Test Symposium (VTS)\nFinancial Assistance Received: Teaching Assistantship (TA) and Graduate Student Researcher (GSR)\nWebsite: https://sites.google.com/site/peterl/\nTell us about your research: My work currently focuses on verification and validation coverage metrics for large-scale circuits. These functional test tasks can be somewhat challenging: it is often much easier to design a circuit than it is to show that you designed the right circuit. Coverage metrics are a way of measuring our thoroughness in testing and exposing aspects of the design that have not been given sufficient attention.\nHow did you get into your area of research?: I\u2019ve been writing software since I was a kid and doing it as a job since I was 13. When I entered college I tried to mix things up by pursuing electrical engineering instead of computer science. I guess that plan backfired; I still write software, although the things I\u2019m writing rely just as much on my electrical engineering education.\nWhat do you find particularly rewarding about your research?: As a programmer, design automation is great because it has a lot of scalability issues. I\u2019ve always loved algorithms and optimization, and turning a week-long experiment into a day- or hour-long one with a couple clever tweaks is extremely gratifying. Every time I run an experiment to answer some question I have, it always leads to another question. It is a constant stream of puzzles, an endless journey. It keeps my mind occupied and always gives me something new and exciting to work on.\nThoughts on working in a group research environment and working with an advisor: My group members are a great support network. They help shoot down foolish ideas, strengthen good ones, and are good friends as well. My advisor, Professor Tim Cheng, is great to work with. His experience is invaluable in guiding my research toward something useful and keeping me focused.\nUCSB prides itself on its collaborative atmosphere. Do you collaborate with others?: While the core of my work does not involve intense collaboration (e.g. daily interaction or shared source code), working with others is still a big part of it. In addition to weekly group meetings, my labmates and I will frequently bounce ideas off of each other, exchange papers for editing, and practice presentations. I also interact with industry a lot, which is pretty common in the CE program. First, there are grant reviews, where we present our latest research directly to the companies that sponsor us. I have also done two internships with Intel (totaling 10 months), which provided invaluable experience and perspective for my research. My supervisor from Intel is also on my thesis committee and a mentor on my grant, so he and I communicate regularly to make sure the work is proceeding in a meaningful direction. Finally, I meet with both industry and other universities at conferences. One benefit to being in California is the proximity of most top conferences, which tend to be held within driving distance. Even if I don\u2019t have a paper, I will sometimes go for a workshop or to help as a volunteer. You meet many students from other universities at these events, people who will be your future colleagues.\nWhat did you do this past Summer?: I spent this last summer on internship at Intel in Austin, TX. It was a great experience, but I was glad to come back home to Santa Barbara.\nWhere will your research take you next?: Immediately after graduating I plan to take a job in industry. With any luck, I\u2019ll find a position that lets me publish enough to remain academically relevant so that my future options are kept open. Eventually I would like to teach, even if only part-time as an adjunct professor.\nPeter and Academics:\nWhat do you think are the strengths of the ECE graduate program?: The graduate courses are very in-depth: they really show both the history of as well as the latest developments in their respective topics. Standards are high and it takes a lot of hard work to graduate, but I wouldn\u2019t have it any other way.\nFavorite Course: Although I didn\u2019t take it for credit, I sat in on and thoroughly enjoyed the graduate-level advanced computer architecture course. Professor Melliar-Smith\u2019s lectures are always very engaging, and really make you think.\nGraduate Student Researcher (GSR) and Teaching Assistant (TA) experience: Most of the time I am a GSR, but I\u2019ve done two TAs. The first was computer architecture, which consisted of discussion section, office hours, and grading. I\u2019ll admit I\u2019m not too fond of grading, which is why I opted for this upper-division class with fewer students. In discussion section and office hours you really get to know the students, it is great seeing them figuring things out. My second TA was computer design, and I ended up having many of the same students as before. This is a lab class where students build a simple microprocessor using various discrete logic components and an FPGA. I spent a ton of time in the lab showing them how to debug Verilog code and big, tangled breadboards. It was very demanding, but you end up feeling a personal responsibility to make sure that everyone gets everything they can out of the class.\nShare your experience about the PhD exams: I was pretty frightened about the screening exam, and joined a study group of around 8 people months in advance. This was the first time I had ever been in a study group, or ever really seriously studied, for that matter. When the day finally arrived I made my way through it with confidence and ease, but I can\u2019t imagine how impossible it would have been if I hadn\u2019t done all that studying. The qualifying exam was a much less intimidating matter, albeit arguably more important. By the time I was ready for it, I already had my research topic pretty well figured out and slides from conferences I was able to use in the presentation.\nWhy Electrical and Computer Engineering and UCSB?: When I first applied I didn\u2019t know exactly what research I wanted to do... in retrospect I don\u2019t think anyone really does until after a few years working on their PhD. UCSB\u2019s ECE department has lots of faculty working in electronic design automation in lots of different directions, so I knew I would find something that inspired me.\nSome Favorites Things About Being at UCSB:\nUCSB: biking or walking everywhere, laid-back atmosphere\nElectrical and Computer Engineering Department: plenty of grad students, lots of great, friendly staff and faculty\nSanta Barbara: the weather, the ocean, the mountains, the farmers' markets\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: My quality of life depends a lot on whether there is a conference deadline looming. Most of the time, I work regular hours and still have weekends free for skiing, hiking, and cookouts at Goleta Beach. When a deadline approaches though, the intensity of work increases and I don't have much free time in my weekends or evenings. I still manage to cook dinner and get to the gym a couple times a week, but it can be pretty intense. Right after a deadline I usually take it easy for a week or so to recharge and catch up on chores... and then the cycle starts all over again.\nWhat About Life in Santa Barbara?: I live in Family Student Housing with my wife, who is also a PhD student in the ECE department. We have a number of friends (also primarily ECE grad students) who live nearby that we hang out with on the weekends or go on trips with during breaks. Living in Santa Barbara is great: you are always so close to nature. There is always some sort of flower in bloom along my daily bike ride into the lab, and whenever I want to clear my head I can just walk down to the beach and listen to the ocean. The farmers' market runs year-round with some of the freshest and cheapest food you can find anywhere. Where else can you get 50 cent locally grown avocados? You're also never trapped in SB. Within a day's drive I can be in San Francisco, Tahoe, San Diego, Las Vegas, Sequoia, or, most often, at Mammoth Mountain.\nAdvice to prospective graduate students: UCSB is a top research institution located in paradise; I feel immensely fortunate to be here. Quality of life is at least as important as quality of education, and you don't have to pick just one or the other.\nVlasia Anagnostopoulou - Graduate Student, Computer Science\nAbout Vlasia:\nStudy Area: Computer Architecture, Green Computing, Energy Efficiency\nDegree Sought and Progress: Fourth Year / Masters & PhD in CS\nPrevious Degrees: Diploma from the National Technical University of Athens\nActivities and Interests: Argentine tango, swimming, languages, literature, traveling\nUCSB Student Organizations: Argentine tango club\nProfessional Memberships: ACM-SIGARCH\nInteresting aside about Vlasia: she speaks four foreign languages\nVlasia's Research:\nAdvisor / Group: Professor Fred Chong / Archlab\nDissertation Title: Energy-efficiency in Datacenters\nTitle of Most Important Publication to Date: \"Quantifying the Environmental Advantages of Large-Scale Computing\"\nImportant Awards & Honors: Scholarship to attend the CRA-W conference, an annual event for women in Computer Science\nImportant Conferences Attended: ISCA (presented at a workshop session), IGCC (presented a paper)\nFinancial Assistance Received: TAship, RAship\nWebsite: http://www.cs.ucsb.edu/~vlasia/\nTell us about your research: My research is about energy-efficiency in datacenters. Our latest thing is the development of a new low-power state for servers, and the middleware to exploit this state on a cluster of servers in a datacenter. The purpose of this hardware and software approach is to save energy while respecting the performance guarantees that are required for internet-applications run on datacenter clusters.\nHow did you get into your area of research?: I knew that my general area of research was going to be Computer Architecture -- so when my advisor recommended the energy-efficiency project, I found it very exciting because it required both a holistic and at the same time very detailed understanding of server clusters. Besides, it had the potential to positively affect the environment.\nWhat do you find particularly rewarding about your research?: There are various things that I find rewarding about my research. One is that I love learning about the organization and architecture of computer systems. Moreover, I find very exciting trying to tweak the design and/or operation of a system in order to achieve a particular goal. My research is about energy-efficiency in large-scale computer systems, so I naturally find it very rewarding that the techniques I develop, when applied at a large scale, could actually have a significant reduction in our demand for energy.\nThoughts on working in a group research environment and working with an advisor: I have collaborated with several fellow grad students and the general culture in the lab is to sit together and learn from one another. I find that bringing together our different perspectives is a real mind-opener and that the exchange of information with my lab-mates helps me improve my technical skills much faster. Working with my advisor is a multi-facet lesson of its own. He helps me grasp the larger picture and understand how to identify the path to take my research. In short, he has helped me a lot in creating value out of my work. I also appreciate the fact that he has been a source of a lot of inspiration for me during somewhat stale times. Another lesson that I have learned from working together is how to work a lot more efficiently.\nWhat did you do this Summer?: This summer I built on my research at UCSB and submitted a paper to one of the most important conferences in my field.\nWhere will your research take you next?: Not sure yet. But I love research and I am sure that my research is going to take me either to an industry with strong research culture and/or academia.\nVlasia and Academics:\nWhat do you think are the strengths of the CS graduate program?: The CE program requires students to pass 10 courses before taking their qualifying exam and later their proposal and defense exams. This helped me built a good technical base before starting my own research. I have also gotten to collaborate with several fellow grad students and got to know the research of many professors. Another strength of the graduate program is that collaboration among students and/or faculty from the same or other departments is very much encouraged.\nFavorite Course: Green Computing. Absolutely stimulating course. It was a course where I learned a lot about techniques to save energy in computing systems and an interesting thing that came up -- that in many cases these techniques are useless if the political and/or economical aspects of the innovation are neglected.\nTeaching Assistant (TA) experience: As a TA, I taught Computer Hardware/Software Interface, Operating Systems, Intro to Programming languages, and Intro to Data structures. My approach was to engage the students in the discussion as much as possible, as in some cases freshmen students have a somewhat passive attitude in the class. I found it very rewarding towards the end of the quarter when the students looked a lot more confident solving problems in front of the rest of the class!\nWhy Computer Science and UCSB?: I chose the CS department at UCSB because of the research in Computer Architecture. I saw that in the particular lab, there were many interesting projects and the publications from these projects looked very inspiring. The professors in charge of the lab all had very solid academic records, and on top of that, they were easy to approach.\nSome Favorites Things About Being at UCSB:\nUCSB: Solid academic program\nComputer Science Department: Great vibe from the faculty and fellow grad students\nSanta Barbara: Quality of life (short distances, good weather, nature venues)\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: Life as a grad student implies lots of flexibility concerning the work and the work schedule. Personally, I try to work a consistent amount of hours during the week, and engage in my hobbies, often with friends, during the weekends. However, I do enjoy the times before a submission deadline, when I work a lot more intensely. These times tend to be extra creative and the sense of accomplishment which follows right after the submission makes it all worth the effort. I usually give in right after a deadline by going away for a few days with friends.\nSocial Life: My social life consists of outdoor activities, like swimming and running by the beach, dancing (there is quite a dancing community in SB, taken the size of the city), and attending events from the Arts & Lectures program at UCSB. These events include various film festivals (e.g. on human-rights), concerts, dance performances, lectures from influential speakers, and they run throughout the whole year. Besides, there are plenty of small galleries which one can visit during the \"1st Thursday of the month\" -- an arts event that takes place once per month. In short, Santa Barbara features plenty of sports and cultural happenings.\nWhat part of town do you live in?: I live in downtown Santa Barbara which is it easy to reach everything. UCSB is a 10-minute bus ride and most theaters and dance venues are at a walkable distance from where I live. Many friends of mine live nearby. Taken that in my hometown one has to ride on average an hour to get from one part of the city to another, I can really appreciate how everything is close.\nAdvice to prospective graduate students: I feel that few other campuses could combine a solid academic program with the right culture (friendly faculty, staff and fellow grad students) and at a place with such quality of life.\nCopyright \u00a9 2012 The Regents of the University of California, All Rights Reserved.\nUC Santa Barbara, Santa Barbara CA 93106-9560\n(805) 893-5615 \u2022 info@ce.ucsb.edu\n"}, {"score": 1855.3674, "uuid": "68ca1704-bb23-5eb8-a8f9-d6a61eac5b5d", "index": "cw12", "trec_id": "clueweb12-1804wb-69-23277", "target_hostname": "www.ce.ucsb.edu", "target_uri": "http://www.ce.ucsb.edu/profiles/graduate/", "page_rank": 1.2439935e-09, "spam_rank": 90, "title": "<em>Computer</em> <em>Engineering</em> | Graduate Profiles", "snippet": "Jonny Valamehr, Electrical and <em>Computer</em> <em>Engineering</em>, M.S. D. Kunal Arya, Electrical and <em>Computer</em> <em>Engineering</em>, M.S. D. Peter Lisherness, Electrical and <em>Computer</em> <em>Engineering</em>, Ph. D. * Previous Degrees: BS and MS, both from UCSB (I can\u2019t get enough of this place!)", "explanation": null, "document": "Jonathan Valamehr - Graduate Student, Electrical & Computer Engineering\nAbout Jonny:\nStudy Area: Computer Architecture\nDegree Sought and Progress: PhD, 5th year\nPrevious Degrees: BS and MS, both from UCSB (I can\u2019t get enough of this place!)\nImportant Awards and Honors: Hearst Foundation Scholarship 2007, URCA Research Grant 2007\nProfessional Memberships: Institute of Electronic and Electrical Engineers (IEEE) and Association for Computing Machinery (ACM)\nTypes of Financial Aid Received: 3 TAships and many quarters of GSR funding. I have been fortunate enough to have had funding throughout my grad school career\nHobbies / Activities / Interests: Magic (not The Gathering), basketball, reading (non-fiction), psychology\nInteresting aside about Jonny: I used to produce hip hop music\nJonny's Research:\nAdvisor / Group: I am in the Architecture lab (Archlab) and I work with Tim Sherwood\nResearch Interests: Computer architecture, Security and Cryptography, High-performance computing, Trusted computing\nImportant Conferences Attended: I presented a paper at ACSAC 2010 and have attended several of the big architecture conferences such as ISCA and ASPLOS\nDissertation Topic: Novel Methods of Augmenting High Performance Processors with Security Hardware\nTitle of Most Important Publication to Date: \"Hardware Assistance for Trustworthy Systems through 3-D Integration\" (ACSAC 2010)\nUCSB Personal Website: Jonathan Valamehr\nTell us about your research: As modern high performance microprocessors increase in complexity, the way multiple programs of varying levels of trust interact with each other on a system can oftentimes become problematic. Information that one program may intend to keep secret may be read by a malicious program. This is no good! My research cuts across a few domains and attempts to leverage the benefits of hardware solutions to mitigate pervasive security challenges. My recent work applies emerging technologies in computer architecture to solve security vulnerabilities that affect microprocessors today. More details can be found in our ACSAC 2010 paper, where we are the first to propose using 3D die stacking to augment the capabilities of commodity processors to add security-related functionality.\nHow did you get into your area of research?: In high school, I was obsessed with building computers (before I had any idea how they worked) and always wanted to build a machine with the newest, fastest processor to crush my neighbors in the latest video games. Then in my junior year, I thoroughly enjoyed my Computer Architecture class (ECE 154) and after speaking with the instructor, he asked me if I wanted to do undergrad research. After doing that for a quarter, I was hooked. Through the project I was working on, I eventually met Tim and joined his lab.\nWhy you selected your department and UCSB in regards to your research area? One of the main reasons I chose ECE @ UCSB is because of the diversity in research and the freedom one has in choosing their projects here. While I started my graduate career working on architecture problems, I later became interested in security and cryptography as well. Now I am involved on several projects in these fields and get to work with other professors (not just my advisor) who are experts in them. There are a lot of opportunities to dive deep into one subject, or work on a breadth of topics. The sky is the limit here.\nThoughts on working in a group research environment and working with an advisor: Working with an advisor is an amazing experience because you have an expert to help you through the whole process of conducting novel research and shine light on things that would take you much more time (if ever) to do on your own. It is phenomenal. You get training and guidance from a master in the field. Think of it like \u201cThe Karate Kid\u201d, without the fence painting.\nWhat do you find particularly rewarding about your research?: Research is all about defining a problem and using all of your training towards solving it and its unique set of challenges. What I find especially rewarding is the ability to attack a problem that doesn\u2019t have a solution so far \u2013 there is no answer key in this business. I get to be creative and innovate on the cutting edge of technology. How many people can say that?\nUCSB prides itself on its collaborative atmosphere. Tell us about your collaborations: The collaborative nature at UCSB is amazing. One example of this \u2014 I am able to have Tim as my advisor, even though he is officially in the CS department and I am in the ECE department. Working with the right people on the right projects makes me happy and productive. UCSB has also allowed me to meet many researchers and work with many people outside of my group. I have collaborated on many of my lab members\u2019 projects. I also work with several professors in ECE and CS, as well as professors at UCSD and NPS and I have worked with several members from Microsoft Research. I get to hear lots of opinions on research directions as well as leverage the expertise of many others.\nWhat do you plan to do this Summer?: In 2010, I interned in the Architecture team at Intel Oregon. I worked on developing new features for the Atom line of processors. I was recruited by Intel because of my strong resume, which included architecture work at UCSB. In 2011, I interned at Microsoft Research working on hardware security problems. My advisor had previously worked at MSR and knew of an internship opportunity there, so he recommended me. This coming summer, I will be going back to Intel for another internship with the Architecture team.\nWhere will your research take you next?: I have interned at Intel and Microsoft Research, and I really enjoyed my time at both companies doing industry research. As much as I want to stay in academia forever and ever, I plan on joining a company and applying my expertise to shape the processors of tomorrow.\nJonny and Academics:\nWhat do you think are the strengths of the Electrical & Computer Engineering graduate program?: The main strength of the department is its faculty and staff support. You will get astounding work done working with coveted professors and have many people there to help you along the way with anything you need.\nFavorite Course: My favorite course at UCSB so far has been the Senior Capstone project class (ECE 189) with Steve Butner. I really enjoyed this class because we had the freedom to come up with any project we thought would be useful in everyday life and received money to build it from the ground up. Seeing a project from idea to blueprint to prototype to final product was very rewarding, eye-opening and fun.\nTeaching Assistant (TA) experience: I have been a TA three times for introductory Computer Architecture courses and I love it. I have organized and taught both lab sessions and discussion sections. TA\u2019ing is a great opportunity to relay the information you know about something and help students learn in a very low pressure situation. I think teaching is about finding the best way to get a student to intuitively understand a subject, rather than getting a superficial understanding in that moment. You want the lesson to stick for a long time, not disappear after the final exam.\nShare your experience about the PhD exams: I have taken the screening exam, and I am preparing for the qualifying exam. The screening exam was a lot of hard work, but it made me refresh my knowledge of Computer Engineering and allowed me to start my graduate studies with a solid foundation in all 5 subject areas I chose. Not only was the end goal of passing it completed, but the actual process of studying for it gave me confidence to start my graduate career on the right foot.\nSome Favorites Things About Being at UCSB:\nUCSB: The strong work/life balance at UCSB is unparalleled. I never feel like I am overwhelmed by work and never feel like my day stops when I leave campus.\nElectrical & Computer Engineering Department: The department really feels like a family. I know almost everyone on a first name basis, and they are always willing to have a chat or help if you need something. Also, our building is a 60-second stroll from the beach, so taking a break during work and walking to the ocean is very easy.\nSanta Barbara: The best part of Santa Barbara is the multitude of activities and events such as concerts, hiking trips, and barbecues. You will never be bored! There is always something to do and fun company to go along.\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: Quality of life as a grad student is astounding. I am able to do everything my heart desires. Rather than strive for a work/life balance, I like to strive towards having a work/life separation. This has really helped me in doing everything I want to do; I\u2019m able to hang out with friends, go visit family, exercise and spend time on my hobbies without worrying about my work. At the same time, this allows me to completely focus on my research while I am in my lab and work efficiently.\nWhat About Life in Santa Barbara?: I live in the San Clemente graduate apartments and I really enjoy it there. There are events thrown weekly such as bagel hours, barbecues, and social mixers, so it\u2019s very easy to meet a lot of other grad students and make friends. I also enjoy the nightlife in Downtown Santa Barbara and venture there every so often with my pals and have a blast. Living in Santa Barbara is awesome; it\u2019s why I\u2019ve been here for 9 years!\nAdvice to prospective graduate students: Enjoy your time here and plan out all of the things you want to do, because time flies in Santa Barbara. For the academic side of things, make it a point to talk to other students and any faculty whose work you are interested in, because you never know what cool project you could end up working on with them.\nKunal Arya - Graduate Student, Electrical and Computer Engineering\nAbout Kunal:\nHometown: Anaheim, CA\nStudy Area: System-level Synthesis\nDegree Sought and Progress: M.S. / Ph.D. in Electrical and Computer Engineering (in 5th year of program)\nPrevious Degrees: B.S., Computer Engineering, UC Santa Cruz\nActivities and Interests: playing music, biking, sketching\nProfessional Memberships: Institute of Electrical and Electronics Engineers (IEEE)\nInteresting aside about Kunal: I've been taking piano classes from the music department, which has been a great way to exercise different parts of my brain\nKunal's Research:\nAdvisor / Group: Professor Forrest Brewer\nResearch Interests: computer architecture, automated embedded system design, formal verification\nDissertation Title: \"Mixed Hardware-Software Synthesis\"\nTell us about your research: the research we do is a focused attempt at system-level synthesis. For applications of relatively manageable scale, we are creating tools that will allow designers to make large-scale, coarse-grained architectural decisions early on. By allowing them to reach working designs quickly, they can target optimizations where it really matters. If the optimization criteria is e.g. average energy dissipation against some average latency, it isn't obvious what sorts of choices about memory protocols, hardware/software partitioning, and architectural tricks (forwarding, speculation) will make the biggest impact on the end result. Our tools will bear the burden of cumbersome tasks (such as evaluating different memory interaction protocols) to make complex digital design more sensible and metric-driven, rather than heuristic and purely experience based.\nHow did you get into your area of research?: While I was doing research as an undergrad, I saw that newer, more powerful FPGA platforms had tremendous potential -- however, there was no easy way to realize complex designs on them, especially not for designers that don't have strong computer engineering fundamentals. I was interested in seeing what was possible. When I came to UCSB, I had no background in synthesis, so I didn't realize the sheer scale of the problem. It wasn't until after a few meetings with my advisor that I started to grasp just how difficult the problem really was. Despite that, he was enthusiastic and seemed willing to try a few things, so long as we trimmed the problem down to something much more realistic. In the end, I have a project which looks very promising, and we hope to have some pretty exciting results when we're done.\nWhy you selected your department and UCSB in regards to your research area? A few of the professors in ECE had strong ties to the synthesis community (specifically with programmable logic), so it seemed like a good fit. Also, the size of the department was a big factor: it is just the right medium between a large university with the resources to support pretty advanced research versus a smaller, accessible faculty that makes the experience more personal.\nWhat do you find particularly rewarding about your research?: There is a sense of pride when everything comes together and you have results that you can brag about. So far, I have enjoyed the freedom I've had in shaping where this work is headed, largely due to a good working relationship with my advisor (he is always open to new ideas).\nThoughts on working in a group research environment and working with an advisor: The great thing about working with an advisor is that you essentially get to piggyback on their experience. Left to my own devices, I would take the first, most obvious route that would likely go nowhere. On the other hand, when someone is there to give me insight into what kinds of problems I will face based on what I think are benign decisions, I find that I end up getting to the heart of the matter quickly. Eventually, the experience he brings (and his seemingly endless ability to see potential in a new idea) and the point-of-view I bring (from e.g. undergrad research) meet at our current research. As far as working in a group, I really enjoy the lab I work in because it's a great place to bound ideas off of other people. We're often engaged in some deep discussion about whatever new fascinating technologies have come out. I've noticed that people at UCSB share a certain enthusiasm about learning and a genuine intellectual curiosity. More importantly, they are willing to share what they know and provide input. I can always reliably get feedback from my labmates that makes me think about aspects of the problem which I otherwise wouldn't have considered.\nUCSB prides itself on its collaborative atmosphere. Do you collaborate with others?: Getting feedback from other research groups is helpful for two primary reasons. First, it gives us a fresh perspective from a person who has not sat through our meetings. A clean-slate description of the problem can often reveal potential drawbacks in the overall goals (e.g. leading us to ask, \"is this really the right way to solve the fundamental problem?\"). Second, their own experiences can guide where we target our work. If we want to solve real, on-the-ground problems, then we need to keep in mind which problems are actually important, thereby keeping the research relevant, applicable, and interesting.\nWhat did you do this past Summer?: I spent the summer finally making progress on my research. I also helped out as much as I could with the undergrads who were doing summer research in the lab; it's a welcome change of pace, and let's me practice teaching.\nWhere will your research take you next?: I will likely work in industry for a while, and maybe consider commercial options for my research if the opportunity presents itself. Academia is certainly an option down the line.\nKunal and Academics:\nWhat do you think are the strengths of the ECE graduate program?: For classes, generally there are resources if you're struggling with the course. The professors and TAs alike have reasonable office hours, and are receptive to questions via e.g. email. Additionally, the other grad students are friendly and helpful, and are usually willing to get together in study groups -- there isn't a sense of cut-throat, hostile competition, and in the end that means the student body as a whole does better academically. On the research front, there is a tremendous number of resources from the library, department, and faculty -- it's amazing how often it has helped me to speak to professors from other departments. Viewpoints from experts in those fields helps us think about the problem differently than we would otherwise.\nFavorite Course: It's difficult to choose one, so I'll mention a few -- Professor Sherwood's architecture course offered through the CS department showed me how to view the problem abstractly, while Professor Melliar-Smith's equivalent ECE architecture course showed me the nitty-gritty details. The two courses coupled well, and made it clear how real CPU designs are realized from abstract levels down to the gate-level. Professor Richard Wolski's Operating Systems course was also fantastic -- similarly to the architecture courses, it was a generalization of what was covered in undergrad courses.\nTeaching Assistant (TA) experience: I TA'ed a junior-level digital design course, and while I did spend quite a bit of time in the lab (especially near tests), it was an incredibly rewarding experience. It's also a great way to review material from undergrad -- it made that part of the screening exam a breeze. Moreover, learning to effectively communicate complex topics to someone who has never seen them turns out to be surprisingly useful for publishing. The undergraduates give you immediate feedback on what is or what is not clear, a luxury that you don't often get from academic reviewers.\nShare your experience about the PhD exams: The screening exam can be a source of stress, but it helps to form a study group with like-minded students that you know you are compatible with. Preparation is key.\nWhy Electrical and Computer Engineering and UCSB?: I chose UCSB's ECE department in part because I was impressed with how organized and well-run it is. During the first campus visit, the faculty, staff, and students were approachable and willing to help out however they could. When I met with a few professors to discuss possible research, they were open to the prospect of doing research that was more in line with my interests.\nSome Favorites Things About Being at UCSB:\nUCSB: It has a small-department feel with large-university resources -- so far, I've found the professors to be accessible, helpful, and genuinely concerned about students' well being. On the administrative side, the department is run like a well-oiled machine.\nElectrical and Computer Engineering Department: Aside from the friendly and helpful staff, the accessibility of professors. Also, the Arts & Lectures group brings big-name lecturers and performers to campus, and tickets for students are subsidized.\nSanta Barbara: The geography, bike paths everywhere, access to local farmers, perks of a large city (concerts, symphony, plays) without any of the drawbacks.\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: The key to staying sane is knowing your limits, and the easiest way to prevent getting burned out is making time for something you enjoy outside of class and research. Santa Barbara really has a lot to offer: athletics (from biking, running, to playing basketball, tennis, or soccer in a co-ed team), music (classes offered through the music department, social bands, choirs, quartets), dance (everything from ballroom to salsa to line dancing -- you can literally attend a social dancing lesson every day of the week), an active art scene (the first Thursdays of each month, they have a wine and art tour downtown), open mics, poetry readings, or just simple beach BBQs. Typically, you can incorporate your social life into what you enjoy doing, and when you need a break from the area, there's always the option of a short road trip down to LA with some friends. For people without cars, there's an affordable car sharing program through the university.\nWhat About Life in Santa Barbara?: I live in Ellwood, intentionally away from campus to create a clear distinction between campus and home, and to force myself to bike everyday. It's a beautiful bike ride, and works wonders for stress. It was probably the best decision I made here. My social life is as active as I want it to be -- between salsa dancing and having friends a short bike ride away for a board game night, I've rarely felt like I was missing out.\nAdvice to prospective graduate students: Santa Barbara is an interesting place, because it has much more to offer than it seems. While most people will initially focus on the beach, the weather, and the geography (rightfully so), this only begins to describe what the city has to offer. It is an incredibly diverse place -- academically and otherwise -- coupled with a well-run university.\nPeter Lisherness - Graduate Student, Electrical and Computer Engineering\nAbout Peter:\nStudy Area: Electronic Design Automation\nDegree Sought and Progress: Ph.D. in Electrical and Computer Engineering (in 4th year of program)\nPrevious Degrees: B.S. and M.S. in EE and MBA from U. of Louisville\nActivities and Interests: skiing, hiking, cooking, crossword puzzles\nProfessional Memberships: Institute of Electrical and Electronics Engineers (IEEE) Computer Society\nPeter's Research:\nAdvisor / Group: Tim Cheng / SoC Design and Test Lab\nResearch Interests: verification, validation, test, coverage metrics, reliability\nDissertation Title: \"Validation Coverage Metrics and their Applications\"\nTitle of Most Important Publication to Date: Peter Lisherness and Kwang-Ting (Tim) Cheng. 2010. SCEMIT: A SystemC Error and Mutation Injection Too l. In Proceedings of the 47th Design Automation Conference (DAC '10). ACM, New York, NY, USA, 228-233.\nImportant Awards & Honors: 2008-09 Outstanding Computer Engineering Teaching Assistant\nImportant Conferences Attended: Design Automation Conference (DAC) - paper; IEEE International High Level Design Validation and Test Workshop (HLDVT) - paper; International Test Conference (ITC); and IEEE VLSI Test Symposium (VTS)\nFinancial Assistance Received: Teaching Assistantship (TA) and Graduate Student Researcher (GSR)\nWebsite: https://sites.google.com/site/peterl/\nTell us about your research: My work currently focuses on verification and validation coverage metrics for large-scale circuits. These functional test tasks can be somewhat challenging: it is often much easier to design a circuit than it is to show that you designed the right circuit. Coverage metrics are a way of measuring our thoroughness in testing and exposing aspects of the design that have not been given sufficient attention.\nHow did you get into your area of research?: I\u2019ve been writing software since I was a kid and doing it as a job since I was 13. When I entered college I tried to mix things up by pursuing electrical engineering instead of computer science. I guess that plan backfired; I still write software, although the things I\u2019m writing rely just as much on my electrical engineering education.\nWhat do you find particularly rewarding about your research?: As a programmer, design automation is great because it has a lot of scalability issues. I\u2019ve always loved algorithms and optimization, and turning a week-long experiment into a day- or hour-long one with a couple clever tweaks is extremely gratifying. Every time I run an experiment to answer some question I have, it always leads to another question. It is a constant stream of puzzles, an endless journey. It keeps my mind occupied and always gives me something new and exciting to work on.\nThoughts on working in a group research environment and working with an advisor: My group members are a great support network. They help shoot down foolish ideas, strengthen good ones, and are good friends as well. My advisor, Professor Tim Cheng, is great to work with. His experience is invaluable in guiding my research toward something useful and keeping me focused.\nUCSB prides itself on its collaborative atmosphere. Do you collaborate with others?: While the core of my work does not involve intense collaboration (e.g. daily interaction or shared source code), working with others is still a big part of it. In addition to weekly group meetings, my labmates and I will frequently bounce ideas off of each other, exchange papers for editing, and practice presentations. I also interact with industry a lot, which is pretty common in the CE program. First, there are grant reviews, where we present our latest research directly to the companies that sponsor us. I have also done two internships with Intel (totaling 10 months), which provided invaluable experience and perspective for my research. My supervisor from Intel is also on my thesis committee and a mentor on my grant, so he and I communicate regularly to make sure the work is proceeding in a meaningful direction. Finally, I meet with both industry and other universities at conferences. One benefit to being in California is the proximity of most top conferences, which tend to be held within driving distance. Even if I don\u2019t have a paper, I will sometimes go for a workshop or to help as a volunteer. You meet many students from other universities at these events, people who will be your future colleagues.\nWhat did you do this past Summer?: I spent this last summer on internship at Intel in Austin, TX. It was a great experience, but I was glad to come back home to Santa Barbara.\nWhere will your research take you next?: Immediately after graduating I plan to take a job in industry. With any luck, I\u2019ll find a position that lets me publish enough to remain academically relevant so that my future options are kept open. Eventually I would like to teach, even if only part-time as an adjunct professor.\nPeter and Academics:\nWhat do you think are the strengths of the ECE graduate program?: The graduate courses are very in-depth: they really show both the history of as well as the latest developments in their respective topics. Standards are high and it takes a lot of hard work to graduate, but I wouldn\u2019t have it any other way.\nFavorite Course: Although I didn\u2019t take it for credit, I sat in on and thoroughly enjoyed the graduate-level advanced computer architecture course. Professor Melliar-Smith\u2019s lectures are always very engaging, and really make you think.\nGraduate Student Researcher (GSR) and Teaching Assistant (TA) experience: Most of the time I am a GSR, but I\u2019ve done two TAs. The first was computer architecture, which consisted of discussion section, office hours, and grading. I\u2019ll admit I\u2019m not too fond of grading, which is why I opted for this upper-division class with fewer students. In discussion section and office hours you really get to know the students, it is great seeing them figuring things out. My second TA was computer design, and I ended up having many of the same students as before. This is a lab class where students build a simple microprocessor using various discrete logic components and an FPGA. I spent a ton of time in the lab showing them how to debug Verilog code and big, tangled breadboards. It was very demanding, but you end up feeling a personal responsibility to make sure that everyone gets everything they can out of the class.\nShare your experience about the PhD exams: I was pretty frightened about the screening exam, and joined a study group of around 8 people months in advance. This was the first time I had ever been in a study group, or ever really seriously studied, for that matter. When the day finally arrived I made my way through it with confidence and ease, but I can\u2019t imagine how impossible it would have been if I hadn\u2019t done all that studying. The qualifying exam was a much less intimidating matter, albeit arguably more important. By the time I was ready for it, I already had my research topic pretty well figured out and slides from conferences I was able to use in the presentation.\nWhy Electrical and Computer Engineering and UCSB?: When I first applied I didn\u2019t know exactly what research I wanted to do... in retrospect I don\u2019t think anyone really does until after a few years working on their PhD. UCSB\u2019s ECE department has lots of faculty working in electronic design automation in lots of different directions, so I knew I would find something that inspired me.\nSome Favorites Things About Being at UCSB:\nUCSB: biking or walking everywhere, laid-back atmosphere\nElectrical and Computer Engineering Department: plenty of grad students, lots of great, friendly staff and faculty\nSanta Barbara: the weather, the ocean, the mountains, the farmers' markets\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: My quality of life depends a lot on whether there is a conference deadline looming. Most of the time, I work regular hours and still have weekends free for skiing, hiking, and cookouts at Goleta Beach. When a deadline approaches though, the intensity of work increases and I don't have much free time in my weekends or evenings. I still manage to cook dinner and get to the gym a couple times a week, but it can be pretty intense. Right after a deadline I usually take it easy for a week or so to recharge and catch up on chores... and then the cycle starts all over again.\nWhat About Life in Santa Barbara?: I live in Family Student Housing with my wife, who is also a PhD student in the ECE department. We have a number of friends (also primarily ECE grad students) who live nearby that we hang out with on the weekends or go on trips with during breaks. Living in Santa Barbara is great: you are always so close to nature. There is always some sort of flower in bloom along my daily bike ride into the lab, and whenever I want to clear my head I can just walk down to the beach and listen to the ocean. The farmers' market runs year-round with some of the freshest and cheapest food you can find anywhere. Where else can you get 50 cent locally grown avocados? You're also never trapped in SB. Within a day's drive I can be in San Francisco, Tahoe, San Diego, Las Vegas, Sequoia, or, most often, at Mammoth Mountain.\nAdvice to prospective graduate students: UCSB is a top research institution located in paradise; I feel immensely fortunate to be here. Quality of life is at least as important as quality of education, and you don't have to pick just one or the other.\nVlasia Anagnostopoulou - Graduate Student, Computer Science\nAbout Vlasia:\nStudy Area: Computer Architecture, Green Computing, Energy Efficiency\nDegree Sought and Progress: Fourth Year / Masters & PhD in CS\nPrevious Degrees: Diploma from the National Technical University of Athens\nActivities and Interests: Argentine tango, swimming, languages, literature, traveling\nUCSB Student Organizations: Argentine tango club\nProfessional Memberships: ACM-SIGARCH\nInteresting aside about Vlasia: she speaks four foreign languages\nVlasia's Research:\nAdvisor / Group: Professor Fred Chong / Archlab\nDissertation Title: Energy-efficiency in Datacenters\nTitle of Most Important Publication to Date: \"Quantifying the Environmental Advantages of Large-Scale Computing\"\nImportant Awards & Honors: Scholarship to attend the CRA-W conference, an annual event for women in Computer Science\nImportant Conferences Attended: ISCA (presented at a workshop session), IGCC (presented a paper)\nFinancial Assistance Received: TAship, RAship\nWebsite: http://www.cs.ucsb.edu/~vlasia/\nTell us about your research: My research is about energy-efficiency in datacenters. Our latest thing is the development of a new low-power state for servers, and the middleware to exploit this state on a cluster of servers in a datacenter. The purpose of this hardware and software approach is to save energy while respecting the performance guarantees that are required for internet-applications run on datacenter clusters.\nHow did you get into your area of research?: I knew that my general area of research was going to be Computer Architecture -- so when my advisor recommended the energy-efficiency project, I found it very exciting because it required both a holistic and at the same time very detailed understanding of server clusters. Besides, it had the potential to positively affect the environment.\nWhat do you find particularly rewarding about your research?: There are various things that I find rewarding about my research. One is that I love learning about the organization and architecture of computer systems. Moreover, I find very exciting trying to tweak the design and/or operation of a system in order to achieve a particular goal. My research is about energy-efficiency in large-scale computer systems, so I naturally find it very rewarding that the techniques I develop, when applied at a large scale, could actually have a significant reduction in our demand for energy.\nThoughts on working in a group research environment and working with an advisor: I have collaborated with several fellow grad students and the general culture in the lab is to sit together and learn from one another. I find that bringing together our different perspectives is a real mind-opener and that the exchange of information with my lab-mates helps me improve my technical skills much faster. Working with my advisor is a multi-facet lesson of its own. He helps me grasp the larger picture and understand how to identify the path to take my research. In short, he has helped me a lot in creating value out of my work. I also appreciate the fact that he has been a source of a lot of inspiration for me during somewhat stale times. Another lesson that I have learned from working together is how to work a lot more efficiently.\nWhat did you do this Summer?: This summer I built on my research at UCSB and submitted a paper to one of the most important conferences in my field.\nWhere will your research take you next?: Not sure yet. But I love research and I am sure that my research is going to take me either to an industry with strong research culture and/or academia.\nVlasia and Academics:\nWhat do you think are the strengths of the CS graduate program?: The CE program requires students to pass 10 courses before taking their qualifying exam and later their proposal and defense exams. This helped me built a good technical base before starting my own research. I have also gotten to collaborate with several fellow grad students and got to know the research of many professors. Another strength of the graduate program is that collaboration among students and/or faculty from the same or other departments is very much encouraged.\nFavorite Course: Green Computing. Absolutely stimulating course. It was a course where I learned a lot about techniques to save energy in computing systems and an interesting thing that came up -- that in many cases these techniques are useless if the political and/or economical aspects of the innovation are neglected.\nTeaching Assistant (TA) experience: As a TA, I taught Computer Hardware/Software Interface, Operating Systems, Intro to Programming languages, and Intro to Data structures. My approach was to engage the students in the discussion as much as possible, as in some cases freshmen students have a somewhat passive attitude in the class. I found it very rewarding towards the end of the quarter when the students looked a lot more confident solving problems in front of the rest of the class!\nWhy Computer Science and UCSB?: I chose the CS department at UCSB because of the research in Computer Architecture. I saw that in the particular lab, there were many interesting projects and the publications from these projects looked very inspiring. The professors in charge of the lab all had very solid academic records, and on top of that, they were easy to approach.\nSome Favorites Things About Being at UCSB:\nUCSB: Solid academic program\nComputer Science Department: Great vibe from the faculty and fellow grad students\nSanta Barbara: Quality of life (short distances, good weather, nature venues)\nGraduate Student & Social Life and Living Situation:\nGraduate Student Life: Life as a grad student implies lots of flexibility concerning the work and the work schedule. Personally, I try to work a consistent amount of hours during the week, and engage in my hobbies, often with friends, during the weekends. However, I do enjoy the times before a submission deadline, when I work a lot more intensely. These times tend to be extra creative and the sense of accomplishment which follows right after the submission makes it all worth the effort. I usually give in right after a deadline by going away for a few days with friends.\nSocial Life: My social life consists of outdoor activities, like swimming and running by the beach, dancing (there is quite a dancing community in SB, taken the size of the city), and attending events from the Arts & Lectures program at UCSB. These events include various film festivals (e.g. on human-rights), concerts, dance performances, lectures from influential speakers, and they run throughout the whole year. Besides, there are plenty of small galleries which one can visit during the \"1st Thursday of the month\" -- an arts event that takes place once per month. In short, Santa Barbara features plenty of sports and cultural happenings.\nWhat part of town do you live in?: I live in downtown Santa Barbara which is it easy to reach everything. UCSB is a 10-minute bus ride and most theaters and dance venues are at a walkable distance from where I live. Many friends of mine live nearby. Taken that in my hometown one has to ride on average an hour to get from one part of the city to another, I can really appreciate how everything is close.\nAdvice to prospective graduate students: I feel that few other campuses could combine a solid academic program with the right culture (friendly faculty, staff and fellow grad students) and at a place with such quality of life.\nCopyright \u00a9 2012 The Regents of the University of California, All Rights Reserved.\nUC Santa Barbara, Santa Barbara CA 93106-9560\n(805) 893-5615 \u2022 info@ce.ucsb.edu\n"}, {"score": 1851.867, "uuid": "65f43e15-9f57-52ed-be12-6124074f4fbc", "index": "cw12", "trec_id": "clueweb12-0209wb-72-31172", "target_hostname": "www.science-engineering.net", "target_uri": "http://www.science-engineering.net/computer_science_education.htm", "page_rank": 1.1859852e-09, "spam_rank": 69, "title": "UK <em>Computer</em> <em>Science</em> Education", "snippet": "If you have any comments <em>or</em> suggestions relating to <em>Science</em> &amp; <em>Engineering</em> Courses,", "explanation": null, "document": "Study in United Kingdom\nThe Changing Face OF UK Computer Science Education\nAt undergraduate and postgraduate level, UK Universities offering degrees in Information Systems and Computer Science have been responding to a series of challenges and opportunities. Dr Richard Harvey from the Computing Sciences department at the University of East Anglia identifies these trends and shows how they affect applicants.\nA few year's ago my own department at the University of East Anglia decided to change its name from the School of Information Systems to the School of Computing Sciences. The reasoning was obvious, it wasn't that Information Systems was not important, far from it - we still teach popular degrees in these subjects, it was that the subject had broadened and become critical to a huge variety of modern endeavours including business and the sciences.\nA typical Computing Science school might run courses from Computer Systems Engineering through to Business Information Systems through to Bioinformatics. In essence, almost every discipline now has some need for computing and successful computing sciences departments are following this trend and fulfilling that need.\nAlongside this broadening in intellectual demand for the subject, UK Computer Science departments continue to seek very high levels of quality assurance. A typical top\u2011quality computing science department will annually review its courses at all levels using an External Examiner, who will be a senior academic from another University, with further root\u2011and\u2011branch reviews at least every five years. Additionally, high quality departments will almost always seek accreditation from either the British Computer Society of the Institution of Electrical Engineers. Such accreditation is very far from a rubber stamp and after three days of scrutiny by an experienced panel, most departments feel that there is little that has escaped notice.\nA further element is what the newspapers call \u201cleague tables\". It is difficult to place much trust in league tables - they are invariably compiled in a hurry using nationally available data - a University's position in the league table seems to depend entirely on how the compiler has decided to weight a variety of factors, many of which are several years out of date or of dubious provenance. However, a more recent innovation is the National Student Survey (available online at www.tqi.ac.uk ) which gives scores to departments on the basis of graduating students' satisfaction with their undergraduate courses. Compared to the newspaper league tables there are some surprising results and it will be interesting to see how applicants make use of this information in future years.\nWhen it comes to graduate students, either at Masters or Doctoral level, few would disagree with the importance of a department's research expertise. Over the last decade all UK computer science schools have been assigned a score known as an RAE rating. The score affects a school's funding but can be difficult to interpret for applicants - a department rated 4 is not universally worse than one rated 5 since the score obtained depends on how many academics were returned. Fortunately most departments make their research expertise clear on the their website which can, of course be cross checked with the official RAE return (available at www.hero.ac.uk/rae - although now a bit out of date). A further resource is the UK measure of research intensity available at www.hesa.ac.uk/ .\nThe final challenge that faces UK computer science departments is one that faces all computing science \u2011 the rapid pace of change in the subject. For a subject that awarded its first PhD in the 1970s the development of hardware and software has been truly remarkable. Furthermore the subject is distinguished by a close relationship to industry and commerce. Such developments mean that successful departments must not only rapidly revise the syllabus but also develop courses that prepare graduates for industry. An example might be conversion courses in which students that have not had the benefit of an undergraduate degree may find that they are qualified to study for a one-year MSc known as a conversion MSc. Such courses will often admit only applicants with highly-developed graduate \u00ad level skills and build upon these to produce competent computer scientists within a year. Another example could be undergraduate courses that combine study with a year spent at a North American University: a cosmopolitan training that reflects the transatlantic nature of developments in computing.\nSo as Computer Science matures, it moves towards a subject that can more accurately be named Computing Sciences. Computing because it is not the computer that matters but the thing it computes and Sciences because there is no longer a single computer science but a diversity of theories and applications that serve the needs of a variety of disciplines. For the future therefore, I expect an increased emphasis on interdisciplinarity, more demanding quality assurance via structured student opinion and an ever-increasing range of problems that demand professional trained computer scientists to solve them.\nStudy this subject here:\n"}, {"score": 1850.044, "uuid": "f6fa3bbd-d650-5c9f-853b-1953c37db3f8", "index": "cw12", "trec_id": "clueweb12-0104wb-53-20835", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/jobs/", "page_rank": 1.3014749e-09, "spam_rank": 72, "title": "Jobs | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "There are opportunities for <em>Computer</em> <em>Science</em>, <em>Computer</em> <em>Engineering</em>, Electrical <em>Engineering</em> and Information Systems majors and <em>more</em>. Food will be available and also chances to win cool prizes.", "explanation": null, "document": "Computer Science Professor of Practice Position\nposted Monday, February 6th, 2012\nUMBC invites applications for a non-tenure track position in Computer Science at the rank of Professor of the Practice to begin August 2012. All CS areas will be considered, but we are especially interested in security related areas. Applicants should have a Ph.D. or equivalent stature by virtue of experience. Ideal candidates will have a history of research, publication, teaching, and industry experience. Duties include teaching both graduate and undergraduate courses and helping develop cyber security programs. For best consideration, apply by March 15, 2012. Reviews will begin immediately and applications will be accepted until the position is filled. For more information and to apply, see http://bit.ly/UMBCPoP . UMBC is an AA/EOE.\n2012 Google Summer of Code program announced\nposted Sunday, February 5th, 2012\nIf you have good programming skills and are looking for an interesting alternative to the usual summer internship, you might check out the Google Summer of Code program. It pays student developers $5000 stipends to write code for various open source projects over the summer. Over the past seven years, it's brought together over 6,000 students with over 300 open source projects to create millions of lines of code.\nA set of open source projects (aka mentoring organizations) will be selected and announced in mid-March. Students apply to work on one of more of these and each mentoring organization ranks the students interested in working with them. Google facilitates the final selection and pairing. The mentoring organization works closely with the student to define tasks, check progress, help solve problems, etc. Typically the student works remotely, interacting with his or her mentor via email, chat, skype, etc.\nStudents can submit applications via the Google Summer of Code 2012 site from March 26 to April 6. Google says that that the best applications they receive are from students who took the time to interact with one of the participating mentoring organizations and discuss their ideas before submitting an application. About 1,100 students are expected to be funded this year.\nDeadline for Information Assurance Scholarship Nears\nposted Monday, January 9th, 2012\nAttention rising Junior and Senior Undergraduate and Graduate students interested in Information Assurance: Thursday, January 12 is the deadline to apply for a scholarship through the Information Assurance Scholarship Program (IASP) .\nThe scholarship is great for students who are interested in pursuing careers in Information Assurance for the Federal Government.\u00a0 Each recipient will receive full tuition, room and board, books,and stipend. \u00a0In return, the recipient must \u00a0work for DoD (for pay) for one year for year of scholarship. \u00a0Each recipient will also engage in a summer internship at DoD \u00a0(for pay).\nInterested applicants should contact Dr. Alan Sherman (\n) to be guided through the application process. For more information about the program, and for an application form , visit UMBC's Center for Information Security and Assurance website .\nTake the NSA Cryptochallenge, 11-5 Friday 9/30, The Commons\nposted Monday, September 26th, 2011\nNSA will be at the Commons for this year's CryptoChallenge competition. Stop by and test your skills against their cryptographic brain teasers and maybe score some great giveaways. Join them for some friendly competition from 11:00am to 5:00pm on Friday 30 September at the Commons Outside Terrace or Main Street if it rains.\nBring your resume \u2014 NSA recruiters will be on hand to discuss career opportunities for the best codemakers and codebreakers in the business. You can hone your cryptographic skills before the event by downloading the free NSA CryptoChallenge from the Apple App Store for iPhone, iPod touch and iPad.\nNSA CryptoChallenge is a game that tests your pattern recognition skills through a series of cryptographs. Your mission is to decipher encrypted quotes, factoids, historical events and more. It\u2019s you against the clock to see how fast you can crack the code. Or, you can challenge a friend with the multiplayer interface. In that instance, it's a one-on-one race to see who can correctly solve the puzzle first.\nNSA executes some of the nation\u2019s most important and sensitive intelligence operations. To help us accomplish our mission, we\u2019re looking for the best and the brightest problem solvers to join our team. If you can solve these puzzles, you just might have what it takes to help NSA keep America safe.\nMicrosoft at UMBC Tue 9/6 to discuss internship and full-time positions\nposted Thursday, September 1st, 2011\nMicrosoft will be on campus to meet with undergraduate and graduate students interested in internship and full-time positions in the Seattle area. Interested students should come to the the Skylight Room in the Commons between 6:30 and 7:30pm on Tuesday September 6.\nThere are opportunities for Computer Science, Computer Engineering, Electrical Engineering and Information Systems majors and more. Food will be available and also chances to win cool prizes.\nIf you plan to attend, please RSVP via the Events tab in your UMBCworks account (access myUMBC under the Jobs and Internships topic in myUMBC).\nExploring job trends\nposted Thursday, July 21st, 2011\nThe job search aggregator indeed.com collects job listings from a large number of of websites, including job boards, newspapers, associations, and company career pages. Using this data, they regularly report on job trends by country, region and keywords. Their most recent report by industry shows the weakness of the economic recovery but also shows a strong market for IT jobs.\nIndeed has a web page that lets you see trends in the number of job postings with certain keywords. Amazingly, the current top ten trending phrases are all IT related: HTML5, mobile app, Android, Twitter, jQuery, Facebook, social media, iPhone, cloud computing and virtualization.\nMobile App jobs\nIf you are preparing to look for a job or just trying to better prepare for a career, it is an interesting source of data. One thing to keep in mind is that you should invest your time in college building a foundation of knowledge and skills that will support you for the rest of your life, both professionally and as a well-rounded person. The undergraduate programs at UMBC aim to do just that. But you might give some thought to choosing some electives that will prepare you for the opportunities you will find in the short term, too. As usual, finding the right balance is the key.\nPerks help tech startups attract and retain employees\nposted Friday, July 15th, 2011\nWhile you can find a treehouse to rent using Airbnb , they also have a mockup of one for their employees to chill in.\nLast week\u2019s Wall Street Journal had a story, The Perk Bubble Is Growing as Tech Booms Again , on how technology companies compete for employees by offering more and more extravagant perks.\n\u201cHere in the capital of the latest tech boom, engineers and product developers work late into the night creating the next big thing. But they take office culture just as seriously, fueling behavior that is reaching a level of froth not seen in a decade.\nSome Web start-ups are partying like it\u2019s 1999. Airbnb\u2019s housewarming later this month is to include a visit by rapper and occasional tech investor M.C. Hammer. The party room at reviews site Yelp Inc. has three beer kegs with built-in iPads to offer information about what\u2019s on tap. Last month, start-ups Peanut Labs Inc. and AdParlor Inc. sponsored the sold-out \u201cPirates of Silicon Valley Cruise,\u201d a $600-per-person seafaring party.\nSix hottest IT jobs\nposted Tuesday, July 5th, 2011\nCIO magazine has an article that identifies what they think are the the six hottest new IT jobs . They used an admittedly unscientific method of reviewing listing on IT job sites and talking to IT executives to find the types of jobs with good growth potential and are resistant to outsourcing and economic downturns.\n\u201cIT job seekers have real reason to hope. No fewer than 10,000 IT jobs were added to payrolls in May alone, according to the Bureau of Labor statistics, reflecting a steady month-over-month increase since January. And in a June survey by the IT jobs site Dice.com, 65 percent of hiring managers and recruiters said they will hire more tech professionals in the second half of 2011 than in the previous six months.\u201d\nTheir six are:\n"}, {"score": 1848.4504, "uuid": "1278357d-9a28-59a9-95bf-fbaf91850dd2", "index": "cw12", "trec_id": "clueweb12-0104wb-60-18750", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/2011/12/", "page_rank": 1.2995449e-09, "spam_rank": 80, "title": "December | 2011 | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "D. degrees in <em>Computer</em> <em>Science</em>, 58 received M.S. degrees in <em>Computer</em> <em>Engineering</em>, <em>Computer</em> <em>Science</em>, Electrical <em>Engineering</em>, <em>Engineering</em> Management and Systems <em>Engineering</em>, and 53 got B.S. degrees in <em>Computer</em> <em>Engineering</em> and <em>Computer</em> <em>Science</em>.", "explanation": null, "document": "Tech firms like summer interns: Try before you Buy\nposted Tuesday, December 27th, 2011\nAn article in last week's Wall Street Journal, Interns Are Latest Target In Battle for Tech Talent , focused on the increased interest in hiring summer interns in the Bay area.\n\"Bay Area tech companies, already in a fierce fight for full-time hires, are now also battling to woo summer interns. Technology giants like Google Inc. have been expanding their summer-intern programs, while smaller tech companies are ramping up theirs in response\u2014sometimes even luring candidates away from college.\"\nThe motivation for companies is simple. Their growth depends on a steady stream of new hires with good skills and work habits. Hiring prospects as summer interns is a \"try before you buy\" strategy, giving the company lots of information to decide whether to extend an offer for a full-time position after graduation.\nMeanwhile, Facebook Inc. plans to hire 625 interns for next summer, up from 550 this year. Google hired 1,000 engineering interns this past summer, up 20% from the previous year. Yolanda Mangolini, Google's director of talent and outreach programs, says the company is still figuring out its target for 2012, based on its overall staffing plan. Google generally extends offers to the majority of its intern class, Ms. Mangolini says. \"It is one of the primary ways we find full-time hires.\"\nWhile the WSJ story focused on Bay area companies, the situation is similar throughout the country and applies not only to companies, but also government agencies. It you are pursuing a computing-related program, now is the time to aggressively explore internship opportunities for the summer.\nGraduate students and undergraduates who are currently juniors or seniors planning on going into graduate school will get the most interest, but there will be opportunities for current sophomores and even freshmen as well. If you want start working on lining up a great summer internship, your first stop should be the Career Services Center .\nCSEE programs graduate 114 students in December\nposted Monday, December 26th, 2011\nWe congratulate the 114 students who graduated from our programs in December 2011. Three students received Ph.D. degrees in Computer Science, 58 received M.S. degrees in Computer Engineering, Computer Science, Electrical Engineering, Engineering Management and Systems Engineering, and 53 got B.S. degrees in Computer Engineering and Computer Science. We wish all of our new alumni happiness and success as they moved on to new challenges in 2012. Please stay in touch by keeping your contact information current on the UMBC Alumni Association site.\nACM Queue programming challenge\nposted Tuesday, December 20th, 2011\nIf you\u2019re at loose ends for the semester break and want to sharpen your programming slils, you might try competing in the ACM Queue Magazine online programming competition . You will program a player that will compete with others in the game of Coercion . The competition opens January 15 and closes at midnight GMT on February 12.\n\u201cThe game of Coercion takes place on a square field that is divided into regions, which vary by height and slope of the field. Each player controls three movable playing pieces called pushers, using them to push little doughnut-shaped markers around. Players use the markers to claim new territory on the playing field. The player with the most territory at the end of the match wins. The game rules will describe how to control your team, score points, and win. A double elimination tournament follows the coding phase, to determine the top four places.\u201d\nYou can create your entry in in C++, C#, Java, Python or JavaScript. Preliminary matches will take place during the one-month coding phase will that will let you know how well your player is doing. A final double-elimination competition among all the submitted players will decide whose player is best.\nQueue is the ACM\u2019s magazine for practicing software engineers. Written by engineers for engineers, it focuses on the technical problems and challenges that loom ahead, helping readers to sharpen their own thinking and pursue innovative solutions.\nCyber Challenge Hones Students\u2019 Cyber Skills\nposted Tuesday, December 20th, 2011\nTyler Campbell, Nick Ducq, Ryan King, Andrew Nguyen and Tim Spillman walked out of the Baltimore Convention Center elated. Their team, the Sherwood Cyber Warriors, had just won the high school division of the inaugural Maryland Cyber Challenge. Their success netted them each a $5,000 scholarship from the National Security Agency.\nThe entire experience was rewarding for both the students and their parents, says Steve Weiss, one of the team\u2019s advisers. \u201cWinning first place was the icing on the cake.\u201d\nIn a conference with over 800 attendees, the excitement over the cyber competition was palpable. With scoreboards changing in real time, onlookers crowded around to see who was in the lead.\nFollowing the competition, held October 21 and 22, eight teams from each division \u2014 professional, college and high school \u2014 walked away with scholarships and cash prizes. The scholarships for students, put up by the National Security Agency (NSA), totaled more than $84,000.\nMembers of first place high school and college teams took home $5,000 scholarships each. Members of second place high school and college teams took home $2,000 scholarships. Each member of the first place professional teams won $2,000 and each second place member won $1,000.\nFirst place winners in the college and high school categories were from, respectively, the University of Maryland, College Park and Sherwood High School. Second place winners were Towson University and Poolesville High School. In the professional category Team ICF came in first, with Team Pr3tty coming in second.\nThe Sherwood Cyber Warriors, four seniors and a junior, are mostly undecided in their future careers, although one does plan to work cybersecurity. Jim Kirk, the team\u2019s senior advisor, says that regardless of the their ultimate career choices, the students learned valuable skills from the competition \u2014 such as how to communicate effectively and work as a team.\nThe Cyber Warriors began practicing for the competition in May, often meeting twice a week. The team developed strategies to pick the low hanging fruit \u2014 what hackers go for first. That, says Kirk, includes developing strong passwords and removing unnecessary software from servers.\nThe challenge for the high school teams, says Rick Forno, Director of UMBC's Graduate Cybersecurity Program and an organizer of the Cyber Challenge, was purely defensive. \u201cThey were being attacked and their job was to keep services open.\u201d\nThe challenge was run using CyberNEXS, a software system developed by SAIC for cybersecurity training and exercises.The system is self-contained and runs both Windows and UNIX systems.\nBut, more than just the chance to compete, the event gave college and high school students a taste of what cybersecurity work is like. And that, involves more than technical skills say professionals in the field.\n\u201cThe cyber challenge is especially interesting to me, since all the students participating are passionate about cyber security and the teams will only excel if every member is doing their job,\u201d says Neil Furukawa, vice president of CyberPoint International. \u201cWe\u2019re looking for people who can lead, but who can also roll up their sleeves and get the work done.\u201d\nPhyllis Villani, Director of Talent acquisition at Northrop Grumman says that to get a job, \u201cnetworking is key.\u201d Besides honing \u201csoft skills\u201d like communication, Furukawa says, people should never stop their education because cybersecurity is a rapidly evolving field.\nFittingly, education is what the Maryland Cyber Challenge is all about.\nOriginally posted by Nicole Ruediger at November 18, 2011 1:02 PM\nMarie desJardins named ACM Distinguished Member\nposted Saturday, December 17th, 2011\nACM has recognized CSEE Professor Marie desJardins as a Distinguished Member for her contributions to the field of computing. ACM is the world's largest educational and scientific computing society. Each year it recognizes a handful of its members for significant advances in computing technology that have dramatically influenced progress on a range of human endeavors. This year, Dr. desJardins was one of just 54 computer scientists, educators, and engineers from leading academic and corporate institutions worldwide who were recognized.\nDr. desJardins is well known for her artificial intelligence research, which focuses on planning, learning, and multiagent systems. She leads the large and active MAPLE research group and also works on developing new techniques to improve computer science education.\nposted Thursday, December 8th, 2011\nUMBC CHMPR Colloquium\nOil Spills and Search and Rescue:\nKey Computational Challenges\nEnvironmental Research for Decision, Inc.\n1:00pm 16 December 2011, ITE 227 325b\nLeveraging the research community into societal issues can help save lives and reduce environmental impacts from both natural and anthropogenic disasters. For example, Search and Rescue, oil Spills, and marine debris drift are decision support areas commonly solved with Eulerian-Lagrangian models. These models typically use wind and current fields derived from external circulation models. These problems share many similarities:\nUse of a \u201cleeway\u201d or \u201cwindage\u201d to simulate drift on the water surface or atmospheric transport,\nIncreased leveraging of larger scale physical ocean and atmospheric circulation models, and\nPredicting geolocation information with sufficient accuracy for detection (e.g. finding the person) or response (booming off the beach),\nHowever, there are some distinct differences and each field has some case types with complexities that remain unanswered by the research community. This presentation will cover some key examples, such as:\nMystery spills (reverse drift) \u2013 Where did oil come from?\nSurface collection areas (sensitivity of drift to surface circulation convergence and divergences and shoreline contact);\nAccuracy required for locating a target \u2013 small islands may be missing in implementation of numerical model; and\nExtensive drift problems \u2013 an overdue vessel may have crossed the domains of several small and large-\u00ad\u2010scale models.\nThe 21st century vision of numerical modeling includes Lagrangian Coherent Structures (LCS, and application of chaos theory), Social Media (thanks to UMBC), further integration of numerical and geospatial data streams, and more real-\u00ad\u2010time information access through handheld computing.\nDr. C.J. Beegle-Krause is President of Environmental Research for Decision, Inc., a nonprofit dedicated to three primary missions: transitioning peer reviewed research into Decision Support applications; Education; and Data Rescue. As founder of the nonprofit, she has a strong vision of the Next Generation Trajectory. Her background is in physical oceanography, specializing in modeling chemical transport. She is one of the original developers of the NOAA Office of Response and Restoration (OR&R) GNOME trajectory model, and spent five years of her career at NOAA as one of the U.S. lead trajectory forecasters, on-call 24\u00d77 for events around the world. She was called back to NOAA OR&R for the Deepwater Horizon (MC252) oil spill and continues to work on aspects of that incident and future model development.\nUMBC team places second in the DARPA Shredder Challenge\nposted Saturday, December 3rd, 2011\nJust over a month ago, DARPA announced The Shredder Challenge competition to develop a system to solve puzzles by reassembling images of shredded documents with a $50,000 prize for the winning entry. Yesterday the prize was won by All Your Shreds Are Belong to U.S., a San Francisco-based team that was the first to correctly reconstructed each of the five challenge documents.\nUMBC Assistant VP\u00a0for\nResearch Don\u00a0Engel\nIt's unfortunate that there was no prize for second place, because that honor was won by Schroddon , a two-person effort including UMBC Assistant Vice President for Research Don Engel. While most of the top teams had a handful of software engineers and used commercial crowdsourcing services, Schroddon was a part-time effort by Dr. Engel and his wife, Dr. Marianne Engel.\nBoth Don and Marianne have Ph.D.s in Physics, but Don also has an undergraduate degree in Computer Science, did graduate work in computational linguistics, and develops software in his spare time for fun. Two of his active software development projects are ShowMe3D , an application for Mac and iOS that can be used to take and view 3D photos, and When2meet , a free web-based tool for finding the best time for a group to meet.\nThe Shredder Challenge was the latest competition run by DARPA as a low cost way to spur research on new problems. The press release describes it this way.\n\"The Shredder Challenge represents a preliminary investigation into the area of information security to identify and assess potential capabilities that could be used by war fighters operating in war zones to more quickly obtain valuable information from confiscated, shredded documents and gain a quantitative understanding of potential vulnerabilities inherent to the shredding of sensitive U.S. National security documents.\"\n\"Lots of experts were skeptical that a solution could be produced at all let alone within the short time frame,\u201d said Dan Kaufman, director, DARPA Information Innovation Office. \u201cThe most effective approaches were not purely computational or crowd-sourced, but used a combination blended with some clever detective work. We are impressed by the ingenuity this type of competition elicits.\"\nOver 9,000 teams registered for the Shredder Challenge and it is quite an achievement for the Engles to have placed second, especially against many much larger teams. If you are interested in seeing what the data is like, you can download it from the DARPA site.\nThese challenge competitions are becoming more common and are a great way for students to get involved in independent research and maybe win fame and fortune.\nRecent Posts\n"}, {"score": 1842.7604, "uuid": "38bec6c2-2d9c-5d45-9395-6ec3e6ebbe32", "index": "cw12", "trec_id": "clueweb12-0104wb-81-03002", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/fyi/", "page_rank": 1.2994859e-09, "spam_rank": 73, "title": "fyi | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "<em>computer</em> <em>science</em>.", "explanation": null, "document": "Build a better ant in the Google AI Challenge\nposted Thursday, October 20th, 2011\nGoogle is sponsoring another AI Challenge Competition run by an independent group of volunteers that grew out of the Computer Science Club of the University of Waterloo. The competition opens today and invites submissions of programs designed to control ants a simulated colony in competition with other colonies.\nAnts is a multi-player strategy game set on a plot of dirt with water for obstacles and food that randomly drops. Each player has one or more hills where ants will spawn. The objective is for players to seek and destroy the most enemy ant hills while defending their own hills. Players must also gather food to spawn more ants, however, if all of a player's hills are destroyed they can't spawn any more ants.\nThe objective is to create a computer program (a bot) that plays the game of Ants as intelligently as possible. It is recommended that you use one of the starter packages as a starting point. If you are looking to get up and running as quickly as possible, check out the Five Minute Quickstart Guide. For more details about Ants beyond this introductory document, see the Game Specification.\nThe site has documentation, a tutorial and starter packages for windows and Linux in a variety of programming languages. Each package contains a simple working entry to use as a starting point, tools that allow you to run your bot and watch it play graphically, sample opponents that you can test your bot against, and maps you can use for testing. Once you've developed your bot, you can enter it at the website and watch your ant colony fight for domination against colonies created by other people from around the world.\nThe behavior of ants is a classic example of how the local interactions among individuals in a collection can give rise to interesting emergent behavior . This concept is important in the study of complex systems and was the subject of a recent special topics course taught by Professor Marie desJardins, Computation, Complexity, and Emergence .\nDiCaprio to play Alan Turing in a new biopic \u2018The Imitation Game\u2019\nposted Friday, October 14th, 2011\nWarner Brothers is said to have purchased the rights to a script The Imitation Game by screenwriter Graham Moore about British mathematician Alan Turing who made many important contributions to computer science. Leonardo DiCaprio is supposedly interested in playing Turing and is \"chasing the project\" and Ron Howard is rumored to be interested in in directing. The script is based on the Andrew Hodges' 2000 biography Alan Turing: The Enigma .\nTuring is the famous English mathematician who made significant contributions to computer science in the 30s and 40s, including formalizations of computing and algorithms with the Turing machine and early work on Artificial Intelligence. During World War II he was was also a senior member of the British codebreaking and cryptanalysis group at Bletchley Park that broke the codes for the German Enigma machine.\nTuring was prosecuted by the British government in 1952 for being a homosexual which is thought to be the cause of his apparent suicide by cyanide poisoning in 1954. In 2009, British Prime Minister Gordon Brown apologized on behalf of the British government for the way in which Turing was treated after the war.\nGoogle introduces the Dart web programming language\nposted Monday, October 10th, 2011\nGoogle unveiled its new web programming language Dart today. It's described as a \"class-based optionally typed programming language for building web applications\". Dart has a native virtual machine and can also be compiled into JavaScript, allowing it to run on current browser. Google says it it exploring adding the Dart virtual machine to the Chrome Browser.\nDart's syntax is familiar, if boring, making it easy for current programmers to adapt.\nmain() {\n  var name = 'World';\n  print('Hello, $name!');\n}\nThe source code for the Dart to javascript compiler as well as examples and tools is available online in the Dart Google Code Site .\nGoogle hopes that Dart will replace JavaScript as the main built-in scripting language in web browsers. The design goals for the new language are said to include fixing many of Javascript's flaws, better performance, better support for large-scale projects\" and improved security features.\nWIle Dart doesn't push the programming language envelope, it looks like a welcome improvement over Javascript.\nposted Sunday, October 9th, 2011\nRuling limits use of statistical reasoning in legal arguments\nA UK judge in murder trial ruled that Bayes' Theorem and similar statistical analyses can no longer be used to argue for the soundness of evidence in such trials. The Guardian has the story, A formula for justice .\n\"It's not often that the quiet world of mathematics is rocked by a murder case. But last summer saw a trial that sent academics into a tailspin, and has since swollen into a fevered clash between science and the law.\nAt its heart, this is a story about chance. And it begins with a convicted killer, \"T\", who took his case to the court of appeal in 2010. Among the evidence against him was a shoeprint from a pair of Nike trainers, which seemed to match a pair found at his home. While appeals often unmask shaky evidence, this was different. This time, a mathematical formula was thrown out of court. The footwear expert made what the judge believed were poor calculations about the likelihood of the match, compounded by a bad explanation of how he reached his opinion. The conviction was quashed.\nBut more importantly, as far as mathematicians are concerned, the judge also ruled against using similar statistical analysis in the courts in future. It's not the first time that judges have shown hostility to using formulae. But the real worry, say forensic experts, is that the ruling could lead to miscarriages of justice.\"\nA group of UK academics, statisticians, forensic scientists and lawyers have been formed to try to address the problem bad statistical arguments in the courts. \"We want to do what people failed to do in the past, which is really get the legal profession and statisticians and probability guys understanding each other's language.\"\nBayesian networks have become widely used in computing and information systems to model and reason about uncertainty and as prt of the foundation for artificial intelligence, machine learning and data mining.\nDo you know the right programming languages?\nposted Thursday, October 6th, 2011\nDo you know the right programming languages? Depending on your objective, the most important one to know might be Java, Python, PhP, C, or even Haskell.\nIEEE Spectrum has a short article on The Top 10 Programming Languages that is based on data from David Welton's Programming Languages Popularity site which \"attempts to collect a variety of data about the relative popularity of programming languages\"\nAngry birds are attacking the US economy\nposted Wednesday, September 14th, 2011\nThe Atlantic has a short article on estimating the cost to the US economy of the popular angry birds game available on most smartphones. \u00a0Their estimate? \u00a0$1.5 billion dollars a year.\n\"Every March, it is a requirement that every newspaper and website in every town in the United States run a story about how much money American companies lose because people watch the NCAA basketball tournament instead of working. Challenger, Gray, and Christmas, the consulting firm that makes such estimates, has tried their hand at other games recently, too. A couple years ago, they gave a number for fantasy football, saying the hobby costs companies $10.5 billion in lost wages. So, when I heard today that people play 200 million minutes of Angry Birds a day, I wanted to know if the company had ever looked into lost productivity resulting from those dastardly pigs and their winged assassins. Sadly and inexplicably, they haven't. So, after looking at their methodology, I came up with my own estimate. Here it is.\"\nYou can read the full article here.\nGoogle describes challenges in detecting Web-based malware\nposted Friday, August 26th, 2011\nA new Google technical report, Trends in Circumventing Web-Malware Detection documents that it has become difficult to identify malicious Web sites as antivirus software is becoming less effective against them. The researchers analyzed four years' worth of data from 160 million Web pages using its Safe Browsing service, which warns users when they attempt to visit a site thought to have malware. Attackers have developed evasion techniques to avoid having their sites flagged as malicious. ACM TechNews notes that\n\"One of the ways hackers get around virtual machine-based detection is to require the victim to perform a mouse click, which triggers the site to automatically execute an attack. Browser emulators can malfunction when the malicious code is scrambled. A new, more complex JavaScript code is designed to stop emulated browsers and make manual analysis of the code more difficult, according to the Google engineers. Google also has come across IP cloaking, where a malicious Web site will refuse to serve harmful content to specific IP ranges, especially those used by security researchers. In August 2009, Google found that about 200,000 sites were using IP cloaking.\"\nSee also an article on NetworkWorld.\nGeorge Dyson on the birth of the computer\nposted Sunday, August 21st, 2011\nIn his 2003 TED talk, George Dyson tells stories from the birth of the modern computer \u2014 from its 17th-century origins to the hilarious notebooks of some early computer engineers.\nUIST Student Innovation Contest\nposted Monday, August 15th, 2011\nThe ACM Symposium on User Interface Software and Technology sponsors a Student Innovation Contest (SIC) with the goal of innovating new interactions on state-of-the-art hardware. They give you the latter, and you show them what you can do.\nThis year they will be working with the new Microsoft TouchMouse. In addition to supplying you the hardware for free, Microsoft is providing exclusive access to a pre-release of the TouchMouse API. This lets you get at the underlying 2D capacitive image captured the mouse\u2019s sensor matrix. You will get a chance to hack together some cool demos before the everyone else gets their hands on the API. Contestants will demo their creations at the October 17th demo reception. The winner will be announced the following day.\nTeams must register by August 17th and will receive hardware in September. See the UIST SIC site for more information.\nHappy wi-fi day\nposted Tuesday, August 2nd, 2011\nToday is traditional day we celebrate and honor wi-fi in the US: 8.02.11 . In other parts of the world it is celebrated on February eighth.\n"}, {"score": 1827.7778, "uuid": "fbfe4f33-4971-547b-aa7c-0b56555bbb80", "index": "cw12", "trec_id": "clueweb12-1102wb-42-10134", "target_hostname": "www.exit109.com", "target_uri": "http://www.exit109.com/~ghealton/.computer_sci.html", "page_rank": 1.2754076e-09, "spam_rank": 72, "title": "<em>Computer</em> <em>Science</em>", "snippet": "Are you thinking about this major issue by rows <em>or</em> columns? <em>What</em> <em>is</em> right for you?", "explanation": null, "document": "Scrum In Five Minutes [2008-06]\n5.2 CMM: Capability Maturity Model\nThe Capability Maturity Model for Software (CMM or SW-CMM) is a model for judging the maturity of the software processes of an organization and for identifying the key practices that are required to increase the maturity of these processes.\n"}, {"score": 1826.9003, "uuid": "991c598f-2b17-5141-a011-517f1dc78742", "index": "cw12", "trec_id": "clueweb12-0713wb-98-06763", "target_hostname": "tech.slashdot.org", "target_uri": "http://tech.slashdot.org/story/09/06/06/0210229", "page_rank": 1.1826118e-09, "spam_rank": 81, "title": "How Software <em>Engineering</em> Differs From <em>Computer</em> <em>Science</em> - Slashdot", "snippet": "Nothing magically grants you &quot;the ability to design large <em>or</em> complex software systems&quot;, no matter <em>what</em> degree <em>or</em> title you have. All this discussion about <em>Computer</em> <em>Science</em> vs. Software <em>Engineering</em> vs. Programming <em>is</em> really about ego and will not lead to any improvement in any discipline.", "explanation": null, "document": "on Saturday June 06 2009, @01:05AM\nfrom the read-comprehend-debug dept.\ncconnell sends in a piece he wrote for Dr. Dobb's which \"argues that software development will never be a fully formal, rigorous discipline , and the reason is that software engineering involves humans as central to the process.\" Quoting: \"Software maintainability, for example, is the ability of people to understand, find, and repair defects in a software system. The maintainability of software may be influenced by some formal notions of computer science \u2014 perhaps the cyclomatic complexity of the software's control graph. But maintainability crucially involves humans, and their ability to grasp the meaning and intention of source code. The question of whether a particular software system is highly maintainable cannot be answered just by mechanically examining the software. The same is true for safety. Researchers have used some formal methods to learn about a software system's impact on people's health and property. But no discussion of software safety is complete without appeal to the human component of the system under examination.\"\n"}, {"score": 1819.2805, "uuid": "fe0c587b-04dc-5d1b-8765-0593e3fcdad3", "index": "cw12", "trec_id": "clueweb12-0001wb-56-07110", "target_hostname": "cabrillo.edu", "target_uri": "http://cabrillo.edu/academics/computerscience/", "page_rank": 1.1884632e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em> - Cabrillo College", "snippet": "Programming <em>is</em> merely the process of translating the procedures we want a <em>computer</em> to execute into instructions it can follow. The <em>more</em> crucial aspect of <em>computer</em> <em>science</em> <em>is</em> determining <em>what</em> we want the <em>computer</em> to do in the first place.", "explanation": null, "document": "top\nComputer Science Career Opportunities\nComputer scientists and engineers continue to be in great demand. As businesses everywhere use increasingly sophisticated and complex computer technology in their daily operations, there is a greater need for the expertise of highly-skilled professionals. As a result, there are more jobs created in the U.S. than are transferred offshore.\nIn fact, good jobs -- offering a high salary, interesting work and benefits -- are plentiful in the computer science field. However, to obtain one, you will need to complete a minimum of a Bachelor's degree in the subject area. Most colleges and universities offer degrees in computer science and computer engineering, and Cabrillo College courses transfer to the majority of them.\nOnce you have completed your degree in computer science, a typical career path is software engineering. The U.S. Department of Labor lists computer software engineering, both application and systems software, among the fastest growing occupations in the US (1). The most recent study projects that job growth in computer software engineers (applications) will grow by 34.0% for in the ten-year period ending in 2018. In comparison, the average job growth rate for all occupations is 10.1% for the same period. Similarly, according to the California Employment Department job growth in the software engineering field in the 2008 to 2018 ten-year period (latest available) is estimated to increase by 25.8%, far exceeding the average rate for all occupations of 9.7% (2).\nBecause of the high demand for job candidates with a computer science background, careers in computer science related fields are well-remunerated. The average starting salary for a new computer science graduate is over $61,000 per year , while the average salary for all computer software engineers is over $87,000 annually (3). In comparison, the average salary for all occupations is $42,270 per year. Thus, as a computer science graduate, you can expect to make more than twice the salary of most occupations.\n(1) Fastest growing occupations, 2008-18 (latest available), http://www.bls.gov/emp/emptab21.htm . Used in the November 2009 Monthly Labor Review .\n(2) Projections of Employment by Industry and Occupation, http://www.labormarketinfo.edd.ca.gov/?PAGEID=145\n(3) May 2008 National Occupational Employment and Wage Estimates (latest available), http://www.bls.gov/oes/current/oes_nat.htm\ntop\nComputer Science Degrees and Certificates\nComputer science is much more than programming. Programming is merely the process of translating the procedures we want a computer to execute into instructions it can follow. The more crucial aspect of computer science is determining what we want the computer to do in the first place. Thus, while the knowledge of a language like C++ or Java is important, programming is only one of the tools that allow you to achieve great things with computers.\nComputer science has many sub-fields including: algorithms and data structures, computer graphics, programming language theory, software engineering, computer architecture, databases, artificial intelligence and human-computer interaction. At Cabrillo, you can get the foundation you need to excel in these areas when you transfer to a four-year college or university. Or if you are more interested in a two-year degree or certificate, we offer those as well. Some of the fields you can explore with us are described below.\n"}, {"score": 1818.8066, "uuid": "f1f94ca8-7b60-5c47-a734-4a9383ace462", "index": "cw12", "trec_id": "clueweb12-0002wb-54-26011", "target_hostname": "cabrillo.edu", "target_uri": "http://cabrillo.edu/academics/computerscience/index.html", "page_rank": 1.1922856e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em> - Cabrillo College", "snippet": "Programming <em>is</em> merely the process of translating the procedures we want a <em>computer</em> to execute into instructions it can follow. The <em>more</em> crucial aspect of <em>computer</em> <em>science</em> <em>is</em> determining <em>what</em> we want the <em>computer</em> to do in the first place.", "explanation": null, "document": "top\nComputer Science Career Opportunities\nComputer scientists and engineers continue to be in great demand. As businesses everywhere use increasingly sophisticated and complex computer technology in their daily operations, there is a greater need for the expertise of highly-skilled professionals. As a result, there are more jobs created in the U.S. than are transferred offshore.\nIn fact, good jobs -- offering a high salary, interesting work and benefits -- are plentiful in the computer science field. However, to obtain one, you will need to complete a minimum of a Bachelor's degree in the subject area. Most colleges and universities offer degrees in computer science and computer engineering, and Cabrillo College courses transfer to the majority of them.\nOnce you have completed your degree in computer science, a typical career path is software engineering. The U.S. Department of Labor lists computer software engineering, both application and systems software, among the fastest growing occupations in the US (1). The most recent study projects that job growth in computer software engineers (applications) will grow by 34.0% for in the ten-year period ending in 2018. In comparison, the average job growth rate for all occupations is 10.1% for the same period. Similarly, according to the California Employment Department job growth in the software engineering field in the 2008 to 2018 ten-year period (latest available) is estimated to increase by 25.8%, far exceeding the average rate for all occupations of 9.7% (2).\nBecause of the high demand for job candidates with a computer science background, careers in computer science related fields are well-remunerated. The average starting salary for a new computer science graduate is over $61,000 per year , while the average salary for all computer software engineers is over $87,000 annually (3). In comparison, the average salary for all occupations is $42,270 per year. Thus, as a computer science graduate, you can expect to make more than twice the salary of most occupations.\n(1) Fastest growing occupations, 2008-18 (latest available), http://www.bls.gov/emp/emptab21.htm . Used in the November 2009 Monthly Labor Review .\n(2) Projections of Employment by Industry and Occupation, http://www.labormarketinfo.edd.ca.gov/?PAGEID=145\n(3) May 2008 National Occupational Employment and Wage Estimates (latest available), http://www.bls.gov/oes/current/oes_nat.htm\ntop\nComputer Science Degrees and Certificates\nComputer science is much more than programming. Programming is merely the process of translating the procedures we want a computer to execute into instructions it can follow. The more crucial aspect of computer science is determining what we want the computer to do in the first place. Thus, while the knowledge of a language like C++ or Java is important, programming is only one of the tools that allow you to achieve great things with computers.\nComputer science has many sub-fields including: algorithms and data structures, computer graphics, programming language theory, software engineering, computer architecture, databases, artificial intelligence and human-computer interaction. At Cabrillo, you can get the foundation you need to excel in these areas when you transfer to a four-year college or university. Or if you are more interested in a two-year degree or certificate, we offer those as well. Some of the fields you can explore with us are described below.\n"}], [{"score": 1817.8582, "uuid": "ebd33f9f-e3d8-53d8-8407-758b196308ba", "index": "cw12", "trec_id": "clueweb12-0714wb-59-25746", "target_hostname": "online.cabrillo.edu", "target_uri": "https://online.cabrillo.edu/academics/computerscience/", "page_rank": 1.180188e-09, "spam_rank": 99, "title": "<em>Computer</em> <em>Science</em> - Cabrillo College", "snippet": "Programming <em>is</em> merely the process of translating the procedures we want a <em>computer</em> to execute into instructions it can follow. The <em>more</em> crucial aspect of <em>computer</em> <em>science</em> <em>is</em> determining <em>what</em> we want the <em>computer</em> to do in the first place.", "explanation": null, "document": "top\nComputer Science Career Opportunities\nComputer scientists and engineers continue to be in great demand. As businesses everywhere use increasingly sophisticated and complex computer technology in their daily operations, there is a greater need for the expertise of highly-skilled professionals. As a result, there are more jobs created in the U.S. than are transferred offshore.\nIn fact, good jobs -- offering a high salary, interesting work and benefits -- are plentiful in the computer science field. However, to obtain one, you will need to complete a minimum of a Bachelor's degree in the subject area. Most colleges and universities offer degrees in computer science and computer engineering, and Cabrillo College courses transfer to the majority of them.\nOnce you have completed your degree in computer science, a typical career path is software engineering. The U.S. Department of Labor lists computer software engineering, both application and systems software, among the fastest growing occupations in the US (1). The most recent study projects that job growth in computer software engineers (applications) will grow by 34.0% for in the ten-year period ending in 2018. In comparison, the average job growth rate for all occupations is 10.1% for the same period. Similarly, according to the California Employment Department job growth in the software engineering field in the 2008 to 2018 ten-year period (latest available) is estimated to increase by 25.8%, far exceeding the average rate for all occupations of 9.7% (2).\nBecause of the high demand for job candidates with a computer science background, careers in computer science related fields are well-remunerated. The average starting salary for a new computer science graduate is over $61,000 per year , while the average salary for all computer software engineers is over $87,000 annually (3). In comparison, the average salary for all occupations is $42,270 per year. Thus, as a computer science graduate, you can expect to make more than twice the salary of most occupations.\n(1) Fastest growing occupations, 2008-18 (latest available), http://www.bls.gov/emp/emptab21.htm . Used in the November 2009 Monthly Labor Review .\n(2) Projections of Employment by Industry and Occupation, http://www.labormarketinfo.edd.ca.gov/?PAGEID=145\n(3) May 2008 National Occupational Employment and Wage Estimates (latest available), http://www.bls.gov/oes/current/oes_nat.htm\ntop\nComputer Science Degrees and Certificates\nComputer science is much more than programming. Programming is merely the process of translating the procedures we want a computer to execute into instructions it can follow. The more crucial aspect of computer science is determining what we want the computer to do in the first place. Thus, while the knowledge of a language like C++ or Java is important, programming is only one of the tools that allow you to achieve great things with computers.\nComputer science has many sub-fields including: algorithms and data structures, computer graphics, programming language theory, software engineering, computer architecture, databases, artificial intelligence and human-computer interaction. At Cabrillo, you can get the foundation you need to excel in these areas when you transfer to a four-year college or university. Or if you are more interested in a two-year degree or certificate, we offer those as well. Some of the fields you can explore with us are described below.\n"}, {"score": 1816.6351, "uuid": "f93c13b1-ed25-515b-bb51-365b15e7ee2f", "index": "cw12", "trec_id": "clueweb12-1006wb-01-02578", "target_hostname": "compsci.ca", "target_uri": "http://compsci.ca/blog/online-introduction-to-computer-science-from-stanford-engineering-for-free/", "page_rank": 1.2179299e-09, "spam_rank": 96, "title": "Online introduction to <em>Computer</em> <em>Science</em> from Stanford <em>Engineering</em>", "snippet": "What\u2019s awesome <em>is</em> that the sequence starts out with the very basics. The very basics of <em>Computer</em> <em>Science</em>. If one has zero experience, but <em>is</em> interested in <em>Computer</em> <em>Science</em>, this <em>is</em> it.", "explanation": null, "document": "By Tony \u22c5 September 19, 2008 \u22c5 Post a comment\nLecture photo found on Stanford's SEE website\nStandford University is joining the likes of MIT and UC Berkeley, by making some of their courses available (for free!) online (in MIT\u2019s case, that would be all of their courses).\nThis fall, SEE launches its programming by offering one of Stanford\u2019s most popular engineering sequences: the three-course Introduction to Computer Science taken by the majority of Stanford undergraduates, and seven more advanced courses in artificial intelligence and electrical engineering.\nWhat\u2019s awesome is that the sequence starts out with the very basics. The very basics of Computer Science. If one has zero experience, but is interested in Computer Science , this is it. It\u2019s best put in words of the (actually interesting) professor, teaching the first course of the sequence:\nSo if you\u2019re worried about how much previous experience you\u2019ve had or your friend who, like, worked their way through high school by programming for Google or whatever, don\u2019t worry about it because all you need to know in here is basically either how to turn a computer on or to recognize a computer that\u2019s on if you were to walk up to it and it were already to be on, all right?\nThough what\u2019s even better is that this introduction sequence goes from zero to implementing-a-miniature-webserver (in Python) in just three courses. Recursion, algorithmic analysis, data abstraction, data structures, concurrent programming, memory management\u2026. Using 8 different programming languages (in various capacities) \u2014 C, Objective C, C++, C#, Java, LISP, Python, Scheme.\nIf anyone is in high school with a canceled Computer Science program (and unfortunately there are plenty of such), Stanford\u2019s series of videos will bring one up to speed of the world-class first year University level Computer Science. Having briefly looked over the videos, the professors seemed interesting enough to make those lectures of value even to those who are familiar with the material, but perhaps are interested in refreshing the core basics of their knowledge.\nIt\u2019s all available from Stanford Engineering Everywhere , in a variety of formats: YouTube, iTunes, Torrents, and text transcripts.\nflag / UBC, Canada by Ces't June\nBut where is Canada, when it comes to leading the academic education of Computer Science, in an accessible manner? U Waterloo, U of Toronto, UBC \u2014 I\u2019m looking at you guys!\nWhat I\u2019d like to see, is to have some Canadian Universities, that are at least perceived to be the leaders in technological fields, to open up some of their academic material. Lead by example. There\u2019s every reason to \u2014 many students look up to those institutions, but not everybody can get in, for a variety of reasons. Current students benefit from the extra availability of the material. Perspective students (if the business of education needs financial convincing) get to preview the top-quality education that they are being promised. It\u2019s simply good for the community.\nThough for now, I hope for more online material to come out of Stanford U.\nRead more\n"}, {"score": 1814.9287, "uuid": "33572e80-3656-5a61-88b4-66af3c908d16", "index": "cw12", "trec_id": "clueweb12-1506wb-23-15468", "target_hostname": "blogs.oc.edu", "target_uri": "http://blogs.oc.edu/ece", "page_rank": 1.2086679e-09, "spam_rank": 85, "title": "Electrical and <em>Computer</em> <em>Engineering</em>", "snippet": "When the weaker grades result they decide they don\u2019t want to do \u201cthis\u201d (<em>engineering</em>) any <em>more</em> and change majors. Discovery that they really don\u2019t like the kind of work engineers do. There <em>is</em> another group that finds out they\u2019d rather do pure math, <em>or</em> <em>computer</em> <em>science</em>, <em>or</em> marketing.", "explanation": null, "document": "Why stay in engineering?\nIf, as has been widely written and I\u2019ve told many incoming engineers, engineering is a difficult study with more homework than the average major, what kinds of counterweights could be provided to encourage students to hang in there?\nSeveral years ago Dr. Bigelow and myself discussed the (probably oversimplified idea) that there are probably a group of students in every class that will survive no matter what they encounter. They\u2019re extremely gifted, or they are really dedicated and will work an extra 10 hour if that\u2019s what it takes.\u00a0 These students will make it through an engineering degree program almost no matter what.\u00a0 Conversely there are probably some students who struggle with the material, they don\u2019t find it interesting or it\u2019s very difficult to acquire the knowledge at the pace delivered in a typical calculus based physics class or electrical circuits class.\u00a0 These students probably will change majors within the first year and whether it\u2019s due to discovering engineering isn\u2019t their \u201ccup of tea\u201d or poor study habits leading to bad grades, they probably won\u2019t stay in engineering and that might be the best choice for them.\nBut what about those students in the middle? Why do they change majors? What causes them to decide not to stay in engineering?\nAs we thought more about these students we began to think about what we\u2019d seen and ask what could we do to address it in the freshmen year?\u00a0 While this isn\u2019t a complete listing of all of our secrets, here are a few of the things we noted and some things we tried to do to counter it.\nFirst we noted that often times the tone from the faculty of engineering programs is \u201cThis is tough, and only the tough will survive.\u00a0 Good luck and we\u2019ll see you if and when you\u2019re successful with your math and science classes.\u201d\u00a0 We wondered what would happen if the tone sounded more like this, \u201cThis is tough, and you\u2019re going to have to work hard to succeed\u2014but you can do it and we\u2019re going to help you develop the skills and habits it will take!\u00a0 So keep working, don\u2019t give up, and remember\u2014we believe you can make it!\u201d\nIf that message is going to have an impact then it would have to be sincere and it would have to be delivered and reinforced both in words and action.\u00a0 Fortunately both Dr. Bigelow and I co-teach the first two classes engineers take during their freshmen year.\u00a0 We realized we could begin trying to communicate that during that year, and if we were watching carefully for students beginning to struggle, we\u2019d be able to try to encourage them, challenge them, and coach them to develop the habits, maturity and skills they needed to make it through the system.\nWe believe this was an important first step towards changing the retention in our program, but it\u2019s not the only one\u2026 On Friday I\u2019ll share another important thing we have done and at some point in the next few days (after we check the data) I\u2019ll show you a graph of retention for our program that is in contrast to the \u201cnorm\u2026\u201d\nStay tuned\u2026 It\u2019s some interesting stuff\u2026\n"}, {"score": 1814.0269, "uuid": "a7e8c187-0f68-5698-925d-0c9ae21c9f4d", "index": "cw12", "trec_id": "clueweb12-0110wb-67-02337", "target_hostname": "www.dcs.qmul.ac.uk", "target_uri": "http://www.dcs.qmul.ac.uk/undergraduate/why/compsci.php", "page_rank": 1.3453851e-09, "spam_rank": 96, "title": "Why <em>Computer</em> <em>Science</em>?", "snippet": "a good show to watch <em>or</em> to recognise <em>what</em> villains are up to on a surveillance video, just to mention a few.", "explanation": null, "document": "cs4fn website\nWhy Computer Science?\nComputer science is everywhere: the Internet, special effects films, music, mobile phones, PDAs, cars, trains, planes, games, in fact, most of our everyday activities depend on computer science.\nComputer science isn't just about computers; it brings together subjects like sociology, psychology and philosophy, as well as linguistics, logic and mathematics.\nComputers are changing our world and there are exciting careers out there for the next generation of computer scientists. We can help you be one of them.\nThe future of computing is limitless and because we teach you the basics as well as the most up to date technology, you will be 'future proofed'; as the technology changes you will have the skills to keep up. This important aspect is also recognised by industry, as voiced by EA Games:\nVocational training for Video Game Programmers?\nNo thanks!\nSome institutions are offering complete undergraduate degrees in video game programming. These degrees, for the most part, are vocational in nature: their stated purpose is to prepare students for the current industry requirements. Core computer science courses are often replaced with technology-specific courses. This vocational approach does not prepare students to grow with an industry that changes its base technology and its practices every 5-6 years.\nJohn W. Buchanan\nEA Games\nIt takes all sorts of ideas to make the computer science world.\nFor example, computer science uses sociology and psychology to make new technology easy to use, and more psychology to trick your ears with MP3 , it uses maths and logic to work out the best way to build safe computer software, or probability theory for intelligent systems for digital TV sets that recommend a good show to watch or to recognise what villains are up to on a surveillance video, just to mention a few. It's fascinating and fun, and can lead to a rewarding, endlessly interesting career.\nDone ICT, Done computing?\nNo, not at all. Think of ICT like being able to drive a car: lots of people can drive and it is very useful. However, computer science teaches you how to tune the engine, fix the car when it breaks, customise it and build new and better cars.\nThe course prepares students for employment by teaching the latest and sought-after skills.\nAli, BSc Computer Science\nComputer science - it's a boys thing?\nAbsolutely not. There are loads successful women in Computer Science; in fact the first ever computer programmer, Ada Lovelace, was a woman. We also had the first women professor of Computer Science in the University of London, and a large number of our students are female.\nWill I enjoy computer science?\nYES - if you:\nlike making things that actually do something\nare good at lateral-thinking - the sort of person who comes up with new ways of doing things\nlike problem solving\nare creative and like solving puzzles\nlike thinking about the future and want to discover, say, the next iPod\u2122\nhave a broad outlook on the world.\nPage updated May 21, 2008. by Webmaster . \u00a9 Queen Mary, University of London 2008\nSchool of Electronic Ebgineering and Computer Science, Queen Mary, University of London, London E1 4NS\n"}, {"score": 1806.8059, "uuid": "277609d3-a4c1-5753-be75-c4a9961a10b1", "index": "cw12", "trec_id": "clueweb12-0010wb-39-17410", "target_hostname": "wolframscience.typepad.com", "target_uri": "http://wolframscience.typepad.com/wolfram_science/computer_science/", "page_rank": 2.1752797e-09, "spam_rank": 92, "title": "Wolfram <em>Science</em>: <em>Computer</em> <em>Science</em>", "snippet": "The agent would head off in a direction <em>more</em> <em>or</em> less toward the target, but frequently get stuck in &quot;orbits&quot; once it had passed it on one side.", "explanation": null, "document": "Alastair Hewitt: An Alternative Approach to Anticipative Reinforcement Learning\nThis was another decision-based talk using NKS, and I found this one just as interesting as the last. Hewitt studied a relatively simple but fascinating model of decision making based on choices between binary states with memory about which decisions led to which states. He had a very large number of of quantities he was using to describing the the behavior of the system, including predicatbility, desirability, and entropy.\nThe elementary system was a 2D CA with 2 choices, (turn left and no action), and 1 indicator with two states (right direction and wrong direction.) The agent must learn what to do when feedback indicates it is headed in the wrong direction based on past behavior, but with no indication of what moving toward the direction would be. Hewitt presented some state transition diagrams where the agent would determine the correct direction very quickly, but he quickly threw a wrench in the works by giving himself the ability to change the target point in real time.\nHe showed an interactive graphic of the agent seeking its target. The agent would head off in a direction more or less toward the target, but frequently get stuck in \"orbits\" once it had passed it on one side. I found it very amusing that the agent would get stuck in these orbits for some number of cycles and then finally get \"frustrated\" when it received enough negative feedback for each of its actions, and strike off in a random direction which would usually cause it to hit the target a few steps later.\nThen he showed multiple agents where some of the agents were other agents targets. Their behaviors were reminiscent of bees milling around a hive, or as one of the audience members eloquently phrased it, \"dating.\"\nHewitt ended with some graphics of distributions of various features of the agents' behavior.\n"}, {"score": 1806.6755, "uuid": "25c9d581-a6dd-54e6-8243-da1eeb4e01a9", "index": "cw12", "trec_id": "clueweb12-1515wb-77-34338", "target_hostname": "www.ashland.edu", "target_uri": "http://www.ashland.edu/students/programs/computer-science", "page_rank": 1.2067575e-09, "spam_rank": 95, "title": "<em>Computer</em> <em>Science</em> | Ashland University", "snippet": "Learn <em>more</em> about career paths for graduates with a degree in <em>computer</em> <em>science</em>!", "explanation": null, "document": "Computer Science\nLearn to solve the complex computational challenges of our time.\nOur exceptionally strong curriculum will prepare you well for the many options available to those who enter this exciting field. According to the Bureau of Labor Statistics, job prospects have been extremely strong for several years and are expected to experience 37 percent growth through 2016.\nWhen you major in Computer Science at Ashland University, you take advantage of our exceptionally strong programming curriculum that prepares you well for the many options available to those who enter this exciting field. You\u2019ll get to know your professors well and benefit from lots of coaching and assistance. That\u2019s something that simply is not possible in other, larger universities. This means that when you graduate you have a better grounding in the skills you need to succeed in this opportunity-laden career field or in graduate studies.\nWhat You\u2019ll Love About the Computer Science Program:\nClasses are capped at 24 students to allow you to receive lots of personal attention from your professors as well as many opportunities to participate in classroom activities.\nAshland gives every student access to a state-of-the-art computer in the classroom. Outside of the classroom, the department maintains its own computer lab that is available to computer science and mathematics students.\nComputers run a variety of operating systems including Linux, Solaris, MacOS and Windows so you learn to work across many platforms.\nComputers are equipped with scientific typesetting software, software development tools, compilers, word processors, spreadsheet programs, database programs, web design and programming tools, audio and video editing software, multimedia software, computer algebra systems, statistical and geometric software and other applications to enhance your learning experience.\nYour classes are always taught by professors and never by graduate students or teaching assistants.\nFor your senior capstone experience, a local company will give you a real-life Computer Science problem and you will design software to solve it. This demonstrates your skills and gives you confidence to meet future challenges in the workplace.\nYou will have the opportunity to participate in national and international programming competitions that are both fun and build your skills.\nReach Your Career Goals\nAs a graduate of the Computer Science program, you will be well prepared for graduate school or to pursue any of these career options:\nComputer programmer\n"}, {"score": 1806.4894, "uuid": "b3ed914d-3843-5695-a6e8-c815f10f2de0", "index": "cw12", "trec_id": "clueweb12-0806wb-45-17007", "target_hostname": "www.ugrad.cs.jhu.edu", "target_uri": "http://www.ugrad.cs.jhu.edu/~cs461/", "page_rank": 1.2641751e-09, "spam_rank": 99, "title": "<em>Computer</em> Vision - JHU <em>Computer</em> <em>Science</em>", "snippet": "PLEASE NOW USE THE NEW WIKI AT href=http:&#x2F;&#x2F;cirl.lcsr.jhu.edu&#x2F;Vision_Syllabus and <em>Computer</em> Vision <em>is</em> the study of inferring properties of the world based on one <em>or</em> <em>more</em> digital images. This course <em>is</em> intended for first year graduate students and advanced undergraduates.", "explanation": null, "document": "Some of the matlab diaries are concatenated to the previous week's diary\nFAQ\nWhat do TV, FP, SS mean when mentioned in the reading schedule?\nTV - Trucco and Verri, FP - Forsythe and Ponce (weblink), SS - Stockman and Shapiro (weblink)\nWhat is a png and how do I save one from a matlab figure window?\nA PNG is a Portable Network Graphics file. It has been developed, by and large, to replace the GIF format because of legal issues. However, while the GIF stores its data in an 8-bit lookup table, a PNG has the ability to maintain full color information. To save one in a matlab window, click the Export option in the File menu. Then choose Portable Network Graphics Format. Yes, it's that easy!\nHow do I scan in the NT Lab?\nIt is rather simple. First, load up Photoshop. Then ready the scanner: turn on the power, and place your paper inside. Select --> File --> Import --> Twain Acquire. If a dialog box appears indicating that no scanner can be found, and you have checked that the scannar power is on, then you must (1) leave the scanner power on, and (2) reboot the machine. When the machine reboots, launch Photoshop again, and select Twain Acquire. Now, the scanner will be there. Simply scan in the necessary region of your written work from the previewed image; you need not set any parameters, as the scanner is somewhat old and doesn't seem to let you indicate that it will be black and white, etc. Once the image has been scanner, BE SURE TO RESIZE it, down from its 8000x8000 resolution to something a little more usable, like 800x600, etc. Save it as a jpg and package it in with your homework, indicating, in the ASCII text file, what it is meant to accompany.\nDo NOT forget to power off the scanner, but leave the computer on.\n"}, {"score": 1806.2449, "uuid": "5981816c-6768-595a-b379-4390f5686071", "index": "cw12", "trec_id": "clueweb12-0806wb-69-22596", "target_hostname": "www.ugrad.cs.jhu.edu", "target_uri": "http://www.ugrad.cs.jhu.edu/~cs461/index.html", "page_rank": 1.1889938e-09, "spam_rank": 99, "title": "<em>Computer</em> Vision - JHU <em>Computer</em> <em>Science</em>", "snippet": "PLEASE NOW USE THE NEW WIKI AT href=http:&#x2F;&#x2F;cirl.lcsr.jhu.edu&#x2F;Vision_Syllabus and <em>Computer</em> Vision <em>is</em> the study of inferring properties of the world based on one <em>or</em> <em>more</em> digital images. This course <em>is</em> intended for first year graduate students and advanced undergraduates.", "explanation": null, "document": "Some of the matlab diaries are concatenated to the previous week's diary\nFAQ\nWhat do TV, FP, SS mean when mentioned in the reading schedule?\nTV - Trucco and Verri, FP - Forsythe and Ponce (weblink), SS - Stockman and Shapiro (weblink)\nWhat is a png and how do I save one from a matlab figure window?\nA PNG is a Portable Network Graphics file. It has been developed, by and large, to replace the GIF format because of legal issues. However, while the GIF stores its data in an 8-bit lookup table, a PNG has the ability to maintain full color information. To save one in a matlab window, click the Export option in the File menu. Then choose Portable Network Graphics Format. Yes, it's that easy!\nHow do I scan in the NT Lab?\nIt is rather simple. First, load up Photoshop. Then ready the scanner: turn on the power, and place your paper inside. Select --> File --> Import --> Twain Acquire. If a dialog box appears indicating that no scanner can be found, and you have checked that the scannar power is on, then you must (1) leave the scanner power on, and (2) reboot the machine. When the machine reboots, launch Photoshop again, and select Twain Acquire. Now, the scanner will be there. Simply scan in the necessary region of your written work from the previewed image; you need not set any parameters, as the scanner is somewhat old and doesn't seem to let you indicate that it will be black and white, etc. Once the image has been scanner, BE SURE TO RESIZE it, down from its 8000x8000 resolution to something a little more usable, like 800x600, etc. Save it as a jpg and package it in with your homework, indicating, in the ASCII text file, what it is meant to accompany.\nDo NOT forget to power off the scanner, but leave the computer on.\n"}, {"score": 1805.8877, "uuid": "7ae66e68-288b-5556-8687-120b6aacfc08", "index": "cw12", "trec_id": "clueweb12-0806wb-69-22589", "target_hostname": "www.ugrad.cs.jhu.edu", "target_uri": "http://www.ugrad.cs.jhu.edu/%7Ecs461/index.html", "page_rank": 1.1877272e-09, "spam_rank": 99, "title": "<em>Computer</em> Vision - JHU <em>Computer</em> <em>Science</em>", "snippet": "PLEASE NOW USE THE NEW WIKI AT href=http:&#x2F;&#x2F;cirl.lcsr.jhu.edu&#x2F;Vision_Syllabus and <em>Computer</em> Vision <em>is</em> the study of inferring properties of the world based on one <em>or</em> <em>more</em> digital images. This course <em>is</em> intended for first year graduate students and advanced undergraduates.", "explanation": null, "document": "Some of the matlab diaries are concatenated to the previous week's diary\nFAQ\nWhat do TV, FP, SS mean when mentioned in the reading schedule?\nTV - Trucco and Verri, FP - Forsythe and Ponce (weblink), SS - Stockman and Shapiro (weblink)\nWhat is a png and how do I save one from a matlab figure window?\nA PNG is a Portable Network Graphics file. It has been developed, by and large, to replace the GIF format because of legal issues. However, while the GIF stores its data in an 8-bit lookup table, a PNG has the ability to maintain full color information. To save one in a matlab window, click the Export option in the File menu. Then choose Portable Network Graphics Format. Yes, it's that easy!\nHow do I scan in the NT Lab?\nIt is rather simple. First, load up Photoshop. Then ready the scanner: turn on the power, and place your paper inside. Select --> File --> Import --> Twain Acquire. If a dialog box appears indicating that no scanner can be found, and you have checked that the scannar power is on, then you must (1) leave the scanner power on, and (2) reboot the machine. When the machine reboots, launch Photoshop again, and select Twain Acquire. Now, the scanner will be there. Simply scan in the necessary region of your written work from the previewed image; you need not set any parameters, as the scanner is somewhat old and doesn't seem to let you indicate that it will be black and white, etc. Once the image has been scanner, BE SURE TO RESIZE it, down from its 8000x8000 resolution to something a little more usable, like 800x600, etc. Save it as a jpg and package it in with your homework, indicating, in the ASCII text file, what it is meant to accompany.\nDo NOT forget to power off the scanner, but leave the computer on.\n"}, {"score": 1806.3732, "uuid": "9a65d10e-622e-51de-9f5e-86316944dc64", "index": "cw12", "trec_id": "clueweb12-1403wb-72-11945", "target_hostname": "www.adultlearn.com", "target_uri": "http://www.adultlearn.com/computer-science.htm", "page_rank": 2.189635e-09, "spam_rank": 89, "title": "Masters (MS) Degrees for Majors in <em>Computer</em> <em>Science</em> and <em>Computer</em> <em>Engineering</em>", "snippet": "If you have a bachelor&#x27;s degree in <em>computer</em> <em>science</em>, one that you have held for five years <em>or</em> <em>more</em>, you are already aware of the fact that online <em>computer</em> <em>science</em> majors today would hardly resemble the ones you earned.", "explanation": null, "document": "View all courses \u00bb\nExplore the Available Online Degrees in Computer Science and Computer Engineering\nNearly everyone who has a job these days, from your cash register clerk to your government legislators rely on computers, but very few people really know how to do anything beyond USING the equipment provided for them. When that equipment\u00e2\u0080\u0094whether it be the computer itself or the software program\u00e2\u0080\u0094fails, the user wants help\u00e2\u0080\u0094immediately, something which doesn't always happen. Hence, the use of the name \"helpless desk\" for many business IT departments. read more \u00bb\nSchools that provide online computer science degrees:\nChecking School Availability\nNova Southeastern University offers an unusual opportunity as online programs go. You can earn a Ph.D. in Computer Science . They call it a \u201chybrid format\u201d because the program combines traditional and online instruction, allowing you to complete graduate study while maintaining your position.\nChecking School Availability\nColorado Technical University Online now has a Doctor of Computer Science (DCS) program . It is referred to as the \"terminal degree\" for science professionals consultants and academics. It is a three year program that allows you to contribute to advances in the field of computer science even as you learn and perfect skills related to your own career position.\nFor program disclosure information, click here .\nChecking School Availability\nNorthcentral University offers a Master of Business Administration (MBA) in Applied Computer Science . The program involves advanced coverage of classic and contemporary business administration theory along with education in the practical skills needed by all managers. The Applied Computer Science specialization involves lessons in designing methods for solving problems by means of computers. You can be admitted with any Bachelor\u2019s degree or with computer and industrial experience.\nChecking School Availability\nDrexel University Online offers a M.S. in Computer Science that provides students with a broad understanding of both core and advanced topics in computer science.\u00c2\u00a0 The curriculum includes Data Structures and Algorithms, Theory of Computation, Operating Systems, Programming Languages, Computer Networks, Database Theory, Development of User Interfaces, Software Design, and much more.\nChecking School Availability\nBaker College offers a Bachelor of Computer Science degree program online. Coursework includes software development skills, network and database administration, internet communications, programming, Oracle database system methodologies, security issues, and more. In addition, Baker offers other online technology programs, including an Associate in Computer Programming and an MBS in Computer Information Systems.\nonline Computer Science degree\nIf you have a bachelor's degree in computer science, one that you have held for five years or more, you are already aware of the fact that online computer science majors today would hardly resemble the ones you earned. It is probably time for you to investigate the best schools and colleges offering online degrees and prepare to boost your salary by bringing your knowledge up to date with a current master's degree in computer science or a degree as a computer engineer. You could revitalize the \"help desk\" for your company or even start your own consulting business where you go from one company to another, helping to solve their computer problems, install and set up equipment and design software to fit their needs.\nSince the computer will be the primary tool in your career, it makes sense that many fine universities are able to offer the MS in computer science completely online. Furthermore, if you already have one of the numerous jobs available to computer experts, you may also find that your current employer is willing to help fund the cost of your advanced degree.\nOf course, if you are just starting your college education and want to get your computer related degree as quickly and as inexpensively as possible, you will want to check out online programs for a bachelor's degree.\u00c2\nA degree in computer programming has always involved a study of programming languages and algorithms, in the workings of hardware and software, and in the applications of computers to various industries.\u00c2\u00a0 Today however, just the languages themselves have evolved into numerous forms, all used for different purposes. A particular type of code would be used for data base and spread sheet building another is used for computer aided design programs\u00e2\u0080\u0094grown far beyond the old CAD\u00e2\u0080\u0094and still another is specific to the development of internet communication. To make things ever more interesting, it is almost impossible NOT to specialize in some way as every industry from healthcare to manufacturing to social services, and even non-profit organizations use computers to track their business and keep their various tasks and procedures operating smoothly. Each industry will have its own unique software specifically design to meet their needs.\nFor those who aren't sure exactly what career field they want to tackle, but know that they want to work with computers, a good possibility might be computer security. With every business depending heavily on the proper operation of their computers, protection from hackers, viruses and other kinds of security risks must be an important part of the budget of any major operation.\u00c2\u00a0 A person who learns problem solving and understands the common elements from one software package to another\u00e2\u0080\u0094and is able to spot weaknesses\u00e2\u0080\u0094would be attractive as an employee to many different companies. \u00c2\nSalaries for people with computer science degrees depend on location and education in addition to the business itself. Some of the highest paid jobs are to be found at banks, civilian jobs with the military, and computer management positions at major industries or Wall Street firms. However, in recent years, with the decline of American manufacturing jobs, competition in the computer industry has become fierce. The jobs are there, but if you work in a small school district or a local computer repair store, you can expect your initial salary to be barely $30,000 a year, especially if you only have a bachelor degree. For salaries of $50,000 and up, you may as well set your sites on the masters degree from the start. Also, be prepared to really \"know your stuff.\" Take advantage of intern opportunities, volunteer your help with local organizations such as churches and charity groups, and stay on top of the new developments. Because of the rapid changes in computer technology, some colleges offer free refresher courses to alumni. A college that does would be worth considering even if the cost was a little more initially. \u00c2\n"}], [{"score": 1805.7828, "uuid": "1cb4f2ab-5cc4-5d85-887e-d65c2dc9c15f", "index": "cw12", "trec_id": "clueweb12-0806wb-67-18023", "target_hostname": "www.ugrad.cs.jhu.edu", "target_uri": "http://www.ugrad.cs.jhu.edu/%7Ecs461/", "page_rank": 1.1797808e-09, "spam_rank": 99, "title": "<em>Computer</em> Vision - JHU <em>Computer</em> <em>Science</em>", "snippet": "PLEASE NOW USE THE NEW WIKI AT href=http:&#x2F;&#x2F;cirl.lcsr.jhu.edu&#x2F;Vision_Syllabus and <em>Computer</em> Vision <em>is</em> the study of inferring properties of the world based on one <em>or</em> <em>more</em> digital images. This course <em>is</em> intended for first year graduate students and advanced undergraduates.", "explanation": null, "document": "Some of the matlab diaries are concatenated to the previous week's diary\nFAQ\nWhat do TV, FP, SS mean when mentioned in the reading schedule?\nTV - Trucco and Verri, FP - Forsythe and Ponce (weblink), SS - Stockman and Shapiro (weblink)\nWhat is a png and how do I save one from a matlab figure window?\nA PNG is a Portable Network Graphics file. It has been developed, by and large, to replace the GIF format because of legal issues. However, while the GIF stores its data in an 8-bit lookup table, a PNG has the ability to maintain full color information. To save one in a matlab window, click the Export option in the File menu. Then choose Portable Network Graphics Format. Yes, it's that easy!\nHow do I scan in the NT Lab?\nIt is rather simple. First, load up Photoshop. Then ready the scanner: turn on the power, and place your paper inside. Select --> File --> Import --> Twain Acquire. If a dialog box appears indicating that no scanner can be found, and you have checked that the scannar power is on, then you must (1) leave the scanner power on, and (2) reboot the machine. When the machine reboots, launch Photoshop again, and select Twain Acquire. Now, the scanner will be there. Simply scan in the necessary region of your written work from the previewed image; you need not set any parameters, as the scanner is somewhat old and doesn't seem to let you indicate that it will be black and white, etc. Once the image has been scanner, BE SURE TO RESIZE it, down from its 8000x8000 resolution to something a little more usable, like 800x600, etc. Save it as a jpg and package it in with your homework, indicating, in the ASCII text file, what it is meant to accompany.\nDo NOT forget to power off the scanner, but leave the computer on.\n"}, {"score": 1801.5443, "uuid": "25440cf5-bd89-5298-9093-e6a2db570b17", "index": "cw12", "trec_id": "clueweb12-0004wb-05-10107", "target_hostname": "eecs.oregonstate.edu", "target_uri": "http://eecs.oregonstate.edu/people/borradaile-profile", "page_rank": 1.1710857e-09, "spam_rank": 91, "title": "Glencora Borradaile | School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em>", "snippet": "* School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em> School of Electrical <em>Engineering</em> &amp; <em>Computer</em> ScienceSelect to search All of OSU School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em> Cora Borradaile\u2019s unique style was evident when she interviewed for her position at OSU.", "explanation": null, "document": "Search for people and pages\nAll of OSU\nSchool of Electrical Engineering & Computer Science\nSchool of Electrical Engineering & Computer Science\nSelect to search All of OSU\nSelect to search for People\nSelect to search for Media\nHome \u203a\nGlencora Borradaile\nCora Borradaile \u2019s unique style was evident when she interviewed for her position at OSU. During her talk, she needed to point to something out of reach, and without missing a beat she pulled a chair over and stood on it to make her point.\n\u201cI\u2019ve never seen a candidate do something like that,\u201d Professor Karti Mayaram says. \u201cI thought, \u2018Here is a person who will be resourceful in unfamiliar situations, creative in solving problems, and fun as a teacher.\u2019\u201d\nIt is not the first time Borradaile has surprised someone.\n\u201cWhen I say I\u2019m a computer scientist, people often raise their eyebrows,\u201d Borradaile says. And she is happy to dissuade them of the stereotypical image of a gamer sitting in front of a computer all night typing out code.\nIn fact, she rarely writes code. \u201cI\u2019m a theoretical mathematician, who happens to work on problems that are interesting to computer scientists,\u201d she explains. \u201cI am particularly interested in graph algorithms \u2014 solving a problem where the input is a graph.\nImagine a network of intersections and connecting lines, such as a road map. The network of roads would be the graph, and the problem could be designing an efficient bike route.\nIt\u2019s the kind of thing she daydreams about while getting herself to work \u2014 by bike. She proudly does not own a car. And being car-free can create some interesting puzzles to solve \u2014 the watermelon problem, for example.\nSo, if you bring a watermelon bike-camping, and you didn\u2019t carry anything with you to wrap up the leftovers in, what is the best way to cut it?\nShe explores this question in her blog , alongside more serious math theory topics \u2014 adding a woman's voice to theory computer science blogs in order to raise the profile of female computer scientists.\nBorradaile looks forward to passing on her passion for problem solving through mentoring undergraduate and graduate students. In her graduate algorithms class she will be challenging students with some classic problems that companies like Google and Microsoft ask in job interviews.\n\u201cThis problem-solving aspect to computer science is really important for all the students to learn, not just the ones that will go on in theoretical computer science,\u201d she says.\nAnd standing on a chair was not the only thing that impressed Mayaram about Borradaile, \u201cThe way she presented her work could understand it even as an outsider. So, I knew she would be an exceptional and inspirational teacher.\u201d\n\u2014By Rachel Robertson\n"}, {"score": 1800.9496, "uuid": "f75954fc-e0b1-5875-9752-43d28f9c2330", "index": "cw12", "trec_id": "clueweb12-0304wb-97-34755", "target_hostname": "www.spagoworld.org", "target_uri": "http://www.spagoworld.org/blog/tag/computer-science/", "page_rank": 1.4460344e-09, "spam_rank": 85, "title": "<em>computer</em> <em>science</em> \u00ab SpagoWorld Blog", "snippet": "The Free&#x2F;Open Source Initiative supported by <em>Engineering</em> Time ago, I wrote something about the need for education in <em>Computer</em> <em>Science</em> and Free Open Source Software in this blog.", "explanation": null, "document": "The need for education in Computer Science and Free Open Source Software\nFriday, June 18th, 2010\nInvesting money in training and research activities is generally considered crucial in this period of crisis and incertitude. The role of training on Information Technology issues since primary education, plays a central role, as it is an important element of the knowledge society as well as the starting point of the new outcomes like \u201cinternet of the future\u201d. This is essential to build a liveable future, avoiding plugging the current crisis with old methods, established by a ruling class which hasn\u2019t gone with the times, conforming our political and economic models to the current situation.\nMoreover, in the future the scene will be dominated by the digital natives , who are used to technology. They are not interested in the technology itself but in the services that technology can offer. At this rate, we will soon have to face a generation of consumers, also in the technological domain. In relation to this, school plays a crucial role. Students\u2019 education should include those subjects that help them understand the basis of life. For example, biology allows students to understand how flowers open and Computer Science teaches how to turn over the pages of an iPAD\u2026 This is part of the current new life!\nAt this point, I think we should consider the opportunity to:\nIntroducing Computer Science into the whole course of studies, from primary school to university\nIdentifying teaching methods suitable for new generation ( Generation Y or Generation Z or whatever next generation \u2026) Probably we must care about not introducing barriers and at the same time teach them the fundamentals of human behaviour, of emotional and cognitive relations and of sciences.\nTherefore, it\u2019s particularly important that we start teaching Computer Science to students. I think that do to this it\u2019s normal to adopt Free Open Source Software, not only because it\u2019s low cost, but mainly because it\u2019s available.\nAccordingly, teaching how to use this type of software to digital natives would be nonsense.\nIt mainly offers us the opportunity to teach them the values of Free Open Source Software, which are useful to live in the knowledge society too. I am referring to the ability to use, share, participate and conceive.\nAt this point, we have to consider the following aspects:\nThe open model, to be used at school, concerning teachers, students, documentation and artefacts, the availability and exchange of information;\nDifferent approaches for teachers and for the various categories of students, during the whole education path;\nLast but not least, the expectations of industry concerning students\u2019 skills.\nIf we reach this goal, we will contribute to educate next technology consumers, making them aware of how technologies are built, getting them ready to choose between just using and contributing/developing new technologies, between using a proprietary and open source approach or finding out new ones.\nIn other words, we must have the opportunity to help the education reach its final goal also in the Computer Science domain: make citizens face life being well aware of the reality surrounding them.\n"}, {"score": 1800.0859, "uuid": "9a8e120d-aa59-56e6-8bf3-8097daea61f9", "index": "cw12", "trec_id": "clueweb12-0104wb-51-31294", "target_hostname": "www.cis.udel.edu", "target_uri": "http://www.cis.udel.edu/jobs/market", "page_rank": 1.2196711e-09, "spam_rank": 88, "title": "<em>Computer</em> <em>Science</em> Job Market Outlook | <em>Computer</em> and Information <em>Sciences</em>", "snippet": "The <em>Computer</em> <em>Science</em> job outlook: Myths and Truths * If you major in <em>Computer</em> <em>Science</em> you can&#x27;t find a job. * <em>Computer</em> <em>Science</em> <em>is</em> one of the fastest growing job fields * Simultaneously, enrollment <em>is</em> down, because folks believe the myth * Result: for those who do choose <em>Computer</em> <em>Science</em>, prospects look", "explanation": null, "document": "Computer Science Job Market Outlook\nGraphic based on one at www.cra.org.\nThe Computer Science job outlook: Myths and Truths\nMyth:\nIf you major in Computer Science you can't find a job.\nAll the jobs are gone, or have moved to India\nTruth:\nComputer Science is one of the fastest growing job fields\nSimultaneously, enrollment is down, because folks believe the myth\nResult: for those who do choose Computer Science, prospects look very good.\nSay What? How can you know for sure?\nSomeone else has told you that Computer Science is a lousy field to go into, and I'm telling you the opposite. Your future depends on you making the right decision. Why should you believe me over those other folks?\nGood question. No one can guarantee what will happen in the future, and it is entirely possible that I could be wrong.\nHowever, if you are interested in Computer Science, and have a talent for it, and are choosing not to major in Computer Science only because you've been told that job prospects aren't good, you owe it to yourself to read the links below, then decide for yourself.\nRead this, then decide for yourself\nCNNMoney.com quotes an ACM study as saying that \"Despite all the publicity in the United States about jobs being lost to India and China, the size of the IT employment market in the United States today is higher than it was at the height of the dot.com boom\".\n[Thanks to Keith Decker for pointing out this article.]\nCNN.con and CareerBuilder.com published a list of \" What some fastest-growing jobs pay \".\nThey listed ten jobs, with salaries ranging from $60,880 up to $81,140, all of which were \"on the Bureau of Labor Statistics' list of the fastest growing jobs through 2014\". [Thanks to Li Liao for pointing out this article.]\nOf the ten jobs listed in the article, five of them were jobs for which a Computer Science degree would be great preparation:\nComputer Systems Software Engineer\n"}, {"score": 1799.5116, "uuid": "90304bbd-1a9a-5482-8693-2fb6d37a2482", "index": "cw12", "trec_id": "clueweb12-0102wb-07-01235", "target_hostname": "www.cis.udel.edu", "target_uri": "http://www.cis.udel.edu/jobs/market/", "page_rank": 1.1700305e-09, "spam_rank": 89, "title": "<em>Computer</em> <em>Science</em> Job Market Outlook | <em>Computer</em> and Information <em>Sciences</em>", "snippet": "The <em>Computer</em> <em>Science</em> job outlook: Myths and Truths * If you major in <em>Computer</em> <em>Science</em> you can&#x27;t find a job. * <em>Computer</em> <em>Science</em> <em>is</em> one of the fastest growing job fields * Simultaneously, enrollment <em>is</em> down, because folks believe the myth * Result: for those who do choose <em>Computer</em> <em>Science</em>, prospects look", "explanation": null, "document": "Computer Science Job Market Outlook\nGraphic based on one at www.cra.org.\nThe Computer Science job outlook: Myths and Truths\nMyth:\nIf you major in Computer Science you can't find a job.\nAll the jobs are gone, or have moved to India\nTruth:\nComputer Science is one of the fastest growing job fields\nSimultaneously, enrollment is down, because folks believe the myth\nResult: for those who do choose Computer Science, prospects look very good.\nSay What? How can you know for sure?\nSomeone else has told you that Computer Science is a lousy field to go into, and I'm telling you the opposite. Your future depends on you making the right decision. Why should you believe me over those other folks?\nGood question. No one can guarantee what will happen in the future, and it is entirely possible that I could be wrong.\nHowever, if you are interested in Computer Science, and have a talent for it, and are choosing not to major in Computer Science only because you've been told that job prospects aren't good, you owe it to yourself to read the links below, then decide for yourself.\nRead this, then decide for yourself\nCNNMoney.com quotes an ACM study as saying that \"Despite all the publicity in the United States about jobs being lost to India and China, the size of the IT employment market in the United States today is higher than it was at the height of the dot.com boom\".\n[Thanks to Keith Decker for pointing out this article.]\nCNN.con and CareerBuilder.com published a list of \" What some fastest-growing jobs pay \".\nThey listed ten jobs, with salaries ranging from $60,880 up to $81,140, all of which were \"on the Bureau of Labor Statistics' list of the fastest growing jobs through 2014\". [Thanks to Li Liao for pointing out this article.]\nOf the ten jobs listed in the article, five of them were jobs for which a Computer Science degree would be great preparation:\nComputer Systems Software Engineer\n"}, {"score": 1798.3263, "uuid": "ee5b84c2-6991-5bda-b44a-58028124d026", "index": "cw12", "trec_id": "clueweb12-1706wb-46-13547", "target_hostname": "www.mastep.sjsu.edu", "target_uri": "http://www.mastep.sjsu.edu/resources/Math_and_CS_web_sites.html", "page_rank": 1.1864503e-09, "spam_rank": 93, "title": "Math &amp; <em>Computer</em> <em>Science</em>", "snippet": "CSEP <em>is</em> an electronic book for teaching Computational <em>Science</em> and <em>Engineering</em>. The intended audience are students in <em>science</em> and <em>engineering</em> at the advanced undergraduate level and higher.", "explanation": null, "document": "A \"click and elarn\" course of 190 pages of course material for self study or remote instruction.\nAccelerated Computer II\nA laboratory-based accelerated introduction to Computerqq for students with degrees in other disciplines.Syllabus, calendar, lecture notes, assignments, exams, student work, and links to related materials.By Denbigh Starkey and Ray Babcock, Montana State University.\nAdvanced Java Programming\nOne of three tutorials: Introductory, Intermediate, Advanced. Lecture notes. Links to related materials. By Richard G. Baldwin, Austin Community College.\nAdvanced Java Programming (The DocJava.Com Home Page)\nCovers language and extending the API. Syllabus, calendar, lecture notes, assignments, student work, and links to related materials. By Douglas Lyon, University of Bridgeport.\nAdvanced Object Technology\nAdvanced. Syllabus and readings. By Brad Cox, George Mason University.\nAdvanced Systems Programming and Operating System Kernel\nhttp://www.evitech.fi/~tk/rt_html/rtgiftoc.htm\nPOSIX 1003 with real- time extensions. Structures and functions of a simple operating system kernel. Examples are in Intel x86 and Hitachi HS7000 processor environments. Lecture notes, assignments, exams, student work, and links to related materials. By Tuomo Kortesmaa, Espoo- Vantaa Institute of Technology (Finland).\nAdvanced Theory of Computation\nRecursive function theory. Theory of computational complexity; inherent limitations of computation, both theoretical and practical. Syllabus, calendar, assignments, exams, and links to related materials. By James A. Foster, University of Idaho.\nAlgorithms and Data Structures\nStudy guides. Calendar, exams, and assignments. By Diana Moore, Washington University.\nAlgorithms and Software Design\nSoftware design, implementation, testing, and maintenance. Evaluation and construction of appropriate algorithms. Small-scale programming experience. Syllabus, calendar, assignments, exams, and links to related materials. By John David Stone, Grinnell College.\nCGI Programming 101\nhttp://lightsphere.com/dev/class/\nis an online CGI programming class, intended for anyone who knows HTML, but doesn't know Perl or CGI programming (and maybe doesn't know any programming at all). The goal here is to introduce you to writing Perl CGI scripts, teach you the basics of scriptwriting, and walk you through several common CGI programming applications for the Web.\nCGS 1000 Index\nhttp://www.hcc.cc.fl.us/services/faculty/pusins/cgsindex.htm\nA general introduction to information processing with modern computer systems. Basic hardware and software concepts are covered. Topics include data representation, the central processing unit, media, operating systems, file organization, and programming languages. Designed for the student who wishes to acquire a general understanding of computer hardware and software.\nCISY 160- Internet\nThis course helps the students to understand various services that are available on Internet. These services include: E-mail, ftp, telnet, gopher, Usenet, IRC, WWW, etc.\nComputer Architecture & Engineering Course - D.E. Culler, UC Berkeley\nLectures (in .ps and .pdf format) on the following topics: Instruction set design, Register Transfer. Computer design project requiring about 100 hours. Data-path design. Controller design. Memory system. Addressing. Microprogramming. Computer arithmetic. Survey of real computers and microprocessors.\nComputer Graphics Lab\nThis is the Laboratory Web Site developed by the Cornell Theory Center for the Cornell University undergraduate computer graphics course, CS 418. assignments, student work, and links to related materials.By Bruce Land, Cornell University.\nComputer: A Liberal Arts Approach\nSyllabus, calendar, and assignments.By Mary Beth Rosson and John A. N. Lee, Virginia Polytechnic Institute and State University.\nConcepts of Programming Languages\nClass policies, syllabus, assignments, lecture notes, and much more. By Phil Windley and Paul Black, Brigham Young University.\nCS Seminar\nA 1-credit seminar course that all CS graduate students must take at least once.Weekly presentations by students, faculty, or outside speakers. Syllabus, calendar, lecture notes, assignments, exams, student work.By Denbigh Starkey, Montana State University.\nCsci 12 - Introduction To Structured Programming With Visual Basic\nIntroduction to the fundamentals of structured programming, problem definition, algorithm development, andprogram logic using Visual Basic.\nCsci 2 - Introduction To Computers\nhttp://www.cc.cc.ca.us/cconline/dised.htm\nNon-technical analysis of computer systems. Development and application of critical thinking through human andcomputer parallels. Computer literacy as a vehicle of communication through technology and methodology.Survey of computer history, terminology, application and social impact. Problem solving using an integratedcomputer software system; spreadsheet, word processing and database applications.\nCsci 51a - Beginning Spreadsheets\nHands-on microcomputer course designed to provide a basic understanding of spreadsheets. Spreadsheetdesign, creation, revision, formatting, and printing are covered.\nCsci 52a - Beginning Database\nHands-on microcomputer course designed to provide a basic understanding of database programs. Databasedesign, creation and revision, and report formatting and printing are covered.\nData Networking: Protocols, Technology and Practice - K.W. Ross, University of Pennsylvania\nInternet telecommunications course which includes a Virtual Course with protocols, technology, and Practice which Thisincludes RealAudio with the lecture notes.\nElectronic Information Literacy\nhttp://www.olc.ouc.bc.ca/library/index.html\nThe course teaches fundamental information technology concepts and skills required by students who are enrolled in Web-based courses at Okanagan University College. Modules include E-mail, the Web, and Library and Internet Research. The materials are meant to accompany lab-based workshops but may be used on their own.\nEthics and Law on the Electronic Frontier\nSyllabus, assignments, class notes, student work.By Hal Abelson, Massachusetts Institute of Technology.\nEZone: Online programming courses\nonline courses in programming topics such as Photoshop, Office 97, Java, Perl, HTMl, C++, Javascript, Visual Basic etc. Continuing Ed units\nFault-Tolerant Systems\nhttp://www.cs.uidaho.edu/~krings/CS449/index.html\nDesign, modeling, analysis, and integration of hardware and software for computing systems employing on-line fault-tolerance. Case studies on Boeing 777, Space Shuttle, Tandem, and Stratus. Syllabus, calendar, lecture notes, and links to related materials. By Axel W. Krings, University of Idaho.\nGraphics and Scientific Visualization\nA second, graduate-level, course in computer graphics taught in seminar format. Syllabus, calendar, lecture notes, assignments, exams, student work, and links to related materials.By Denbigh Starkey and Ray Babcock, Montana State University.\nInternet Programming Tutorials - Html and Javascript\nThese Html and Javascript tutorials are written with the non-programmer in mind. They assume you know NOTHING about programming when youstart. Many examples and hands-on, step-by-step programming samples.\nIntro to Web Design\nhttp://Stars.com/Authoring/HTML/Tutorial/\nThis is a three half-day course designed by Selena Sol. It deals with The Basics of HTML, Hyperlinks and Images,and Advanced Formatting by means of step-by-step instructions,examples, and exercises. Editorial notes bythe WDVL staff link the material to more advanced references.\nIntroduction to Java--A Free Online Course\nhttp://www.ibm.com/java/education/intro/home.htm\nThis is a free course provided by IBM, and requires a minimum 486 66MHz processor, Soundcard or Mwave card, minimum 28.8modem for audio/video version and 14.4 modem for audio only version, monitor resolution of 800 x 600, andWindows 95/NT or OS/24.0 with Netscape Navigator 2.0 or higher. The Bamba audio/video plug-in is also required.\nIntroduction to Object-Oriented Programming\nIntroductory information, example files, discussions of Makefiles, and pointers to additional resources.By Michael Chui, Indiana University.\nITEC 820 Instructional Multimedia Authoring: Director 6\nhttp://students.itec.sfsu.edu/ITEC820/ITEC820.htm\nThis course introduces students to the use of Macromedia Director as the main authoring system for designing multimedia instruction. Students are expected to be advanced users of Macintosh or PC computers and experienced with multimedia programs in teaching and/or training. The primary emphasis of this course is hands-on experience with the authoring capabilities of Director 6. In addition to learning the software, students also work with other sound, graphics, and movie development programs.\nMobile Computing and Intelligence\nIntroduction to mobile computing and the use of intelligent agents.Syllabus, calendar, lecture notes, assignments, student work, and links to related materials.By Anupam Joshi, Purdue University.\nModular Web Teaching Pyramid\nThis pyramid consists of eight self-contained modules which can be used for Web instruction. These materials were designed at the WolfgramMemorial Library, Widener University.\nNCSA Internet Tutorials\nwere created by NCSA's Education Group in an initial effort to help instruct local teachers about the Internet.\nNew Electronic Media: The Internet and WWW\nhttp://www.bgsu.edu/departments/tcom/451.html\nThis course introduces new Internet and WWW users to the subject. Course assignments are online. This course is evolving to include an online only version. The text is The Whole Internet: Academic Edition (1996) available from Wadsworth or O'Reilly. Topics covered include HTML, home page creation, searching tools on the WWW, and the future of the Internet and WWW. Impacts on existing electronic media are also discussed. This 3 semester credit course is aimed at seniors and graduate students.\nOperating Systems\nA course on operating systems with emphasis on applications programming, illustrated by UNIX.Lecture notes, assignments, and exams.By Jan Newmarch, University of Canberra.\nOperating Systems\nA first course in operating systems for Computerqq majors.Syllabus, calendar, lecture notes, assignments.By John H. Hine, Victoria University of Wellington.\nProgramming 101 by Way of Java\nLearn Java even if you've never programmed before! These are the complete transcripts of an online class taught by Tom Boutell between late 1996 and early 1997.\nProgramming Languages\nhttp://www.cs.uchicago.edu/~odonnell/OData/Courses/CS221/contents.html\nProgramming language design aims at the closest possible correspondence between the structures of a program and of the problem that it solves. This course studies some of the structural concepts affecting programming languages: iterative and recursive control flow, data types and type checking, procedural versus functional programming, modularity and encapsulation, fundamentals of interpreting and compiling, formal descriptions of syntax and semantics. Students will write short programs in a number of radically different languages to illuminate the variety of possible designs.Syllabus, lecture notes, assignments, exams, and links to related materials.By Michael J. O'Donnell, The University of Chicago.\nStudio IDE: Internet Distance Education\nhttp://www.studio-ide.com/\nOur Internet Distance Education program makes courses like C++ and Java more exciting and accessible. With IDE, teachers can more easily teach the latest technologies--even if they have minimal experience in the subject. IDE brings these courses to any student, any time, anywhere....\nTCOM 500: Protocols, Technology and Practice - K.W. Ross, University of Pennsylvania\n"}, {"score": 1792.7261, "uuid": "73a04f93-db1d-59fb-be87-ee6358f99687", "index": "cw12", "trec_id": "clueweb12-0013wb-47-13040", "target_hostname": "www.ashland.edu", "target_uri": "http://www.ashland.edu/programs/computer-science", "page_rank": 1.3069108e-09, "spam_rank": 95, "title": "<em>Computer</em> <em>Science</em> | Ashland University", "snippet": "Learn <em>more</em> about career paths for graduates with a degree in <em>computer</em> <em>science</em>!", "explanation": null, "document": "Computer Science\nLearn to solve the complex computational challenges of our time.\nOur exceptionally strong curriculum will prepare you well for the many options available to those who enter this exciting field. According to the Bureau of Labor Statistics, job prospects have been extremely strong for several years and are expected to experience 37 percent growth through 2016.\nWhen you major in Computer Science at Ashland University, you take advantage of our exceptionally strong programming curriculum that prepares you well for the many options available to those who enter this exciting field. You\u2019ll get to know your professors well and benefit from lots of coaching and assistance. That\u2019s something that simply is not possible in other, larger universities. This means that when you graduate you have a better grounding in the skills you need to succeed in this opportunity-laden career field or in graduate studies.\nWhat You\u2019ll Love About the Computer Science Program:\nClasses are capped at 24 students to allow you to receive lots of personal attention from your professors as well as many opportunities to participate in classroom activities.\nAshland gives every student access to a state-of-the-art computer in the classroom. Outside of the classroom, the department maintains its own computer lab that is available to computer science and mathematics students.\nComputers run a variety of operating systems including Linux, Solaris, MacOS and Windows so you learn to work across many platforms.\nComputers are equipped with scientific typesetting software, software development tools, compilers, word processors, spreadsheet programs, database programs, web design and programming tools, audio and video editing software, multimedia software, computer algebra systems, statistical and geometric software and other applications to enhance your learning experience.\nYour classes are always taught by professors and never by graduate students or teaching assistants.\nFor your senior capstone experience, a local company will give you a real-life Computer Science problem and you will design software to solve it. This demonstrates your skills and gives you confidence to meet future challenges in the workplace.\nYou will have the opportunity to participate in national and international programming competitions that are both fun and build your skills.\nReach Your Career Goals\nAs a graduate of the Computer Science program, you will be well prepared for graduate school or to pursue any of these career options:\nComputer programmer\n"}, {"score": 1791.3965, "uuid": "24b4910f-606b-573b-b467-1b45b4ecb1f7", "index": "cw12", "trec_id": "clueweb12-1707wb-44-28091", "target_hostname": "www.exploreashland.com", "target_uri": "http://www.exploreashland.com/students/programs/computer-science", "page_rank": 1.2612803e-09, "spam_rank": 97, "title": "<em>Computer</em> <em>Science</em> | Ashland University", "snippet": "Learn <em>more</em> about career paths for graduates with a degree in <em>computer</em> <em>science</em>!", "explanation": null, "document": "Computer Science\nLearn to solve the complex computational challenges of our time.\nOur exceptionally strong curriculum will prepare you well for the many options available to those who enter this exciting field. According to the Bureau of Labor Statistics, job prospects have been extremely strong for several years and are expected to experience 37 percent growth through 2016.\nWhen you major in Computer Science at Ashland University, you take advantage of our exceptionally strong programming curriculum that prepares you well for the many options available to those who enter this exciting field. You\u2019ll get to know your professors well and benefit from lots of coaching and assistance. That\u2019s something that simply is not possible in other, larger universities. This means that when you graduate you have a better grounding in the skills you need to succeed in this opportunity-laden career field or in graduate studies.\nWhat You\u2019ll Love About the Computer Science Program:\nClasses are capped at 24 students to allow you to receive lots of personal attention from your professors as well as many opportunities to participate in classroom activities.\nAshland gives every student access to a state-of-the-art computer in the classroom. Outside of the classroom, the department maintains its own computer lab that is available to computer science and mathematics students.\nComputers run a variety of operating systems including Linux, Solaris, MacOS and Windows so you learn to work across many platforms.\nComputers are equipped with scientific typesetting software, software development tools, compilers, word processors, spreadsheet programs, database programs, web design and programming tools, audio and video editing software, multimedia software, computer algebra systems, statistical and geometric software and other applications to enhance your learning experience.\nYour classes are always taught by professors and never by graduate students or teaching assistants.\nFor your senior capstone experience, a local company will give you a real-life Computer Science problem and you will design software to solve it. This demonstrates your skills and gives you confidence to meet future challenges in the workplace.\nYou will have the opportunity to participate in national and international programming competitions that are both fun and build your skills.\nReach Your Career Goals\nAs a graduate of the Computer Science program, you will be well prepared for graduate school or to pursue any of these career options:\nComputer programmer\n"}, {"score": 1790.6906, "uuid": "41229611-71fc-5e54-bee7-8228993ef5ee", "index": "cw12", "trec_id": "clueweb12-1703wb-64-26403", "target_hostname": "www.exploreashland.com", "target_uri": "http://www.exploreashland.com/programs/computer-science", "page_rank": 1.2537157e-09, "spam_rank": 96, "title": "<em>Computer</em> <em>Science</em> | Ashland University", "snippet": "Learn <em>more</em> about career paths for graduates with a degree in <em>computer</em> <em>science</em>!", "explanation": null, "document": "Computer Science\nLearn to solve the complex computational challenges of our time.\nOur exceptionally strong curriculum will prepare you well for the many options available to those who enter this exciting field. According to the Bureau of Labor Statistics, job prospects have been extremely strong for several years and are expected to experience 37 percent growth through 2016.\nWhen you major in Computer Science at Ashland University, you take advantage of our exceptionally strong programming curriculum that prepares you well for the many options available to those who enter this exciting field. You\u2019ll get to know your professors well and benefit from lots of coaching and assistance. That\u2019s something that simply is not possible in other, larger universities. This means that when you graduate you have a better grounding in the skills you need to succeed in this opportunity-laden career field or in graduate studies.\nWhat You\u2019ll Love About the Computer Science Program:\nClasses are capped at 24 students to allow you to receive lots of personal attention from your professors as well as many opportunities to participate in classroom activities.\nAshland gives every student access to a state-of-the-art computer in the classroom. Outside of the classroom, the department maintains its own computer lab that is available to computer science and mathematics students.\nComputers run a variety of operating systems including Linux, Solaris, MacOS and Windows so you learn to work across many platforms.\nComputers are equipped with scientific typesetting software, software development tools, compilers, word processors, spreadsheet programs, database programs, web design and programming tools, audio and video editing software, multimedia software, computer algebra systems, statistical and geometric software and other applications to enhance your learning experience.\nYour classes are always taught by professors and never by graduate students or teaching assistants.\nFor your senior capstone experience, a local company will give you a real-life Computer Science problem and you will design software to solve it. This demonstrates your skills and gives you confidence to meet future challenges in the workplace.\nYou will have the opportunity to participate in national and international programming competitions that are both fun and build your skills.\nReach Your Career Goals\nAs a graduate of the Computer Science program, you will be well prepared for graduate school or to pursue any of these career options:\nComputer programmer\n"}, {"score": 1784.5383, "uuid": "32fce4cf-6414-5282-a126-82e40b2e99a0", "index": "cw12", "trec_id": "clueweb12-0310wb-90-02343", "target_hostname": "telicthoughts.com", "target_uri": "http://telicthoughts.com/category/computer-science/", "page_rank": 1.4352296e-09, "spam_rank": 91, "title": "<em>Computer</em> <em>Science</em> - Telic Thoughts", "snippet": "Posted in Biology, <em>Computer</em> <em>Science</em>, <em>Engineering</em>, Front-loading on July 2nd, 2008 by Guts One thing that has always interested me about <em>computer</em> simulated evolution of networks <em>is</em> that virtually (pun intended) all of them turn out to be non-modular.", "explanation": null, "document": "Posted in Brain , Computer Science , Philosophy of Mind , The Critics , The Debate on November 30th, 2008 by Joy\nIn Bradford's thread Superstitious Nonsense I found myself sidetracked from the actual topic by a couple of our critics who seemed to be playing dumb. In the attempt to outline the evidence for immaterial process in what we call the \"Mind\" \u2013 as opposed to the physical machine we call the brain \u2013 I introduced the concept of noncomputability which factors large in the Hameroff-Penrose Orch-OR theory of consciousness.\nRaevmo asked repeatedly for an example of this noncomputability, which I realize would take us even farther afield (deep subject). With that thread now over 100 comments, not something I would long be able to follow with my clunky dial-up. So this thread will take that topic out of Bradford's thread so that it can be examined further.\n"}], [{"score": 1780.9955, "uuid": "a2eec86c-0c12-5441-b81a-3ee3f69fe96e", "index": "cw12", "trec_id": "clueweb12-0105wb-53-20992", "target_hostname": "www.cs.colorado.edu", "target_uri": "http://www.cs.colorado.edu/why/", "page_rank": 5.120318e-09, "spam_rank": 88, "title": "CU CSCI Why <em>Computer</em> <em>Science</em>?", "snippet": ". * <em>Computer</em> <em>Science</em> ... at the University of Colorado Boulder So <em>what</em> <em>is</em> <em>computer</em> <em>science</em>? There are a number of definitions of <em>computer</em> <em>science</em>. Here&#x27;s a simple one: com.put.er sci.ence n : The study of <em>computer</em> technology, both hardware and software.", "explanation": null, "document": "A Conversation with Bill Gates at the 2005 Microsoft Faculty Summit\nPrinceton University Dean of Engineering Maria Klawe discusses important topics in Computer Science with Chairman and Chief Software Architect of Microsoft, Bill Gates , at a gathering of computer science faculty in Redmond. A few quotes:\nMicrosoft is trying to hire every great college graduate who has basic computer science skills and we think is highly talented. When I sit down and review projects here inside the company, the topic that always comes up is how is the hiring going, we've got open headcount, these are super well-paying jobs ...\nSome people say, well, doesn't this mean there will just be a shift to Asia of a lot of this activity, and there will be some, but you take a company like ours, we're going to always have the vast majority of our development taking place in this location. We like to do things in a unified way, and so even though India and China are going to grow quite a bit, it's a big problem for us that we can't get these great students.\nWe have this interesting paradox where in China and India we can get lots of engineers but getting people who have sort of what we call program management type skills or general management type skills, it's very hard to find enough of those, whereas here in the United States we do pretty well at getting people with those skill sets, but then it's just the engineering we're very short of what we'd like to get. And so the competition for somebody who's got the right background is just phenomenal.\nAll of the issues around natural interface, you know, vision, speech, ink, modeling, those are areas where the economic value of getting those things right, whether it's Microsoft or anybody else, it's the next ten years that it's interesting. I think if I'd written down in the late '60s, early '70s the interesting problems in computer science, if anybody had, that we could say that a small percentage have been solved right now, but that a very high percentage will be solved in these next 10 to 15 years.\n... the nature of these jobs is not just closing your door and doing coding ... in fact, the greatest missing skill is somebody who's both good at understanding the engineering and has good relationships with the hard-core engineers, and bridges that to working with the customers and the marketing and things like that. And so that sort of engineering management career track, even amongst all the people we have, we still fall short of finding people who want to do that ... And so I'd love to have people who come to these jobs wanting to think of it as a lot and exercise in people management and people dynamics, as well as the basic engineering skills. That would be absolutely amazing. And we can promise those people within two years of starting that career most of what they're doing won't be coding ...\n... this is a field that's taken a very high-volume, low-price approach. It's driven breakthroughs, driven the prices down. And so it's very gratifying, and it's not just for the richest 2 billion people on the planet, although there are some neat things happening there, it's for the world at large.\nNew Gallup Survey Finds Restaurant Industry Is the Most Highly Regarded in America\n... and the computer industry is second! The Gallup Poll conducts an annual poll on the images of various business and industry sectors across the country. The poll asks Americans to rate business and industry sectors on a five-point scale ranging from \"very positive\" to \"very negative.\" The computer industry was ranked second, trailing only the restaurant industry as the industry most positively viewed by the public.\nComputing Research Association Bulletin\nThe Computing Research Association publishes an online bulletin to provide pointers to reports and other information that might be of interest to computing researchers, students and administrators. Topics covered include Computer Science/Computer Engineering student and faculty demographics, salaries, R&D, and the IT workforce.\nSloan Career Cornerstone Center\nThe Sloan Career Cornerstone Center is a resource center for those interested in careers in science, technology, engineering, and mathematics. Their comprehensive education, networking, job hunting, and career planning resources revolve around personal interviews with over 400 individuals who offer candid insight into their career paths.\nCU tries to win back IT fervor\nThe Boulder Daily Camera recently reported on \"The Future Potential in IT\" program held on the CU campus. A few quotes from the article are of interest:\n... IT job openings appear to be on the rebound, according to experts in the field. The result: a shortage of qualified candidates for Colorado technology jobs.\n\"The Future Potential in IT\" program will attempt to dispel the myth that IT jobs are scarce, organizers say, and to encourage undecided students to consider an IT major -- or consider adding a technical element to another major.\nLocal technology companies are growing increasingly concerned about the shortage of qualified candidates coming out of Colorado high schools and universities ...\nThe prospects are looking up for current information systems majors. The diverse skills acquired in an IS degree uniquely qualify graduating students for high-paying jobs in a market projected to grow rapidly during the next six years ...\n2020 -- Future of Computing\nnature.com provides an in-depth look at the direction of the computing field and its relationship to science:\n\"In the last two decades advances in computing technology, from processing speed to network capacity and the internet, have revolutionized the way scientists work. From sequencing genomes to monitoring the Earth's climate, many recent scientific advances would not have been possible without a parallel increase in computing power -- and with revolutionary technologies such as the quantum computer edging towards reality, what will the relationship between computing and science bring us over the next 15 years?\"\n"}, {"score": 1780.3038, "uuid": "dfaa2e5a-76b2-5e32-bb04-8b5df50ff4bf", "index": "cw12", "trec_id": "clueweb12-1410wb-77-19697", "target_hostname": "www.ecaconcordia.ca", "target_uri": "http://www.ecaconcordia.ca/", "page_rank": 2.433969e-09, "spam_rank": 93, "title": "<em>Engineering</em> and <em>Computer</em> <em>Science</em> Association | Just another WordPress site", "snippet": "As you see, the letters E-C-A stand for the <em>Engineering</em> and <em>Computer</em> <em>Science</em> Association <em>or</em> AEGIC (Association \u00c9tudiante de G\u00e9nie et Informatique de Concordia) in French.", "explanation": null, "document": "ECA Elections Details\nAbout the ECA\nAs you see, the letters E-C-A stand for the Engineering and Computer Science Association or AEGIC (Association \u00c9tudiante de G\u00e9nie et Informatique de Concordia) in French. We represent all undergraduate students registered in the engineering and computer science (ENCS) faculty at Concordia University.\nWe are composed of a team of 8 executives, 4 departmental representatives, directors, and 13 societies. This begs a question: just what exactly do all these people do?\nThroughout the year we plan events, both academic and just for fun. The year always starts off with Orientation and Frosh. This is a tremendous party and first-rate networking opportunity for new students: get to know your fellow Froshies and older (wiser?) undergrads. Every Friday through the year, we have Lizard Lounge at Reggie\u2019s (the campus pub in the Hall building) featuring fun activities, free food, and inexpensive beer with all proceeds donated to charity \u2014 ECAID. We like our students fed and happy! Twice a year, Iron Ring is organized, where graduating engineers receive their traditional rings. Then beyond that is Eng Week, CSCE Troitsky Bridge Building Competition, Movie Nights, Karaoke, Ski Trip, Engineering Ball, and more \u2014 the list seems endless!\nIs that enough? Of course not! We also design our very own clothing line, and even personalize your clothing on request with our very own, awesome embroidery machine. Swing by the B-Annex (2160 Bishop St., uphill from the Hall hall) to check it out. While you\u2019re there why not crash out on the sofas, watch something (or play on our XBox) on the big-screen, or nuke your lunch between classes. It\u2019s the perfect place to chill out and relax when you\u2019re stressed out.\nIn short, ECA is your student organization. We\u2019re supposed to work for you, and we lay it on the line to do just that.\nBut we need your help. A student organization is nothing without the students, so get out, get involved, have fun. You\u2019re bound to find something interesting!\nFollow us on Twitter!\n"}, {"score": 1778.3894, "uuid": "bc858618-f0de-5616-b865-8bd6155cf52e", "index": "cw12", "trec_id": "clueweb12-0104wb-99-11570", "target_hostname": "www.cs.odu.edu", "target_uri": "http://www.cs.odu.edu/~advisor/advising/faq.shtml", "page_rank": 1.1793905e-09, "spam_rank": 89, "title": "Department Of <em>Computer</em> <em>Science</em>", "snippet": "Many of our majors choose <em>Computer</em> <em>Engineering</em>, Information Systems, <em>or</em> Mathematics. * <em>What</em> must I do to get a minor in <em>Computer</em> <em>Science</em>? * <em>What</em> <em>is</em> the difference between the Information Systems and <em>Computer</em> <em>Science</em> programs?", "explanation": null, "document": "Questions about the undergraduate program:\nWhen can I be advised in the CS department?\nJanet Brunelle is the CDA. Hill Price is also a departmental advisor. Both are available for advising hours every week. The schedule will be posted on the CS undergraduate webpage, and on a printout outside of their offices. (ED 256 & 250-6 respectively). Advising is necessary in order to register for classes and will be done through group appointments. The CS office will have sign-up sheets for those appointments at least two weeks prior to the start of registration.\nWhere can I find out what courses are to be offered on TELETECHNET next semester?\nEmail Janet Brunelle who is our TELETECHNET representative and she will pass you the information. Her phone # is 683-3915. The University Schedule Books have specific listings for TELETECHNET classes\nHow do I get involved with an interesting research project?\nStudent should personally contact any faculty member sharing their are of interest.\nRefer to the faculty web page for a list of faculty interest areas.\nHow can I find out about cooperative education and internship opportunities?\nCooperative education and internship programs are coordinated through the Career Management Center .\nWhere can I find out about job opportunities and interview schedules?\nJob opportunities and other career planning activities are provided by the Career Management Center .\nHow can I find out what the tuition and fees are for undergraduate students?\nInformation regarding tuition and fees , or call the office of financial aid at (757) 683-3683.\nWhere can I find information on financial aid?\nFor Information about Financial Aid .\nHow are transfer credits evaluated?\nThis is frequently a two stage process. After the Admissions Office receives an official transcript, an initial determination of transfer equivalence will be made. However, when it is unclear what the appropriate course equivalent is, the Admission Office awards only elective credit. A review of the course (via syllabus, text and work performed) can then be requested by the student at the appropriate department.\nReview of undergraduate Computer Science credits can be conducted by the undergraduate advisors in Computer Science.\nPlease refer to the Computer Science Advisor Site for further information.\nHow can I find a future schedule of Computer Science courses?\nInformation can be found here .\nDo I have to repeat a class if I get a C minus?\nUnder any catalog year until present, student must get C or better in all required CS courses. This does not include CS Electives nor mathematics. However, student must have an C average in CS courses overall.\nHow can I be sure that I will graduate?\nCarefully check the catalog that you will be graduating under to be sure that you have satisfied all degree requirements or have waivers to account for them.\nApply for graduation the semester prior to the date of graduation and confer with your departmental advisor when scheduling your courses for that final semester to confirm that you have completed all the requirements.\nCheck you transcript via Leo-On-Line to make sure that your grades are correct. (If not, contact the instructor). Also make sure that all transfer credits have been recorded. (If not, contact the Registrar's Office).\nTake the CS exit exam during your last semester. You can find the schedule on the CS undergraduate webpage. [ Senior Information ]\nFill out the University Exit Assessments . You may not fill these out until after filing for graduation, and then it must be during your final term of classes.\nAnd, most importantly, make an individual appointment with an advisor to review your status.\nWhat are the basic graduation requirements?\nBasic graduation requirements . For a more detailed advising information including how to contact advisors .\nHow do I get advised for registration? How can I get an advisor's block removed?\nSteps for registration advising including the removal of the advisor's block\nIn addition to course requirements, is there anything else I must do to graduate?\nYou must take and pass the Exit Writing Exam and you must take the University Senior Assessment Exam and the Major Field Achievement Test.\nWhen can I take the exit writing exam?\nAs soon as you have Junior status (60 credit hours), and have passed your English composition courses. It is critical that you do not wait until your last semester. Many students have their graduation delayed because they wait until the last minute and then fail the exam.\nWhat is the best minor for CS student?\nWe recommend that you chose an area of interest to you, and hopefully, one that will improve you changes of acquiring the \"perfect\" job. Many of our majors choose Computer Engineering, Information Systems, or Mathematics.\nWhat must I do to get a minor in Computer Science?\nRequirements for a minor in Computer Science .\nWhat is the difference between the Information Systems and Computer Science programs?\nIn short, the difference lies in the application areas the two programs emphasize: the focus of information systems is business applications of computing while computer science provides the technical background to build computer solutions in many areas.\nNote that the computer science degree requires the same calculus that math majors take as well as two math courses beyond calculus. The information systems degree has less stringent math requirements, but emphasizes business principles and applications instead.\nBoth programs lead to good employment opportunities. The career management center can provide further information to those trying to make a decision, but students who are weak in math may expect to have trouble earning a CS degree.\nIs there a student organization for those interested in Computer Science?\nThe student chapter of the ACM\nWhat classes do I need to take in the Virginia Community College system to receive credit as CS courses at ODU?\nQuestions about the graduate program:\nWhat is a topics course?\nOne of the primary uses of the topics courses is for independent study. In general this will be on a topic which the student and supervising faculty have a mutual interest and normally will not be material covered in a regular course offering. Also the topics courses are occasionally used to offer a new or interesting course which is not part of the regular curriculum. In this case the interested students with the proper background should treat it as a normal course.\nHow does a graduate student arrange an independent study?\nContact the faculty member with whom they wish to study. If the topic is of mutual interest and benefit then the faculty member will give them permission to sign up for the desired topics course.\nI am interested in applying for admission to the CS graduate program in the near future. What courses should I be taking now to prepare and to increase my chances of admission?\nGo to \"Academic Requirements for Admission\" in Prospective Students/Graduate\nWhat's the best way to find a faculty advisor for an MS project or thesis?\nGo to the faculty web page , find faculty members in the area(s) of your interest and talk to them.\nHow can I find the research interests of the faculty?\nStudent should personally contact any faculty member sharing their are of interest.\nRefer to the faculty web page for a list of faculty interest areas.\nWhat do I have to do to graduate ?\nCan one get into the PhD program directly after BS?\nNot impossible but extremely rare. Consult the Graduate Program Director .\nOther Questions:\nIs ODU a State University or a private one?\nODU is one of five doctoral granting universities run by the Commonwealth of Virginia.\nAre there student organizations?\nThere are two graduate student organizations GSA and ACM and a variety of undergraduate university organizations\nHow do I contact a current graduate student? To ask some questions? I need some advice in finding a place to live, courses to take, etc.?\nContact the GSA.\nMaintained by: CS Webmaster | Updated 01/06/2012 |\u00a0\u00a0\u00a9 2012 Old Dominion University , Norfolk, VA 23529\u00a0\u00a0| Policies\nPhone: 757.683.6001 | Engineering & Computational Sciences Bldg, 4700 Elkhorn Ave, Suite 3300, Norfolk, VA 23529-0162\n"}, {"score": 1778.2625, "uuid": "053a1989-7515-5aa7-9702-16681548ffb3", "index": "cw12", "trec_id": "clueweb12-0104wb-97-25582", "target_hostname": "www.csee.umbc.edu", "target_uri": "http://www.csee.umbc.edu/category/csee/cybersecurity-csee/", "page_rank": 1.2995256e-09, "spam_rank": 81, "title": "Cybersecurity | <em>Computer</em> <em>Science</em> and Electrical <em>Engineering</em>", "snippet": "He has authored (and co-authored) <em>more</em> than 100 technical papers and <em>is</em> principal author of 5 US patents in situation management and event correlation. He received PhD degree in <em>Computer</em> <em>Science</em> from the Institute of Cybernetics, Estonia.", "explanation": null, "document": "Using data visualization techniques to support digital forensics\nTim Leschke\n11:00am-12:15pm, Friday, Feb 3, 2012\nITE Room 228\nDigital forensic examiners explore large datasets in search of evidence of a crime. In order to keep pace with the growing amount of data that is subject to a forensic examination, digital forensic examiners need to be more selective about the data they examine. One way to be selective about data is to focus attention at data that has changed-over-time. We present Change-Link, a data exploration tool which allows the user to see directories that have changed within an operating system. Our novel contributions are 1) the development of a segmented-box-and-whisker icon for representing change to individual directories, and 2) the first data visualization tool developed specifically for the domain of digital forensic data. We show that by using Change-Link to view change to a directory-tree structure, digital forensic examiners can enhance their ability to perform forensic examinations.\nTim Leschke is a Ph.D. student in the Computer Science program at UMBC.\nCyber Challenge Hones Students\u2019 Cyber Skills\nposted Tuesday, December 20th, 2011\nTyler Campbell, Nick Ducq, Ryan King, Andrew Nguyen and Tim Spillman walked out of the Baltimore Convention Center elated. Their team, the Sherwood Cyber Warriors, had just won the high school division of the inaugural Maryland Cyber Challenge. Their success netted them each a $5,000 scholarship from the National Security Agency.\nThe entire experience was rewarding for both the students and their parents, says Steve Weiss, one of the team\u2019s advisers. \u201cWinning first place was the icing on the cake.\u201d\nIn a conference with over 800 attendees, the excitement over the cyber competition was palpable. With scoreboards changing in real time, onlookers crowded around to see who was in the lead.\nFollowing the competition, held October 21 and 22, eight teams from each division \u2014 professional, college and high school \u2014 walked away with scholarships and cash prizes. The scholarships for students, put up by the National Security Agency (NSA), totaled more than $84,000.\nMembers of first place high school and college teams took home $5,000 scholarships each. Members of second place high school and college teams took home $2,000 scholarships. Each member of the first place professional teams won $2,000 and each second place member won $1,000.\nFirst place winners in the college and high school categories were from, respectively, the University of Maryland, College Park and Sherwood High School. Second place winners were Towson University and Poolesville High School. In the professional category Team ICF came in first, with Team Pr3tty coming in second.\nThe Sherwood Cyber Warriors, four seniors and a junior, are mostly undecided in their future careers, although one does plan to work cybersecurity. Jim Kirk, the team\u2019s senior advisor, says that regardless of the their ultimate career choices, the students learned valuable skills from the competition \u2014 such as how to communicate effectively and work as a team.\nThe Cyber Warriors began practicing for the competition in May, often meeting twice a week. The team developed strategies to pick the low hanging fruit \u2014 what hackers go for first. That, says Kirk, includes developing strong passwords and removing unnecessary software from servers.\nThe challenge for the high school teams, says Rick Forno, Director of UMBC's Graduate Cybersecurity Program and an organizer of the Cyber Challenge, was purely defensive. \u201cThey were being attacked and their job was to keep services open.\u201d\nThe challenge was run using CyberNEXS, a software system developed by SAIC for cybersecurity training and exercises.The system is self-contained and runs both Windows and UNIX systems.\nBut, more than just the chance to compete, the event gave college and high school students a taste of what cybersecurity work is like. And that, involves more than technical skills say professionals in the field.\n\u201cThe cyber challenge is especially interesting to me, since all the students participating are passionate about cyber security and the teams will only excel if every member is doing their job,\u201d says Neil Furukawa, vice president of CyberPoint International. \u201cWe\u2019re looking for people who can lead, but who can also roll up their sleeves and get the work done.\u201d\nPhyllis Villani, Director of Talent acquisition at Northrop Grumman says that to get a job, \u201cnetworking is key.\u201d Besides honing \u201csoft skills\u201d like communication, Furukawa says, people should never stop their education because cybersecurity is a rapidly evolving field.\nFittingly, education is what the Maryland Cyber Challenge is all about.\nOriginally posted by Nicole Ruediger at November 18, 2011 1:02 PM\nUMBC team places second in the DARPA Shredder Challenge\nposted Saturday, December 3rd, 2011\nJust over a month ago, DARPA announced The Shredder Challenge competition to develop a system to solve puzzles by reassembling images of shredded documents with a $50,000 prize for the winning entry. Yesterday the prize was won by All Your Shreds Are Belong to U.S., a San Francisco-based team that was the first to correctly reconstructed each of the five challenge documents.\nUMBC Assistant VP\u00a0for\nResearch Don\u00a0Engel\nIt's unfortunate that there was no prize for second place, because that honor was won by Schroddon , a two-person effort including UMBC Assistant Vice President for Research Don Engel. While most of the top teams had a handful of software engineers and used commercial crowdsourcing services, Schroddon was a part-time effort by Dr. Engel and his wife, Dr. Marianne Engel.\nBoth Don and Marianne have Ph.D.s in Physics, but Don also has an undergraduate degree in Computer Science, did graduate work in computational linguistics, and develops software in his spare time for fun. Two of his active software development projects are ShowMe3D , an application for Mac and iOS that can be used to take and view 3D photos, and When2meet , a free web-based tool for finding the best time for a group to meet.\nThe Shredder Challenge was the latest competition run by DARPA as a low cost way to spur research on new problems. The press release describes it this way.\n\"The Shredder Challenge represents a preliminary investigation into the area of information security to identify and assess potential capabilities that could be used by war fighters operating in war zones to more quickly obtain valuable information from confiscated, shredded documents and gain a quantitative understanding of potential vulnerabilities inherent to the shredding of sensitive U.S. National security documents.\"\n\"Lots of experts were skeptical that a solution could be produced at all let alone within the short time frame,\u201d said Dan Kaufman, director, DARPA Information Innovation Office. \u201cThe most effective approaches were not purely computational or crowd-sourced, but used a combination blended with some clever detective work. We are impressed by the ingenuity this type of competition elicits.\"\nOver 9,000 teams registered for the Shredder Challenge and it is quite an achievement for the Engles to have placed second, especially against many much larger teams. If you are interested in seeing what the data is like, you can download it from the DARPA site.\nThese challenge competitions are becoming more common and are a great way for students to get involved in independent research and maybe win fame and fortune.\nSummer research in cybersecurity and trustworthy systems\nposted Wednesday, November 9th, 2011\nThe Team for Research in Ubiquitous Secure Technology (TRUST) will sponsor 20 undergraduate students from diverse backgrounds and cultures, to participate in the Summer Undergraduate Research Experience located at TRUST partner campuses: UC Berkeley, Cornell University, Stanford University, Vanderbilt University. These students will work with graduate student and faculty mentors throughout the summer performing research and supporting activities in the area of information technology and TRUST related topics. The program will run from June 3 to July 27, 2012 and provide room and board, a travel allowance and a $4,000 stipend. Apply by February 17. See the flyer for more information and the Trust REU site for details and to apply.\nposted Tuesday, November 8th, 2011\nCyber Security Situation Awareness and Impact Assessment:\nIssues, Models and Applications\nAltusys Corporation, Princeton NJ\n10:30-11:30am 8 November 2011, ITE 325\nCyber attacks committed against IT networks and services have profound impact both on ongoing mission and future missions, whose operations are based on these networks and services. The attacks, by exploiting the vulnerabilities of the software assets can push their impact through Cyber Terrain \u2013 a dependency network of structural, spatial, functional and other domain-specific dependencies that exist among software assets and services, and reach the missions. In this presentation we will introduce a novel approach of assessing impact of cyber attacks on missions (business process) and describe the basic models and algorithms of the approach.\nDr. Gabriel Jakobson is the VP and Chief Scientist at Altusys Corp. , a consulting firm specializing in the development of intelligent situation management technologies for defence and cyber security applications. During his more than 20 years tenure at Verizon he had increasing responsibilities of leading advanced database, expert systems, artificial intelligence, and telecommunication network management programs. He has authored (and co-authored) more than 100 technical papers and is principal author of 5 US patents in situation management and event correlation. He received PhD degree in Computer Science from the Institute of Cybernetics, Estonia. Dr. Jakobson holds the honorary degree of Doctor Honorius Causa from the Tallinn Technical University, Estonia, and is Distinguished IEEE Lecturer. Dr. Jakobson is the member of the Board of Governors of IEEE Communications Society, Director, IEEE ComSoc North America Region, co-chair of the Tactical Communications and Operations Technical Committee of IEEE ComSoc, chair of the IEEE ComSoc Sub-Committee on Situation Management.\nHost: Anupam Joshi\nposted Sunday, November 6th, 2011\nSome of this text was adapted from a press release and a post from the Scantegrity blog\nUMBC Professor Alan Sherman , UMBC alumnus Rick Carback (Ph.D. 2010) and many former and current UMBC students helped to develop Scantegrity , an an open source election verification technology for optical scan voting systems. In 2009, their Scantegrity II voting system was used in the election of the mayor and city council members of Takoma Park, Maryland. This was an historic first time any end-to-end voter verifiable voting system with ballot privacy has been used in a binding governmental election.\nThis week, absentee voters in Takoma Park, Maryland will have the option to cast their votes for mayor and city council using a new Internet voting system called Remotegrity which uses the same approach of generating privacy preserving confirmation numbers that allow each voter to verify her vote is counted and anyone to verify that all the votes were counted correctly. Dr. Carback has played a significant role in helping Takoma Park adopt and use Scantegrity and Remotegrity in the municipal elections.\nInternet voting has been used to elect government officials before (for example, in Switzerland, Estonia, and Norway), but what is new here is that voters mail in paper ballots and use the Internet to independently verify that their votes have been received by the city and recorded correctly. Anyone can check online that the recorded votes were tallied correctly.\nDr. Filip Zagorski, computer scientist at The George Washington University, explains \u00d2Through the hybrid use of paper ballots and Internet verification, Remotegrity combines the best of both worlds to provide a very high degree of security even against malware and insider attack.\u00d3 Portions of the underlying research in cryptography and secure server design were supported by the National Science Foundation and the Polish Ministry of Science and Higher Education.\nVoters who have requested to vote by mail receive a ballot which they mark and mail in, but they can also verify their vote on-line in the Remotegrity system, without revealing how they voted. In future elections, the same online procedure may cast votes and physical mailing of paper ballots may be optional or omitted.\nThe city will also use the Scantegrity voting system for voters who cast their ballot in person, as it did in 2009. The integrated Scantegrity and Remotegrity systems offer full end-to-end voter-verifiability, in which voters casting ballots from home or in person can verify that their votes were correctly cast, collected, and counted.\nAdditionally, this year, the city will provide an audio interface for marking ballots. The interface, named Audiotegrity, developed by researchers at The George Washington University, will enable voters with difficulty marking paper ballots to mark ballots independently using an electronic interface. Mr. Noel Runyan, a usability and accessibility expert, provided pro bono design advice to the Audiotegrity team.\nWith a grant from the federal Election Assistance Commission, and support from the non-profit Voting Systems Institute, researchers from UMBC will survey voters and election officials as well as conduct focus groups around their experiences using these new voting systems.\nOctober is National Cybersecurity Awareness Month\nposted Saturday, October 15th, 2011\nThis October is the the eighth annual National Cyber Security Awareness Month sponsored by the Department of Homeland Security in cooperation with the National Cyber Security Alliance and the Multi-State Information Sharing and Analysis Center.\nAccording to the DHS, cyber threats present some of the most serious economic and national security challenges we face, not just in the United States, but throughout the world. Everyone who uses the Internet has a role to play in helping to secure it and thus enhance the safety for themselves and their families online.\nSee the DHS National Cyber Security Awareness Month site for more information, including suggestions for what you can do.\nMaryland Cyber Challenge and Conference\nposted Tuesday, October 11th, 2011\nThe Maryland Cyber Challenge & Conference (MDC3) will be held on Friday and Saturday, October 21-22 at the Baltimore Convention Center. See the Web site for the schedule and to register .\nThe MDC3 is open to anyone who\u2019s interested in advancing, studying or working in the field of cybersecurity, including IT and cybersecurity professionals, corporate and government leaders, college and high school students, teachers, administrators and parents and cyber enthusiasts.\nThe MDC3 cyber challenge gives teams of high school students, college and university students, and professionals the opportunity to learn more about cybersecurity and develop practical skills for defending computers while competing for scholarships in a fun environment. The MDC3 conference features government and industry leaders, breakout sessions and cyber innovation exhibits for an audience of students, parents and professionals from academia, industry and government.\nMDC3 was founded by Science Applications International Corporation and the University of Maryland, Baltimore County in partnership with the Department of Business & Economic Development, the Tech Council of Maryland and the National Cyber Security Alliance with the goal of encouraging Maryland students and young professionals to pursue education and careers in cybersecurity.\nposted Thursday, October 6th, 2011\nCybersecurity Guest Lecture\nAn Evening With General Michael Hayden, USAF (Ret.)\n6:00-8:00pm Thursday, 27 Oct. 2011\nRoom 102, Information Technology and Engineering\nUMBC is proud to announce this opportunity for students and faculty to meet with General Hayden to hear his perspectives and discuss current issues regarding cybersecurity. The evening is sponsored by Next Century Corporation .\nFormer NSA and CIA director General Michael Hayden will discuss the evolution of technology from World War II to the present and outline the challenges this evolution presents to national security organizations. He will address the timely issues of cybersecurity and cyberwarfare, stress the role of education in preparing the intelligence community workforce to deal with cyber concerns, and share anecdotal stories of his time as Director of both the CIA and NSA in meeting these challenges facing the nation. General Hayden is happy to answer questions and make this an engaging, informative, and interactive evening.\nRefreshments will be furnished by Next Century Corporation.\nRSVP REQUIRED: Space is limited, with preference given to graduate CYBR, CSEE, and IS students and faculty. Please RSVP to Allison Jones (\n) by October 25th if you plan to attend.\nGeneral Michael Hayden , USAF (Ret.), served as Director of the Central Intelligence Agency and the National Security Agency and was the nation\u2019s first Principal Deputy Director of National Intelligence. He retired from the CIA in February 2009, and is now a Principal in the Chertoff Group, a security consultancy co-founded by former Secretary of Homeland Security, Michael Chertoff. General Hayden also serves as a Distinguished Visiting Professor at George Mason University School of Public Policy and in an advisory capacity to several organizations focused on national security.\nGeneral Hayden retired from a distinguished thirty-nine year career in the United States Air Force on July 1, 2008. In addition to his senior intelligence community assignments, he served as Commander of the Air Intelligence Agency, Director of the Joint Command and Control Warfare Center, and Chief of the Central Security Service.\nGeneral Hayden graduated from Duquesne University with a Bachelor\u2019s degree in history in 1967 and a Master\u2019s degree in modern American history in 1969.\nTake the NSA Cryptochallenge, 11-5 Friday 9/30, The Commons\nposted Monday, September 26th, 2011\nNSA will be at the Commons for this year's CryptoChallenge competition. Stop by and test your skills against their cryptographic brain teasers and maybe score some great giveaways. Join them for some friendly competition from 11:00am to 5:00pm on Friday 30 September at the Commons Outside Terrace or Main Street if it rains.\nBring your resume \u2014 NSA recruiters will be on hand to discuss career opportunities for the best codemakers and codebreakers in the business. You can hone your cryptographic skills before the event by downloading the free NSA CryptoChallenge from the Apple App Store for iPhone, iPod touch and iPad.\nNSA CryptoChallenge is a game that tests your pattern recognition skills through a series of cryptographs. Your mission is to decipher encrypted quotes, factoids, historical events and more. It\u2019s you against the clock to see how fast you can crack the code. Or, you can challenge a friend with the multiplayer interface. In that instance, it's a one-on-one race to see who can correctly solve the puzzle first.\nNSA executes some of the nation\u2019s most important and sensitive intelligence operations. To help us accomplish our mission, we\u2019re looking for the best and the brightest problem solvers to join our team. If you can solve these puzzles, you just might have what it takes to help NSA keep America safe.\n"}, {"score": 1778.138, "uuid": "41741c3f-4d03-5d53-ba07-7a77856bd7f8", "index": "cw12", "trec_id": "clueweb12-0001wb-99-04901", "target_hostname": "jobsearchtech.about.com", "target_uri": "http://jobsearchtech.about.com/od/careertypes/a/Computer_Engineer.htm", "page_rank": 1.213949e-09, "spam_rank": 89, "title": "<em>Computer</em> <em>Engineering</em> Career Profile - <em>Computer</em> Engineer Job Description", "snippet": "Since the <em>computer</em> <em>engineering</em> field <em>is</em> quite broad, the required technical skills listed in the job postings you come across will vary, depending on whether the job <em>is</em> <em>more</em> hardware- <em>or</em> software-focused, and which industry the employer belongs to.", "explanation": null, "document": "technology careers\nComputer engineers are responsible for designing, developing, implementing and testing computer-based hardware and software, including the components that are found inside computer equipment, as well as the actual devices that contain the computers and the software that runs on those machines. They may also design networks that connect computer systems, and work on integrating software programs with computer hardware.\nEducational Requirements:\nTo become a computer engineer, you will typically require a bachelor of science degree in computer engineering, computer science or electrical engineering .\nImportant Technical Skills\nSince the computer engineering field is quite broad, the required technical skills listed in the job postings you come across will vary, depending on whether the job is more hardware- or software-focused, and which industry the employer belongs to. Typically, you will need to have the following:\nan understanding of the particular computer hardware architecture you will be working with;\nexperience designing, coding and testing software;\nfamiliarity with software test procedures or scripts;\nexperience building your own PC systems;\nunderstanding of different operating systems , including Windows and Linux, and how certain types of software will work with them;\nexperience with device drivers;\nunderstanding of networking and security;\nunderstanding of the (sometimes specialized) software that is typically used in a particular industry;\nknowledge of programming languages such as C++ and other object-oriented languages.\nOther Crucial Skills\nSince computer engineers work closely with programmers, designers, product developers and testers, they really need to have strong interpersonal and communication skills, as well as the ability to work in a team.\nFields Employing Computer Engineers\nComputer engineers are likely to find work in a variety of fields, including (but not limited to):\n"}, {"score": 1769.628, "uuid": "b245e339-0696-5383-8e0b-26d4ebfdfaee", "index": "cw12", "trec_id": "clueweb12-0106wb-90-10779", "target_hostname": "www.cs.unm.edu", "target_uri": "http://www.cs.unm.edu/", "page_rank": 8.7758885e-09, "spam_rank": 99, "title": "UNM <em>Computer</em> <em>Science</em>", "snippet": "Welcome to UNM <em>Computer</em> <em>Science</em> department website. Our ABET-accredited, strongly interdisciplinary program has 17 faculty and 1 lecturer and <em>is</em> part of the School of <em>Engineering</em>.", "explanation": null, "document": "Using VNC\nWelcome to UNM Computer Science department website. Our ABET -accredited, strongly interdisciplinary program has 17 faculty and 1 lecturer and is part of the School of Engineering. Founded in 1979, we offer Bachelor's, Master's and PhD degrees, and are located on the first and third floors of the Farris Engineering Center . Read what some of our alumni say.\nWe are located in Albuquerque , the largest city in New Mexico , USA:, featuring easy access to high desert and mountain environments. In addition to many recreational opportunities, New Mexico is a well known center for the arts and other cultural activities .\nCS Department Department Chair Search!\nPhD Student Highlight: Yaojia Zhu\nHow should we explore a network? Xiaoran Yan and Yaojia Zhu used techniques from information theory and statistical physics to decide which node of a network will tell us the most about the other ones. Their work , joint with Profs. Cris Moore and Terran Lane , appeared at the KDD 2011 conference. Yaojia Zhu's research interests include model-based cluster analysis for complex networks, machine learning and statistical inference.\nGraduate Announcements:\nPlease send the information to csinfo@cs.unm.edu\nUNM CS Professor speaks at World Economic Forum\nDr. Stephanie Forrest was honored to speak at the World Economic Forum Annual Meeting 2012, held January 25-29 in Davos-Klosters, Switzerland. The World Economic Forum is an independent international organization committed to improving the state of the world by engaging business, political, academic and other leaders of society to shape global, regional and industry agendas. Dr. Forrest spoke on how complexity theory is providing new insights into protecting computer systems from malicious agents, using ideas from immunology, epidemiology and ecology. Some of these ideas, including some practical applications of complex adaptive systems, are explored in this recent paper by Dr. Forrest and UNM CS grad student ThanhVu Nguyen, recently honored by IEEE Transactions on Software Engineering as the Spotlight Paper for the January/February 2012 issue. The paper is currently highlighted on the journal home page and will be available to the public for free for 30 days.\nRelated links: Stephanie Forrest , ThanhVu Nguyen , World Economic Forum , IEEE Transactions on Software Engineering .\nUNM CS Professor on the Discovery Channel\nOn September 6th, UNM Computer Science professor Joe Kniss was featured on the \"Inventors\" segment of Daily Planet, the only hour-long, daily, nationally televised Discovery Channel series devoted to highlighting the work of scientists and researchers from around the world. Shown inside the Art Research Technology and Science (ARTS) Lab Dome, a 360 degree field of view hemisphere combining six high-resolution projectors, Dr. Kniss demonstrated how to ride atop an innovative 6 degree-of-freedom force-feedback platform, nicknamed the \"Hex Dex\", to navigate through an immersive virtual environment. Grad students Jeff Bowles and Matthew Dosanjh along with master fabricator Edward Reasner dynamically reconfigured the visual and force feedback environment for a novel demonstration. Continue reading...\nThis innovative human computer interface device allows the user to navigate through, and *feel* the 3D virtual space, with changes in balance and foot position much like riding a skateboard. The platform includes six pneumatic-actuated cylinders controlled by a microprocessor, infrared LEDs, camera, and other physical sensors combined with a bit of mathematics reveals exact board position. Devices like accelerometers and gyroscopes help update how an individual is moving on top of the board and allow the system to react much like a personal flight simulator. This work was supported by UNM's Advanced Graphics Lab (AGL) graduate research assistants and ARTS lab research staff including David Binning, Jonathan Strawm, Hue Walker, Vincent King, Jesus Valdez, with Architecture Seniors Ian LeBlanc and Eric Meyer; a diverse mix of interdisciplinary talents who, together, make this kind of innovative research a reality. The environment and human-computer interaction research was conducted in support of a NSF Partnerships for Innovation Grant whose principal investigator, Dr. Pradeep Sen, published and presented UNM's first ever Siggraph technical paper earlier this year.\nRelated links: Discovery Channel clip , UNM feature , AGL , ARTS Lab .\nPalacios 1.3 Released\nThe V3VEE Project at UNM, Northwestern University, the University of Pittsburgh, Sandia National Labs, and Oak Ridge National Lab has released version 1.3 of the Palacios open-source virtual machine monitor. Palacios provides an open substrate for virtualization research, development, use, and teaching in computer systems, computer architecture, and high performance computing. Release 1.3 contains a wide range of new features, including support for multicore guests, support for embedding as a Linux kernel module, the VNET/P overlay network system, simple checkpoint/restore, host devices, graphics consoles and VGA, and virtual core migration. Currently, Palacios can run on commodity PC hardware, and Cray XT3/4 machines such as Red Storm. Palacios is BSD-licensed and detailed instructions on how to download, install, build, and use Palacios are available at http://v3vee.org . The V3VEE Project is supported by the United States National Science Foundation CRI award and grants from the U.S. Department of Energy Office of Science Advanced Scientific Computing Research program.\nRelated links: Palacios 1.3 Released , Patrick Bridges .\nIt's the (NASCAR) pits for new UNM CS PhD\nUNM Computer Science Graduate Donour Sizemore has combined his passion for sports car racing with his technical expertise in computer science, joining Michael Waltrip Racing, a professional NASCAR racing team. Beginning the summer of 2011, Donour has been working in the pit at the track, managing computer systems, performing data acquisition, and engaging in performance analysis. Seven years ago, he started racing cars as an amateur, and won multiple regional and divisional Sports Car Club of America (SCCA) championships. With many choices for graduate school, Donour said, \"I chose UNM because of the department's expertise in computer systems research. Very few places do this type of work, and I've learned a lot about networking and communications from Professor Bridges.\" Sizemore earned his Ph.D. in computer science from UNM on May 14, 2011, with research focused on systems and high-performance computing. Congratulations Donour!\nRelated links: Michael Waltrip Racing , Donour Sizemore .\nUNM Welcomes a Computer Scientist as Dean of the School of Engineering\nOn July 1, 2011, Dr. Gruia-Catalin Roman became the 18th dean of the University of New Mexico School of Engineering and joined the computer science faculty. His aspirations as dean are rooted in his conviction that engineering and computing play critical roles in facilitating social and economic progress. Roman sees the School of Engineering as uniquely positioned for scientific advances, technology transfer, and workforce development in state, national, and international arenas, both responding to environmental and societal needs as well as building on the rich history, culture, and intellectual assets of our region. Born in Bucharest, Romania, he started his engineering studies at the Polytechnic Institute of Bucharest. In 1971, as a Fulbright Scholar, Roman entered the very first computer science freshman class at the University of Pennsylvania, and earned B.S. (1973), M.S. (1974), and Ph.D. (1976) degrees in computer science. He has published over 180 technical papers in diverse areas including mobile computing, formal design methods, visualization, distributed systems, interactive high speed computer vision, formal languages, biomedical simulation, computer graphics, and distributed databases. He has a special interest in art, including painting, sculpture, and photography. UNM CS welcomes Dean Roman!\nRelated links: Dean Roman .\nNew GAITS Scholarship Fund for UNM CS Students\nGlobal Analytic Information Technology Services (GAITS) has partnered with the UNM School of Engineering to fund a scholarship to support students who are studying computer science. Headquartered in Fairfax, VA, GAITS provides IT and networking solutions and has about 300 employees in New Mexico. The scholarship is for $5,000 per year for two students who have declared their major as CS and are New Mexico residents. The scholarship will begin Fall 2011 and is for students beginning in their junior year and continuing thru senior year. Non-traditional students are encouraged to apply. GAITS is also establishing an intern program for students to gain experience in the marketplace and for customers to benefit by the latest and most up-to-date thinking in the field of computer science and information technology.\nRelated links: GAITS .\nR&D 100 Awards Announced\nThe R&D 100 Awards have long been a benchmark of excellence for industry sectors as diverse as telecommunications, high-energy physics, software, manufacturing, and biotechnology, and this year the awards recognized the work of UNM's own Dr. Dorian Arnold for STAT. The Stack Trace Analysis Tool (STAT), was co-developed by Dr. Arnold who wrote the first prototype as a student scholar at Lawrence Livermore National Laboratories in 2006. Since 2006, STAT has grown with the addition of many features and improvements in robustness, and this work has spawned numerous publications. One of our current students, Joshua Goehner, is working on a follow-on project LIBI, which addresses startup performance issues when deploying STAT at extremely large scales. Congratulations Dr. Arnold!\nRelated links: Award announcement , Full list of winners , Professor Dorian Arnold .\nCS Grad Students Conquer Intramurals!\nThe champions of this semester's Intramural Indoor Soccer League at UNM included two Computer Science Ph.D. students, Bilal Shebaro and Veronika Strnadova. This Spring, UNM's indoor soccer league consisted of 24 teams and included five rounds of elimination. Shebaro and Strnadova played all 8 games with the Cold Feeters, concluding the season in a dramatic penalty kick shootout in the Championship game on April 6. It is at this moment unclear whether Shebaro or Strnadova will accept generous offers from international football clubs FC Barcelona, Chelsea FC, or FC Schalke, but both have confirmed that they have no interest in Real Madrid CF; \"It's just not our style,\" said Shebaro. Congratulations Bilal and Veronika!\nRelated links: Bilal Shebaro , Veronika Strnadova.\nCS Graduate Students did it again...\nComputer Science faculty and graduate students met again for the 2nd annual basketball game held Wednesday April 27th. The game was very interesting and competitive, with the faculty team leading almost the entire game until the last two minutes when the graduate students made a great come back and won by a single basket, 29-27. The reward for victory was agreed to be a dinner invitation, so the graduate students are looking forward to a free dinner for the second year in a row.\nRelated links: Photo Gallery .\nComputer Science Department mourns the loss of one of their own\nThe Computer Science Department is mourning the loss of emeritus professor Dr. Stoughton Bell. Sto passed away in November of 2010. He was one of the founding members of the Computer Science Department at UNM in l968. He attended Harvard College and the University of California at Berkeley where he received a Ph.D. in applied mathematics in 1955. A research mathematician and later a Division Supervisor at Sandia Laboratories, he moved into academia becoming the first Director of the UNM Computing Center. He worked there a decade before devoting his time to teaching and research where his focus included Decision Theory, Medical Decision-making, Modeling and Simulation with emphasis on the Stochastic, Microprocessor Software, Programming Methodology, and Operations Research. Sto had a probing mind and it was well known in the department that he could find the bug in anyone's program. Always an explorer and sportsman as well, Sto retired in 1991 but remained active in the department. He enjoyed hiking and wrote several books including \"Mathematical Analysis for Modeling.\" Sto is survived by his wife, Edna Casman, children Karen, Mark, Nathaniel and JB Bell and step children Lisa, Marcus and Jesse Casman. Gatherings to celebrate Sto's life and take his ashes into the mountains have not been public. The Computer Science Department plans to host a memorial lecture in Dr. Bell's honor in the fall of 2011.\nRelated links: Sto Bell .\nCS Department Welcomes Assistant Professor Lydia Tapia\nLydia Tapia is excited to be returning to her hometown of Albuquerque as a new faculty member in Computer Science at the University of New Mexico. Her area of research is the simulation and analysis of motions. She has applied her methods both to robot motion planning and to disease causing \"misfolded\" proteins. Most recently she was a Computing Innovation Post Doctoral Fellow at the University of Texas at Austin. She received a Ph.D. in 2009 from Texas A&M University and had previously received a B.S. in Computer Science from Tulane University. At A&M Tapia was a fellow of the Molecular Biophysics Training, GAANN, and Graduate Teaching Academy programs. Prior to graduate school, she worked as a member of technical research staff as part of the Virtual Reality Laboratory at Sandia National Laboratories. This semester she is teaching a course in Database Systems .\nRelated links: Prof. Lydia Tapia .\nGraduate Students Conquer the Grand Canyon!\nOver Fall Break, several intrepid CS graduate students hiked the Grand Canyon. The party of nine traveled in two cars, one group driving to the North of the canyon and the other to the South rim. They woke at 4am to begin the 21 mile rim to rim trek, which included a one mile descent into the canyon, 8.5 miles across the canyon, and a one mile ascent to the other rim. The two parties met in the middle, and then continued on to finish up the journey in 11 hours total. Intact but well beaten, they met the following morning for a celebratory breakfast and then returned to their even more exciting academic pursuits. [ link to picture gallery ]\nRelated links: Picture Gallery .\nMath and Science Excellence Award\nOver the summer, President Obama selected 103 teachers to receive the Presidential Award for Excellence in Mathematics and Science Teaching (PAEMST). This is the nation's highest honor for science and mathematics teaching, and we were delighted to learn that a UNM CS alum, Dana Dawson, was a recipient. Reflecting on her career, Dana said, \"I loved teaching but as I learned more about computer science I began to hear a new message, 'I bet you could be an engineer too.' I quit teaching and enrolled in computer science at UNM for a bachelors. I eventually found my way back into teaching but I attribute a great deal of my successes as a teacher to the skills and knowledge I learned as a computer scientist.\" Dana has worked in the Moriarty-Edgewood School District for the last 14 years and currently serves as the district's Mathematics Intervention Specialist for grades six through eight. Congratulations on the award, Dana!\nRelated links: PAEMST Recognition Program , White House Press Release .\nUNM and UConn researchers breathe new life into old cryptosystem\nCan a 30-year-old cryptosystem tell us how to stay secure in a quantum world? A quantum computer able to run Peter Shor's 1994 quantum factoring algorithm could break most public-key cryptosystems, including those currently used for web banking and other secure services. But now, graduate student Hang Dinh and Professor Alex Russell of the University of Connecticut, along with Professor Cris Moore of UNM Computer Science, have shown that a cryptosystem developed in 1978 by Robert McEliece is immune to algorithms like Shor's.\nWhile not proving the McEliece system is unbreakable, their new results provide strong evidence that breaking it would require radically new ideas, making it a candidate for a post-quantum cryptosystem---implementable with classical computers today, but destined to remain secure even if quantum computers are built.\nRelated links: Paper , Prof.\u00a0Cris Moore .\nUNM Computer Science graduate Nicholas Dylan Pattengale received the first QForma award\nQforma announced that its first-ever Qforma computational Thesis/Dissertation Award has been presented, in the amount of $5,000, to Dr.\u00a0Nicholas Dylan Pattengale at the commencement ceremonies on May 15, 2010. Qforma is the leading provider of advanced analytics and predictive modeling technologies for the health sciences industry. Dr.Pattengale's award-winning dissertation is titled \"Efficient Algorithms for Phylogenetic Post-Analysis.\"\n\"In reviewing the candidates for this award, we considered the technical depth, sophistication and innovation of their work, the importance of the problem that the dissertation addressed and the impact it is likely to have on the field of computer science,\" said Stephanie Forrest , professor and chairman of computer science at the University of New Mexico and external professor and science board member of the Santa Fe Institute. \"Dr. Pattengale's dissertation was superb on all three counts, and we are delighted that he was chosen to receive the first Qforma Dissertation Award.\"\nCongratulations Dr. Pattengale!\nRelated links: Qforma , Stephanie Forrest .\nComputer Science Student Kshanti Greene gave the Graduate Speech for the School of Engineering Spring 2010 Convocation\nKshanti Greene presented the graduate student address at the School of Engineering Spring 2010 Convocation at the Kiva Auditorium at the Albuquerque Convention Center on May 15, 2010. The theme was \"Creativity in Engineering and Computer Science\". She described creativity as a form of problem solving in which we shift existing ideas and often incorporate concepts from other disciplines. Dr.Greene built on Newell and Simon's view of computer science as an empirical discipline to suggest that computer programs are new creations within a computational environment. In closing, she advocated approaching engineering as an art form, to help solve the most challenging and important problems. Kshanti Greene received her PhD this spring with Prof. George Luger .\nRelated links: Kshanti Greene ; Prof. George Luger .\nProfessor Saia's paper on scalable Byzantine agreement selected as a best paper at PODC\nThe paper \"Breaking the O(n^2) Bit Barrier: Scalable Byzantine Agreement with an Adaptive Adversary\" by Valerie King and Jared Saia was selected to appear in the best paper session at the Principles of Distributed Computing ( PODC ) conference. Professor Saia's paper describes an algorithm that solves the Byzantine agreement problem with a significantly less communication than any previous results. The venerable Byzantine agreement problem has applications in many areas including: cloud computing, grid computing, peer-to-peer networks data base systems, sensor networks and game theory. A key novelty of the paper is that it is robust against an adaptive adversary that can choose which nodes to take over at any time during the algorithm, up to taking over up to a 1/3 fraction of the nodes. The full paper along with a formal description of the Byzantine agreement problem is available here .\nCongratulations Professor Saia!\n"}, {"score": 1769.4808, "uuid": "413933bb-631a-5010-9f69-c6b44a732686", "index": "cw12", "trec_id": "clueweb12-1406wb-68-20568", "target_hostname": "cse.osu.edu", "target_uri": "http://cse.osu.edu/news/news122.shtml", "page_rank": 1.1709709e-09, "spam_rank": 94, "title": "<em>Computer</em> <em>Science</em> &amp; <em>Engineering</em> at OSU - Departmental News", "snippet": "&quot;The scientific results of this massive simulation are very <em>interesting</em>, and its level of detail has allowed us to observe things that we were not able to see in the past,&quot; said Kim Olsen, professor of geological <em>sciences</em> at SDSU, and lead seismologist of the study.", "explanation": null, "document": "Departmental News\nSystems Team Aids in Earth Moving Simulation\nSeismologists at the San Diego Supercomputer Center (SDSC) at the University of California, San Diego and San Diego State University are using the supercomputing expertise of DK Panda and his team to assist with the software efficiency for their earthquake simulation research. In their work the California researchers have created the to-date largest simulation of an 8.0 earthquake running primarily along the San Andreas fault. The simulation, if real, would affect 25 million people from Yuma, Arizona to Ensenada, New Mexico to Fresno, California.\n\"The scientific results of this massive simulation are very interesting, and its level of detail has allowed us to observe things that we were not able to see in the past,\" said Kim Olsen, professor of geological sciences at SDSU, and lead seismologist of the study. \"For example, the simulation has allowed us to gain more accurate insight into the nature of the shaking expected from a large earthquake on the San Andreas Fault.\"\n\"Petascale [supercomputers able to calculate at more than one quadrillion operations per second] simulations such as this one are needed to understand the rupture and wave dynamics of the largest earthquakes at shaking frequencies required to engineer safe structures,\" said Thomas Jordan, director of SCEC and Principal Investigator for the project.\nThus far one of the hypotheses coming from the work is that high-rise building are susceptible to low frequency, or roller-coaster-like motion, while smaller structures feel the destruction with shorter, sharp bursts of movement. This information is much needed for design of not just new buildings but for emergency response teams preparing for the aftermath of \"The Big One.\" This building damage idea will be more deeply analyzed later this year.\nThe resulting paper for this work, Scalable Earthquake Simulation on PetaScale Supercomputers is a finalist for the Gordon Bell Prize, given for outstanding achievement in high-performance computing applications at the Supercomputing Conference (SC '10) to be held in November in New Orleans, Louisiana. The work has been funded through several National Science Foundation grants.\nSeveral members of DK Panda's MVAPICH project team (Sayantan Sur, Sreeram Potluri and Karen Tomko from OSC) are working along this direction together with the SDSC team. \"It has been an extremely rewarding experience for our MVAPICH project team to work with the computational scientists from the SDSC team to push the envelope of such MPI-level simulation on modern supercomputers and helping real-world applications. We still have many MPI-level optimizations for this application remaining and plan to push the envelope even further,\" said DK Panda.\nWhat makes the simulation so record breaking is it sets new standards in terms of the duration of the temblor (six minutes) and the geographical area covered - a rectangular volume approximately 500 miles (810km) long by 250 miles (405 km) wide, by 50 miles (85km) deep. The number of processor cores used - more than 223,000 cores running within a single 24-hour period on the Jaguar Cray XT5 supercomputer at the Oak Ridge National Laboratory (ORNL) in Tennessee - also sets a new record. At 436 billion mesh (or grid) points calculating the earthquake effects buries the previous apex of 1.8 billion set in 2004.\nFor more information and to see the simulation, follow the link.\nDepartment of Computer Science and Engineering\n395 Dreese Laboratories\n"}, {"score": 1767.8691, "uuid": "aacff3b1-6330-561f-bbd5-06de88f95d8e", "index": "cw12", "trec_id": "clueweb12-0003wb-01-15306", "target_hostname": "cs.unm.edu", "target_uri": "http://cs.unm.edu/", "page_rank": 3.2442964e-09, "spam_rank": 99, "title": "UNM <em>Computer</em> <em>Science</em>", "snippet": "Welcome to UNM <em>Computer</em> <em>Science</em> department website. Our ABET-accredited, strongly interdisciplinary program has 17 faculty and 1 lecturer and <em>is</em> part of the School of <em>Engineering</em>.", "explanation": null, "document": "Using VNC\nWelcome to UNM Computer Science department website. Our ABET -accredited, strongly interdisciplinary program has 17 faculty and 1 lecturer and is part of the School of Engineering. Founded in 1979, we offer Bachelor's, Master's and PhD degrees, and are located on the first and third floors of the Farris Engineering Center . Read what some of our alumni say.\nWe are located in Albuquerque , the largest city in New Mexico , USA:, featuring easy access to high desert and mountain environments. In addition to many recreational opportunities, New Mexico is a well known center for the arts and other cultural activities .\nCS Department Department Chair Search!\nPhD Student Highlight: Yaojia Zhu\nHow should we explore a network? Xiaoran Yan and Yaojia Zhu used techniques from information theory and statistical physics to decide which node of a network will tell us the most about the other ones. Their work , joint with Profs. Cris Moore and Terran Lane , appeared at the KDD 2011 conference. Yaojia Zhu's research interests include model-based cluster analysis for complex networks, machine learning and statistical inference.\nGraduate Announcements:\nPlease send the information to csinfo@cs.unm.edu\nUNM CS Professor speaks at World Economic Forum\nDr. Stephanie Forrest was honored to speak at the World Economic Forum Annual Meeting 2012, held January 25-29 in Davos-Klosters, Switzerland. The World Economic Forum is an independent international organization committed to improving the state of the world by engaging business, political, academic and other leaders of society to shape global, regional and industry agendas. Dr. Forrest spoke on how complexity theory is providing new insights into protecting computer systems from malicious agents, using ideas from immunology, epidemiology and ecology. Some of these ideas, including some practical applications of complex adaptive systems, are explored in this recent paper by Dr. Forrest and UNM CS grad student ThanhVu Nguyen, recently honored by IEEE Transactions on Software Engineering as the Spotlight Paper for the January/February 2012 issue. The paper is currently highlighted on the journal home page and will be available to the public for free for 30 days.\nRelated links: Stephanie Forrest , ThanhVu Nguyen , World Economic Forum , IEEE Transactions on Software Engineering .\nUNM CS Professor on the Discovery Channel\nOn September 6th, UNM Computer Science professor Joe Kniss was featured on the \"Inventors\" segment of Daily Planet, the only hour-long, daily, nationally televised Discovery Channel series devoted to highlighting the work of scientists and researchers from around the world. Shown inside the Art Research Technology and Science (ARTS) Lab Dome, a 360 degree field of view hemisphere combining six high-resolution projectors, Dr. Kniss demonstrated how to ride atop an innovative 6 degree-of-freedom force-feedback platform, nicknamed the \"Hex Dex\", to navigate through an immersive virtual environment. Grad students Jeff Bowles and Matthew Dosanjh along with master fabricator Edward Reasner dynamically reconfigured the visual and force feedback environment for a novel demonstration. Continue reading...\nThis innovative human computer interface device allows the user to navigate through, and *feel* the 3D virtual space, with changes in balance and foot position much like riding a skateboard. The platform includes six pneumatic-actuated cylinders controlled by a microprocessor, infrared LEDs, camera, and other physical sensors combined with a bit of mathematics reveals exact board position. Devices like accelerometers and gyroscopes help update how an individual is moving on top of the board and allow the system to react much like a personal flight simulator. This work was supported by UNM's Advanced Graphics Lab (AGL) graduate research assistants and ARTS lab research staff including David Binning, Jonathan Strawm, Hue Walker, Vincent King, Jesus Valdez, with Architecture Seniors Ian LeBlanc and Eric Meyer; a diverse mix of interdisciplinary talents who, together, make this kind of innovative research a reality. The environment and human-computer interaction research was conducted in support of a NSF Partnerships for Innovation Grant whose principal investigator, Dr. Pradeep Sen, published and presented UNM's first ever Siggraph technical paper earlier this year.\nRelated links: Discovery Channel clip , UNM feature , AGL , ARTS Lab .\nPalacios 1.3 Released\nThe V3VEE Project at UNM, Northwestern University, the University of Pittsburgh, Sandia National Labs, and Oak Ridge National Lab has released version 1.3 of the Palacios open-source virtual machine monitor. Palacios provides an open substrate for virtualization research, development, use, and teaching in computer systems, computer architecture, and high performance computing. Release 1.3 contains a wide range of new features, including support for multicore guests, support for embedding as a Linux kernel module, the VNET/P overlay network system, simple checkpoint/restore, host devices, graphics consoles and VGA, and virtual core migration. Currently, Palacios can run on commodity PC hardware, and Cray XT3/4 machines such as Red Storm. Palacios is BSD-licensed and detailed instructions on how to download, install, build, and use Palacios are available at http://v3vee.org . The V3VEE Project is supported by the United States National Science Foundation CRI award and grants from the U.S. Department of Energy Office of Science Advanced Scientific Computing Research program.\nRelated links: Palacios 1.3 Released , Patrick Bridges .\nIt's the (NASCAR) pits for new UNM CS PhD\nUNM Computer Science Graduate Donour Sizemore has combined his passion for sports car racing with his technical expertise in computer science, joining Michael Waltrip Racing, a professional NASCAR racing team. Beginning the summer of 2011, Donour has been working in the pit at the track, managing computer systems, performing data acquisition, and engaging in performance analysis. Seven years ago, he started racing cars as an amateur, and won multiple regional and divisional Sports Car Club of America (SCCA) championships. With many choices for graduate school, Donour said, \"I chose UNM because of the department's expertise in computer systems research. Very few places do this type of work, and I've learned a lot about networking and communications from Professor Bridges.\" Sizemore earned his Ph.D. in computer science from UNM on May 14, 2011, with research focused on systems and high-performance computing. Congratulations Donour!\nRelated links: Michael Waltrip Racing , Donour Sizemore .\nUNM Welcomes a Computer Scientist as Dean of the School of Engineering\nOn July 1, 2011, Dr. Gruia-Catalin Roman became the 18th dean of the University of New Mexico School of Engineering and joined the computer science faculty. His aspirations as dean are rooted in his conviction that engineering and computing play critical roles in facilitating social and economic progress. Roman sees the School of Engineering as uniquely positioned for scientific advances, technology transfer, and workforce development in state, national, and international arenas, both responding to environmental and societal needs as well as building on the rich history, culture, and intellectual assets of our region. Born in Bucharest, Romania, he started his engineering studies at the Polytechnic Institute of Bucharest. In 1971, as a Fulbright Scholar, Roman entered the very first computer science freshman class at the University of Pennsylvania, and earned B.S. (1973), M.S. (1974), and Ph.D. (1976) degrees in computer science. He has published over 180 technical papers in diverse areas including mobile computing, formal design methods, visualization, distributed systems, interactive high speed computer vision, formal languages, biomedical simulation, computer graphics, and distributed databases. He has a special interest in art, including painting, sculpture, and photography. UNM CS welcomes Dean Roman!\nRelated links: Dean Roman .\nNew GAITS Scholarship Fund for UNM CS Students\nGlobal Analytic Information Technology Services (GAITS) has partnered with the UNM School of Engineering to fund a scholarship to support students who are studying computer science. Headquartered in Fairfax, VA, GAITS provides IT and networking solutions and has about 300 employees in New Mexico. The scholarship is for $5,000 per year for two students who have declared their major as CS and are New Mexico residents. The scholarship will begin Fall 2011 and is for students beginning in their junior year and continuing thru senior year. Non-traditional students are encouraged to apply. GAITS is also establishing an intern program for students to gain experience in the marketplace and for customers to benefit by the latest and most up-to-date thinking in the field of computer science and information technology.\nRelated links: GAITS .\nR&D 100 Awards Announced\nThe R&D 100 Awards have long been a benchmark of excellence for industry sectors as diverse as telecommunications, high-energy physics, software, manufacturing, and biotechnology, and this year the awards recognized the work of UNM's own Dr. Dorian Arnold for STAT. The Stack Trace Analysis Tool (STAT), was co-developed by Dr. Arnold who wrote the first prototype as a student scholar at Lawrence Livermore National Laboratories in 2006. Since 2006, STAT has grown with the addition of many features and improvements in robustness, and this work has spawned numerous publications. One of our current students, Joshua Goehner, is working on a follow-on project LIBI, which addresses startup performance issues when deploying STAT at extremely large scales. Congratulations Dr. Arnold!\nRelated links: Award announcement , Full list of winners , Professor Dorian Arnold .\nCS Grad Students Conquer Intramurals!\nThe champions of this semester's Intramural Indoor Soccer League at UNM included two Computer Science Ph.D. students, Bilal Shebaro and Veronika Strnadova. This Spring, UNM's indoor soccer league consisted of 24 teams and included five rounds of elimination. Shebaro and Strnadova played all 8 games with the Cold Feeters, concluding the season in a dramatic penalty kick shootout in the Championship game on April 6. It is at this moment unclear whether Shebaro or Strnadova will accept generous offers from international football clubs FC Barcelona, Chelsea FC, or FC Schalke, but both have confirmed that they have no interest in Real Madrid CF; \"It's just not our style,\" said Shebaro. Congratulations Bilal and Veronika!\nRelated links: Bilal Shebaro , Veronika Strnadova.\nCS Graduate Students did it again...\nComputer Science faculty and graduate students met again for the 2nd annual basketball game held Wednesday April 27th. The game was very interesting and competitive, with the faculty team leading almost the entire game until the last two minutes when the graduate students made a great come back and won by a single basket, 29-27. The reward for victory was agreed to be a dinner invitation, so the graduate students are looking forward to a free dinner for the second year in a row.\nRelated links: Photo Gallery .\nComputer Science Department mourns the loss of one of their own\nThe Computer Science Department is mourning the loss of emeritus professor Dr. Stoughton Bell. Sto passed away in November of 2010. He was one of the founding members of the Computer Science Department at UNM in l968. He attended Harvard College and the University of California at Berkeley where he received a Ph.D. in applied mathematics in 1955. A research mathematician and later a Division Supervisor at Sandia Laboratories, he moved into academia becoming the first Director of the UNM Computing Center. He worked there a decade before devoting his time to teaching and research where his focus included Decision Theory, Medical Decision-making, Modeling and Simulation with emphasis on the Stochastic, Microprocessor Software, Programming Methodology, and Operations Research. Sto had a probing mind and it was well known in the department that he could find the bug in anyone's program. Always an explorer and sportsman as well, Sto retired in 1991 but remained active in the department. He enjoyed hiking and wrote several books including \"Mathematical Analysis for Modeling.\" Sto is survived by his wife, Edna Casman, children Karen, Mark, Nathaniel and JB Bell and step children Lisa, Marcus and Jesse Casman. Gatherings to celebrate Sto's life and take his ashes into the mountains have not been public. The Computer Science Department plans to host a memorial lecture in Dr. Bell's honor in the fall of 2011.\nRelated links: Sto Bell .\nCS Department Welcomes Assistant Professor Lydia Tapia\nLydia Tapia is excited to be returning to her hometown of Albuquerque as a new faculty member in Computer Science at the University of New Mexico. Her area of research is the simulation and analysis of motions. She has applied her methods both to robot motion planning and to disease causing \"misfolded\" proteins. Most recently she was a Computing Innovation Post Doctoral Fellow at the University of Texas at Austin. She received a Ph.D. in 2009 from Texas A&M University and had previously received a B.S. in Computer Science from Tulane University. At A&M Tapia was a fellow of the Molecular Biophysics Training, GAANN, and Graduate Teaching Academy programs. Prior to graduate school, she worked as a member of technical research staff as part of the Virtual Reality Laboratory at Sandia National Laboratories. This semester she is teaching a course in Database Systems .\nRelated links: Prof. Lydia Tapia .\nGraduate Students Conquer the Grand Canyon!\nOver Fall Break, several intrepid CS graduate students hiked the Grand Canyon. The party of nine traveled in two cars, one group driving to the North of the canyon and the other to the South rim. They woke at 4am to begin the 21 mile rim to rim trek, which included a one mile descent into the canyon, 8.5 miles across the canyon, and a one mile ascent to the other rim. The two parties met in the middle, and then continued on to finish up the journey in 11 hours total. Intact but well beaten, they met the following morning for a celebratory breakfast and then returned to their even more exciting academic pursuits. [ link to picture gallery ]\nRelated links: Picture Gallery .\nMath and Science Excellence Award\nOver the summer, President Obama selected 103 teachers to receive the Presidential Award for Excellence in Mathematics and Science Teaching (PAEMST). This is the nation's highest honor for science and mathematics teaching, and we were delighted to learn that a UNM CS alum, Dana Dawson, was a recipient. Reflecting on her career, Dana said, \"I loved teaching but as I learned more about computer science I began to hear a new message, 'I bet you could be an engineer too.' I quit teaching and enrolled in computer science at UNM for a bachelors. I eventually found my way back into teaching but I attribute a great deal of my successes as a teacher to the skills and knowledge I learned as a computer scientist.\" Dana has worked in the Moriarty-Edgewood School District for the last 14 years and currently serves as the district's Mathematics Intervention Specialist for grades six through eight. Congratulations on the award, Dana!\nRelated links: PAEMST Recognition Program , White House Press Release .\nUNM and UConn researchers breathe new life into old cryptosystem\nCan a 30-year-old cryptosystem tell us how to stay secure in a quantum world? A quantum computer able to run Peter Shor's 1994 quantum factoring algorithm could break most public-key cryptosystems, including those currently used for web banking and other secure services. But now, graduate student Hang Dinh and Professor Alex Russell of the University of Connecticut, along with Professor Cris Moore of UNM Computer Science, have shown that a cryptosystem developed in 1978 by Robert McEliece is immune to algorithms like Shor's.\nWhile not proving the McEliece system is unbreakable, their new results provide strong evidence that breaking it would require radically new ideas, making it a candidate for a post-quantum cryptosystem---implementable with classical computers today, but destined to remain secure even if quantum computers are built.\nRelated links: Paper , Prof.\u00a0Cris Moore .\nUNM Computer Science graduate Nicholas Dylan Pattengale received the first QForma award\nQforma announced that its first-ever Qforma computational Thesis/Dissertation Award has been presented, in the amount of $5,000, to Dr.\u00a0Nicholas Dylan Pattengale at the commencement ceremonies on May 15, 2010. Qforma is the leading provider of advanced analytics and predictive modeling technologies for the health sciences industry. Dr.Pattengale's award-winning dissertation is titled \"Efficient Algorithms for Phylogenetic Post-Analysis.\"\n\"In reviewing the candidates for this award, we considered the technical depth, sophistication and innovation of their work, the importance of the problem that the dissertation addressed and the impact it is likely to have on the field of computer science,\" said Stephanie Forrest , professor and chairman of computer science at the University of New Mexico and external professor and science board member of the Santa Fe Institute. \"Dr. Pattengale's dissertation was superb on all three counts, and we are delighted that he was chosen to receive the first Qforma Dissertation Award.\"\nCongratulations Dr. Pattengale!\nRelated links: Qforma , Stephanie Forrest .\nComputer Science Student Kshanti Greene gave the Graduate Speech for the School of Engineering Spring 2010 Convocation\nKshanti Greene presented the graduate student address at the School of Engineering Spring 2010 Convocation at the Kiva Auditorium at the Albuquerque Convention Center on May 15, 2010. The theme was \"Creativity in Engineering and Computer Science\". She described creativity as a form of problem solving in which we shift existing ideas and often incorporate concepts from other disciplines. Dr.Greene built on Newell and Simon's view of computer science as an empirical discipline to suggest that computer programs are new creations within a computational environment. In closing, she advocated approaching engineering as an art form, to help solve the most challenging and important problems. Kshanti Greene received her PhD this spring with Prof. George Luger .\nRelated links: Kshanti Greene ; Prof. George Luger .\nProfessor Saia's paper on scalable Byzantine agreement selected as a best paper at PODC\nThe paper \"Breaking the O(n^2) Bit Barrier: Scalable Byzantine Agreement with an Adaptive Adversary\" by Valerie King and Jared Saia was selected to appear in the best paper session at the Principles of Distributed Computing ( PODC ) conference. Professor Saia's paper describes an algorithm that solves the Byzantine agreement problem with a significantly less communication than any previous results. The venerable Byzantine agreement problem has applications in many areas including: cloud computing, grid computing, peer-to-peer networks data base systems, sensor networks and game theory. A key novelty of the paper is that it is robust against an adaptive adversary that can choose which nodes to take over at any time during the algorithm, up to taking over up to a 1/3 fraction of the nodes. The full paper along with a formal description of the Byzantine agreement problem is available here .\nCongratulations Professor Saia!\n"}, {"score": 1767.0024, "uuid": "b82feee2-e0c3-599d-9411-868a5521898b", "index": "cw12", "trec_id": "clueweb12-1118wb-27-19286", "target_hostname": "www.symphonious.net", "target_uri": "http://www.symphonious.net/2008/01/30/computer-science-education-is-a-partnership/", "page_rank": 1.1700305e-09, "spam_rank": 70, "title": "<em>Computer</em> <em>Science</em> Education <em>Is</em> A Partnership", "snippet": "<em>Computer</em> <em>science</em> education <em>is</em> a partnership \u2013 <em>what</em> have you done lately to hold up your part in that partnership? I was just recently thinking of some of the vast differences in a university education vs <em>what</em> <em>is</em> required in the real world.", "explanation": null, "document": "Computer Science Education Is A Partnership\nSome time ago, Jeff Atwood posed the question: How Should\u00a0We Teach\u00a0Computer\u00a0Science? In the article, he laments the fact that formal education doesn't teach students about deployment issues or source control:\nAnd yet, as Greg notes, existing software engineering textbooks give this crucial topic only cursory treatment. Along the same lines, a few weeks ago, a younger coworker noted to me in passing that he never learned anything about source control in any of his computer science classes. How could that be? Source control is the very bedrock of software engineering.\nWhile I agree that any good software engineer needs to know about source control and deployment, I think it's unreasonable to expect that formal education is going to teach students everything they need to know. What universities are good at or at least should be good at, is teaching people to learn. The actual content they learn isn't anywhere near as important as developing the skills to go out and learn things for yourself. There's simply no way that students can come out of university knowing everything they're ever going to need to know in their jobs, so they need to learn to learn. That's why Jeff's suggestion that computer science should be taught in conditions as close to reality as possible is the wrong way to look at it:\nToday's computer science students should develop software under conditions as close as possible to the real world, or the best available approximation thereof. Every line of code should be written under source control at all times. This is not negotiable. When it's time to deploy the code, try deploying to a commercial shared web host, and discovering everything that entails. If it's an executable, create a standalone installer package that users have to download, install, and then have some mechanism to file bug reports when they inevitably can't get it to work. Students should personally follow up on each bug filed for the software they've written.\nThis kind of experience is a critical part of student's education, but it's not the only important part. Getting a solid grounding in all the abstract theory, the history of computers and a range of different types of programming languages \u2013 even if they're almost never used in the real world. If education is just trying to simulate the real world, we'd be better off just canceling all the CS courses and letting people learn on the job. What's missing in the IT\u00a0industry is the understanding that providing education is a partnership between educational institutions and the industry. Neither can provide the education new software engineers need alone. That's why most software engineer jobs require or at least prefer a CS degree.\nUniversities should focus on providing the theoretical knowledge that underpins computer science and teaching students how to learn for themselves. Industry should provide internships and partner with universities to give students experience working in real teams on real projects. A simulated development environment will never be as successful as a real one and on the job training will never give students enough of the technical underpinnings to master their craft.\nThat's why Ephox got involved with Griffith Uni last year to bring in a team in their final year project where they developed real software for us in a real environment \u2013 complete with source control and deployment. That's why we prefer hiring people who are quick learners and passionate about technology even if they don't have all the knowledge or experience yet. That's why we go out to university events and make contact with universities (and schools) to help bring more of the real world into their education and to help make them the best possible software engineers.\nComputer science education is a partnership \u2013 what have you done lately to hold up your part in that partnership?\n"}, {"score": 1765.2731, "uuid": "319dbc2d-0b5e-5f9a-ab82-7905754a7950", "index": "cw12", "trec_id": "clueweb12-0106wb-72-08279", "target_hostname": "www.createchange.org", "target_uri": "http://www.createchange.org/cases/scholars/computerscience.shtml", "page_rank": 1.4538339e-09, "spam_rank": 97, "title": "<em>Computer</em> <em>Science</em> (Create Change)", "snippet": "In 10 <em>or</em> 20 years, a <em>computer</em> may be able to read papers and say: \u201cAh, this one <em>is</em> kind of like that one.\u201d <em>What</em> <em>is</em> the benefit of <em>more</em> open sharing of research?", "explanation": null, "document": "Massachusetts Institute of Technology\nLeslie Pack Kaelbling\nLeslie Pack Kaelbling is professor of computer science and engineering and a research director of the Computer Science and Artificial Intelligence Laboratory (CSAIL) at the Massachusetts Institute of Technology. She has a bachelor\u2019s degree in philosophy and a Ph.D. in computer science from Stanford University. Kaelbling\u2019s research focuses on designing situated agents, mobile robotics, reinforcement learning, and decision-theoretic planning. In 2000, she founded the Journal of Machine Learning Research (JMLR) and serves as editor-in-chief.\nHow have the Internet and digital technologies changed the way academics research and communicate in computer science?\nFor a long time, we\u2019ve been electronically sharing papers. We were very early adopters of this system. The thing that is dramatically different is how we figure out what other work is going on. CiteSeer is an online system that indexes computer science literature and finds the citations for online papers. You just type in a name and click. It\u2019s amazing. That\u2019s changed everybody\u2019s life.\nWhat barriers have you faced as you try to effectively communicate in light of this transformation?\nWhen it was first possible to post papers on a Web site, journal publishers started to be worried and shake their fists. In the 1990s, some universities adopted policies to prohibit posting copyrighted papers on the Web, but authors typically ignored them. Scholars want people to read their stuff. We just want people to know about our work.\nHow did the Journal of Machine Learning Research get started and how has it benefited scholarship?\nI was on the editorial board of a journal called Machine Learning, the main journal in the field. The price kept going up and we\u2019d say, \u201cThis is ridiculous\u201d \u00e2\u0080\u0093 especially because libraries couldn\u2019t afford it. Plus, the journal had an official policy about not putting stuff on the Web. We explained it was counter productive, to no avail. Finally, I got tired and said, \u201cForget it, let\u2019s publish our own journal.\u201d Two-thirds of the Machine Learning board resigned and started the new journal in 2000. (See jmlr.org \u00e2\u0080\u0093 available free.)\nThat\u2019s a big undertaking, isn\u2019t it?\nIt\u2019s not that big a deal. We all spend a lot of time on service to the field. When you come up for tenure you are evaluated on teaching, research and service. It\u2019s not much more work than being the editor of someone else\u2019s journal. In the beginning it was more, but it\u2019s fun.\nHow has it been received?\nBy 2004 we had the second highest impact factored journal in all of computer science. ISI computes and gives an impact factor based on the number of citations per year papers get, on average. Some journals have a factor of one or less if hardly anyone cites them. With the 2004 figures, we have a 5.9 impact. That is great \u00e2\u0080\u0093 it means that we are a key journal in the field. There was little resistance. I got four leaders in the field to write for the first issue. That signaled to everybody that this is where the action is. We do publish a hard copy annually for archival reasons to have a paper copy in library. It only costs a library $200.\nWhat happened to Machine Learning?\nIt exists. People ask me if I\u2019m sorry it exists. No. Some understand it to be less strong than JMLR. But it\u2019s important to the field to have more than one venue for publication. A few months after we left, Kluwer relented and decreased the price and gave more public access \u00e2\u0080\u0093 so that was a good effect.\nWhat would you like to see change to improve the scholarly communication landscape?\nIt used to be a journal was a journal because of its role of gate keeping, certifying quality, and its role of dissemination. Now they don\u2019t need to be coupled. If dissemination is your goal, just put your research on a Web page. If you want it registered with a date, then you can submit it to an archive. Dissemination is trivial. It\u2019s no longer an issue. The problem with the Web now is that there is too much of it. That\u2019s why people enjoy reading blogs \u00e2\u0080\u0093 to save time from reading everything. What I would like to do is get 10 technically strong and witty friends and we could write a commentary or opinion about what\u2019s out there. We could comment on papers that we see in the course of going to conferences, or reading other peoples\u2019 web sites. We wouldn\u2019t need to publish them. But it might be that other researchers would find our opinions or the set of papers we chose to comment on interesting.\nHow has technology affected the way you teach students - tomorrow's scholars? How has it changed the way they learn?\nWe have Open Courseware at MIT. Five years ago, there was a commitment to put all of the MIT courses online \u00e2\u0080\u0093 not the lectures, but all the material such as handouts, notes, syllabi. In computer science, that\u2019s not that much of a revolution. But we also have an arrangement in Singapore where some of my lectures have been videotaped and posted publicly. I get emails from people all over the world. When I am about to lecture on a topic I don\u2019t know a lot about, I go and look at other Web sties and see what lecturers at other universities do. I never end up with the exact same thing as anybody else, but it helps me understand different ways of looking at the material. I think that\u2019s something good. Another example, it\u2019s notoriously hard for faculty members to make problems for a problem set \u00e2\u0080\u0093 to make them not too hard or too easy for students. We take problems all the time from the Web. It\u2019s a great resource.\nLooking down the road a decade or so, what do you expect will be different when it comes to digital scholarship in your field?\nBetter searching. Now searching is mainly based on names of people and technical terms. It\u2019s harder to search on an idea. A computer is good at counting words and phrases. Often research gets replicated in two or three different fields because the vocabulary is different. There is an interest in doing a better job of reading text. In 10 or 20 years, a computer may be able to read papers and say: \u201cAh, this one is kind of like that one.\u201d\nWhat is the benefit of more open sharing of research?\nYou know that quotation from Newton: \u201cIf I have seen farther, it is by standing on the shoulders of giants.\u201d Knowing what other people have done lets you build on it and not reinvent the wheel. It used to be that six people were working on the same thing at once and didn\u2019t know it. That can still happen, but now as soon as one person writes it up in the literature you can know about it. It\u2019s going to decrease duplication of effort, and free more people to work on things that are truly new and exciting. That\u2019s the biggest impact.\n"}], [{"score": 1762.6136, "uuid": "f78d9429-df34-5ef2-996b-ffd8ea924495", "index": "cw12", "trec_id": "clueweb12-0907wb-75-10513", "target_hostname": "members.dca.net", "target_uri": "http://members.dca.net/leipold/ap_cs.html", "page_rank": 1.2065423e-09, "spam_rank": 74, "title": "Fortune Cookies -- <em>Computer</em> <em>Science</em>", "snippet": "The question of whether a <em>computer</em> can think <em>is</em> no <em>more</em> <em>interesting</em> than the question of whether a submarine can swim. The stored-program digital <em>computer</em> has three major attributes: it <em>is</em> fast, it <em>is</em> accurate, and it <em>is</em> stupid. The first two attributes are often used to disguise the third.", "explanation": null, "document": "7)\u00a0Method of deferral until later in the course\n8)\u00a0Proof by reduction to a sequence of unrelated lemmas\n9)\u00a0Method of convergent irrelevancies\n640k ought to be enough for anybody.\nBill Gates, 1981\nA 'hacker' is any person who derives joy from discovering ways to circumvent limitations.\nRobert Bickford\nA computer lets you make more mistakes faster than any invention in human history --- with the possible exceptions of handguns and tequila.\nMitch Ratcliffe\nGreer's Third Law\nA computer program does what you tell it to do, not what you want it to do.\nA distributed system is one in which the failure of a computer you didn't even know existed can render your own computer unusable.\nLeslie Lamport\nA good system can't have a weak command language.\nAlan J. Perlis\nA great programmer loves to look at his or her own code and go through it. Greatness is the notion of always wanting to simplify, always thinking you can make it better, and really loving to look at your own code.\nBill Gates, CEO\u00a0of\u00a0Microsoft\nA logician trying to explain logic to a programmer is like a cat trying to explain to a fish what it's like to get wet.\nA nerd is a guy who spends all day in front of his computer... A geek is a nerd that's proud of it.\nA programming language is low level when its programs require attention to the irrelevant.\nAlan J. Perlis\nAPL is a write-only language --- you can write it, but not read it.\nRoy Kier\nAdapting old programs to fit new machines usually means adapting new machines to behave like old ones.\nAlan J. Perlis\nAdding manpower to a late software project makes it later.\nFred Brooks\nAn approximate answer to the right problem is worth a good deal more than an exact answer to an approximate problem.\nJohn Tukey\nIBM Proposed\u00a0Corporate\u00a0Motto\nAn ounce of image is worth a pound of performance.\nAnyone who considers arithmetical methods of producing random digits is, of course, in a state of sin.\nJohn Von Neumann\nAnyone who slaps a 'this page is best viewed with Browser X' label on a Web page appears to be yearning for the bad old days, before the Web, when you had very little chance of reading a document written on another computer, another word processor, or another network.\nTim Berners-Lee\nArtificial intelligence, like fusion power, has been ten years away for the last 30 years.\nConrad Strack\nAs soon as we started programming, we found to our surprise that it wasn't as easy to get programs right as we had thought. Debugging had to be discovered. I can remember the exact instant when I realized that a large part of my life from then on was going to be spent in finding mistakes in my own programs.\nMaurice Wilkes discovers debugging, 1949\nAt Group L, Stoffel oversees six first-rate programmers, a managerial challenge roughly comparable to herding cats.\nThe Washington Post Magazine, 9 June 9 1985\nBrilliance is typically the act of an individual, but incredible stupidity can usually be traced to an organization.\nJon Bentley\nShaw's Principle\nBuild a system that even a fool can use, and only a fool will want to use it.\nBut what...is it good for?\nEngineer at the Advanced Computing Systems Division of IBM commenting on the microchip, 1968.\nCivilization advances by extending the number of important operations that we can perform without thinking about them.\nAlfred North Whitehead\nCome to think of it, there are already a million monkeys on a million typewriters, and Usenet is *nothing* like Shakespeare.\nBlair Houghton\nComputer system analysis is like child-rearing; you can do grievous damage, but you cannot ensure success.\nTom DeMarco\nComputers are useless. They can only give you answers.\nPablo Picasso (1881-1973)\nComputers in the future may weigh no more than 15 tons.\n\"Popular Mechanics,\" forecasting the relentless march of science, 1949\nComputers save time the way kudzu prevents soil erosion.\nAl Castanoli\nCounting in binary is just like counting in decimal if you are all thumbs.\nGlaser and Way\nCounting in octal is just like counting in decimal, if you don't use your thumbs.\nTom Lehrer\nA Thinking Man's Creed for Crypto\nCryptography is like literacy in the Dark Ages. Infinitely potent, for good and ill... yet basically an intellectual construct, an idea, which by its nature will resist efforts to restrict it to bureaucrats and others who deem only themselves worthy of such privilege.\nVin McLellan\nDOS computers manufactured by companies such as IBM, Compaq, Tandy, and millions of others are by far the most popular, with about 70 million machines in use worldwide. Macintosh fans, on the other hand, may note that cockroaches are far more numerous than humans, and that numbers alone do not denote a higher life form.\nNew\u00a0York\u00a0Times, November\u00a026, 1991\nDeath has come to our windows.\nJeremiah 9:21\n(undoubtedly a Biblical reference to\u00a0a Microsoft\u00a0product!)\nDeveloping on IBM mainframes is very, very difficult. They're hard to use. The operating system is extremely cumbersome and very difficult to do anything with. They don't have any tools for the programmer.\nDon Nelson, Chairman, Codasyl\u00a0COBOL\u00a0Committee\nDigital is to analog as steps are to ramps.\nDocumentation is like term insurance: It satisfies because almost no one who subscribes to it depends on its benefits.\nAlan J. Perlis\nDon't have good ideas if you aren't willing to be responsible for them.\nAlan J. Perlis\nEasy to learn = hard to use.\nEasy to use = hard to learn.\nEasy to learn and use = won't do what you want it to.\nPowerful = hard to learn and use.\nMenu-driven = easy to learn.\nStephen Manes\nEinstein argued that there must be simplified explanations of nature, because God is not capricious or arbitrary. No such faith comforts the software engineer.\nFred Brooks\nEvery program has at least one bug and can be shortened by at least one instruction --- from which, by induction, one can deduce that every program can be reduced to one instruction which doesn't work.\nEvery tool carries with it the spirit by which it was created.\nWerner Heisenberg\nFORTRAN, \"the infantile disorder\", by now nearly 20 years old, is hopelessly inadequate for whatever computer application you have in mind today: it is now too clumsy, too risky, and too expensive to use.\nEdsgar W. Dijkstra, writing\u00a0in\u00a0the\u00a070's\nGive a man a fish,\nand he will eat for a day;\nTeach a man to fish,\nand he will eat for a lifetime.\nThe moral? READ THE MANUAL!\nSign on a computer system consultant's desk\nHas everyone noticed that all the letters of the word \"database\" are typed with the left hand? Now the layout of the QWERTYUIOP typewriter keyboard was designed, among other things, to facilitate the even use of both hands. It follows, therefore, that writing about databases is not only unnatural, but a lot harder than it appears.\nI can always spot a programmer who has only worked on one architecture. He or she looks on the basic data types of that machine as God-given. The same goes for how the system names files, how it represents lines of text, and dozens of other arbitrary design decisions. There is a level of abstract thinking that comes only from writing code that is intended to be portable across architectures.\nP.J.Plauger\nI have always wished that my computer would be as easy to use as my telephone. My wish has come true. I no longer know how to use my telephone.\nBjarne Stroustrup, designer of C++\u00a0(1950-\u00a0)\nI have never seen anything fill up a vacuum so fast and still suck.\nRob Pike, commenting on the X\u00a0Window\u00a0System\nI have traveled the length and breadth of this country and talked with the best people, and I can assure you that data processing is a fad that won't last out the year.\nEditor in charge of business books for Prentice Hall, 1957\nI recognize that a class of criminals and juvenile delinquents has taken to calling themselves 'hackers', but I consider them irrelevant to the true meaning of the word; just as the Mafia calls themselves 'businessmen' but nobody pays that fact any attention.\nRobert Bickford\nI suspect that the more precisely you measure something, the less important it really is.\nDaniel McCracken\nI think there is a world market for maybe five computers.\nThomas Watson, chairman of IBM, 1943\nI'd rather write programs to write programs than write programs.\nDick Sites, DEC\nIBM is not a necessary evil. IBM is not necessary.\nTed Nelson\nIBM: It may be slow, but it's hard to use.\nAndrew Tannenbaum\nIf I have not seen as far as others, it is because giants were standing on my shoulders.\nHal Abelson\nWeinberg's Second Law\nIf builders built buildings the way programmers write programs, then the first woodpecker that came along would destroy civilization.\nIf it weren't for C, we'd be writing programs in BASI, PASAL, and OBOL.\nWhat is this 'Virtual' stuff?\nIf it's there and you can see it --- it's\u00a0real.\nIf it's not there and you can see it --- it's\u00a0virtual.\nIf it's there and you can't see it --- it's\u00a0transparent.\nIf it's not there and you can't see it --- you\u00a0erased\u00a0it!\nIf the designers of X Windows built cars, there would be no fewer than five steering wheels hidden about the cockpit, none of which follow the same principles --- but you'd be able to shift gears with your car stereo. Useful feature, that.\nIf you were plowing a field, which would you rather use? Two strong oxen or 1024 chickens?\nSeymour Cray\nIf you don't have a good system, make sure you get good users.\nIf you have a procedure with ten parameters, you probably missed some.\nAlan J. Perlis\nConsultant's Creed\nIf you think *I'm* expensive, wait until you hire an\u00a0amateur.\nIf you were plowing a field, which would you rather use? Two strong oxen or 1024 chickens?\nSeymour Cray\nIf your computer speaks English, it was probably made in Japan.\nAlan J. Perlis\nIf you're building something and you have a tech writer trying to document it, and the tech writer walks into your office and says, \"I don't know how to describe this,\" it means one of two things. Either you've got a really stupid tech writer who you should fire. Or much more likely, you've got a bad piece of design and you ought to rethink it. You have to rethink, because an API that isn't comprehensible isn't usable.\nJames Gosling\nIn addition to prototyping, Dan put together a reference card for users. If we couldn't figure out how to explain a feature on the reference card we would change the program. The original method for copying formulas was too complicated so we just changed the design rather than try to explain it.\nBob Frankston, author (with Dan Bricklin) of VisiCalc\nIn fact, you can throw away the last three syllables of 'superhighway'. It's a soup. Call it Information Soup and we're getting somewhere\nCharles S. Murray\nIn headlines today, the dreaded killfile virus spread across the country adding 'aol.com' to people's Usenet kill files everywhere. The programmer of the virus still remains anonymous, but has been nominated several times for a Nobel peace prize.\nMark Atkinson\nIn the good old days physicists repeated each other's experiments, just to be sure. Today they stick to FORTRAN, so that they can share each other's programs, bugs included.\nEdsgar W. Dijkstra\nIncreasingly, people seem to misinterpret complexity as sophistication, which is baffling---the incomprehensible should cause suspicion rather than admiration. Possibly this trend results from a mistaken belief that using a somewhat mysterious device confers an aura of power on the user.\nNiklaus Wirth, inventor of the Pascal language\nIndeed, it would not be an exaggeration to describe the history of the computer industry for the past decade as a massive attempt to keep up with Apple.\nByte magazine, December\u00a01994\nInformation's pretty thin stuff unless mixed with experience.\nClarence Day\nInside every large program is a small program struggling to get out.\nC. A. R. Hoare\nIt goes against the grain of modern education to teach children to program. What fun is there in making plans, acquiring discipline in organizing thoughts, devoting attention to detail, and learning to be self-critical?\nAlan J. Perlis\nIt is easier to write an incorrect program than understand a correct one.\nAlan J. Perlis\nIt is impossible to make anything foolproof, because fools are so ingenious.\nIt is impossible to sharpen a pencil with a blunt axe. It is equally vain to try to do it with ten blunt axes instead.\nEdsgar W. Dijkstra\nIt is not possible to simultaneously understand and appreciate the Intel architecture.\nBen Scott\nIt is not the computer's fault that Maxwell's equations are not adequate to design the electric motor.\nAlan J. Perlis\nIt is practically impossible to teach good programming to students that have had a prior exposure to BASIC; as potential programmers they are mentally mutilated beyond hope of regeneration.\nEdsgar W. Dijkstra\nIt is professionally unacceptable to write a program that does something out of control merely because a naive (or malicious) customer contrives to type input at it that is out of the ordinary.\nP.J.Plauger\nIt occurred to me a while ago that Unix is much like the U.S. Government:\nA long time ago, a few brilliant men created a system that empowered its users, gave them freedom, and provided a few essential services. Now it is old, slow, easily corrupted, overly restrictive, too large and confusing for anyone to understand, plagued with inconsistencies, and run by men who only care about money.\nlee@puck.mport.com\nJunior programmers create simple solutions to simple problems. Senior programmers create complex solutions to complex problems. Great programmers find simple solutions to complex problems. The code written by topnotch programmers may appear obvious, once it is finished, but it is vastly more difficult to create.\nCharles Connell\nKnowing what to optimize matters as much as knowing how to optimize. Otherwise, you'll optimize the wrong thing, and end up with really fast slow code.\nMichael Abrash\nLinux is free only if your time has no value.\nJamie Zawinski\nLogic is a system whereby one may go wrong with confidence.\nCharles Kettering\nMS-DOS is the OS/360 of the\u00a01980s.\nHal W. Hardenbergh\u00a0in\u00a01985\nMany years ago, IBM's customer base insisted that IBM retain its old familiar operating systems. Those customers today suffer from obsolete, clumsy, inefficient, and troublesome software that is truly laughable by today's standards.\nJohn R. Culleton\nMeasuring software productivity by lines of code is like measuring progress on an airplane by how much it weighs.\nBill Gates\nMost of the VAX instructions are in microcode, but HALT and NO-OP are in hardware for efficiency.\nMy experience trying to \"sell\" the concepts of swarm intelligence to the commercial world is that managers would rather live with a problem they can't solve than with a solution they don't fully understand or control.\nEric Bonabeau\nGray's Law of Programming\nN+1 trivial tasks are expected to be accomplished in the same time as N trivial tasks.\nComputer Acquisition Policy\nNever accept second best when you can get third best for only twice the price.\nSteinbach's Guideline for Systems\u00a0Programmers\nNever test for an error condition you don't know how to handle.\nNever underestimate the bandwidth of a station wagon full of tapes hurtling down the highway\nAndrew S. Tanenbaum\nPetreley's First Law of Computer Journalism\nNo technology exists until Microsoft invents it.\nNicholas Petreley\nOf course, unless one has a theory, one cannot expect much help from a computer (unless _it_ has a theory)...\nMarvin Minsky\nOh, boy, virtual memory! Now I'm gonna make myself a really *big* RAMdisk!\nOne can't proceed from the informal to the formal by formal means.\nAlan J. Perlis\nOne man's constant is another man's variable.\nAlan J. Perlis\nOne of my most productive days was throwing away 1000 lines of code.\nKen Thompson\nOne of the chief triumphs of modern mathematics consists in having discovered what mathematics really is.\nBertrand Russell,\u00a01901\nOne of the other great ironies of the early 21st Century is that it is trivial for secretaries to put cubicle floorplans in their documents, but nearly impossible for programmers to put class diagrams in code.\nGregory V. Wilson\nOverall, OS/2's problems fall into two categories: IBM and Microsoft.\nJean-Louis Gassee\nPROGRAM n. A magic spell cast over a computer allowing it to turn one's input into error messages. tr.v. To engage in a pastime similar to banging one's head against a wall, but with fewer opportunities for reward.\nPerhaps there should be a new 'quantum' datatype; you would be able to take its address or value, but not both simultaneously.\nMichael\u00a0Shields (in\u00a0comp.std.c++)\nProfanity is the language all programmers know best.\nProgrammers are tools for converting caffeine into\u00a0code.\nProgramming is like sex: One mistake and you're providing support for a lifetime.\nProgramming is one of the most difficult branches of applied mathematics; the poorer mathematicians had better remain pure mathematicians.\nEdsgar W. Dijkstra\nProlonged contact with the computer turns mathematicians into clerks and vice versa.\nAlan J. Perlis\nQ:\u00a0How many Microsoft programmers does it take to change a light bulb?\nA:\u00a0None. They don't bother with that; they just declare darkness a standard.\nQ:\u00a0How many software engineers does it take to change a\u00a0lightbulb?\nA:\u00a0None; it's a hardware problem.\nRestrictive, centralized control of personal computer use results in the exact problems this control is intended to prevent: computers lying idle or underutilized on the desks of unmotivated, untrained, unsupported workers.\nJ.E.Fawcette of InfoWorld\nScience is supposedly the method by which we stand on the shoulders of those who came before us. In computer science, we all are standing on each others' feet.\nG. Popek\nConsultant's Creed\nSell a man a fish and he will eat for a day and come back tomorrow to buy another one from you. Teach a man to fish and your consulting company will be out of business.\nDan Drake\nSo we went to Atari and said, \"Hey, we've got this amazing thing, even built with some of your parts, and what do you think about funding us? Or we'll give it to you. We just want to do it. Pay our salary, we'll come work for you.\" And they said, \"No.\" So then we went to Hewlett-Packard, and they said, \"Hey, we don't need you; you haven't got through college yet.\"\nApple Computer founder Steve Jobs on attempts to get Atari and HP interested in his and Steve Wozniak's personal computer.\nSoftware entities are more complex for their size than perhaps any other human construct because no two parts are alike. If they are, we make the two similar parts into a subroutine --- open or closed. In this respect, software systems differ profoundly from computers, buildings, or automobiles, where repeated elements abound.\nFred Brooks\nSoftware is like entropy. It is difficult to grasp, weighs nothing, and obeys the second law of thermodynamics; i.e., it always increases.\nNorman R. Augustine\nSome people, when confronted with a problem, think \"I know, I'll use regular expressions.\" Now they have two problems.\nJamie Zawinski\nSufficiently advanced cluelessness is indistinguishable from malice.\nAlex Martelli\nSystems programmers are the high priests of a low cult.\nB. S. Barton,\u00a01967\nThe cheapest and fastest parts of a system are those that don't exist.\nGordon Bell of DEC\nThe day Microsoft creates a product that doesn't suck is the day they make vacuum cleaners.\nThe human race will decree from time to time: \"There is something at which it is absolutely forbidden to laugh.\"\nNietzche on C++\nThe limits of my language mean the limits of my world.\nLudwig Wittgenstein\nThe major difference between a thing that might go wrong and a thing that cannot possibly go wrong is that when a thing that cannot possibly go wrong goes wrong it usually turns out to be impossible to get at or repair.\nDouglas Adams\nThe meta-Turing test counts a thing as intelligent if it seeks to apply Turing tests to objects of its own creation.\nThe practical scientist is trying to solve tomorrow's problem with yesterday's computer; the computer scientist...often has it the other way around.\nWilliam H. Press\nThe purpose of software engineering is to control complexity, not to create it.\nPamela Zave\nThe question of whether a computer can think is no more interesting than the question of whether a submarine can swim.\nEdsgar W. Dijkstra\nThe stored-program digital computer has three major attributes: it is fast, it is accurate, and it is stupid. The first two attributes are often used to disguise the third.\nP.J.Plauger\nThe use of COBOL cripples the mind; its teaching should, therefore, be regarded as a criminal offence.\nEdsgar W. Dijkstra\nThe use of anthropomorphic terminology when dealing with computing systems is a symptom of professional immaturity.\nEdsgar W. Dijkstra\nThere are many reasons why Apple 'does poorly vis a vis Microsoft'. Most of them have nothing to do with technology. One big reason is that people are stupid, easily fooled, and seem to be extraordinarily willing to spend their money on inferior products. This is not something unique to the computer industry.\nJohn Norstad (author of Disinfectant)\nThere are ten kinds of people in world: those who understand binary, and those who don't.\nThere are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies.\nC. A. R. Hoare\nThere are two ways to write error-free programs; only the third one works.\nAlan J. Perlis\nThere is no reason anyone would want a computer in their home.\nKen Olson, president, chairman and founder of Digital Equipment Corp,\u00a01977\nThose who do not understand Unix are condemned to reinvent it, poorly.\nHenry Spencer\nTo understand recursion, you must first understand recursion.\nTrying to outsmart a compiler defeats much of the purpose of using one.\nKernighan & Plauger, \"The Elements of Programming\u00a0Style\"\nUnix *is* user-friendly; it's just picky about its friends.\nWe all live in a yellow subroutine.\nWe have arrived at the megabyte millenium, using our sophisticated worldwide communications system to talk dirty to strangers.\nEllen\u00a0Goodman, The\u00a0Boston\u00a0Globe\nSmith's Test for Artifical\u00a0Life\nWhen animal-rights activists and right-to-life protesters are marching outside your laboratory, then you know you've definitely made progress in your artificial life research.\nDonald A. Smith\nWhen cryptography is outlawed, bayl bhgynjf jvyy unir cevinpl.\nWhen someone says 'I want a programming language in which I need only say what I wish done,' give him a lollipop.\nAlan J. Perlis\nWhenever two programmers meet to criticize their programs, both are silent.\nAlan J. Perlis\nWho can afford to do professional work for nothing? What hobbyist can put three man-years into programming, finding all bugs, documenting his product, and distribute it for free?\nBill Gates, 1976\nWhy does my UPS have an ON/OFF switch?\nWindows95: It's like upgrading from Reagan to Bush.\nAndy G Ihnatko\nWriting a new OS only for the 386 in 1991 gets you your second F for this term.\nProf. Andrew S. Tanenbaum (author of Minix) in a newsgroup posting to Linus Torvalds (author of Linux)\nWriting a program is nothing but debugging a blank page.\nAn anonymous but frustrated Stanford programmer\nX Windows n. A system for displaying pixels along the X-axis using xlib calls. Two-dimensional displays require the addition of ylib.\nStan Kelly-Bootle\nYou can identify members of the Mandelbrot Set by beards, glasses, computers, and jugs of real ale.\nCharlie Stross\nYou don't need a great product today to be successful, just a good product. Marketing always beats technology.\nRon Ricci, Cunningham Communications\nHow to tell you've been hanging around computers for too\u00a0long\nYou remember when the documentation was a looseleaf binder that you could tuck under your arm, and it took a forklift to move the computer.\nYou shouldn't anthropomorphize computers; they don't like it.\nYou think you know when you learn, are more sure when you can write, even more when you can teach, but certain when you can program.\nAlan J. Perlis\n"}, {"score": 1759.4987, "uuid": "fcb0ec88-552b-557b-8b24-8612d218f040", "index": "cw12", "trec_id": "clueweb12-0107wb-63-12773", "target_hostname": "www.csc.uvic.ca", "target_uri": "http://www.csc.uvic.ca/News/focus_post.htm?focus_item_id=46", "page_rank": 1.1700305e-09, "spam_rank": 94, "title": "Department of <em>Computer</em> <em>Science</em>", "snippet": "University of Victoria | Faculty of <em>Engineering</em> | UVic My page | Search Your Location: Home &gt; News and Events &gt; <em>Computer</em> <em>Science</em> Focus Items Daniel German was awarded the Faculty of <em>Engineering</em> UVic Excellence in Teaching Award for 2011. Daniel, who <em>or</em> <em>what</em> inspires your teaching (past&#x2F;present)?", "explanation": null, "document": "Focus on Teaching: Daniel German\nDaniel German was awarded the Faculty of Engineering UVic Excellence in Teaching Award for 2011.\nDaniel, who or what inspires your teaching (past/present)?\nA sense of professional responsibility. I want to do my job the best I can, no matter what it is and whether I enjoy it or not.\nWhat is your favourite teaching tip?\nLearn the names of your students.\nWhat is your philosophy towards teaching?\nI can simply define it in terms of 'keeping it interesting' - interesting for both the students and for me. If it is interesting for the students, they will want to learn it. If it is interesting for me, I put in the work and the effort.\nFor more information about Daniel, visit his blog, turingmachine.org .\n"}, {"score": 1758.8364, "uuid": "1c69fe2c-2d66-563e-98a3-951ae7f45ea1", "index": "cw12", "trec_id": "clueweb12-0405wb-84-12066", "target_hostname": "thefutureofthings.com", "target_uri": "http://thefutureofthings.com/column/1009/one-more-meaning-of-computer-science.html", "page_rank": 1.2827501e-09, "spam_rank": 80, "title": "One <em>More</em> Meaning of &#x27;<em>Computer</em> <em>Science</em>&#x27;", "snippet": "The northern branch <em>is</em> Chemistry. The southern branch <em>is</em> a variety of <em>engineering</em> disciplines, connecting with the Earth <em>Sciences</em> and Biology. Biotechnology appears where Chemistry and Biology reconnect.", "explanation": null, "document": "One More Meaning of 'Computer Science'\nFriday, June 27, 2008 - Israel Beniaminy\nCan software help scientists deal with the extremely large and fast-growing body of research in their own field? Can it locate relevant studies, tools, and knowledge from other fields? This column describes several ongoing efforts to achieve this goal.\nPutting the experiment in context\nComputers are no longer limited to \u201cidiot savant\u201d roles in scientific laboratories. They are gearing up to becoming research assistants, helping scientists make sense of the vast information and progress in their fields and other fields.\nComputers do not drive scientific research. Scientists are the drivers; but computers could become the drivers\u2019 navigation systems\u2026\nCan they make good\nscientists? (Credit: Honda)\nMy previous column discussed the growing presence of computers as planners and performers of scientific experiments, able to create hypotheses and devise experiments to test the hypotheses, if only in a limited domain. A prime example of such progress is the \u201c Robot Scientist Project \u201d team, led by principal investigator Professor Ross King of the Department of Computer Science in the University of Wales, Aberystwyth.\nThis robotic research already contributes to our detailed understanding of the interaction of genes, proteins, and metabolites in yeast, but there is another opportunity for artificial intelligence in scientific research, which may even have a higher potential: helping scientists track and make sense of the vast amount of existing and new information in their own field, not to mention other scientific fields that might be relevant. This challenge is extremely difficult, and it is growing more so every year. It has been a couple of centuries since a scientist could hope to understand and have knowledge of many aspects of science - i.e. from biology to physics and math. As science progressed, this became increasingly hard and today it is all but impossible to have a real knowledge of even one sub-area of science: nobody reads even a sizeable fraction of the papers published about, say, quantum dynamics, even if this is his area. What opportunities are we missing as a result? What new insights, synergies, discoveries, innovations and surprises await us if we could somehow detect similar patterns, discover promising regularities or irregularities to explore, and adopt results or research tools used in one area to boost the progress of another?\nOne direction that might potentially help out in this challenge is the expression of the contents of scientific papers in a formal language. If this could be achieved, software could automatically compare the contents to descriptions of other research, and highlight opportunities for bringing together the findings from several papers \u2013 possibly from quite distant disciplines.\nPartial solutions still make good science\nA robot scientist (Credit: University of\nWales Aberystwyth)\nThe idea of finding a common formal way of describing experiments would sound quite familiar to technologists who have become used to specifying all sorts of formal descriptive \u201clanguages\u201d; specifying anything from financial transactions to medical records. However, can we really boil down all of a scientific paper to a series of specifications?\nThe answer is no \u2013 certainly not with the current state of the art in artificial intelligence.\nBut look a bit deeper into this question: the key word in the above question is \u201call\u201d. If we could translate all of the research into formal specification, there would not be any need for publishing the paper itself \u2013 the formalization would say all there is to know about the research, in clear and non-ambiguous terms. Now, relax the requirement from \u201call\u201d to \u201csome\u201d. This means we have to keep the paper itself, but we can \u201cdecorate\u201d it with a series of formal descriptions which partially describe its contents.\nWhat good is partial description? Actually, quite a lot, as described below. This is fortunate, because as things stand today there is no automatic way to generate such descriptions from scientific papers. It remains up to humans to perform this chore, and these people must know their subject very well. Our only hope of seeing this happen is if these people could get something back for this investment.\nEXPO and Friends\nPart of the EXPO formalization\n(Credit: L. N. Soldatova, R.D. King, UWA)\nOne project attempting exactly this kind of partial formal specification is EXPO . Perhaps not surprisingly, it was developed by members of the same team that developed the Robot Scientist. The Robot Scientist deals with formal representations of facts, hypotheses, research methods, laboratory equipment, experimental designs, and reporting of results. Therefore, it is natural for this project to both consume and produce formalized research.\nWhile EXPO is not the only effort along these lines, it serves as an excellent example of the potential strengths and limitations of this approach.\nIn a talk given by Professor Larissa Soldatova of The Department of Computer Science at the University of Wales, Aberystwyth, she described the ontology (according to Schulze-Kremer\u2019s definition, \u201ca concise and unambiguous description of what principle entities are relevant to an application domain and the relationship between them\u201d) used by EXPO. This ontology is used, for example, to describe an experiment by answering many questions, including: What is the domain of research? What are the research hypotheses? Which independent and dependent variables are used? How are they set or measured? Which tools and materials are required? How is the experiment performed in each of its steps?\nThus far, this is no different from the methods taught to every scientist when guiding the writing of scientific research reports. The difference is evident when you realize that as far as possible, each question must be answered by making one or more selections from a defined and mutually agreed set of answers. For example, the domain of research may be specified using a familiar classification system, such as the one used by the Library of Congress; the design of the experiment may be selected out of design categories well-known to scientists \u2013 e.g. \u201cfactorial design\u201d; action goals may be \u201csterilize\u201d, \u201cweigh\u201d, \u201cmeasure\u201d; etc. EXPO descriptions are highly detailed. If we focus just on the experimental procedure, we find the requirement to specify for each step of the experiment, types and quantities of materials, duration of each step, required preparations, model and make of the measurement instruments, and potentially much more.\nEXPO also includes logic expressions, which may be used in such areas as formalizing the research hypothesis \u2013 e.g. \u201cif two species have an ancestor which is not the ancestor of any other intermediate species \u2026\u201d.\nFormalization Pays Off\nFormalization - is it worth it?\nTo evaluate EXPO outside the Robot Scientist\u2019s domain, professors Soldatova and King randomly selected one issue of Nature journal, and within that issue they selected two papers from maximally distant areas of science: quantum physics and evolutionary biology. They undertook the task of manually encoding both papers into the EXPO \u201clanguage\u201d. This isn\u2019t simple or fast \u2013 when printed out, the description of the physics paper ran to about six pages, and the biology paper weighed in at over twenty. Admittedly, the printed formalization is laid out so that it is far less dense than more familiar scientific publications, with plenty of white space. On the other hand, not all the information in the original papers is encoded within the EXPO description.\nHowever, the effort of explicitly specifying (almost) all the details, and the interaction between the details, paid off: Soldatova and King found several issues with both papers \u2013 issues which were brought to light precisely because of EXPO\u2019s requirement for going into explicit detail. Among the issues which were discovered was that the authors of the quantum physics paper failed to justify the implicit weights they assigned to experimental results. For the evolutionary biology paper, no hypotheses are stated, but several hypotheses are implicit in the text. Normally the results of the research should be analyzed in terms of to what extent they support (or contradict) the hypotheses, but for two of the hypotheses the paper does not report any conclusions. It should be clear that there is no intent to criticize the authors of these papers or the editors of Nature (and the criticism stated by Soldatova and King might be challenged by the original papers\u2019 authors) \u2013 the point is that even for the highest quality of science, there is much to be gained by this kind of formalization process.\nStill, we started out by asking whether computerized processes could help the working scientist in finding relevant information. From this point of view, the abovementioned benefits of manual encoding for a single paper may be a side bonus. The real goal is bringing together information from all across science to validate,cross-correlate, inform, and inspire further research.\nSoldatova and King\u2019s paper shows that this goal may be achievable. First, some discrepancies were found when comparing the taxonomic classifications (e.g. phylum, genus, or family) used in the evolutionary biology paper to the most recent taxonomies at the time the paper was written. In the general case (not necessarily in this instance), such discrepancies may occur as a result of the impossibility of tracking all the latest publications. Since taxonomy, like many other areas in science, is highly amenable to formalization (hierarchical trees of categories, in this case), the discrepancies could have been discovered by computers comparing formalizations to the latest updates of the taxonomy. This finding may not seem inspiring, until you consider how many scientific papers may depend on definitions, findings, and theories which were later modified. Researchers referring to these papers may well propagate the old information in their new research, especially if the out-of-date information is not within the specialties of the researchers or the peer reviewers.\nEven more interestingly, both studies were found to use the same analysis method, called the \u201cstochastic branching processes\u201d. This unexpected finding is a tantalizing preview of the ability of such widely-separated domains in science to share tools and methods. This discovery of a shared tool, and therefore the opportunity for cross-pollination of ideas and techniques, is quite surprising when you consider that the two papers were selected almost at random.\nThe Dream \u2026\n- Credit: Kurt Stepnitz,Michigan\nState University)\nImagine a scientist setting out to study an intriguing problem in some area \u2013 let\u2019s take high-temperature superconductivity for example. Her first step is to write down the experimental plan, even though she\u2019s not yet sure about several crucial details. She doesn\u2019t use a word processor or TeX (the scientists\u2019 favorite typesetting system). Instead, she starts a formal definition of the research problem, the materials, and some of the experimental procedures. The writing turns into a collaboration between her and the computer. She sets the subject and the guidelines, but the computer fills in a lot of the detail, links prior research to her hypotheses and to her experimental methods, suggests the best fit of equipment, duration, material, and temperature for each step, and proposes appropriate statistical and numerical analysis tools.\nAs she works, an unobtrusive list of relevant research appears at the bottom of her screen. She ignores much of it \u2013 she\u2019s highly familiar with her field. However, since she\u2019s planning to use an innovative combination of ceramics and rare earth metals under high pressure, some sea-floor research is also highlighted. Having never dealt with oceanography before, the scientist is surprised to discover that minerals with some of the same characteristics have been found to exhibit unexpected structures which may have some bearing upon her own work. Furthermore, when she\u2019s looking for mathematical simulation tools to predict the structure of the complex molecules she\u2019s considering, she finds that she may be able to adopt tools from the domain of protein folding. Once she starts investigating this, a new suggestion comes up, involving the use of \u201cchaperone proteins\u201d as scaffolding during the manufacturing of these molecules. But can these ideas work under the pressures she\u2019s considering? The software now brings up some recent research on molecular biology in microorganisms living deep under the earth\u2026\nThe above example probably doesn\u2019t make much scientific sense, but I hope it gives the flavor of how scientific work could be transformed \u2013 as if a whole community of scientists, from all disciplines, could be watching your speculations and ideas and contributing their own knowledge.\n\u2026 and the Reality\nNow re-enter reality. What would it take to make this dream happen? Or is it a good dream and not a nightmare, anyway?\nProject CYC (Credit: Cycorp)\nThere are at least two types of obstacles. One has to do with the \u201clanguage\u201d used for formalizing research descriptions and the search mechanisms which we expect to find the interesting connections between studies. These issues go together to some extent. The better we design the language, the easier it gets to search and compare descriptions written in that language. And yet, the formulation and search are both highly challenging. Like a search engine, we want the real items of interest to pop up in the top ten search results \u2013 very few people look beyond the first items. Unlike a search engine, the degree of relevance is not based on text comparison but on similarity of concepts (e.g. \u201cmolecular structure\u201d is related to \u201cprotein folding\u201d) and to similarity of chains of concepts (e.g. pressure is known to affect speed of certain kinds of molecular reactions; \u201cdeep under the earth\u201d is related to higher pressures than conventional laboratory conditions; some microorganisms live in these conditions; microorganisms need molecular reactions to live). Despite efforts such as Cyc , (see also my column \u201c Don\u2019t burn the Cat \u201d) and various Semantic Network initiatives, there is still a long way to go before we can rely on such mechanisms. Still, in this context we don\u2019t require that the search must always be successful; one good suggestion every now and then would be impressive and useful. Let\u2019s just remember that if there are always thousands of bad suggestions, nobody would look at the good one when it finally arrives.\nThe second type of obstacle is the effort required for the formalization. Scientists have too much to do already, so they need a very good reason in order to learn the new language and to dedicate significant portions of their valuable time writing the descriptions. Can we delegate it to someone else? Maybe, but that \u201csomeone else\u201d must be a scientist too, so this direction isn\u2019t very promising, and the problem remains. Even if the software can meet all the expectations described in the above dream, a significant fraction of science must be described to the software before new and beneficial connections may be drawn between remote scientific paradigms. In other words, it\u2019s a lot of work uphill before the great ride downhill.\nCan it happen by forcing scientists to work this way, by having leading science journals demand a formalized description of each paper submitted to them? I believe this is quite unlikely. Even ignoring the question of ethics, it doesn\u2019t make sense to demand this until we know it delivers the benefits. Unfortunately, the benefits won\u2019t appear until enough scientists (human or robots \u2013 see below) do elect to attach formalized descriptions.\nHow can we make it easier and faster to write the descriptions? Even with current state of the art technology we don\u2019t know how to write a program that automatically translates a scientific paper into a formal description. However, we can write a program that gives some automated support to the formalization process. It will start with simple software for filling on-screen forms, but with time it will grow to have some helpful hints, based on learning from the way similar passages in other papers have been manually translated.\nAn even more promising direction is to give scientists software which encourages them to start with writing the formalization before writing the paper. The software will then help in writing the paper itself through automated learning mechanisms and the adaptation of conventional textual structures used in the more routine parts of the paper, such as describing experimental procedures.\nLastly, the introduction of \u201cRobot Scientists\u201d (discussed on my previous column ) carries some promise. A human scientist will be more inclined to write formal descriptions if these could be used by a robot to automatically perform the experiment. This could extend well outside experimental science: theoretical physicists set up equations describing some model and using software-assisted symbolic or numeric mathematics to explore the implications of these equations; evolutionary biologists use sophisticated software to compare the genetic codes of various species and construct \u201c cladograms \u201d. These and many other examples could also benefit from automation in the same sense. The other direction of influence is more drastic: in the \u201c Robot Scientist Project \u201d and similar initiatives, the robot designs its own experiments (in a limited scientific domain), automatically executes them, and analyzes the results. It already produces formalized descriptions since they are a perfect match for the way the robot \u201cthinks\u201d \u2013 for the robot, the tough part is writing the human-readable paper. If the number of studies performed robotically were to rise significantly, it could form the \u201ccritical mass\u201d of formalized research which would be sufficient to deliver the benefits of searching and correlating within that mass. Once the critical mass and its benefits are achieved, we can imagine a very fast conversion of all new research to a combination of the formal description accompanying the free-text, human-friendly form. We can even imagine that at least for some research, the free-text form will diminish, maybe shrinking down into the abstract or disappearing altogether.\nA Map of Science\nMap of science\n(Credit: Scitech Strategies)\nRichard Feynman, the famous American physicist, was educating himself about feline anatomy at one point in his eccentric career. Wanting to see an anatomical chart, he asked a flustered librarian \u201cDo you have a map of the cat?\u201d\nThis story not only shows how scientists from different disciplines may find even the basic terminologies incompatible, but it also begs the question: \u201cDo we have a map of science?\u201d If we did, we could use it to discover \u201cthe shape of the land\u201d, guide our explorations, and hint where we might find fertile unexplored territory.\nWell, we might have such a map \u2013 actually, quite a few.\nThere is a simple way to gauge the degree of proximity or distance between any two scientific disciplines. Given papers concerned with discipline A, and papers concerned with discipline B, we could say that A is well-connected to B if papers from A often refer to papers from B (to be precise, this definition implies that the distance of A from B may not be the same as the distance from B to A, but we\u2019ll ignore this here). It is usually quite easy to know which discipline any paper belongs to, via the journal where the paper appeared in as well as via the keywords used in classifying papers.\nThe network created by drawing a dot for each paper, and drawing a link between point A and point B if paper A references paper B, has been studied intensively. Among other things, it has been used for name disambiguation \u2013 figuring out when a single author may use slightly different versions of his name (e.g. \u201cJane Smith\u201d vs. \u201cJ. H. Smith\u201d) or when several authors have the same name. In the second case, if we find some papers by \u201cJane Smith\u201d to be about plasma physics and others to be about anthropology, it\u2019s a good guess that they are not written by the same person.\nThe same network has also been used to draw maps. The idea is to place all disciplines on the map so that the nearer any two disciplines are, the more cross-references we may expect to find between papers in these two disciplines. This isn\u2019t easy to do, since we need to respect the distances between all pairs of disciplines. One way of solving this problem takes the form of solving an optimization problem. We set up the network of dots and links as described above, and assign an attractive power for each link. Thus, if there are many links between two points, there will be a strong attraction between them. To avoid having all the dots attract each other into one point, we also introduce a force that repels points from each other. Now we can define a \u201ctotal energy\u201d measure for the network, so that the attractive forces cause energy to drop when two points attracting each other come closer together, while the repelling forces do the opposite. Now the challenge is to adjust distances so that the network settles at a low energy. This is a job for a fast computer, and it typically involves artificial intelligence techniques such as genetic algorithms as shown in some recent work . In practice, it may be very difficult to find the minimum energy, and there may be many different configurations with just about the same energy, so we can\u2019t claim we have the \u201cone true map\u201d. Moreover, with the breakneck speed in which new scientific results are published, yesterday\u2019s map won\u2019t be the same as today\u2019s. Still, the maps resulting from such processes make enough intuitive sense to be acceptable, while including enough unexpected relationships to justify the effort.\nCan AI make batter maps of science?\nOne map of science is available at mapofscience.com . The same data has also been depicted differently . Both maps are not only visually attractive, as good maps must be, but they are also thought-provoking; consider observations such as \u201cAt Physics, science branches in two directions. The northern branch is Chemistry. The southern branch is a variety of engineering disciplines, connecting with the Earth Sciences and Biology. Biotechnology appears where Chemistry and Biology reconnect. This forms the beginning of Infectious Diseases and medical Specialties\u201d (this text is adapted from the \u201cmapofscience\u201d site).\nThere is an important difference between the ontological linking of scientific paradigms exemplified by EXPO and the reference-based linking used in this map of science. EXPO can discover links which scientists aren\u2019t aware of. Reference-based linking uses references provided by the scientists authoring each study. EXPO gains this advantage because its \u201cunderstanding\u201d of the research goes far deeper than the shallow information provided by just following the net of references. Still, considering the extra effort needed for EXPO, there\u2019s a lot to be said for the shallow \u201cunderstanding\u201d of reference.\nIn this way, the exploration of bibliography links may be seen as a limited-capability but easily-achievable alternative to the approach exemplified by EXPO. While it can only follow the footsteps of human scientists, and while it does not understand why they made each step (does the fact that paper B reference paper A show a crucial reliance on its results, or a clarification of how B\u2019s methods are very different from A\u2019s, or a side comment on potential applications of the ideas in A?), it can achieve \u201cpseudo-originality\u201d by combining non-original footsteps of several persons into a foot path, so that no single scientist ever walked along the whole path. We can even imagine the exploration of bibliography links existing side-by-side with EXPO, providing some of the scaffolding that EXPO will need in its early years, before it\u2019s table and powerful enough on its own.\nWe can imagine the computer which constructed the \u201cmap of science\u201d as a research assistant who is slow and uncreative as far as \u201creal science\u201d is concerned, but who can do some things much better than any of its human masters, alerting them to nearby points of interest and helping them navigate through the dense roads of modern science. To use another analogy, it\u2019s up to human scientists to decide where they want to drive and with what purpose, while they\u2019re supported by the \u201cscience map\u201d computer, who plays the role of their GPS-based navigation system.\nAbout the author: Israel Beniaminy has a Bachelor\u2019s degree in Physics and Computer Science, and a Graduate degree in Computer Science. He develops advanced optimization techniques at ClickSoftware technologies , and has published academic papers on numerical analysis, approximation algorithms, and artificial intelligence, as well as articles on fault isolation, service management, and optimization in industry magazines.\nAcknowledgement: Some of this text has previously appeared, in different form, in articles by this author which were published in Galileo, the Israeli Magazine of Science and Thought, and appears here with the kind permission of Galileo Magazine.\nRelated Columns\n"}, {"score": 1758.7085, "uuid": "f3f81dda-7630-5440-adc9-3d4d6eb20556", "index": "cw12", "trec_id": "clueweb12-0411wb-86-13292", "target_hostname": "www.courses-careers.com", "target_uri": "http://www.courses-careers.com/postgraduate/subject-guide/7234-postgraduate-courses-in-computer-science-.html", "page_rank": 1.1924151e-09, "spam_rank": 99, "title": "Postgraduate courses in <em>computer</em> <em>science</em>", "snippet": "<em>What</em> <em>is</em> clear <em>is</em> that <em>computers</em> are now indispensable - and being skilled in <em>Computer</em> <em>Science</em> <em>is</em> a key enabler in fully participating in the IT world of tomorrow.", "explanation": null, "document": "Postgraduate courses in computer science\nPostgraduate\nAll Pages\nPage 1 of 2\nIf you've already undertaken an undergraduate qualification in Computer Science, then chances are you have already experienced some portion of how diverse (and hopefully, if you're reading this, interesting) Computer Science can be.\nStudy this subject here\nInstitute for System Level Integration - MSc/EngD Applications\nThe discipline is extremely wide ranging from the formal aspects of correctness, algorithms and languages, embedded systems, computer vision, artificial intelligence, databases, data mining and information retrieval, operating systems, communications and networking, through to human and business processes (software and requirements engineering) to the sociology/ psychology of how people interact, appropriate and use computers (human computer interaction). A postgraduate course in Computer Science will deepen your knowledge and enhance your employment prospects. Read on to discover how a postgraduate course in Computer Science can benefit you.\nToday Computers are a fact of life, from multi-billion pound government sponsored IT projects, embedded systems in everything from the car to the humble toaster, and, of course, not neglecting the mobile phone or iPod in your pocket. We're experiencing a revolution - computers are not just bulky items sitting in air conditioned rooms or on our desktops, but the stuff that enables new forms of interpersonal communication and interaction, pioneers distribution of digital music and video content, fosters new types of games, art installations and interactive entertainment - not to mention the machinery that makes many modern businesses and social communities function. There is no longer a choice for companies of whether to 'be online' and have a web presence - this is an essential prerequisite for business in the 21st century. To many people, social life is not just face to face interaction, but the sharing of thoughts, music and video through online communities.\nWhat is clear is that computers are now indispensable - and being skilled in Computer Science is a key enabler in fully participating in the IT world of tomorrow. Computer Science is a vital discipline - bursting with opportunity for innovation and creativity: whether you wish to deepen your knowledge and move beyond undergraduate level, challenge yourself, differentiate your CV from your peers or give yourself a solid underpinning for beginning a research career, then there will be a course to suit you.\nThere are a bewildering array of courses available, however, there are some general rules that will help you to select the course that best fits your background and interests. At the most course-grained level, postgraduate taught courses fall into two main classes: 'the advanced MSc' and 'the conversion MSc'. Both courses are typically 1 year in duration. The former assumes an existing background in Computer Science (typically BSc or equivalent), the latter is for those who may have no prior qualification in computing and wish to deepen their IT knowledge (e.g. to pursue a career path in Computing). The conversion course normally has a broad syllabus and is limited as to the depth it is realistic to achieve, but should provide a solid foundation of the most important concepts in the discipline.\nLast Updated on Monday, 07 December 2009 16:26\nStudy this subject here\n"}, {"score": 1756.7291, "uuid": "b8034907-afa7-548e-a47a-001b9e3fdb77", "index": "cw12", "trec_id": "clueweb12-0111wb-49-01006", "target_hostname": "www.csc.ncsu.edu", "target_uri": "http://www.csc.ncsu.edu/alumni/achievers.php", "page_rank": 1.205098e-09, "spam_rank": 94, "title": "NC State <em>Computer</em> <em>Science</em>: <em>Computer</em> <em>Science</em> Alumni Achievers", "snippet": "campaign, we are featuring <em>computer</em> <em>science</em> alumni who have had an <em>interesting</em> career track, made a significant impact in their community, <em>or</em> have a unique story to tell. We welcome suggestions for alumni to profile.", "explanation": null, "document": "College of Engineering Alumni\nComputer Science Alumni Achievers\nAs part of the NC State Achieve! campaign, we are featuring computer science alumni who have had an interesting career track, made a significant impact in their community, or have a unique story to tell.\nWe welcome suggestions for alumni to profile. Send your suggestions to Ken Tate , computer science director of development and external relations.\nGus Summers ( BS, 1976)\nMeet Gus Summers - The Turnaround Guy\nMore Achievers...\nEd Whitehorne\nSummers has built a career on problem solving\nAlbert Einstein was once quoted as saying \u201cI have no special talents. \u00a0I am only passionately curious.\u201d The ability to be curious, to problem-solve, was highly rated by a man who left his mark on the world.\u00a0 Even with the most technological advances available to mankind today, problem-solving skills are still the key to success. No one knows that better than NC State alumnus Gus Summers (B.S. CSC 1976), who has made a name for himself as a problem solver who can save failing businesses and ultimately save jobs.\nA 1976 computer science graduate of NC State, Summers actually began his educational career a few years earlier by studying economics, but due to a call to the military, he cut his time short, only to return later as a more mature and focused student who wanted to major in computer science.\n\u201cTom Honeycutt was the professor that really helped me become serious about school,\u201d Summers remembered with great admiration.\u00a0 \u201cWhen I came back to NC State, I gave the professors a pretty hard time and wouldn\u2019t let them get by with anything because I really wanted to learn.\u201d\nIn the 1970s, the computer had a much different role than it does today, Summers said.\n\u201cBack then, math and problem solving were the main focus of a student\u2019s education and the computer was just a tool to help solve the problem,\u201d he said. \u201cProfessor Honeycutt was great at helping students learn theoretical math and how to solve operations research-type problems. Today, I constantly use these tools in supply chain management and financial management to help companies achieve their optimal potential.\u201d\nHaving learned that skill early in his career has served him well in his 30-plus years in industry, since from his perspective, every business is a classical optical mix problem.\n\u201cYou have this formula: customers + service + price = profit. Working all that together so there is a profit is a classical optimal mix problem,\u201d he said.\nSummers took his problem-solving skills to the textile industry, where he spent 17 years as a \u201cturn-around\u201d guy, taking failing businesses and streamlining them until they were profitable again.\u00a0\u00a0 Many familiar textile leaders have summoned the \u201cturnaround guy\u201d to streamline their process and raise their profits.\u00a0 Summers\u2019 other achievements include constructing and implementing a $60 million totally automated distribution center, shipping apparel to high volume retailers at the lowest cost.\n\u201cWe had 66,000 pallet spaces in that automated textile storage facility and not a single person,\u201d he remembered with a laugh of amazement.\nFrom the textile industry, Summers moved on to the technology industry in 1997, managing high visibility distribution launches of clients such as Microsoft, IBM, HP, Kodak, Palm, Intuit, and Southwest Bell's DSL program.\nWhile working for other companies has been a major part of his career, Summers has also had a successful run as founder and start up partner in several supply chain consulting businesses as well as logistics and distribution companies.\nBeing the \u201cturnaround\u201d guy isn\u2019t always what it is cracked up to be, as his tough decisions often led to large layoffs in order to keep businesses afloat.\n\u201cWhile I enjoy solving problems logically, it does come at a price,\u201d he said. \u201cI have often been thought of as the meanest man to show up at a facility, but many times I have also been told that if it hadn\u2019t been for me making tough decisions, those companies would have completely closed down.\u201d\nAnd like most problem solvers, Summers never looks at tearing something down without considering the flip side of how to build it back up to turn a profit.\n\u201cWhen things are going well, people tend not to think as logically, but once a business falls apart, it becomes much easier to make hard, but logical decisions,\u201d he said.\u00a0 \u201cBuilding it back up is the fun part because you get to help them figure out who they are and what they want to do to become profitable again.\u201d\nSo what kind of advice would the \u201cturnaround guy\u201d give to those who are facing the first steps of their career path, unsure of which fork in the road will take them towards success and satisfaction, versus a dead end or one way career path?\n\u201cAlways love to continue learning,\u201d he said. \u201cIt\u2019s hard to tell someone just starting out to be sure they will continuously have to be learning to succeed in whatever career they choose. The learning process never stops. Jobs end, but careers last a lifetime.\u201d\nSummers also sees a trend in younger workers toward the dream to be the Mark Zuckerberg, the founder of Facebook, a social network.\n\u201cThere is a lot of fascination with technology, but not as much interest in the ability to apply the technology in the day-to-day needs,\u201d he said.\u00a0 \u201cThe demand in the market is more for the day-to- day operations than creating the newest application for the desktop.\u201d\nEvaluating your definition of success is another key element to a successful, long-term career, Summers said.\n\u201cNot many people can say they have worked for 30 years and have been happy at their job, but I can,\u201d he said.\u00a0 \u201cI\u2019m not a millionaire, but I have a nice home, take great vacations and am financially secure.\u00a0 And I couldn\u2019t have done those things without a good education.\u201d\n~brackett~\n"}, {"score": 1756.0872, "uuid": "b2a96742-7408-582d-bc21-30d0df174271", "index": "cw12", "trec_id": "clueweb12-1118wb-10-02249", "target_hostname": "www.oregonetic.org", "target_uri": "http://www.oregonetic.org/meetings/CStaskforce/", "page_rank": 1.4255972e-09, "spam_rank": 86, "title": "ETIC <em>Computer</em> <em>Science</em> Task Force", "snippet": ". * GetReal Web Site: OK to widen to all <em>engineering</em> and <em>computer</em> <em>science</em>? * Should <em>more</em> campuses offer a BS in Software <em>Engineering</em> <em>or</em> Information Technology?", "explanation": null, "document": "Campaign Launched to Expand Computer Science Pipeline, OUS Press Release 3.22.06\nThe following are interesting materials that might make computer science to High School students more relevant, more inter-disciplinary, less insolated, less geeky. Compiled by Steve Aho 04/2006.\nComputer Science Teacher\u2019s Association (CSTA) and IBM\nThis group seems to have exactly the same mission as our group and seems to have a lot more collateral already in place.\u00a0 Can we leverage something like this?\nIBM and CSTA will provide more than 36,000 teachers with free access to computer science resources in an effort to improve teachers\u2019 expertise and help students acquire necessary skills for jobs in the 21st century. http://www.webwire.com/ViewPressRel.asp?SESSIONID=&aId=12613\nACM K-12 Computer Science Model Curriculum: http://www.csta.acm.org/Curriculum/sub/ACMK12CSModel.html\nAlso include a professional development opportunities for \u201cGrade 9-12 computer science and computer applications teachers\u201d \u2013 conference in San Diego Jly 8 2006: link to overview\nUniversity of Washington capstone projects:\nThis site has videos of college students talking about their capstone projects. The one on soccer robotics has the flavor I was looking for: http://www.cs.washington.edu/info/videos/\nStanford Study on What to do about High School CS:\nConfirms much of what we have come up with\nProvides a list of what they consider engaging activities around CS concepts http://cse.stanford.edu/class/cs201/projects-03-04/high-school-cs/index.html\nProvides a pointer to ACM K-12 CS curriculum\nFrom Princeton \u2013 the revolution in CS is just starting:\nAn interesting article with views of why CS is important, how it relates to other sciences, and proposes that the biggest things in CS are yet to be invented. http://www.physorg.com/news10957.html\nIntroduction to CS from MIT:\nHas a pre-professional video lecture series that might be useful at the college, or AP level Licensed under Creative Commons license http://www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/\nInteresting Berkeley Labs site\nInteresting view into the programs that they provide to local high schools, including a speakers bureau\nDoes NOT seem to address CS directly http://csee.lbl.gov\nMathematics course featuring computer science\n(1) A discrete math course that features computer programming; or\n(2) A course that has other solid mathematics content and programming.\nDesired qualities\n(1) Accessible to high school students that have had Algebra II.\n(2) Accessible to high school students that have never programmed before.\n(3) Uses a programming language that is affordable for high school classroom instruction.\n(4) Curriculum appears engaging, i.e. hands on, features real-world examples.\n(5) Curriculum is well documented with materials, lesson plans, programs to be solved.\n(6) Curriculum is accessible to a high school teacher that isn't an expert on discrete math or computer science.\n(7) Teaches logical thinking and builds problem solving skills.\n(8) Teaches concepts that would be useful to those that choose to major in computer science in college including the understanding and design of data structures and algorithms.\n"}, {"score": 1755.0833, "uuid": "bd35a9fe-372b-5839-a5ec-13c390176fce", "index": "cw12", "trec_id": "clueweb12-1200wb-75-14064", "target_hostname": "www.oregonetic.org", "target_uri": "http://www.oregonetic.org/meetings/CStaskforce/index.htm", "page_rank": 1.2590425e-09, "spam_rank": 86, "title": "ETIC <em>Computer</em> <em>Science</em> Task Force", "snippet": ". * GetReal Web Site: OK to widen to all <em>engineering</em> and <em>computer</em> <em>science</em>? * Should <em>more</em> campuses offer a BS in Software <em>Engineering</em> <em>or</em> Information Technology?", "explanation": null, "document": "Campaign Launched to Expand Computer Science Pipeline, OUS Press Release 3.22.06\nThe following are interesting materials that might make computer science to High School students more relevant, more inter-disciplinary, less insolated, less geeky. Compiled by Steve Aho 04/2006.\nComputer Science Teacher\u2019s Association (CSTA) and IBM\nThis group seems to have exactly the same mission as our group and seems to have a lot more collateral already in place.\u00a0 Can we leverage something like this?\nIBM and CSTA will provide more than 36,000 teachers with free access to computer science resources in an effort to improve teachers\u2019 expertise and help students acquire necessary skills for jobs in the 21st century. http://www.webwire.com/ViewPressRel.asp?SESSIONID=&aId=12613\nACM K-12 Computer Science Model Curriculum: http://www.csta.acm.org/Curriculum/sub/ACMK12CSModel.html\nAlso include a professional development opportunities for \u201cGrade 9-12 computer science and computer applications teachers\u201d \u2013 conference in San Diego Jly 8 2006: link to overview\nUniversity of Washington capstone projects:\nThis site has videos of college students talking about their capstone projects. The one on soccer robotics has the flavor I was looking for: http://www.cs.washington.edu/info/videos/\nStanford Study on What to do about High School CS:\nConfirms much of what we have come up with\nProvides a list of what they consider engaging activities around CS concepts http://cse.stanford.edu/class/cs201/projects-03-04/high-school-cs/index.html\nProvides a pointer to ACM K-12 CS curriculum\nFrom Princeton \u2013 the revolution in CS is just starting:\nAn interesting article with views of why CS is important, how it relates to other sciences, and proposes that the biggest things in CS are yet to be invented. http://www.physorg.com/news10957.html\nIntroduction to CS from MIT:\nHas a pre-professional video lecture series that might be useful at the college, or AP level Licensed under Creative Commons license http://www.swiss.ai.mit.edu/classes/6.001/abelson-sussman-lectures/\nInteresting Berkeley Labs site\nInteresting view into the programs that they provide to local high schools, including a speakers bureau\nDoes NOT seem to address CS directly http://csee.lbl.gov\nMathematics course featuring computer science\n(1) A discrete math course that features computer programming; or\n(2) A course that has other solid mathematics content and programming.\nDesired qualities\n(1) Accessible to high school students that have had Algebra II.\n(2) Accessible to high school students that have never programmed before.\n(3) Uses a programming language that is affordable for high school classroom instruction.\n(4) Curriculum appears engaging, i.e. hands on, features real-world examples.\n(5) Curriculum is well documented with materials, lesson plans, programs to be solved.\n(6) Curriculum is accessible to a high school teacher that isn't an expert on discrete math or computer science.\n(7) Teaches logical thinking and builds problem solving skills.\n(8) Teaches concepts that would be useful to those that choose to major in computer science in college including the understanding and design of data structures and algorithms.\n"}, {"score": 1752.4965, "uuid": "abf97eb9-61b7-5c4d-bda3-430ade06a3aa", "index": "cw12", "trec_id": "clueweb12-0109wb-42-22145", "target_hostname": "www.cosc.canterbury.ac.nz", "target_uri": "http://www.cosc.canterbury.ac.nz/open/seminars/open/abstracts/441.html", "page_rank": 1.1715272e-09, "spam_rank": 89, "title": "Seminar Abstract - <em>Computer</em> <em>Science</em> and Software <em>Engineering</em> - University", "snippet": "UC Home &gt; Departments &gt; College of <em>Engineering</em> &gt; <em>Computer</em> <em>Science</em> and Software <em>Engineering</em> Welcome to the web page describing past, present, and future seminars presented by staff, students, and visitors to the Department of <em>Computer</em> <em>Science</em> and Software <em>Engineering</em>.", "explanation": null, "document": "Computer Science and Software Engineering\nStudy\nUC Home > Departments > College of Engineering > Computer Science and Software Engineering\nCSSE Seminar Series (CSSESS)\nWelcome to the web page describing past, present, and future seminars presented by staff, students, and visitors to the Department of Computer Science and Software Engineering.\nView past or future seminars; or view the CSSESS Home Page .\nSeminar\nAbout PowerHouse \u2013 An Early-Stage Investor\n(Is it more like \"Dragons\u2019 Den\" or \"Antiques Roadshow\"?)\nSpeakers: Jane Hill, Hamish Dean and Thor Russell.\nInstitute: PowerHouse Ventures Ltd.\nTime/Place: 3:10pm, Friday, 7 May, in Room 031, Erskine Building.\nAll are welcome.\nAbstract\nPowerHouse specialises in early-stage technology investment and venture development. We invest in ventures that have potential to grow and deliver strong returns. To achieve this, ventures need some form of advantage over competitive offerings. One way of getting a head-start with competitive advantage is to base ventures on technology or intellectual property that provides an edge. For example, with a software venture, this type of advantage can often be gained by using an algorithm that achieves better results than others of its type.\nIn looking for opportunities in which to invest, we do not always wait for people to come to us (and pitch their ideas). We go looking for technology that we think could be interesting in the marketplace. We look for technology that could be shaped in such a way that a customer could derive value from it. Sometimes we need to look below the surface to see the potential. Our team is skilled at shaping or \u201cpolishing\u201d up potential opportunities. We use our own proprietary process for determining how to measure the value of potential opportunities, rank them, and decide which are worth pursuing ahead of others.\nWe enjoy talking to academics and researchers, understanding the finer points of what gives their technology the edge. By looking below the surface, we often find gems that are worth investing in \u2013 both time and early-stage capital.\nThe PowerHouse team is experienced in all stages of technology venture development. Through our investment and venture development programme, we provide access to expertise and capital to help ventures to reach their maximum potential.\nIf you would like to hear more, please join us this Friday when Jane Hill will be discussing the PowerHouse technology investment model. Dr Hamish Dean and Thor Russell, two recent graduates from UC, will speak briefly on their technology and start-ups.\nBiography\nJane Hill: Jane is a technology entrepreneur, founding her own software start-up in 2000. The company developed a generic configuration management system for mobile telecommunications network operators. This start-up was based on industry experience after working for the UK\u2019s leading mobile operator. Jane also has experience in developing research-based software, having previously worked for the NIWA for five years. Her Crown Research Institute experience and linkages are invaluable to PowerHouse where she now works as a Venture Partner specialising in software and mobile applications.\nHamish Dean: Hamish Dean\u2019s Shapeshifter software uses algorithms to minimise wastage when cutting patterns from rolls of cloth, an idea he developed while completing a PhD in mechanical engineering at the University of Canterbury.\nHe joined the Canterbury Innovation Incubator in 2002 with the idea of commercialising his PhD research, making his first sale and securing an angel investor in 2003. Since then, Hamish has extended his offerings markedly and grown his company to successfully compete with giant multi-nationals in the textile industry.\nThor Russell: Thor Russell graduated from the University of Canterbury with a first class honours degree in electrical engineering and shortly after joined the Canterbury Innovation Incubator to launch a start-up company off the back of his university research project.\nWhile studying Thor came up with a way of translating vowel sounds into visual images on a computer screen. Using analysis of sound, he was able to model exactly where in the mouth the tongue should be in order to produce a given sound.\n"}, {"score": 1748.6514, "uuid": "06c88501-502c-53c7-9fed-f319ab014492", "index": "cw12", "trec_id": "clueweb12-1907wb-87-07473", "target_hostname": "www.purecognition.com", "target_uri": "http://www.purecognition.com/pc_blog/?tag=computer-science", "page_rank": 1.6599165e-09, "spam_rank": 74, "title": "<em>Computer</em> <em>Science</em> | PureCognition", "snippet": "It turned out that <em>computer</em> <em>science</em> <em>is</em> just as rich as cognitive <em>science</em>. And, there <em>is</em> the added benefit of the fact that human created <em>computers</em> and understood their creation better than the mind. It was nice not to have to \u201cguess\u201d as much, and just know that that was how us humans did it.", "explanation": null, "document": "A Slightly New Direction\u2026\nSo far in my blog posts, I have either given you a tedious amount of background on me or went into relatively heavy theoretical stuff that I state as fact and don\u2019t site references for (see The Components of Thought , The Origin of Thought , and Thought and the Environment as examples).\nI think, moving forward I\u2019m going to try to write more concrete posts that are more relevant to more people.\u00a0 I\u2019m not saying I won\u2019t dabble in the theoretical.\u00a0 I\u2019ll just do less of it, and will better tie it to concrete applications.\nMy interest in computers is based primarly on interactions , such as the following:\nPeople interacting with themselves.\nPeople interacting with other people.\nPeople interacting in communities .\nSoftware interacting with other software.\nAnd, lastly, people interacting with other people through software.\nI think I got them all.\u00a0 Anyway, the point is that there are lots of applications, particularly in the Web 2.0 community that are all about the above interactions.\u00a0 Also, there are a lot of interesting ideas in both the design world and the software development world as well.\u00a0 So, from now on I will try to hit these.\nEventually, I would also like to contribute software.\u00a0 As I explore the landscape, I\u2019ll better be able to formulate my ideas.\nI think my next post will be about Twitter , as I\u2019ve become a bit of an addict as of late.\u00a0 My twitter id is @purecognition .\u00a0 Give me a follow, if you like.\nIf you have been reading my blog, I thank you for your patience as I find my voice.\u00a0 If you have an ideas for things I should look into, based on my previous posts, please feel free to comment.\nRelated articles by Zemanta\n"}, {"score": 1747.09, "uuid": "b08672e0-2d19-5922-95d5-b40e8053e827", "index": "cw12", "trec_id": "clueweb12-0003wb-92-13143", "target_hostname": "eecs.oregonstate.edu", "target_uri": "http://eecs.oregonstate.edu/people/ferna-profile", "page_rank": 1.1707041e-09, "spam_rank": 94, "title": "FernA Profile | School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em> | Oregon", "snippet": "* School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em> School of Electrical <em>Engineering</em> &amp; <em>Computer</em> ScienceSelect to search All of OSU School of Electrical <em>Engineering</em> &amp; <em>Computer</em> <em>Science</em> Alan Fern cannot remember for sure <em>what</em> sparked his interest in artificial intelligence, but he recalls finding the", "explanation": null, "document": "Search for people and pages\nAll of OSU\nSchool of Electrical Engineering & Computer Science\nSchool of Electrical Engineering & Computer Science\nSelect to search All of OSU\nSelect to search for People\nSelect to search for Media\nHome \u203a\nFernA Profile\nAlan Fern cannot remember for sure what sparked his interest in artificial intelligence, but he recalls finding the Star Trek character, Data \u2014 who was basically a walking, talking computer \u2014 pretty compelling. He especially liked the idea of getting machines to learn. And as early as high school he was writing programs like a Connect Four game in which the computer played both sides and adjusted strategy based on which side won.\n\u201cHuman intelligence is really an amazing thing and trying to understand how to reproduce that in a computer is one of the great unsolved mysteries. If that\u2019s ever solved it would be one of the biggest landmarks in human history,\u201d Fern says, who believes it can be done.\nHowever, he doesn\u2019t particularly care if the solution mimics the human brain, pointing out that human flight was not accomplished by mechanical flapping wings. Nor is he interested solving problems that only look like intelligence such as Watson, the computer that was able to beat human champions in a game of Jeopardy but would not be able to hold a conversation.\nInstead, he likes problems that computers are really bad at but people do with ease \u2014 watching a football game, for example.\nFern likes watching football, and it occurred to him one day that people who have just a rudimentary understanding of football can still follow a game, but computers struggle to just keep track of the players.\nAnd so, although he had no background in computer vision, he decided to pursue this self-proclaimed \u201ccrackpot idea\u201d of trying to get a computer to understand a football game. It\u2019s turned into one of his major areas of research \u2014 expanding to basketball and volleyball \u2014 and has gained the interest of funding agencies as well as organizations that deal with sports videos.\nTo the delight of his students, Fern has also found that online strategy games are a great way to research automated planning which uses computing power to make intelligent decisions about sequential problems.\nThe games, which require controlling hundreds of units on screen in real time, offer numerous challenges for Fern\u2019s programs such as visual interpretation, quick decision making, reasoning about an adversary and planning for tasks such as information gathering.\n\u201cIt sounds like it\u2019s all about games, but it\u2019s actually funded by the Defense Advanced Research Projects Agency because they\u2019re interested in the basic reasoning processes that are needed to solve tactical problems,\u201d Fern says.\nNevertheless, his lab meetings sound fun.\n\u201cIt's not too uncommon to have a meeting where somebody\u2019s going over the replay of a game to talk about the strategic points and reasoning processes involved in the decisions,\u201d he says.\nFern typically has several student researchers (undergraduate and graduate) working with him, which is an experience he appreciated as a student himself. As an undergraduate in electrical engineering at University of Maine, he says, \u201cI worked every summer and school year doing research in a lab, and it made a big difference to me as far as building up and sustaining my interest in research.\u201d\nHe started out working on practical problems like modeling the response of a pulp digester at a paper mill. But when he moved on to graduate school at Purdue University he became more interested in core research of artificial intelligence where he got his PhD in computer engineering.\n\u201cI don\u2019t mind solving specific application problems, but there has to be some sort of interesting nugget there \u2014 some larger point,\u201d he says.\nAnd whenever he gets a chance, he makes time for sports \u2014 playing in a basketball game or enjoying a football game on TV. Although now that he is raising three young children with his wife Xiaoli Fern (also faculty in computer science) finding that time is challenging.\n\u201cI can\u2019t say that I\u2019ve watched a whole football game for a long time,\u201d Fern smiles.\n\u2014By Rachel Robertson\n"}]]}